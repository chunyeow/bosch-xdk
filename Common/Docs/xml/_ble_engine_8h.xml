<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_ble_engine_8h" kind="file">
    <compoundname>BleEngine.h</compoundname>
    <includes refid="_ble_types_8h" local="yes">BleTypes.h</includes>
    <includedby refid="_ble_alert_notification___client_8h" local="yes">SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_AlertNotification/Interfaces/BleAlertNotification_Client.h</includedby>
    <includedby refid="_ble_blood_pressure___collector_8h" local="yes">SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_BloodPressure/Interfaces/BleBloodPressure_Collector.h</includedby>
    <includedby refid="_ble_gap_8h" local="yes">SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleGap.h</includedby>
    <includedby refid="_ble_health_thermometer___collector_8h" local="yes">SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_HealthThermometer/Interfaces/BleHealthThermometer_Collector.h</includedby>
    <includedby refid="_ble_heart_rate___collector_8h" local="yes">SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_HeartRate/Interfaces/BleHeartRate_Collector.h</includedby>
    <includedby refid="_ble_human_interface_device___host_8h" local="yes">SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_HumanInterfaceDevice/Interfaces/BleHumanInterfaceDevice_Host.h</includedby>
    <incdepgraph>
      <node id="28377">
        <label>SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h</label>
        <link refid="BleEngine.h"/>
        <childnode refid="28378" relation="include">
        </childnode>
      </node>
      <node id="28378">
        <label>BleTypes.h</label>
        <link refid="_ble_types_8h"/>
        <childnode refid="28379" relation="include">
        </childnode>
      </node>
      <node id="28380">
        <label>BLECustomConfig.h</label>
        <link refid="_common_2config_2_b_l_e_custom_config_8h"/>
      </node>
      <node id="28379">
        <label>BleConfig.h</label>
        <link refid="_ble_config_8h"/>
        <childnode refid="28380" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="28385">
        <label>SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_HealthThermometer/Interfaces/BleHealthThermometer_Collector.h</label>
        <link refid="_ble_health_thermometer___collector_8h"/>
      </node>
      <node id="28382">
        <label>SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_AlertNotification/Interfaces/BleAlertNotification_Client.h</label>
        <link refid="_ble_alert_notification___client_8h"/>
      </node>
      <node id="28386">
        <label>SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_HeartRate/Interfaces/BleHeartRate_Collector.h</label>
        <link refid="_ble_heart_rate___collector_8h"/>
      </node>
      <node id="28387">
        <label>SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_HumanInterfaceDevice/Interfaces/BleHumanInterfaceDevice_Host.h</label>
        <link refid="_ble_human_interface_device___host_8h"/>
      </node>
      <node id="28381">
        <label>SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h</label>
        <link refid="BleEngine.h"/>
        <childnode refid="28382" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28384" relation="include">
        </childnode>
        <childnode refid="28385" relation="include">
        </childnode>
        <childnode refid="28386" relation="include">
        </childnode>
        <childnode refid="28387" relation="include">
        </childnode>
      </node>
      <node id="28384">
        <label>SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleGap.h</label>
        <link refid="_ble_gap_8h"/>
      </node>
      <node id="28383">
        <label>SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_BloodPressure/Interfaces/BleBloodPressure_Collector.h</label>
        <link refid="_ble_blood_pressure___collector_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_ble_handler" prot="public">BleHandler</innerclass>
    <innerclass refid="struct_ble_hardware_information" prot="public">BleHardwareInformation</innerclass>
    <innerclass refid="struct_ble_user_timer" prot="public">BleUserTimer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_ble_engine_8h_1ad6bb117780e22196ca5ceff2298041c3" prot="public" static="no">
        <name>BLEEVENT_GENERATE_RANDOM_ADDRESS_RSP</name>
        <initializer>0x24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event followed the call of BLESMP_GenerateRandomAddress().</para><para>The status field indicates status of the operation<itemizedlist>
<listitem><para>BLESTATUS_SUCCESS indicates that the operation has succeed, the param field containing a pointer to an <ref refid="struct_b_d___a_d_d_r" kindref="compound">BD_ADDR</ref> indicating the new random address. <ref refid="struct_b_d___a_d_d_r" kindref="compound">BD_ADDR</ref> *addr = (<ref refid="struct_b_d___a_d_d_r" kindref="compound">BD_ADDR</ref> *) param; Note that the pointer is valid until the next BLESMP_GenerateRandomAddress() call. In other cases this parameter is zero.</para></listitem><listitem><para>BLESTATUS_FAILED indicates that the operation has failed. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="175" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_ble_engine_8h_1a41d245d047a242de399de79426e0a3ec" prot="public" static="no">
        <name>BLEEVENT_HARDWARE_ERROR</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event followed the reception of a HARDWARE error event by the controller. Upon reception of This event the stack will automatically De-init, It is Up to the application to re-init the stack. The status field is always BLESTATUS_FAILED The parms field indicates the Hardware Error event error code as U8 *. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="58" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_ble_engine_8h_1a6756812d7988b96c01c2970248006426" prot="public" static="no">
        <name>BLEEVENT_INITIALIZATION_RSP</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event followed the call of <ref refid="_ble_engine_8h_1a097eb4884deaeaddebe0572af9769d3e" kindref="member">BLEMGMT_Init()</ref>. The status field will indicates completion of the initialisation process<itemizedlist>
<listitem><para>BLESTATUS_SUCCESS indicates that the BLE stack has been successfully initialized.</para></listitem><listitem><para>BLESTATUS_FAILED indicates that the BLE stack could not be initialized. if BLE_PARMS_CHECK is enabled</para></listitem><listitem><para>BLESTATUS_INVALID_PARMS indicates that the BLE stack has not be initialized cause an invalid configuration: The Controller does not support SCANNER or ADVERTISER role: reconsider BLE_ROLE_ADVERTISER or BLE_ROLE_SCANNER to optimize. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="49" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_ble_engine_8h_1a2a693caa9c77398925880a0725fde537" prot="public" static="no">
        <name>BLEEVENT_PAIRING_COMPLETE</name>
        <initializer>0x23</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event followed the call of <ref refid="_ble_sm_8h_1ad48d0192137f57a3c48cfb0f1cea233d" kindref="member">BLESMP_InitiatePairing()</ref> or a BLEEVENT_PAIRING_REQUEST event, it indicates the completion of the pairing operation.</para><para>The status field indicates status of the operation<itemizedlist>
<listitem><para>BLESTATUS_SUCCESS indicates that the operation has succeeded.</para></listitem><listitem><para>BLESTATUS_FAILED indicates that the operation has failed.</para></listitem></itemizedlist>
</para><para>The param field containing a pointer to a <ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> structure indicating the connection handle on which the Pairing procedure has completed. In case of failure, the reason field is valid and contains a SmErrorCode describing the reason of the paring failure. <ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> *info = (<ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> *) param; Note that the pointer is valid only during the callback </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="158" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_ble_engine_8h_1a5179690f96e24aa53c7b0213714b2af8" prot="public" static="no">
        <name>BLEEVENT_PAIRING_REQUEST</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event reported when a remote device ( MASTER on the connection ) has started a pairing procedure. Depending of the SM_IO_CAPABILITIES a passkey may be requested after upon the BLEEVENT_PASSKEY_REQUEST event.</para><para>The status field is always BLESTATUS_SUCCESS. The param field containing a pointer to a <ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> structure indicating the connection handle on which the Pairing procedure has started. <ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> *info = (<ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> *) param; Note that the pointer is valid only during the callback. During this event, BLESMP_ConfirmPairing may be called to accept the pairing request; otherwise, the pairing request is automatically rejected. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="110" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_ble_engine_8h_1a43349fd407c151fd3713f0f87e551a27" prot="public" static="no">
        <name>BLEEVENT_PASSKEY_DISPLAY</name>
        <initializer>0x22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event reported when a Passkey need to be displayed in order to continue the pairing procedure.</para><para>The status field is always BLESTATUS_SUCCESS. The param field containing a pointer to a <ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> structure indicating the connection handle on which the Pairing procedure has started as well that the passkey to be displayed.. <ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> *info = (<ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> *) param; Note that the pointer is valid only during the callback A passkey to display is 6 characters in length, with each character value in the range 0x30-0x39 [&apos;0&apos;..&apos;9&apos;]. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="140" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_ble_engine_8h_1a4fe63e2ec633d148bdb68cafaf17dad9" prot="public" static="no">
        <name>BLEEVENT_PASSKEY_REQUEST</name>
        <initializer>0x21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event reported when a Passkey need to be provided in order to continue the pairing procedure.</para><para>The status field is always BLESTATUS_SUCCESS. The param field containing a pointer to a <ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> structure indicating the connection handle on which the Pairing procedure has started. <ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> *info = (<ref refid="struct_ble_pairing_info" kindref="compound">BlePairingInfo</ref> *) param; Note that the pointer is valid only during the callback A passkey shall be 6 characters in length, with each character value in the range 0x30-0x39 [&apos;0&apos;..&apos;9&apos;]. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="125" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_ble_engine_8h_1a346d8dd5a151fd02663f247bd39e4534" prot="public" static="no">
        <name>BLEEVENT_VENDOR_COMMAND_COMPLETE</name>
        <initializer>0x25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event that may follow the sent of a vendor specific command.</para><para>The param field containing a pointer to a <ref refid="struct_ble_hci_vendor_command_complete" kindref="compound">BleHciVendorCommandComplete</ref> structure indicating the opcode of the command which is complete and the return parameters. All the <ref refid="struct_ble_hci_vendor_command_complete" kindref="compound">BleHciVendorCommandComplete</ref> values are only valid during the callback. The status field is always BLESTATUS_SUCCESS </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="189" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_ble_engine_8h_1ad277297c602fd97856e2039a38d15f3c" prot="public" static="no">
        <name>BLEEVENT_VENDOR_COMMAND_STATUS</name>
        <initializer>0x26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event that may follow the sent of a vendor specific command.</para><para>The param field containing a pointer to a <ref refid="struct_ble_hci_vendor_command_status" kindref="compound">BleHciVendorCommandStatus</ref> structure indicating the opcode of the command which is complete. All the <ref refid="struct_ble_hci_vendor_command_status" kindref="compound">BleHciVendorCommandStatus</ref> values are only valid during the callback. The status field is always BLESTATUS_SUCCESS </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="200" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_ble_engine_8h_1ad2063fb5e2fce062c61d060a4796462b" prot="public" static="no">
        <name>BLEEVENT_VENDOR_EVENT</name>
        <initializer>0x27</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event indicating that a vendor specific event have been received by the stack (event code 0xFF).</para><para>The param field containing a pointer to a <ref refid="struct_ble_hci_vendor_event" kindref="compound">BleHciVendorEvent</ref> structure indicating the parameter length and the parameters of the event. All the <ref refid="struct_ble_hci_vendor_event" kindref="compound">BleHciVendorEvent</ref> values are only valid during the callback. The status field is always BLESTATUS_SUCCESS </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="213" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_ble_engine_8h_1a0cb0115237122682c323338e897e596d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* BleCallback)(BleEvent event, BleStatus status, void *param)</definition>
        <argsstring>)(BleEvent event, BleStatus status, void *param)</argsstring>
        <name>BleCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BleCallback This callback receives the BLE stack events. Each of these events can be associated with a defined status and parameter. The callback is executed during the stack context, please be careful to not doing heavy process in this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="228" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_ble_engine_8h_1ad4aaf823ecdbd5190625c48971a17ed2" prot="public" static="no">
        <type><ref refid="_ble_types_8h_1a3cb25ca6f51f003950f9625ff05536fc" kindref="member">U8</ref></type>
        <definition>typedef U8 BleEvent</definition>
        <argsstring></argsstring>
        <name>BleEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BleEvent Event received in the BleCallback callbacks registered during the call of <ref refid="_ble_engine_8h_1a0f5452105dd444fd0b8df39eb165f203" kindref="member">BLEMGMT_RegisterHandler()</ref> function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="34" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_ble_engine_8h_1aeb933f4ee7c04c146338caa9895da54c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* BleUserTimerFunc)(void *param)</definition>
        <argsstring>)(void *param)</argsstring>
        <name>BleUserTimerFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Definition for the BleUserTimerFunc type. It defines the prototype of the user timer callback function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="267" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_ble_engine_8h_1a4867ec72aea2ea5ed9c8eeef045f70ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLEMGMT_AddUserTimerEvent</definition>
        <argsstring>(BleUserTimer *userTimer)</argsstring>
        <name>BLEMGMT_AddUserTimerEvent</name>
        <param>
          <type><ref refid="struct_ble_user_timer" kindref="compound">BleUserTimer</ref> *</type>
          <declname>userTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_ble_engine_8h_1aeeb075f4a08647073527ebb8d8ef7473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref></type>
        <definition>BleStatus BLEMGMT_Deinit</definition>
        <argsstring>(void)</argsstring>
        <name>BLEMGMT_Deinit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_ble_engine_8h_1aefaf9f7bb1a6f327def144e62d0599b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref></type>
        <definition>BleStatus BLEMGMT_DeRegisterHandler</definition>
        <argsstring>(BleHandler *handler)</argsstring>
        <name>BLEMGMT_DeRegisterHandler</name>
        <param>
          <type><ref refid="struct_ble_handler" kindref="compound">BleHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_ble_engine_8h_1a10d1e0171780e22ee46ad1d1a00dde03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref></type>
        <definition>BleStatus BLEMGMT_GetControllerVersion</definition>
        <argsstring>(BleHardwareInformation **information)</argsstring>
        <name>BLEMGMT_GetControllerVersion</name>
        <param>
          <type><ref refid="struct_ble_hardware_information" kindref="compound">BleHardwareInformation</ref> **</type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_ble_engine_8h_1a49e727143be0decb9afd0ff6f9e8d3dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_ble_types_8h_1a811024d35b9b8a41095b1f583b649e56" kindref="member">U32</ref></type>
        <definition>U32 BLEMGMT_GetCoreStackVersion</definition>
        <argsstring>(void)</argsstring>
        <name>BLEMGMT_GetCoreStackVersion</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_ble_engine_8h_1a097eb4884deaeaddebe0572af9769d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref></type>
        <definition>BleStatus BLEMGMT_Init</definition>
        <argsstring>(void)</argsstring>
        <name>BLEMGMT_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="321" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_ble_engine_8h_1a624684fb4a0be50f64a92a0205036ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLEMGMT_NotifyToRun</definition>
        <argsstring>(void)</argsstring>
        <name>BLEMGMT_NotifyToRun</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_ble_engine_8h_1a0f5452105dd444fd0b8df39eb165f203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref></type>
        <definition>BleStatus BLEMGMT_RegisterHandler</definition>
        <argsstring>(BleHandler *handler)</argsstring>
        <name>BLEMGMT_RegisterHandler</name>
        <param>
          <type><ref refid="struct_ble_handler" kindref="compound">BleHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="403" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_ble_engine_8h_1a92b12d06149a44b2c4fb5f495534de15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLEMGMT_RemoveUserTimerEvent</definition>
        <argsstring>(BleUserTimer *userTimer)</argsstring>
        <name>BLEMGMT_RemoveUserTimerEvent</name>
        <param>
          <type><ref refid="struct_ble_user_timer" kindref="compound">BleUserTimer</ref> *</type>
          <declname>userTimer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_ble_engine_8h_1aeeb9fbf8a7d0c146b4e0105459a97f41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref></type>
        <definition>BleStatus BLEMGMT_Run</definition>
        <argsstring>(void)</argsstring>
        <name>BLEMGMT_Run</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h" line="379" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__BLEENGINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__BLEENGINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>copyrighted<sp/>by<sp/>Alpwise,<sp/>2016.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>The<sp/>use<sp/>of<sp/>this<sp/>software<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>XDK<sp/>SDK<sp/>EULA</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BleEngine.h</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Description:<sp/><sp/><sp/>Contains<sp/>interfaces<sp/>routines<sp/>for<sp/>Stack<sp/>initialisation,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de-initialisation<sp/>and<sp/>execution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>June,<sp/>2008</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Version:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.1</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>File<sp/>Revision:<sp/>$Rev:<sp/>3271<sp/>$</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>$Project$</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_ble_types_8h" kindref="compound">BleTypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>BLE<sp/>Stack<sp/>Events</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="_ble_engine_8h_1ad4aaf823ecdbd5190625c48971a17ed2" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_ble_types_8h_1a3cb25ca6f51f003950f9625ff05536fc" kindref="member">U8</ref><sp/><ref refid="_ble_engine_8h_1ad4aaf823ecdbd5190625c48971a17ed2" kindref="member">BleEvent</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="_ble_engine_8h_1a6756812d7988b96c01c2970248006426" refkind="member"><highlight class="preprocessor">#define<sp/>BLEEVENT_INITIALIZATION_RSP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="_ble_engine_8h_1a41d245d047a242de399de79426e0a3ec" refkind="member"><highlight class="preprocessor">#define<sp/>BLEEVENT_HARDWARE_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BLE_ENABLE_TEST_COMMANDS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor">#define<sp/>BLEEVENT_STARTRECEIVERTEST_RSP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor">#define<sp/>BLEEVENT_STARTTRANSMITTERTEST_RSP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor">#define<sp/>BLEEVENT_STOPTEST_RSP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//(BLE_ENABLE_TEST_COMMANDS<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BLE_SECURITY<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="_ble_engine_8h_1a5179690f96e24aa53c7b0213714b2af8" refkind="member"><highlight class="preprocessor">#define<sp/>BLEEVENT_PAIRING_REQUEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="_ble_engine_8h_1a4fe63e2ec633d148bdb68cafaf17dad9" refkind="member"><highlight class="preprocessor">#define<sp/>BLEEVENT_PASSKEY_REQUEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="_ble_engine_8h_1a43349fd407c151fd3713f0f87e551a27" refkind="member"><highlight class="preprocessor">#define<sp/>BLEEVENT_PASSKEY_DISPLAY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="_ble_engine_8h_1a2a693caa9c77398925880a0725fde537" refkind="member"><highlight class="preprocessor">#define<sp/>BLEEVENT_PAIRING_COMPLETE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//(BLE_SECURITY<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BLE_RANDOM_ADDRESSING_SUPPORT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="_ble_engine_8h_1ad6bb117780e22196ca5ceff2298041c3" refkind="member"><highlight class="preprocessor">#define<sp/>BLEEVENT_GENERATE_RANDOM_ADDRESS_RSP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//(BLE_RANDOM_ADDRESSING_SUPPORT<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BLE_ENABLE_VENDOR_SPECIFIC<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="_ble_engine_8h_1a346d8dd5a151fd02663f247bd39e4534" refkind="member"><highlight class="preprocessor">#define<sp/>BLEEVENT_VENDOR_COMMAND_COMPLETE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="_ble_engine_8h_1ad277297c602fd97856e2039a38d15f3c" refkind="member"><highlight class="preprocessor">#define<sp/>BLEEVENT_VENDOR_COMMAND_STATUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="_ble_engine_8h_1ad2063fb5e2fce062c61d060a4796462b" refkind="member"><highlight class="preprocessor">#define<sp/>BLEEVENT_VENDOR_EVENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x27</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//(BLE_ENABLE_VENDOR_SPECIFIC<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>BLE<sp/>Stack<sp/>Callback</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="_ble_engine_8h_1a0cb0115237122682c323338e897e596d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_ble_engine_8h_1a0cb0115237122682c323338e897e596d" kindref="member">BleCallback</ref>)(<ref refid="_ble_engine_8h_1ad4aaf823ecdbd5190625c48971a17ed2" kindref="member">BleEvent</ref><sp/>event,<sp/><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref><sp/>status,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="struct_ble_handler" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239" refid="struct_ble_handler_1a74c54f414297612a065a3e5bfe571cc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ble_engine_8h_1a0cb0115237122682c323338e897e596d" kindref="member">BleCallback</ref><sp/><ref refid="struct_ble_handler_1a74c54f414297612a065a3e5bfe571cc9" kindref="member">callback</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>internal<sp/>use<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="struct_ble_handler_1a6c8cb16a39365bed98a9ffb8c1ce704d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal">[2];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}<sp/><ref refid="struct_ble_handler" kindref="compound">BleHandler</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="struct_ble_hardware_information" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="255" refid="struct_ble_hardware_information_1a6d00059f12fb32d421a1f9be04dc7d92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ble_types_8h_1adf928e51a60dba0df29d615401cc55a8" kindref="member">U16</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ble_hardware_information_1a6d00059f12fb32d421a1f9be04dc7d92" kindref="member">manufacturerName</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="struct_ble_hardware_information_1a5447c8d8031bc72422cd84ca11feb27a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ble_types_8h_1adf928e51a60dba0df29d615401cc55a8" kindref="member">U16</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_ble_hardware_information_1a5447c8d8031bc72422cd84ca11feb27a" kindref="member">lmpSubVersion</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}<sp/><ref refid="struct_ble_hardware_information" kindref="compound">BleHardwareInformation</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="_ble_engine_8h_1aeb933f4ee7c04c146338caa9895da54c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void(*<ref refid="_ble_engine_8h_1aeb933f4ee7c04c146338caa9895da54c" kindref="member">BleUserTimerFunc</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="struct_ble_user_timer" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="struct_ble_user_timer_1ac8d01051c1743da694a99acf60676c0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ble_engine_8h_1aeb933f4ee7c04c146338caa9895da54c" kindref="member">BleUserTimerFunc</ref><sp/><ref refid="struct_ble_user_timer_1ac8d01051c1743da694a99acf60676c0d" kindref="member">func</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="struct_ble_user_timer_1a13623f1d68513495c21f8b061b1a5aec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_ble_user_timer_1a13623f1d68513495c21f8b061b1a5aec" kindref="member">param</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="struct_ble_user_timer_1a13fd980c6ec6349b191a2ca8e7e7dc92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ble_types_8h_1a811024d35b9b8a41095b1f583b649e56" kindref="member">U32</ref><sp/><ref refid="struct_ble_user_timer_1a13fd980c6ec6349b191a2ca8e7e7dc92" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="struct_ble_user_timer_1a5a7e54bcc886cf98ec0e1a4d217c2e98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ble_types_8h_1a3cb25ca6f51f003950f9625ff05536fc" kindref="member">U8</ref><sp/><sp/><ref refid="struct_ble_user_timer_1a5a7e54bcc886cf98ec0e1a4d217c2e98" kindref="member">internal1</ref>;</highlight></codeline>
<codeline lineno="288" refid="struct_ble_user_timer_1a42d1cbc3fa72cf66f7e21c28735b50c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ble_types_8h_1a811024d35b9b8a41095b1f583b649e56" kindref="member">U32</ref><sp/><ref refid="struct_ble_user_timer_1a42d1cbc3fa72cf66f7e21c28735b50c7" kindref="member">internal2</ref>;</highlight></codeline>
<codeline lineno="289" refid="struct_ble_user_timer_1accf9d3420a604605a200f005e3adf221" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_ble_user_timer_1accf9d3420a604605a200f005e3adf221" kindref="member">internal3</ref>;</highlight></codeline>
<codeline lineno="290" refid="struct_ble_user_timer_1a2df5d10c1192dd23c16895c5d5e6d1da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_ble_user_timer_1a2df5d10c1192dd23c16895c5d5e6d1da" kindref="member">internal4</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal">}<sp/><ref refid="struct_ble_user_timer" kindref="compound">BleUserTimer</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************\</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>External<sp/>Functions</highlight></codeline>
<codeline lineno="296"><highlight class="comment">\***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialise<sp/>the<sp/>whole<sp/>BLE<sp/>stack,<sp/>including<sp/>transport,<sp/>radio<sp/>...</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>BLEMGMT_Init():</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>initialise<sp/>the<sp/>BLE<sp/>stack.<sp/>It<sp/>shall<sp/>be<sp/>the<sp/>entry</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/><sp/>point<sp/>of<sp/>an<sp/>application<sp/>using<sp/>it<sp/>and<sp/>it<sp/>shall<sp/>be<sp/>called<sp/>before<sp/>any<sp/>other</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/><sp/>stack<sp/>interfaces.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/><sp/>It<sp/>initializes:</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>Some<sp/>global<sp/>context<sp/>and<sp/>internal<sp/>states.</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>The<sp/>transport<sp/>layer</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>The<sp/>radio<sp/>layer</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>The<sp/>Core<sp/>layer<sp/>(BLE-HCI,<sp/>L2CAP...)</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>return:<sp/>The<sp/>status<sp/>of<sp/>the<sp/>operation:</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>BLESTATUS_PENDING<sp/>indicates<sp/>that<sp/>the<sp/>BLE<sp/>stack<sp/>initialisation</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>has<sp/>been<sp/>successfully<sp/>started,<sp/>application<sp/>will<sp/>received<sp/>the<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>BLEEVENT_INITIALIZATION_RSP<sp/>event<sp/>with<sp/>the<sp/>completion<sp/>status.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>BLESTATUS_FAILED<sp/>indicates<sp/>that<sp/>the<sp/>BLE<sp/>stack<sp/>could<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>initialized</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref><sp/><ref refid="_ble_engine_8h_1a097eb4884deaeaddebe0572af9769d3e" kindref="member">BLEMGMT_Init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>De-initialise<sp/>the<sp/>whole<sp/>BLE<sp/>stack,<sp/>including<sp/>transport,<sp/>radio<sp/>...</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/>BLEMGMT_Deinit():</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>de-initialise<sp/>the<sp/>BLE<sp/>stack.<sp/>It<sp/>shutdown<sp/>the</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/><sp/>BLE<sp/>software</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/><sp/>It<sp/>de-initializes:</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>Some<sp/>global<sp/>context<sp/>and<sp/>internal<sp/>states.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>The<sp/>Core<sp/>layer<sp/>(BLE-HCI,<sp/>L2CAP...)</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>The<sp/>radio<sp/>layer</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>The<sp/>transport<sp/>layer</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*<sp/>return<sp/>The<sp/>status<sp/>of<sp/>the<sp/>operation:</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>BLESTATUS_SUCCESS<sp/>indicates<sp/>that<sp/>the<sp/>BLE<sp/>stack<sp/>has<sp/>been<sp/>successfully</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>de-initialized</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>BLESTATUS_FAILED<sp/>indicates<sp/>that<sp/>the<sp/>BLE<sp/>stack<sp/>de-initialization<sp/>has<sp/></highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>failed</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref><sp/><ref refid="_ble_engine_8h_1aeeb075f4a08647073527ebb8d8ef7473" kindref="member">BLEMGMT_Deinit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>stack<sp/>itself<sp/>request<sp/>to<sp/>be<sp/>executed<sp/>once</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>BLEMGMT_NotifyToRun()</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>BLE<sp/>stack<sp/>requests<sp/>to<sp/>be<sp/>executed.<sp/>BLEMGMT_Run()<sp/>shall<sp/>be<sp/>called.</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>the<sp/>stack<sp/>is<sp/>executed<sp/>in<sp/>a<sp/>separate<sp/>thread,<sp/>the<sp/>thread<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/><sp/>unlocked<sp/>here.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*<sp/>see<sp/>BLEMGMT_Run()</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>return<sp/>none</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_ble_engine_8h_1a624684fb4a0be50f64a92a0205036ff1" kindref="member">BLEMGMT_NotifyToRun</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Run<sp/>the<sp/>BLE<sp/>stack<sp/>in<sp/>order<sp/>to<sp/>execute<sp/>its<sp/>internal<sp/>treatments</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>BLEMGMT_Run():</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>run<sp/>the<sp/>BLE<sp/>stack<sp/>(may<sp/>following<sp/>a<sp/>call<sp/>by</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>stack<sp/>of<sp/>BLEMGMT_NotifyToRun()<sp/>).</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/><sp/>It<sp/>could<sp/>be<sp/>called<sp/>by<sp/>a<sp/>thread<sp/>or<sp/>by<sp/>a<sp/>scheduler.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>the<sp/>BLE<sp/>stack<sp/>itself<sp/>need<sp/>to<sp/>run<sp/>it<sp/>call<sp/>the<sp/>BLEMGMT_NotifyToRun()</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/><sp/>interface<sp/>to<sp/>inform<sp/>application<sp/>that<sp/>it<sp/>need<sp/>to<sp/>call<sp/>BLEMGMT_Run().</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>shall<sp/>not<sp/>be<sp/>called<sp/>it<sp/>the<sp/>stack<sp/>context,<sp/>for<sp/>example</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>shall<sp/>not<sp/>be<sp/>called<sp/>in<sp/>the<sp/>callback<sp/>registered<sp/>by<sp/></highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/><sp/>BLEMGMT_RegisterHandler()<sp/>or<sp/>in<sp/>the<sp/>system<sp/>interface</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/><sp/>BLEMGMT_NotifyToRun().<sp/></highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>see<sp/>BLEMGMT_NotifyToRun()</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>return<sp/>The<sp/>status<sp/>of<sp/>the<sp/>operation:</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>BLESTATUS_SUCCESS<sp/>indicates<sp/>that<sp/>the<sp/>operation<sp/>is<sp/>successful</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref><sp/><ref refid="_ble_engine_8h_1aeeb9fbf8a7d0c146b4e0105459a97f41" kindref="member">BLEMGMT_Run</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Register<sp/>a<sp/>callback<sp/>function<sp/>to<sp/>receive<sp/>BleEvent</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/>BLEMGMT_RegisterHandler():</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>register<sp/>a<sp/>handler<sp/>containing<sp/>a<sp/>callback</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/><sp/>function<sp/>that<sp/>will<sp/>receive<sp/>the<sp/>stack<sp/>events.</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>may<sp/>register<sp/>as<sp/>many<sp/>handlers<sp/>as<sp/>you<sp/>want.</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/><sp/>handler:<sp/>A<sp/>valid<sp/>pointer<sp/>to<sp/>a<sp/>BleHandler<sp/>containing<sp/>the<sp/>address<sp/>of<sp/>a<sp/>callback</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/><sp/>function<sp/>that<sp/>will<sp/>receive<sp/>the<sp/>BLE<sp/>stack<sp/>event.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>callback<sp/>function<sp/>must<sp/>be<sp/>declared<sp/>as<sp/>follow:</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>myCallback(BleEvent<sp/>event,<sp/>BleStatus<sp/>status,<sp/>void<sp/>*param);</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>When<sp/>the<sp/>BLE<sp/>stack<sp/>wants<sp/>to<sp/>notify<sp/>the<sp/>application<sp/>with<sp/>an<sp/>existing<sp/>event</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>calls<sp/>this<sp/>function.</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>The<sp/>handler<sp/>pointer<sp/>shall<sp/>be<sp/>valid<sp/>until<sp/>the<sp/>call<sp/>of<sp/>BLEMGMT_DeRegisterHandler</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*<sp/>return<sp/>The<sp/>status<sp/>of<sp/>the<sp/>operation:</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>BLESTATUS_SUCCESS<sp/>indicates<sp/>that<sp/>the<sp/>operation<sp/>is<sp/>successful</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>BLESTATUS_FAILED<sp/>indicates<sp/>that<sp/>the<sp/>operation<sp/>has<sp/>failed</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref><sp/><ref refid="_ble_engine_8h_1a0f5452105dd444fd0b8df39eb165f203" kindref="member">BLEMGMT_RegisterHandler</ref>(<ref refid="struct_ble_handler" kindref="compound">BleHandler</ref><sp/>*handler);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>De-Register<sp/>a<sp/>registered<sp/>callback<sp/>function<sp/></highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>BLEMGMT_DeRegisterHandler():</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>deregister<sp/>a<sp/>previously<sp/>registered<sp/>handler<sp/></highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*<sp/>handler:<sp/>A<sp/>valid<sp/>pointer<sp/>to<sp/>a<sp/>registered<sp/>BleHandler.</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>return<sp/>The<sp/>status<sp/>of<sp/>the<sp/>operation:</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>BLESTATUS_SUCCESS<sp/>indicates<sp/>that<sp/>the<sp/>operation<sp/>is<sp/>successfull</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>BLESTATUS_FAILED<sp/>indicates<sp/>that<sp/>the<sp/>operation<sp/>has<sp/>failed</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref><sp/><ref refid="_ble_engine_8h_1aefaf9f7bb1a6f327def144e62d0599b4" kindref="member">BLEMGMT_DeRegisterHandler</ref>(<ref refid="struct_ble_handler" kindref="compound">BleHandler</ref><sp/>*handler);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>ALPWISE<sp/>core<sp/>stack&apos;s<sp/>Software<sp/>version<sp/>Information<sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*<sp/>BLEMGMT_GetCoreStackVersion():</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>Get<sp/>the<sp/>ALPWISE<sp/>core<sp/>stack&apos;s<sp/>Software<sp/>version<sp/></highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/><sp/>Information</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*<sp/>@return:<sp/>The<sp/>core<sp/>stack<sp/>version<sp/>in<sp/>U32<sp/>format,<sp/>0x01020304<sp/>means<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*<sp/><sp/>used<sp/>stack<sp/>version<sp/>is<sp/>1.2.52</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*<sp/>@author<sp/>Alexandre<sp/>GIMARD</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><ref refid="_ble_types_8h_1a811024d35b9b8a41095b1f583b649e56" kindref="member">U32</ref><sp/><ref refid="_ble_engine_8h_1a49e727143be0decb9afd0ff6f9e8d3dd" kindref="member">BLEMGMT_GetCoreStackVersion</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>Bluetooth<sp/>Low<sp/>Energy<sp/>controller<sp/>version<sp/>Information<sp/><sp/></highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*<sp/>BLEMGMT_GetControllerVersion():</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>Get<sp/>the<sp/>Bluetooth<sp/>Low<sp/>Energy<sp/>controller<sp/></highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*<sp/>manufacturer<sp/>and<sp/>version<sp/>Information</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*<sp/>@param<sp/>information:<sp/>a<sp/>valid<sp/>BleHardwareInformation<sp/>pointer<sp/>that<sp/>will<sp/></highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/><sp/><sp/>receive,<sp/>in<sp/>case<sp/>of<sp/>success,<sp/>the<sp/>Bluetooth<sp/>Low<sp/>Energy<sp/>controller<sp/></highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/><sp/><sp/>manufacturer<sp/>and<sp/>version<sp/>Information<sp/>values.</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>status<sp/>of<sp/>the<sp/>operation:</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>BLESTATUS_SUCCESS<sp/>indicates<sp/>that<sp/>the<sp/>operation<sp/>is<sp/>successful</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>BLESTATUS_FAILED<sp/>indicates<sp/>that<sp/>the<sp/>operation<sp/>has<sp/>failed,<sp/>it<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>because<sp/>the<sp/>stack<sp/>is<sp/>not<sp/>initialised</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/>@author<sp/>Alexandre<sp/>GIMARD</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><ref refid="_ble_types_8h_1a51b22dff1300b8e07a6aa1acf7d24734" kindref="member">BleStatus</ref><sp/><ref refid="_ble_engine_8h_1a10d1e0171780e22ee46ad1d1a00dde03" kindref="member">BLEMGMT_GetControllerVersion</ref>(<ref refid="struct_ble_hardware_information" kindref="compound">BleHardwareInformation</ref><sp/>**information);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Used<sp/>by<sp/>the<sp/>application<sp/>to<sp/>start<sp/>a<sp/>timer.</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*<sp/>BLEMGMT_AddUserTimerEvent():</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>by<sp/>the<sp/>user<sp/>to<sp/>start<sp/>a<sp/>timer<sp/>according</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>*<sp/>to<sp/>the<sp/>BleUserTimer<sp/>struct,<sp/>this<sp/>timer<sp/>will<sp/>be<sp/>handled<sp/>by<sp/>the<sp/>stack<sp/>and<sp/>started</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*<sp/>the<sp/>main<sp/>system<sp/>timer.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*<sp/>@param<sp/>userTimer<sp/>The<sp/>timer<sp/>descriptor,<sp/>the<sp/>timer-&gt;func<sp/>and<sp/>timer-&gt;time<sp/>are</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*<sp/>mandatory<sp/>field,<sp/>its<sp/>indicate<sp/>the<sp/>time<sp/>in<sp/>milliseconds<sp/>(or<sp/>microseconds)</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>timer,</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/>*<sp/>after<sp/>the<sp/>timer-&gt;time<sp/>elapses<sp/>the<sp/>stack<sp/>call<sp/>the<sp/>timer-&gt;func<sp/>function.</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/>*<sp/>The<sp/>timer-&gt;param<sp/>is<sp/>an<sp/>optional<sp/>field<sp/>that</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/>*<sp/>will<sp/>be<sp/>returned<sp/>by<sp/>the<sp/>stack<sp/>during<sp/>the<sp/>timer-&gt;func<sp/>call.</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*<sp/>The<sp/>timer-&gt;flags<sp/>field<sp/>specifies<sp/>if<sp/>timer<sp/>is<sp/>a<sp/>critical<sp/>timer<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/>A<sp/>critical<sp/>timer<sp/>shall<sp/>be<sp/>used<sp/>when<sp/>timer<sp/>is<sp/>strongly<sp/>sensitive<sp/>to<sp/>time</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/>deviation<sp/>due<sp/>to<sp/>stack<sp/>processing.</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>the<sp/>userTimer<sp/>memory<sp/>shall<sp/>stay<sp/>allocated<sp/>and<sp/>not<sp/>modified<sp/>from</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/>timer<sp/>creation<sp/>and<sp/>either<sp/>timer<sp/>cancelation<sp/>or<sp/>expiration.</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/>@author<sp/>Guillaume<sp/>FERLIN</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_ble_engine_8h_1a4867ec72aea2ea5ed9c8eeef045f70ee" kindref="member">BLEMGMT_AddUserTimerEvent</ref>(<ref refid="struct_ble_user_timer" kindref="compound">BleUserTimer</ref><sp/>*userTimer);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Used<sp/>by<sp/>the<sp/>application<sp/>to<sp/>cancel<sp/>an<sp/>existing<sp/>timer.</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/>BLEMGMT_RemoveUserTimerEvent():</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>function<sp/>is<sp/>used<sp/>by<sp/>the<sp/>user<sp/>to<sp/>cancel<sp/>a<sp/>previously<sp/>started<sp/></highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*<sp/>user<sp/>timer.</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*<sp/>@param<sp/>userTimer<sp/>The<sp/>timer<sp/>descriptor,<sp/>the<sp/>same<sp/>used<sp/>during<sp/>the<sp/></highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>*<sp/>BLEMGMT_AddUserTimerEvent()<sp/>call.</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*<sp/>@author<sp/>Guillaume<sp/>FERLIN</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_ble_engine_8h_1a92b12d06149a44b2c4fb5f495534de15" kindref="member">BLEMGMT_RemoveUserTimerEvent</ref>(<ref refid="struct_ble_user_timer" kindref="compound">BleUserTimer</ref><sp/>*userTimer);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*__BLEENGINE_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BLEStack/3rd-party/Alpwise/ALPW-BLESDKCM3/BLESW_CoreStack/Interfaces/BleEngine.h"/>
  </compounddef>
</doxygen>
