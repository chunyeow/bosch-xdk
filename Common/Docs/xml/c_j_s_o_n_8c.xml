<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="c_j_s_o_n_8c" kind="file">
    <compoundname>cJSON.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">float.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">ctype.h</includes>
    <includes refid="c_j_s_o_n_8h" local="yes">cJSON.h</includes>
    <incdepgraph>
      <node id="24105">
        <label>float.h</label>
      </node>
      <node id="24104">
        <label>stdlib.h</label>
      </node>
      <node id="24108">
        <label>cJSON.h</label>
        <link refid="c_j_s_o_n_8h"/>
      </node>
      <node id="24100">
        <label>SDK/xdk110/Common/source/cJSON.c</label>
        <link refid="cJSON.c"/>
        <childnode refid="24101" relation="include">
        </childnode>
        <childnode refid="24102" relation="include">
        </childnode>
        <childnode refid="24103" relation="include">
        </childnode>
        <childnode refid="24104" relation="include">
        </childnode>
        <childnode refid="24105" relation="include">
        </childnode>
        <childnode refid="24106" relation="include">
        </childnode>
        <childnode refid="24107" relation="include">
        </childnode>
        <childnode refid="24108" relation="include">
        </childnode>
      </node>
      <node id="24106">
        <label>limits.h</label>
      </node>
      <node id="24101">
        <label>string.h</label>
      </node>
      <node id="24103">
        <label>math.h</label>
      </node>
      <node id="24107">
        <label>ctype.h</label>
      </node>
      <node id="24102">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structprintbuffer" prot="public">printbuffer</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" prot="public" static="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* cJSON_free)(void *ptr)</definition>
        <argsstring>)(void *ptr)</argsstring>
        <name>cJSON_free</name>
        <initializer>= free</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="47" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="47" bodyend="-1"/>
        <referencedby refid="c_j_s_o_n_8c_1a20837ed285a3c2abf578330f2bd97ad4" compoundref="c_j_s_o_n_8c" startline="60" endline="70">cJSON_InitHooks</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" compoundref="c_j_s_o_n_8c" startline="81" endline="93">cJSON_Delete</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" compoundref="c_j_s_o_n_8c" startline="121" endline="136">ensure</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" compoundref="c_j_s_o_n_8c" startline="434" endline="511">print_array</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" compoundref="c_j_s_o_n_8c" startline="550" endline="658">print_object</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a096004811663311569e95aa77518959c" compoundref="c_j_s_o_n_8c" startline="672" endline="672">cJSON_AddItemToObject</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1af5153e89d76785c5b2ebdd0d8e8f258e" compoundref="c_j_s_o_n_8c" startline="673" endline="673">cJSON_AddItemToObjectCS</referencedby>
      </memberdef>
      <memberdef kind="variable" id="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" prot="public" static="yes" mutable="no">
        <type>void *(*</type>
        <definition>void*(* cJSON_malloc)(size_t sz)</definition>
        <argsstring>)(size_t sz)</argsstring>
        <name>cJSON_malloc</name>
        <initializer>= malloc</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="46" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="46" bodyend="-1"/>
        <referencedby refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" compoundref="c_j_s_o_n_8c" startline="49" endline="58">cJSON_strdup</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a20837ed285a3c2abf578330f2bd97ad4" compoundref="c_j_s_o_n_8c" startline="60" endline="70">cJSON_InitHooks</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" compoundref="c_j_s_o_n_8c" startline="121" endline="136">ensure</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a363f9c1512c939122c6bc611cb03c645" compoundref="c_j_s_o_n_8c" startline="147" endline="175">print_number</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" compoundref="c_j_s_o_n_8c" startline="192" endline="249">parse_string</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ab39938c41d77b354eb5674dc614b4665" compoundref="c_j_s_o_n_8c" startline="252" endline="307">print_string_ptr</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a4354cf61f1d9b71688c34ab626b726ce" compoundref="c_j_s_o_n_8c" startline="345" endline="353">cJSON_PrintBuffered</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" compoundref="c_j_s_o_n_8c" startline="434" endline="511">print_array</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" compoundref="c_j_s_o_n_8c" startline="550" endline="658">print_object</referencedby>
      </memberdef>
      <memberdef kind="variable" id="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* ep</definition>
        <argsstring></argsstring>
        <name>ep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="35" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="35" bodyend="-1"/>
        <referencedby refid="c_j_s_o_n_8c_1a5e81ffc372644963c759103865b0cad1" compoundref="c_j_s_o_n_8c" startline="37" endline="37">cJSON_GetErrorPtr</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" compoundref="c_j_s_o_n_8c" startline="192" endline="249">parse_string</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a9c63df4d9350bee4bd1726f8f23ad536" compoundref="c_j_s_o_n_8c" startline="323" endline="337">cJSON_ParseWithOpts</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" compoundref="c_j_s_o_n_8c" startline="357" endline="369">parse_value</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a7729444034bb1c16924478e4806023af" compoundref="c_j_s_o_n_8c" startline="406" endline="431">parse_array</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1aae5de4fb5317314153a9791567380768" compoundref="c_j_s_o_n_8c" startline="514" endline="547">parse_object</referencedby>
      </memberdef>
      <memberdef kind="variable" id="c_j_s_o_n_8c_1a4ec3316cc778a6d7233bffd55cea7047" prot="public" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char firstByteMark[7]</definition>
        <argsstring>[7]</argsstring>
        <name>firstByteMark</name>
        <initializer>= { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="191" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="191" bodyend="-1"/>
        <referencedby refid="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" compoundref="c_j_s_o_n_8c" startline="192" endline="249">parse_string</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="c_j_s_o_n_8c_1a076941e875d547f20959c66de97beee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_AddItemReferenceToArray</definition>
        <argsstring>(cJSON *array, cJSON *item)</argsstring>
        <name>cJSON_AddItemReferenceToArray</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="674" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="674" bodyend="674"/>
        <references refid="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" compoundref="c_j_s_o_n_8c" startline="671" endline="671">cJSON_AddItemToArray</references>
        <references refid="c_j_s_o_n_8c_1a840197ebe7308bc68b2a8a108b06b004" compoundref="c_j_s_o_n_8c" startline="668" endline="668">create_reference</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a001634f84d255810784155f4c8e4e288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_AddItemReferenceToObject</definition>
        <argsstring>(cJSON *object, const char *string, cJSON *item)</argsstring>
        <name>cJSON_AddItemReferenceToObject</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="675" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="675" bodyend="675"/>
        <references refid="c_j_s_o_n_8c_1a096004811663311569e95aa77518959c" compoundref="c_j_s_o_n_8c" startline="672" endline="672">cJSON_AddItemToObject</references>
        <references refid="c_j_s_o_n_8c_1a840197ebe7308bc68b2a8a108b06b004" compoundref="c_j_s_o_n_8c" startline="668" endline="668">create_reference</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_AddItemToArray</definition>
        <argsstring>(cJSON *array, cJSON *item)</argsstring>
        <name>cJSON_AddItemToArray</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="671" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="671" bodyend="671"/>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" compoundref="c_j_s_o_n_8c" startline="666" endline="666">suffix_object</references>
        <referencedby refid="c_j_s_o_n_8c_1a096004811663311569e95aa77518959c" compoundref="c_j_s_o_n_8c" startline="672" endline="672">cJSON_AddItemToObject</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1af5153e89d76785c5b2ebdd0d8e8f258e" compoundref="c_j_s_o_n_8c" startline="673" endline="673">cJSON_AddItemToObjectCS</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a076941e875d547f20959c66de97beee5" compoundref="c_j_s_o_n_8c" startline="674" endline="674">cJSON_AddItemReferenceToArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a26521dbb099b8247457808972930547b" compoundref="c_j_s_o_n_8c" startline="684" endline="685">cJSON_InsertItemInArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a096004811663311569e95aa77518959c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_AddItemToObject</definition>
        <argsstring>(cJSON *object, const char *string, cJSON *item)</argsstring>
        <name>cJSON_AddItemToObject</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="672" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="672" bodyend="672"/>
        <references refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" compoundref="c_j_s_o_n_8h" startline="54">cJSON::string</references>
        <references refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" compoundref="c_j_s_o_n_8c" startline="47">cJSON_free</references>
        <references refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" compoundref="c_j_s_o_n_8c" startline="49" endline="58">cJSON_strdup</references>
        <references refid="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" compoundref="c_j_s_o_n_8c" startline="671" endline="671">cJSON_AddItemToArray</references>
        <referencedby refid="c_j_s_o_n_8c_1a001634f84d255810784155f4c8e4e288" compoundref="c_j_s_o_n_8c" startline="675" endline="675">cJSON_AddItemReferenceToObject</referencedby>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1gac6f89c07a494d40c5e1b41b0e505d8a2" compoundref="_p_p_m_p_serializer_8c" startline="106" endline="306">PPMPSerializer_PayloadSensorSelective</referencedby>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1ga31284e51a3ef72bf5c365b3039cb07c3" compoundref="_p_p_m_p_serializer_8c" startline="309" endline="374">PPMPSerializer_PayloadExternalSensorSelective</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1af5153e89d76785c5b2ebdd0d8e8f258e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_AddItemToObjectCS</definition>
        <argsstring>(cJSON *object, const char *string, cJSON *item)</argsstring>
        <name>cJSON_AddItemToObjectCS</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="673" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="673" bodyend="673"/>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1a491c3484a36f3915cc4710088f55971f" compoundref="c_j_s_o_n_8h" startline="41">cJSON_StringIsConst</references>
        <references refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" compoundref="c_j_s_o_n_8h" startline="54">cJSON::string</references>
        <references refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" compoundref="c_j_s_o_n_8c" startline="47">cJSON_free</references>
        <references refid="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" compoundref="c_j_s_o_n_8c" startline="671" endline="671">cJSON_AddItemToArray</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateArray</definition>
        <argsstring>(void)</argsstring>
        <name>cJSON_CreateArray</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="698" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="698" bodyend="698"/>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1a57cffa126740a8efcdcb7bcef80e8897" compoundref="c_j_s_o_n_8h" startline="37">cJSON_Array</references>
        <referencedby refid="c_j_s_o_n_8c_1a12576edcea9baca64be6fe7a6ae8d4fa" compoundref="c_j_s_o_n_8c" startline="702" endline="702">cJSON_CreateIntArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a328fe12c04efcf2073b218bbf35ac6ec" compoundref="c_j_s_o_n_8c" startline="703" endline="703">cJSON_CreateFloatArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a04cb41ee475a68bd2ee63e92d8534049" compoundref="c_j_s_o_n_8c" startline="704" endline="704">cJSON_CreateDoubleArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1abeecb344ac9a0318cd42ac32b6e22289" compoundref="c_j_s_o_n_8c" startline="705" endline="705">cJSON_CreateStringArray</referencedby>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1gac6f89c07a494d40c5e1b41b0e505d8a2" compoundref="_p_p_m_p_serializer_8c" startline="106" endline="306">PPMPSerializer_PayloadSensorSelective</referencedby>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1ga31284e51a3ef72bf5c365b3039cb07c3" compoundref="_p_p_m_p_serializer_8c" startline="309" endline="374">PPMPSerializer_PayloadExternalSensorSelective</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a06b0c43427994498d770e65b0089f8a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateBool</definition>
        <argsstring>(int b)</argsstring>
        <name>cJSON_CreateBool</name>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="695" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="695" bodyend="695"/>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1aad4e442b8095939decddfb67d87d9324" compoundref="c_j_s_o_n_8h" startline="33">cJSON_True</references>
        <references refid="c_j_s_o_n_8h_1a2d240682316354b5748f909ad220184b" compoundref="c_j_s_o_n_8h" startline="32">cJSON_False</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a04cb41ee475a68bd2ee63e92d8534049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateDoubleArray</definition>
        <argsstring>(const double *numbers, int count)</argsstring>
        <name>cJSON_CreateDoubleArray</name>
        <param>
          <type>const double *</type>
          <declname>numbers</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="704" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="704" bodyend="704"/>
        <references refid="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" compoundref="c_j_s_o_n_8c" startline="698" endline="698">cJSON_CreateArray</references>
        <references refid="c_j_s_o_n_8c_1a220d076d7d3a309049d6889be6d4904a" compoundref="c_j_s_o_n_8c" startline="696" endline="696">cJSON_CreateNumber</references>
        <references refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" compoundref="c_j_s_o_n_8c" startline="666" endline="666">suffix_object</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a33dcdd4d4f5da12bc91372376908c42b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateFalse</definition>
        <argsstring>(void)</argsstring>
        <name>cJSON_CreateFalse</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="694" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="694" bodyend="694"/>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1a2d240682316354b5748f909ad220184b" compoundref="c_j_s_o_n_8h" startline="32">cJSON_False</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a328fe12c04efcf2073b218bbf35ac6ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateFloatArray</definition>
        <argsstring>(const float *numbers, int count)</argsstring>
        <name>cJSON_CreateFloatArray</name>
        <param>
          <type>const float *</type>
          <declname>numbers</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="703" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="703" bodyend="703"/>
        <references refid="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" compoundref="c_j_s_o_n_8c" startline="698" endline="698">cJSON_CreateArray</references>
        <references refid="c_j_s_o_n_8c_1a220d076d7d3a309049d6889be6d4904a" compoundref="c_j_s_o_n_8c" startline="696" endline="696">cJSON_CreateNumber</references>
        <references refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" compoundref="c_j_s_o_n_8c" startline="666" endline="666">suffix_object</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a12576edcea9baca64be6fe7a6ae8d4fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateIntArray</definition>
        <argsstring>(const int *numbers, int count)</argsstring>
        <name>cJSON_CreateIntArray</name>
        <param>
          <type>const int *</type>
          <declname>numbers</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="702" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="702" bodyend="702"/>
        <references refid="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" compoundref="c_j_s_o_n_8c" startline="698" endline="698">cJSON_CreateArray</references>
        <references refid="c_j_s_o_n_8c_1a220d076d7d3a309049d6889be6d4904a" compoundref="c_j_s_o_n_8c" startline="696" endline="696">cJSON_CreateNumber</references>
        <references refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" compoundref="c_j_s_o_n_8c" startline="666" endline="666">suffix_object</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a83ea2a0b33071a1120b9052170a2bc13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateNull</definition>
        <argsstring>(void)</argsstring>
        <name>cJSON_CreateNull</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="692" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="692" bodyend="692"/>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1aeadaba63ddb68aaa518528595d503dcd" compoundref="c_j_s_o_n_8h" startline="34">cJSON_NULL</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a220d076d7d3a309049d6889be6d4904a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateNumber</definition>
        <argsstring>(double num)</argsstring>
        <name>cJSON_CreateNumber</name>
        <param>
          <type>double</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="696" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="696" bodyend="696"/>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1a15e77e2f6457dc9b19c10ddb032af971" compoundref="c_j_s_o_n_8h" startline="35">cJSON_Number</references>
        <references refid="structc_j_s_o_n_1a2983295369d8ff0183638d8550a22263" compoundref="c_j_s_o_n_8h" startline="52">cJSON::valuedouble</references>
        <references refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" compoundref="c_j_s_o_n_8h" startline="51">cJSON::valueint</references>
        <referencedby refid="c_j_s_o_n_8c_1a12576edcea9baca64be6fe7a6ae8d4fa" compoundref="c_j_s_o_n_8c" startline="702" endline="702">cJSON_CreateIntArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a328fe12c04efcf2073b218bbf35ac6ec" compoundref="c_j_s_o_n_8c" startline="703" endline="703">cJSON_CreateFloatArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a04cb41ee475a68bd2ee63e92d8534049" compoundref="c_j_s_o_n_8c" startline="704" endline="704">cJSON_CreateDoubleArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a9c5f44afdd781b16dead90042fe74085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateObject</definition>
        <argsstring>(void)</argsstring>
        <name>cJSON_CreateObject</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="699" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="699" bodyend="699"/>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1a22c6e13481c090629afbd77b7cebd24c" compoundref="c_j_s_o_n_8h" startline="38">cJSON_Object</references>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1gac6f89c07a494d40c5e1b41b0e505d8a2" compoundref="_p_p_m_p_serializer_8c" startline="106" endline="306">PPMPSerializer_PayloadSensorSelective</referencedby>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1ga31284e51a3ef72bf5c365b3039cb07c3" compoundref="_p_p_m_p_serializer_8c" startline="309" endline="374">PPMPSerializer_PayloadExternalSensorSelective</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateString</definition>
        <argsstring>(const char *string)</argsstring>
        <name>cJSON_CreateString</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="697" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="697" bodyend="697"/>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1aa2cb4765308e2bbdf01988b2acdf92d9" compoundref="c_j_s_o_n_8h" startline="36">cJSON_String</references>
        <references refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" compoundref="c_j_s_o_n_8h" startline="50">cJSON::valuestring</references>
        <references refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" compoundref="c_j_s_o_n_8c" startline="49" endline="58">cJSON_strdup</references>
        <referencedby refid="c_j_s_o_n_8c_1abeecb344ac9a0318cd42ac32b6e22289" compoundref="c_j_s_o_n_8c" startline="705" endline="705">cJSON_CreateStringArray</referencedby>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1gac6f89c07a494d40c5e1b41b0e505d8a2" compoundref="_p_p_m_p_serializer_8c" startline="106" endline="306">PPMPSerializer_PayloadSensorSelective</referencedby>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1ga31284e51a3ef72bf5c365b3039cb07c3" compoundref="_p_p_m_p_serializer_8c" startline="309" endline="374">PPMPSerializer_PayloadExternalSensorSelective</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1abeecb344ac9a0318cd42ac32b6e22289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateStringArray</definition>
        <argsstring>(const char **strings, int count)</argsstring>
        <name>cJSON_CreateStringArray</name>
        <param>
          <type>const char **</type>
          <declname>strings</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="705" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="705" bodyend="705"/>
        <references refid="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" compoundref="c_j_s_o_n_8c" startline="698" endline="698">cJSON_CreateArray</references>
        <references refid="c_j_s_o_n_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" compoundref="c_j_s_o_n_8c" startline="697" endline="697">cJSON_CreateString</references>
        <references refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" compoundref="c_j_s_o_n_8c" startline="666" endline="666">suffix_object</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a07b3d4616c5a682aa558180713ce858a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_CreateTrue</definition>
        <argsstring>(void)</argsstring>
        <name>cJSON_CreateTrue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="693" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="693" bodyend="693"/>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1aad4e442b8095939decddfb67d87d9324" compoundref="c_j_s_o_n_8h" startline="33">cJSON_True</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_Delete</definition>
        <argsstring>(cJSON *c)</argsstring>
        <name>cJSON_Delete</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="81" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="81" bodyend="93"/>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1ad3d18116aae3bfa46f13bcfd7fd6d4e7" compoundref="c_j_s_o_n_8h" startline="40">cJSON_IsReference</references>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" compoundref="c_j_s_o_n_8h" startline="50">cJSON::valuestring</references>
        <references refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" compoundref="c_j_s_o_n_8c" startline="47">cJSON_free</references>
        <references refid="c_j_s_o_n_8h_1a491c3484a36f3915cc4710088f55971f" compoundref="c_j_s_o_n_8h" startline="41">cJSON_StringIsConst</references>
        <references refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" compoundref="c_j_s_o_n_8h" startline="54">cJSON::string</references>
        <referencedby refid="c_j_s_o_n_8c_1a9c63df4d9350bee4bd1726f8f23ad536" compoundref="c_j_s_o_n_8c" startline="323" endline="337">cJSON_ParseWithOpts</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a2b08ee3d172cb94e9abea1e4031a366f" compoundref="c_j_s_o_n_8c" startline="679" endline="679">cJSON_DeleteItemFromArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a148a56617a2a97921d9b9dfbe5dc85bf" compoundref="c_j_s_o_n_8c" startline="681" endline="681">cJSON_DeleteItemFromObject</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a567d357a7a0c3c0c9c896d98aae3dcec" compoundref="c_j_s_o_n_8c" startline="686" endline="688">cJSON_ReplaceItemInArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a9acb1410be711f33d7c6d39f916b2d35" compoundref="c_j_s_o_n_8c" startline="708" endline="733">cJSON_Duplicate</referencedby>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1gac6f89c07a494d40c5e1b41b0e505d8a2" compoundref="_p_p_m_p_serializer_8c" startline="106" endline="306">PPMPSerializer_PayloadSensorSelective</referencedby>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1ga31284e51a3ef72bf5c365b3039cb07c3" compoundref="_p_p_m_p_serializer_8c" startline="309" endline="374">PPMPSerializer_PayloadExternalSensorSelective</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a2b08ee3d172cb94e9abea1e4031a366f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_DeleteItemFromArray</definition>
        <argsstring>(cJSON *array, int which)</argsstring>
        <name>cJSON_DeleteItemFromArray</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="679" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="679" bodyend="679"/>
        <references refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" compoundref="c_j_s_o_n_8c" startline="81" endline="93">cJSON_Delete</references>
        <references refid="c_j_s_o_n_8c_1a68b9e0b2d984f1d873fb571425a98b9b" compoundref="c_j_s_o_n_8c" startline="677" endline="678">cJSON_DetachItemFromArray</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a148a56617a2a97921d9b9dfbe5dc85bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_DeleteItemFromObject</definition>
        <argsstring>(cJSON *object, const char *string)</argsstring>
        <name>cJSON_DeleteItemFromObject</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="681" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="681" bodyend="681"/>
        <references refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" compoundref="c_j_s_o_n_8c" startline="81" endline="93">cJSON_Delete</references>
        <references refid="c_j_s_o_n_8c_1a7010822d267256f274e0adf22be2b202" compoundref="c_j_s_o_n_8c" startline="680" endline="680">cJSON_DetachItemFromObject</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a68b9e0b2d984f1d873fb571425a98b9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_DetachItemFromArray</definition>
        <argsstring>(cJSON *array, int which)</argsstring>
        <name>cJSON_DetachItemFromArray</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="677" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="677" bodyend="678"/>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" compoundref="c_j_s_o_n_8h" startline="45">cJSON::prev</references>
        <referencedby refid="c_j_s_o_n_8c_1a2b08ee3d172cb94e9abea1e4031a366f" compoundref="c_j_s_o_n_8c" startline="679" endline="679">cJSON_DeleteItemFromArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a7010822d267256f274e0adf22be2b202" compoundref="c_j_s_o_n_8c" startline="680" endline="680">cJSON_DetachItemFromObject</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a7010822d267256f274e0adf22be2b202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_DetachItemFromObject</definition>
        <argsstring>(cJSON *object, const char *string)</argsstring>
        <name>cJSON_DetachItemFromObject</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="680" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="680" bodyend="680"/>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="c_j_s_o_n_8c_1ab6066e9a7036815e0c14b658dee3d1f5" compoundref="c_j_s_o_n_8c" startline="39" endline="44">cJSON_strcasecmp</references>
        <references refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" compoundref="c_j_s_o_n_8h" startline="54">cJSON::string</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="c_j_s_o_n_8c_1a68b9e0b2d984f1d873fb571425a98b9b" compoundref="c_j_s_o_n_8c" startline="677" endline="678">cJSON_DetachItemFromArray</references>
        <referencedby refid="c_j_s_o_n_8c_1a148a56617a2a97921d9b9dfbe5dc85bf" compoundref="c_j_s_o_n_8c" startline="681" endline="681">cJSON_DeleteItemFromObject</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a9acb1410be711f33d7c6d39f916b2d35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_Duplicate</definition>
        <argsstring>(cJSON *item, int recurse)</argsstring>
        <name>cJSON_Duplicate</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recurse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="708" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="708" bodyend="733"/>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1ad3d18116aae3bfa46f13bcfd7fd6d4e7" compoundref="c_j_s_o_n_8h" startline="40">cJSON_IsReference</references>
        <references refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" compoundref="c_j_s_o_n_8h" startline="51">cJSON::valueint</references>
        <references refid="structc_j_s_o_n_1a2983295369d8ff0183638d8550a22263" compoundref="c_j_s_o_n_8h" startline="52">cJSON::valuedouble</references>
        <references refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" compoundref="c_j_s_o_n_8h" startline="50">cJSON::valuestring</references>
        <references refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" compoundref="c_j_s_o_n_8c" startline="49" endline="58">cJSON_strdup</references>
        <references refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" compoundref="c_j_s_o_n_8c" startline="81" endline="93">cJSON_Delete</references>
        <references refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" compoundref="c_j_s_o_n_8h" startline="54">cJSON::string</references>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" compoundref="c_j_s_o_n_8h" startline="45">cJSON::prev</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1ac48335f22f743aff913991d809e0d620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_GetArrayItem</definition>
        <argsstring>(cJSON *array, int item)</argsstring>
        <name>cJSON_GetArrayItem</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="662" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="662" bodyend="662"/>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1adb5c049d3211599c90cd5a3d5e68d854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cJSON_GetArraySize</definition>
        <argsstring>(cJSON *array)</argsstring>
        <name>cJSON_GetArraySize</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="661" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="661" bodyend="661"/>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a5e81ffc372644963c759103865b0cad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* cJSON_GetErrorPtr</definition>
        <argsstring>(void)</argsstring>
        <name>cJSON_GetErrorPtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="37" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="37" bodyend="37"/>
        <references refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" compoundref="c_j_s_o_n_8c" startline="35">ep</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1aba766c9d2c20996e323522cbf2ba46c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_GetObjectItem</definition>
        <argsstring>(cJSON *object, const char *string)</argsstring>
        <name>cJSON_GetObjectItem</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="663" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="663" bodyend="663"/>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="c_j_s_o_n_8c_1ab6066e9a7036815e0c14b658dee3d1f5" compoundref="c_j_s_o_n_8c" startline="39" endline="44">cJSON_strcasecmp</references>
        <references refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" compoundref="c_j_s_o_n_8h" startline="54">cJSON::string</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <referencedby refid="group___a_w_s___s_e_n_d___d_a_t_a___o_v_e_r___m_q_t_t_1gad59dfe5e013298fd5be3440516ba26ea" compoundref="_aws_send_data_over_m_q_t_t_2source_2_app_controller_8c" startline="325" endline="407">AppParseConfigFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a20837ed285a3c2abf578330f2bd97ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_InitHooks</definition>
        <argsstring>(cJSON_Hooks *hooks)</argsstring>
        <name>cJSON_InitHooks</name>
        <param>
          <type><ref refid="structc_j_s_o_n___hooks" kindref="compound">cJSON_Hooks</ref> *</type>
          <declname>hooks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="60" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="60" bodyend="70"/>
        <references refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" compoundref="c_j_s_o_n_8c" startline="46">cJSON_malloc</references>
        <references refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" compoundref="c_j_s_o_n_8c" startline="47">cJSON_free</references>
        <references refid="structc_j_s_o_n___hooks_1a6e14aa8df61c7a672fe0c79d655adc70" compoundref="c_j_s_o_n_8h" startline="58">cJSON_Hooks::malloc_fn</references>
        <references refid="structc_j_s_o_n___hooks_1ab06271bcf01250a9753f9a73584c4841" compoundref="c_j_s_o_n_8h" startline="59">cJSON_Hooks::free_fn</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a26521dbb099b8247457808972930547b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_InsertItemInArray</definition>
        <argsstring>(cJSON *array, int which, cJSON *newitem)</argsstring>
        <name>cJSON_InsertItemInArray</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>newitem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="684" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="684" bodyend="685"/>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" compoundref="c_j_s_o_n_8c" startline="671" endline="671">cJSON_AddItemToArray</references>
        <references refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" compoundref="c_j_s_o_n_8h" startline="45">cJSON::prev</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1afd416be779f90b6369a189437d3bcc05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_Minify</definition>
        <argsstring>(char *json)</argsstring>
        <name>cJSON_Minify</name>
        <param>
          <type>char *</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="735" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="735" bodyend="750"/>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1gac6f89c07a494d40c5e1b41b0e505d8a2" compoundref="_p_p_m_p_serializer_8c" startline="106" endline="306">PPMPSerializer_PayloadSensorSelective</referencedby>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1ga31284e51a3ef72bf5c365b3039cb07c3" compoundref="_p_p_m_p_serializer_8c" startline="309" endline="374">PPMPSerializer_PayloadExternalSensorSelective</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>static cJSON* cJSON_New_Item</definition>
        <argsstring>(void)</argsstring>
        <name>cJSON_New_Item</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="73" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="73" bodyend="78"/>
        <references refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" compoundref="c_j_s_o_n_8c" startline="46">cJSON_malloc</references>
        <referencedby refid="c_j_s_o_n_8c_1a9c63df4d9350bee4bd1726f8f23ad536" compoundref="c_j_s_o_n_8c" startline="323" endline="337">cJSON_ParseWithOpts</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a7729444034bb1c16924478e4806023af" compoundref="c_j_s_o_n_8c" startline="406" endline="431">parse_array</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1aae5de4fb5317314153a9791567380768" compoundref="c_j_s_o_n_8c" startline="514" endline="547">parse_object</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a840197ebe7308bc68b2a8a108b06b004" compoundref="c_j_s_o_n_8c" startline="668" endline="668">create_reference</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a83ea2a0b33071a1120b9052170a2bc13" compoundref="c_j_s_o_n_8c" startline="692" endline="692">cJSON_CreateNull</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a07b3d4616c5a682aa558180713ce858a" compoundref="c_j_s_o_n_8c" startline="693" endline="693">cJSON_CreateTrue</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a33dcdd4d4f5da12bc91372376908c42b" compoundref="c_j_s_o_n_8c" startline="694" endline="694">cJSON_CreateFalse</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a06b0c43427994498d770e65b0089f8a8" compoundref="c_j_s_o_n_8c" startline="695" endline="695">cJSON_CreateBool</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a220d076d7d3a309049d6889be6d4904a" compoundref="c_j_s_o_n_8c" startline="696" endline="696">cJSON_CreateNumber</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" compoundref="c_j_s_o_n_8c" startline="697" endline="697">cJSON_CreateString</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" compoundref="c_j_s_o_n_8c" startline="698" endline="698">cJSON_CreateArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a9c5f44afdd781b16dead90042fe74085" compoundref="c_j_s_o_n_8c" startline="699" endline="699">cJSON_CreateObject</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a9acb1410be711f33d7c6d39f916b2d35" compoundref="c_j_s_o_n_8c" startline="708" endline="733">cJSON_Duplicate</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1ad3df5f943457d4befebe4109d48e4a50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_Parse</definition>
        <argsstring>(const char *value)</argsstring>
        <name>cJSON_Parse</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="339" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="339" bodyend="339"/>
        <references refid="c_j_s_o_n_8c_1a9c63df4d9350bee4bd1726f8f23ad536" compoundref="c_j_s_o_n_8c" startline="323" endline="337">cJSON_ParseWithOpts</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a9c63df4d9350bee4bd1726f8f23ad536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>cJSON* cJSON_ParseWithOpts</definition>
        <argsstring>(const char *value, const char **return_parse_end, int require_null_terminated)</argsstring>
        <name>cJSON_ParseWithOpts</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>return_parse_end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>require_null_terminated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="323" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="323" bodyend="337"/>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" compoundref="c_j_s_o_n_8c" startline="35">ep</references>
        <references refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" compoundref="c_j_s_o_n_8c" startline="357" endline="369">parse_value</references>
        <references refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" compoundref="c_j_s_o_n_8c" startline="320" endline="320">skip</references>
        <references refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" compoundref="c_j_s_o_n_8c" startline="81" endline="93">cJSON_Delete</references>
        <referencedby refid="group___a_w_s___s_e_n_d___d_a_t_a___o_v_e_r___m_q_t_t_1gad59dfe5e013298fd5be3440516ba26ea" compoundref="_aws_send_data_over_m_q_t_t_2source_2_app_controller_8c" startline="325" endline="407">AppParseConfigFile</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ad3df5f943457d4befebe4109d48e4a50" compoundref="c_j_s_o_n_8c" startline="339" endline="339">cJSON_Parse</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1aea4f15b04dba4dff2edc2bb1d387b555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* cJSON_Print</definition>
        <argsstring>(cJSON *item)</argsstring>
        <name>cJSON_Print</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="342" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="342" bodyend="342"/>
        <references refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" compoundref="c_j_s_o_n_8c" startline="372" endline="403">print_value</references>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1gac6f89c07a494d40c5e1b41b0e505d8a2" compoundref="_p_p_m_p_serializer_8c" startline="106" endline="306">PPMPSerializer_PayloadSensorSelective</referencedby>
        <referencedby refid="group___p_p_m_p_s_e_r_i_a_l_i_z_e_r_1ga31284e51a3ef72bf5c365b3039cb07c3" compoundref="_p_p_m_p_serializer_8c" startline="309" endline="374">PPMPSerializer_PayloadExternalSensorSelective</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a4354cf61f1d9b71688c34ab626b726ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* cJSON_PrintBuffered</definition>
        <argsstring>(cJSON *item, int prebuffer, int fmt)</argsstring>
        <name>cJSON_PrintBuffered</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prebuffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="345" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="345" bodyend="353"/>
        <references refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::buffer</references>
        <references refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" compoundref="c_j_s_o_n_8c" startline="46">cJSON_malloc</references>
        <references refid="structprintbuffer_1a9f59b34b1f25fe00023291b678246bcc" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::length</references>
        <references refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::offset</references>
        <references refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" compoundref="c_j_s_o_n_8c" startline="372" endline="403">print_value</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a5539c9504a8e65390a94852707f105d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* cJSON_PrintUnformatted</definition>
        <argsstring>(cJSON *item)</argsstring>
        <name>cJSON_PrintUnformatted</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="343" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="343" bodyend="343"/>
        <references refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" compoundref="c_j_s_o_n_8c" startline="372" endline="403">print_value</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a567d357a7a0c3c0c9c896d98aae3dcec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_ReplaceItemInArray</definition>
        <argsstring>(cJSON *array, int which, cJSON *newitem)</argsstring>
        <name>cJSON_ReplaceItemInArray</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>int</type>
          <declname>which</declname>
        </param>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>newitem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="686" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="686" bodyend="688"/>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" compoundref="c_j_s_o_n_8h" startline="45">cJSON::prev</references>
        <references refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" compoundref="c_j_s_o_n_8c" startline="81" endline="93">cJSON_Delete</references>
        <referencedby refid="c_j_s_o_n_8c_1a31202ffebc9e4f86c3db12f9793b6800" compoundref="c_j_s_o_n_8c" startline="689" endline="689">cJSON_ReplaceItemInObject</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a31202ffebc9e4f86c3db12f9793b6800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cJSON_ReplaceItemInObject</definition>
        <argsstring>(cJSON *object, const char *string, cJSON *newitem)</argsstring>
        <name>cJSON_ReplaceItemInObject</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>newitem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="689" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="689" bodyend="689"/>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="c_j_s_o_n_8c_1ab6066e9a7036815e0c14b658dee3d1f5" compoundref="c_j_s_o_n_8c" startline="39" endline="44">cJSON_strcasecmp</references>
        <references refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" compoundref="c_j_s_o_n_8h" startline="54">cJSON::string</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" compoundref="c_j_s_o_n_8c" startline="49" endline="58">cJSON_strdup</references>
        <references refid="c_j_s_o_n_8c_1a567d357a7a0c3c0c9c896d98aae3dcec" compoundref="c_j_s_o_n_8c" startline="686" endline="688">cJSON_ReplaceItemInArray</references>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1ab6066e9a7036815e0c14b658dee3d1f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int cJSON_strcasecmp</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>cJSON_strcasecmp</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="39" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="39" bodyend="44"/>
        <referencedby refid="c_j_s_o_n_8c_1aba766c9d2c20996e323522cbf2ba46c6" compoundref="c_j_s_o_n_8c" startline="663" endline="663">cJSON_GetObjectItem</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a7010822d267256f274e0adf22be2b202" compoundref="c_j_s_o_n_8c" startline="680" endline="680">cJSON_DetachItemFromObject</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a31202ffebc9e4f86c3db12f9793b6800" compoundref="c_j_s_o_n_8c" startline="689" endline="689">cJSON_ReplaceItemInObject</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* cJSON_strdup</definition>
        <argsstring>(const char *str)</argsstring>
        <name>cJSON_strdup</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="49" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="49" bodyend="58"/>
        <references refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" compoundref="c_j_s_o_n_8c" startline="46">cJSON_malloc</references>
        <referencedby refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" compoundref="c_j_s_o_n_8c" startline="372" endline="403">print_value</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a096004811663311569e95aa77518959c" compoundref="c_j_s_o_n_8c" startline="672" endline="672">cJSON_AddItemToObject</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a31202ffebc9e4f86c3db12f9793b6800" compoundref="c_j_s_o_n_8c" startline="689" endline="689">cJSON_ReplaceItemInObject</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" compoundref="c_j_s_o_n_8c" startline="697" endline="697">cJSON_CreateString</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a9acb1410be711f33d7c6d39f916b2d35" compoundref="c_j_s_o_n_8c" startline="708" endline="733">cJSON_Duplicate</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a840197ebe7308bc68b2a8a108b06b004" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
        <definition>static cJSON* create_reference</definition>
        <argsstring>(cJSON *item)</argsstring>
        <name>create_reference</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="668" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="668" bodyend="668"/>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" compoundref="c_j_s_o_n_8h" startline="54">cJSON::string</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1ad3d18116aae3bfa46f13bcfd7fd6d4e7" compoundref="c_j_s_o_n_8h" startline="40">cJSON_IsReference</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" compoundref="c_j_s_o_n_8h" startline="45">cJSON::prev</references>
        <referencedby refid="c_j_s_o_n_8c_1a076941e875d547f20959c66de97beee5" compoundref="c_j_s_o_n_8c" startline="674" endline="674">cJSON_AddItemReferenceToArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a001634f84d255810784155f4c8e4e288" compoundref="c_j_s_o_n_8c" startline="675" endline="675">cJSON_AddItemReferenceToObject</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* ensure</definition>
        <argsstring>(printbuffer *p, int needed)</argsstring>
        <name>ensure</name>
        <param>
          <type><ref refid="structprintbuffer" kindref="compound">printbuffer</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>needed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="121" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="121" bodyend="136"/>
        <references refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::buffer</references>
        <references refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::offset</references>
        <references refid="c_j_s_o_n_8c_1a1752bd242709867da9c4c41f402bf22d" compoundref="c_j_s_o_n_8c" startline="117" endline="117">pow2gt</references>
        <references refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" compoundref="c_j_s_o_n_8c" startline="46">cJSON_malloc</references>
        <references refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" compoundref="c_j_s_o_n_8c" startline="47">cJSON_free</references>
        <references refid="structprintbuffer_1a9f59b34b1f25fe00023291b678246bcc" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::length</references>
        <referencedby refid="c_j_s_o_n_8c_1a363f9c1512c939122c6bc611cb03c645" compoundref="c_j_s_o_n_8c" startline="147" endline="175">print_number</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ab39938c41d77b354eb5674dc614b4665" compoundref="c_j_s_o_n_8c" startline="252" endline="307">print_string_ptr</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" compoundref="c_j_s_o_n_8c" startline="372" endline="403">print_value</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" compoundref="c_j_s_o_n_8c" startline="434" endline="511">print_array</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" compoundref="c_j_s_o_n_8c" startline="550" endline="658">print_object</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a7729444034bb1c16924478e4806023af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * parse_array</definition>
        <argsstring>(cJSON *item, const char *value)</argsstring>
        <name>parse_array</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="314" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="406" bodyend="431"/>
        <references refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" compoundref="c_j_s_o_n_8c" startline="35">ep</references>
        <references refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" compoundref="_b_l_e_s_w___cycling_power_01_release_notes_8txt" startline="24">value</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1a57cffa126740a8efcdcb7bcef80e8897" compoundref="c_j_s_o_n_8h" startline="37">cJSON_Array</references>
        <references refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" compoundref="c_j_s_o_n_8c" startline="320" endline="320">skip</references>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" compoundref="c_j_s_o_n_8c" startline="357" endline="369">parse_value</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" compoundref="c_j_s_o_n_8h" startline="45">cJSON::prev</references>
        <referencedby refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" compoundref="c_j_s_o_n_8c" startline="357" endline="369">parse_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1afab84cd5fbf6bce45583b8091a9585ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>static unsigned parse_hex4</definition>
        <argsstring>(const char *str)</argsstring>
        <name>parse_hex4</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="177" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="177" bodyend="188"/>
        <referencedby refid="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" compoundref="c_j_s_o_n_8c" startline="192" endline="249">parse_string</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a77cf18cc6fa5c35cb069532cb978ddee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* parse_number</definition>
        <argsstring>(cJSON *item, const char *num)</argsstring>
        <name>parse_number</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="96" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="96" bodyend="115"/>
        <references refid="structc_j_s_o_n_1a2983295369d8ff0183638d8550a22263" compoundref="c_j_s_o_n_8h" startline="52">cJSON::valuedouble</references>
        <references refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" compoundref="c_j_s_o_n_8h" startline="51">cJSON::valueint</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1a15e77e2f6457dc9b19c10ddb032af971" compoundref="c_j_s_o_n_8h" startline="35">cJSON_Number</references>
        <referencedby refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" compoundref="c_j_s_o_n_8c" startline="357" endline="369">parse_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1aae5de4fb5317314153a9791567380768" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * parse_object</definition>
        <argsstring>(cJSON *item, const char *value)</argsstring>
        <name>parse_object</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="316" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="514" bodyend="547"/>
        <references refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" compoundref="c_j_s_o_n_8c" startline="35">ep</references>
        <references refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" compoundref="_b_l_e_s_w___cycling_power_01_release_notes_8txt" startline="24">value</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1a22c6e13481c090629afbd77b7cebd24c" compoundref="c_j_s_o_n_8h" startline="38">cJSON_Object</references>
        <references refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" compoundref="c_j_s_o_n_8c" startline="320" endline="320">skip</references>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" compoundref="c_j_s_o_n_8c" startline="73" endline="78">cJSON_New_Item</references>
        <references refid="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" compoundref="c_j_s_o_n_8c" startline="192" endline="249">parse_string</references>
        <references refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" compoundref="c_j_s_o_n_8h" startline="54">cJSON::string</references>
        <references refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" compoundref="c_j_s_o_n_8h" startline="50">cJSON::valuestring</references>
        <references refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" compoundref="c_j_s_o_n_8c" startline="357" endline="369">parse_value</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" compoundref="c_j_s_o_n_8h" startline="45">cJSON::prev</references>
        <referencedby refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" compoundref="c_j_s_o_n_8c" startline="357" endline="369">parse_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* parse_string</definition>
        <argsstring>(cJSON *item, const char *str)</argsstring>
        <name>parse_string</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="192" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="192" bodyend="249"/>
        <references refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" compoundref="c_j_s_o_n_8c" startline="35">ep</references>
        <references refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" compoundref="c_j_s_o_n_8c" startline="46">cJSON_malloc</references>
        <references refid="c_j_s_o_n_8c_1afab84cd5fbf6bce45583b8091a9585ef" compoundref="c_j_s_o_n_8c" startline="177" endline="188">parse_hex4</references>
        <references refid="c_j_s_o_n_8c_1a4ec3316cc778a6d7233bffd55cea7047" compoundref="c_j_s_o_n_8c" startline="191">firstByteMark</references>
        <references refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" compoundref="c_j_s_o_n_8h" startline="50">cJSON::valuestring</references>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1aa2cb4765308e2bbdf01988b2acdf92d9" compoundref="c_j_s_o_n_8h" startline="36">cJSON_String</references>
        <referencedby refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" compoundref="c_j_s_o_n_8c" startline="357" endline="369">parse_value</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1aae5de4fb5317314153a9791567380768" compoundref="c_j_s_o_n_8c" startline="514" endline="547">parse_object</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * parse_value</definition>
        <argsstring>(cJSON *item, const char *value)</argsstring>
        <name>parse_value</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="312" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="357" bodyend="369"/>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1aeadaba63ddb68aaa518528595d503dcd" compoundref="c_j_s_o_n_8h" startline="34">cJSON_NULL</references>
        <references refid="c_j_s_o_n_8h_1a2d240682316354b5748f909ad220184b" compoundref="c_j_s_o_n_8h" startline="32">cJSON_False</references>
        <references refid="c_j_s_o_n_8h_1aad4e442b8095939decddfb67d87d9324" compoundref="c_j_s_o_n_8h" startline="33">cJSON_True</references>
        <references refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" compoundref="c_j_s_o_n_8h" startline="51">cJSON::valueint</references>
        <references refid="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" compoundref="c_j_s_o_n_8c" startline="192" endline="249">parse_string</references>
        <references refid="c_j_s_o_n_8c_1a77cf18cc6fa5c35cb069532cb978ddee" compoundref="c_j_s_o_n_8c" startline="96" endline="115">parse_number</references>
        <references refid="c_j_s_o_n_8c_1a7729444034bb1c16924478e4806023af" compoundref="c_j_s_o_n_8c" startline="406" endline="431">parse_array</references>
        <references refid="c_j_s_o_n_8c_1aae5de4fb5317314153a9791567380768" compoundref="c_j_s_o_n_8c" startline="514" endline="547">parse_object</references>
        <references refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" compoundref="c_j_s_o_n_8c" startline="35">ep</references>
        <references refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" compoundref="_b_l_e_s_w___cycling_power_01_release_notes_8txt" startline="24">value</references>
        <referencedby refid="c_j_s_o_n_8c_1a9c63df4d9350bee4bd1726f8f23ad536" compoundref="c_j_s_o_n_8c" startline="323" endline="337">cJSON_ParseWithOpts</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a7729444034bb1c16924478e4806023af" compoundref="c_j_s_o_n_8c" startline="406" endline="431">parse_array</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1aae5de4fb5317314153a9791567380768" compoundref="c_j_s_o_n_8c" startline="514" endline="547">parse_object</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a1752bd242709867da9c4c41f402bf22d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int pow2gt</definition>
        <argsstring>(int x)</argsstring>
        <name>pow2gt</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="117" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="117" bodyend="117"/>
        <referencedby refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" compoundref="c_j_s_o_n_8c" startline="121" endline="136">ensure</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char * print_array</definition>
        <argsstring>(cJSON *item, int depth, int fmt, printbuffer *p)</argsstring>
        <name>print_array</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type><ref refid="structprintbuffer" kindref="compound">printbuffer</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="315" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="434" bodyend="511"/>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" compoundref="c_j_s_o_n_8c" startline="121" endline="136">ensure</references>
        <references refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" compoundref="c_j_s_o_n_8c" startline="46">cJSON_malloc</references>
        <references refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::offset</references>
        <references refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" compoundref="c_j_s_o_n_8c" startline="372" endline="403">print_value</references>
        <references refid="c_j_s_o_n_8c_1a5d29c7d0b4eb532b15d6dddfc65e699a" compoundref="c_j_s_o_n_8c" startline="138" endline="144">update</references>
        <references refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::buffer</references>
        <references refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" compoundref="c_j_s_o_n_8c" startline="47">cJSON_free</references>
        <referencedby refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" compoundref="c_j_s_o_n_8c" startline="372" endline="403">print_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a363f9c1512c939122c6bc611cb03c645" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* print_number</definition>
        <argsstring>(cJSON *item, printbuffer *p)</argsstring>
        <name>print_number</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="structprintbuffer" kindref="compound">printbuffer</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="147" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="147" bodyend="175"/>
        <references refid="structc_j_s_o_n_1a2983295369d8ff0183638d8550a22263" compoundref="c_j_s_o_n_8h" startline="52">cJSON::valuedouble</references>
        <references refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" compoundref="c_j_s_o_n_8c" startline="121" endline="136">ensure</references>
        <references refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" compoundref="c_j_s_o_n_8c" startline="46">cJSON_malloc</references>
        <references refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" compoundref="c_j_s_o_n_8h" startline="51">cJSON::valueint</references>
        <referencedby refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" compoundref="c_j_s_o_n_8c" startline="372" endline="403">print_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char * print_object</definition>
        <argsstring>(cJSON *item, int depth, int fmt, printbuffer *p)</argsstring>
        <name>print_object</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type><ref refid="structprintbuffer" kindref="compound">printbuffer</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="317" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="550" bodyend="658"/>
        <references refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" compoundref="c_j_s_o_n_8h" startline="46">cJSON::child</references>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" compoundref="c_j_s_o_n_8c" startline="121" endline="136">ensure</references>
        <references refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" compoundref="c_j_s_o_n_8c" startline="46">cJSON_malloc</references>
        <references refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::offset</references>
        <references refid="c_j_s_o_n_8c_1ab39938c41d77b354eb5674dc614b4665" compoundref="c_j_s_o_n_8c" startline="252" endline="307">print_string_ptr</references>
        <references refid="c_j_s_o_n_8c_1a5d29c7d0b4eb532b15d6dddfc65e699a" compoundref="c_j_s_o_n_8c" startline="138" endline="144">update</references>
        <references refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" compoundref="c_j_s_o_n_8c" startline="372" endline="403">print_value</references>
        <references refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::buffer</references>
        <references refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" compoundref="c_j_s_o_n_8c" startline="47">cJSON_free</references>
        <referencedby refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" compoundref="c_j_s_o_n_8c" startline="372" endline="403">print_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a622cd4ca4e8c45cb0641b96847aaef27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* print_string</definition>
        <argsstring>(cJSON *item, printbuffer *p)</argsstring>
        <name>print_string</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="structprintbuffer" kindref="compound">printbuffer</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="309" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="309" bodyend="309"/>
        <references refid="c_j_s_o_n_8c_1ab39938c41d77b354eb5674dc614b4665" compoundref="c_j_s_o_n_8c" startline="252" endline="307">print_string_ptr</references>
        <references refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" compoundref="c_j_s_o_n_8h" startline="50">cJSON::valuestring</references>
        <referencedby refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" compoundref="c_j_s_o_n_8c" startline="372" endline="403">print_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1ab39938c41d77b354eb5674dc614b4665" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* print_string_ptr</definition>
        <argsstring>(const char *str, printbuffer *p)</argsstring>
        <name>print_string_ptr</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="structprintbuffer" kindref="compound">printbuffer</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="252" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="252" bodyend="307"/>
        <references refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" compoundref="c_j_s_o_n_8c" startline="121" endline="136">ensure</references>
        <references refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" compoundref="c_j_s_o_n_8c" startline="46">cJSON_malloc</references>
        <referencedby refid="c_j_s_o_n_8c_1a622cd4ca4e8c45cb0641b96847aaef27" compoundref="c_j_s_o_n_8c" startline="309" endline="309">print_string</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" compoundref="c_j_s_o_n_8c" startline="550" endline="658">print_object</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char * print_value</definition>
        <argsstring>(cJSON *item, int depth, int fmt, printbuffer *p)</argsstring>
        <name>print_value</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type><ref refid="structprintbuffer" kindref="compound">printbuffer</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="313" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="372" bodyend="403"/>
        <references refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" compoundref="c_j_s_o_n_8h" startline="48">cJSON::type</references>
        <references refid="c_j_s_o_n_8h_1aeadaba63ddb68aaa518528595d503dcd" compoundref="c_j_s_o_n_8h" startline="34">cJSON_NULL</references>
        <references refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" compoundref="c_j_s_o_n_8c" startline="121" endline="136">ensure</references>
        <references refid="c_j_s_o_n_8h_1a2d240682316354b5748f909ad220184b" compoundref="c_j_s_o_n_8h" startline="32">cJSON_False</references>
        <references refid="c_j_s_o_n_8h_1aad4e442b8095939decddfb67d87d9324" compoundref="c_j_s_o_n_8h" startline="33">cJSON_True</references>
        <references refid="c_j_s_o_n_8h_1a15e77e2f6457dc9b19c10ddb032af971" compoundref="c_j_s_o_n_8h" startline="35">cJSON_Number</references>
        <references refid="c_j_s_o_n_8c_1a363f9c1512c939122c6bc611cb03c645" compoundref="c_j_s_o_n_8c" startline="147" endline="175">print_number</references>
        <references refid="c_j_s_o_n_8h_1aa2cb4765308e2bbdf01988b2acdf92d9" compoundref="c_j_s_o_n_8h" startline="36">cJSON_String</references>
        <references refid="c_j_s_o_n_8c_1a622cd4ca4e8c45cb0641b96847aaef27" compoundref="c_j_s_o_n_8c" startline="309" endline="309">print_string</references>
        <references refid="c_j_s_o_n_8h_1a57cffa126740a8efcdcb7bcef80e8897" compoundref="c_j_s_o_n_8h" startline="37">cJSON_Array</references>
        <references refid="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" compoundref="c_j_s_o_n_8c" startline="434" endline="511">print_array</references>
        <references refid="c_j_s_o_n_8h_1a22c6e13481c090629afbd77b7cebd24c" compoundref="c_j_s_o_n_8h" startline="38">cJSON_Object</references>
        <references refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" compoundref="c_j_s_o_n_8c" startline="550" endline="658">print_object</references>
        <references refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" compoundref="c_j_s_o_n_8c" startline="49" endline="58">cJSON_strdup</references>
        <referencedby refid="c_j_s_o_n_8c_1aea4f15b04dba4dff2edc2bb1d387b555" compoundref="c_j_s_o_n_8c" startline="342" endline="342">cJSON_Print</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a5539c9504a8e65390a94852707f105d4" compoundref="c_j_s_o_n_8c" startline="343" endline="343">cJSON_PrintUnformatted</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a4354cf61f1d9b71688c34ab626b726ce" compoundref="c_j_s_o_n_8c" startline="345" endline="353">cJSON_PrintBuffered</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" compoundref="c_j_s_o_n_8c" startline="434" endline="511">print_array</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" compoundref="c_j_s_o_n_8c" startline="550" endline="658">print_object</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char* skip</definition>
        <argsstring>(const char *in)</argsstring>
        <name>skip</name>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="320" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="320" bodyend="320"/>
        <referencedby refid="c_j_s_o_n_8c_1a9c63df4d9350bee4bd1726f8f23ad536" compoundref="c_j_s_o_n_8c" startline="323" endline="337">cJSON_ParseWithOpts</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a7729444034bb1c16924478e4806023af" compoundref="c_j_s_o_n_8c" startline="406" endline="431">parse_array</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1aae5de4fb5317314153a9791567380768" compoundref="c_j_s_o_n_8c" startline="514" endline="547">parse_object</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void suffix_object</definition>
        <argsstring>(cJSON *prev, cJSON *item)</argsstring>
        <name>suffix_object</name>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>prev</declname>
        </param>
        <param>
          <type><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref> *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="666" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="666" bodyend="666"/>
        <references refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" compoundref="c_j_s_o_n_8h" startline="45">cJSON::next</references>
        <references refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" compoundref="c_j_s_o_n_8h" startline="45">cJSON::prev</references>
        <referencedby refid="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" compoundref="c_j_s_o_n_8c" startline="671" endline="671">cJSON_AddItemToArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a12576edcea9baca64be6fe7a6ae8d4fa" compoundref="c_j_s_o_n_8c" startline="702" endline="702">cJSON_CreateIntArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a328fe12c04efcf2073b218bbf35ac6ec" compoundref="c_j_s_o_n_8c" startline="703" endline="703">cJSON_CreateFloatArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1a04cb41ee475a68bd2ee63e92d8534049" compoundref="c_j_s_o_n_8c" startline="704" endline="704">cJSON_CreateDoubleArray</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1abeecb344ac9a0318cd42ac32b6e22289" compoundref="c_j_s_o_n_8c" startline="705" endline="705">cJSON_CreateStringArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="c_j_s_o_n_8c_1a5d29c7d0b4eb532b15d6dddfc65e699a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int update</definition>
        <argsstring>(printbuffer *p)</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="structprintbuffer" kindref="compound">printbuffer</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" line="138" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c" bodystart="138" bodyend="144"/>
        <references refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::buffer</references>
        <references refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" compoundref="c_j_s_o_n_8c" startline="119">printbuffer::offset</references>
        <referencedby refid="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" compoundref="c_j_s_o_n_8c" startline="434" endline="511">print_array</referencedby>
        <referencedby refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" compoundref="c_j_s_o_n_8c" startline="550" endline="658">print_object</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2009<sp/>Dave<sp/>Gamble</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cJSON<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>JSON<sp/>parser<sp/>in<sp/>C.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="c_j_s_o_n_8h" kindref="compound">cJSON.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="c_j_s_o_n_8c_1a5e81ffc372644963c759103865b0cad1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1a5e81ffc372644963c759103865b0cad1" kindref="member">cJSON_GetErrorPtr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>;}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="c_j_s_o_n_8c_1ab6066e9a7036815e0c14b658dee3d1f5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1ab6066e9a7036815e0c14b658dee3d1f5" kindref="member">cJSON_strcasecmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(s1==s2)?0:1;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>tolower(*s1)<sp/>==<sp/>tolower(*s2);<sp/>++s1,<sp/>++s2)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*s1<sp/>==<sp/>0)<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tolower(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)s1)<sp/>-<sp/>tolower(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)s2);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*cJSON_malloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)<sp/>=<sp/>malloc;</highlight></codeline>
<codeline lineno="47" refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)<sp/>=<sp/>free;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" kindref="member">cJSON_strdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>copy;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(str)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(copy<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(len)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(copy,str,len);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="c_j_s_o_n_8c_1a20837ed285a3c2abf578330f2bd97ad4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a20837ed285a3c2abf578330f2bd97ad4" kindref="member">cJSON_InitHooks</ref>(<ref refid="structc_j_s_o_n___hooks" kindref="compound">cJSON_Hooks</ref>*<sp/>hooks)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!hooks)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>hooks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref><sp/>=<sp/>malloc;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref><sp/>=<sp/>free;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref><sp/>=<sp/>(hooks-&gt;<ref refid="structc_j_s_o_n___hooks_1a6e14aa8df61c7a672fe0c79d655adc70" kindref="member">malloc_fn</ref>)?hooks-&gt;<ref refid="structc_j_s_o_n___hooks_1a6e14aa8df61c7a672fe0c79d655adc70" kindref="member">malloc_fn</ref>:malloc;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref><sp/><sp/><sp/>=<sp/>(hooks-&gt;<ref refid="structc_j_s_o_n___hooks_1ab06271bcf01250a9753f9a73584c4841" kindref="member">free_fn</ref>)?hooks-&gt;<ref refid="structc_j_s_o_n___hooks_1ab06271bcf01250a9753f9a73584c4841" kindref="member">free_fn</ref>:free;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Internal<sp/>constructor.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref>*<sp/>node<sp/>=<sp/>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref>*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref>));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>memset(node,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref>));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Delete<sp/>a<sp/>cJSON<sp/>structure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" kindref="member">cJSON_Delete</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*c)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*next;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(c-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>&amp;<ref refid="c_j_s_o_n_8h_1ad3d18116aae3bfa46f13bcfd7fd6d4e7" kindref="member">cJSON_IsReference</ref>)<sp/>&amp;&amp;<sp/>c-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>)<sp/><ref refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" kindref="member">cJSON_Delete</ref>(c-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(c-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>&amp;<ref refid="c_j_s_o_n_8h_1ad3d18116aae3bfa46f13bcfd7fd6d4e7" kindref="member">cJSON_IsReference</ref>)<sp/>&amp;&amp;<sp/>c-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>)<sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(c-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(c-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>&amp;<ref refid="c_j_s_o_n_8h_1a491c3484a36f3915cc4710088f55971f" kindref="member">cJSON_StringIsConst</ref>)<sp/>&amp;&amp;<sp/>c-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>)<sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(c-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(c);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c=next;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Parse<sp/>the<sp/>input<sp/>text<sp/>to<sp/>generate<sp/>a<sp/>number,<sp/>and<sp/>populate<sp/>the<sp/>result<sp/>into<sp/>item.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="c_j_s_o_n_8c_1a77cf18cc6fa5c35cb069532cb978ddee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1a77cf18cc6fa5c35cb069532cb978ddee" kindref="member">parse_number</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*num)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n=0,sign=1,scale=0;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subscale=0,signsubscale=1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*num==</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>sign=-1,num++;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Has<sp/>sign?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*num==</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>num++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*num&gt;=</highlight><highlight class="charliteral">&apos;1&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*num&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/><sp/>n=(n*10.0)+(*num++<sp/>-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*num&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*num&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*<sp/>Number?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*num==</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>num[1]&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>num[1]&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>{num++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/><sp/>n=(n*10.0)+(*num++<sp/>-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">),scale--;<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*num&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*num&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">);}<sp/><sp/></highlight><highlight class="comment">/*<sp/>Fractional<sp/>part?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*num==</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>||<sp/>*num==</highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Exponent?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>num++;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*num==</highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)<sp/>num++;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*num==</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>signsubscale=-1,num++;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>With<sp/>sign?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*num&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*num&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>subscale=(subscale*10)+(*num++<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>n=sign*n*pow(10.0,(scale+subscale*signsubscale));<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>=<sp/>+/-<sp/>number.fraction<sp/>*<sp/>10^+/-<sp/>exponent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structc_j_s_o_n_1a2983295369d8ff0183638d8550a22263" kindref="member">valuedouble</ref>=n;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" kindref="member">valueint</ref>=(int)n;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="c_j_s_o_n_8c_1a1752bd242709867da9c4c41f402bf22d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a1752bd242709867da9c4c41f402bf22d" kindref="member">pow2gt</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/><sp/><sp/>{<sp/><sp/><sp/>--x;<sp/><sp/><sp/><sp/>x|=x&gt;&gt;1;<sp/><sp/><sp/><sp/>x|=x&gt;&gt;2;<sp/><sp/><sp/><sp/>x|=x&gt;&gt;4;<sp/><sp/><sp/><sp/>x|=x&gt;&gt;8;<sp/><sp/><sp/><sp/>x|=x&gt;&gt;16;<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x+1;<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>;<sp/>}<sp/><ref refid="structprintbuffer" kindref="compound">printbuffer</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(<ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>*p,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>needed)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newbuffer;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newsize;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p<sp/>||<sp/>!p-&gt;<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>needed+=p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needed&lt;=p-&gt;length)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>+p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>newsize=<ref refid="c_j_s_o_n_8c_1a1752bd242709867da9c4c41f402bf22d" kindref="member">pow2gt</ref>(needed);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>newbuffer=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(newsize);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newbuffer)<sp/>{<ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(p-&gt;<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>);p-&gt;<ref refid="structprintbuffer_1a9f59b34b1f25fe00023291b678246bcc" kindref="member">length</ref>=0,p-&gt;<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>=0;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newbuffer)<sp/>memcpy(newbuffer,p-&gt;<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>,p-&gt;<ref refid="structprintbuffer_1a9f59b34b1f25fe00023291b678246bcc" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(p-&gt;<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structprintbuffer_1a9f59b34b1f25fe00023291b678246bcc" kindref="member">length</ref>=newsize;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>=newbuffer;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newbuffer+p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="c_j_s_o_n_8c_1a5d29c7d0b4eb532b15d6dddfc65e699a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a5d29c7d0b4eb532b15d6dddfc65e699a" kindref="member">update</ref>(<ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>*p)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p<sp/>||<sp/>!p-&gt;<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>str=p-&gt;<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>+p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>+strlen(str);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Render<sp/>the<sp/>number<sp/>nicely<sp/>from<sp/>the<sp/>given<sp/>item<sp/>into<sp/>a<sp/>string.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="c_j_s_o_n_8c_1a363f9c1512c939122c6bc611cb03c645" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1a363f9c1512c939122c6bc611cb03c645" kindref="member">print_number</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,<ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>*p)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str=0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d=item-&gt;<ref refid="structc_j_s_o_n_1a2983295369d8ff0183638d8550a22263" kindref="member">valuedouble</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d==0)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/><sp/>str=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,2);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>str=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(2);<sp/></highlight><highlight class="comment">/*<sp/>special<sp/>case<sp/>for<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str)<sp/>strcpy(str,</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)item-&gt;<ref refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" kindref="member">valueint</ref>)-d)&lt;=DBL_EPSILON<sp/>&amp;&amp;<sp/>d&lt;=INT_MAX<sp/>&amp;&amp;<sp/>d&gt;=INT_MIN)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/><sp/>str=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,21);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>str=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(21);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>2^64+1<sp/>can<sp/>be<sp/>represented<sp/>in<sp/>21<sp/>chars.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str)<sp/><sp/><sp/><sp/>sprintf(str,</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,item-&gt;<ref refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" kindref="member">valueint</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/><sp/>str=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,64);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>str=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(64);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>nice<sp/>tradeoff.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(floor(d)-d)&lt;=DBL_EPSILON<sp/>&amp;&amp;<sp/>fabs(d)&lt;1.0e60)sprintf(str,</highlight><highlight class="stringliteral">&quot;%.0f&quot;</highlight><highlight class="normal">,d);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(d)&lt;1.0e-6<sp/>||<sp/>fabs(d)&gt;1.0e9)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,</highlight><highlight class="stringliteral">&quot;%e&quot;</highlight><highlight class="normal">,d);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(str,</highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,d);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="c_j_s_o_n_8c_1afab84cd5fbf6bce45583b8091a9585ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1afab84cd5fbf6bce45583b8091a9585ef" kindref="member">parse_hex4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>h=0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>h+=(*str)-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)<sp/>h+=10+(*str)-</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)<sp/>h+=10+(*str)-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>h=h&lt;&lt;4;str++;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>h+=(*str)-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)<sp/>h+=10+(*str)-</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)<sp/>h+=10+(*str)-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>h=h&lt;&lt;4;str++;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>h+=(*str)-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)<sp/>h+=10+(*str)-</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)<sp/>h+=10+(*str)-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>h=h&lt;&lt;4;str++;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>h+=(*str)-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">)<sp/>h+=10+(*str)-</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str&gt;=</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*str&lt;=</highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)<sp/>h+=10+(*str)-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Parse<sp/>the<sp/>input<sp/>text<sp/>into<sp/>an<sp/>unescaped<sp/>cstring,<sp/>and<sp/>populate<sp/>item.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="c_j_s_o_n_8c_1a4ec3316cc778a6d7233bffd55cea7047" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a4ec3316cc778a6d7233bffd55cea7047" kindref="member">firstByteMark</ref>[7]<sp/>=<sp/>{<sp/>0x00,<sp/>0x00,<sp/>0xC0,<sp/>0xE0,<sp/>0xF0,<sp/>0xF8,<sp/>0xFC<sp/>};</highlight></codeline>
<codeline lineno="192" refid="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" kindref="member">parse_string</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr=str+1;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr2;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len=0;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>uc,uc2;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str!=</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">)<sp/>{<ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>=str;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}<sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>a<sp/>string!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*ptr!=</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*ptr<sp/>&amp;&amp;<sp/>++len)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr++<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)<sp/>ptr++;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Skip<sp/>escaped<sp/>quotes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>out=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(len+1);<sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>how<sp/>long<sp/>we<sp/>need<sp/>for<sp/>the<sp/>string,<sp/>roughly.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=str+1;ptr2=out;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*ptr!=</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*ptr)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr!=</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)<sp/>*ptr2++=*ptr++;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*ptr)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">:<sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;\b&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">:<sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">:<sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">:<sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">:<sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>transcode<sp/>utf16<sp/>to<sp/>utf8.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uc=<ref refid="c_j_s_o_n_8c_1afab84cd5fbf6bce45583b8091a9585ef" kindref="member">parse_hex4</ref>(ptr+1);ptr+=4;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>unicode<sp/>char.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uc&gt;=0xDC00<sp/>&amp;&amp;<sp/>uc&lt;=0xDFFF)<sp/>||<sp/>uc==0)<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>invalid.<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uc&gt;=0xD800<sp/>&amp;&amp;<sp/>uc&lt;=0xDBFF)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UTF16<sp/>surrogate<sp/>pairs.<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[1]!=</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>||<sp/>ptr[2]!=</highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">/*<sp/>missing<sp/>second-half<sp/>of<sp/>surrogate.<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uc2=<ref refid="c_j_s_o_n_8c_1afab84cd5fbf6bce45583b8091a9585ef" kindref="member">parse_hex4</ref>(ptr+3);ptr+=6;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uc2&lt;0xDC00<sp/>||<sp/>uc2&gt;0xDFFF)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>second-half<sp/>of<sp/>surrogate.<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uc=0x10000<sp/>+<sp/>(((uc&amp;0x3FF)&lt;&lt;10)<sp/>|<sp/>(uc2&amp;0x3FF));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len=4;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uc&lt;0x80)<sp/>len=1;</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uc&lt;0x800)<sp/>len=2;</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uc&lt;0x10000)<sp/>len=3;<sp/>ptr2+=len;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(len)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>*--ptr2<sp/>=((uc<sp/>|<sp/>0x80)<sp/>&amp;<sp/>0xBF);<sp/>uc<sp/>&gt;&gt;=<sp/>6;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>*--ptr2<sp/>=((uc<sp/>|<sp/>0x80)<sp/>&amp;<sp/>0xBF);<sp/>uc<sp/>&gt;&gt;=<sp/>6;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>*--ptr2<sp/>=((uc<sp/>|<sp/>0x80)<sp/>&amp;<sp/>0xBF);<sp/>uc<sp/>&gt;&gt;=<sp/>6;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>*--ptr2<sp/>=(uc<sp/>|<sp/><ref refid="c_j_s_o_n_8c_1a4ec3316cc778a6d7233bffd55cea7047" kindref="member">firstByteMark</ref>[len]);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr2+=len;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/>*ptr2++=*ptr;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr++;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr2=0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr==</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">)<sp/>ptr++;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>=out;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1aa2cb4765308e2bbdf01988b2acdf92d9" kindref="member">cJSON_String</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Render<sp/>the<sp/>cstring<sp/>provided<sp/>to<sp/>an<sp/>escaped<sp/>version<sp/>that<sp/>can<sp/>be<sp/>printed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="c_j_s_o_n_8c_1ab39938c41d77b354eb5674dc614b4665" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1ab39938c41d77b354eb5674dc614b4665" kindref="member">print_string_ptr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>*p)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr2,*out;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len=0,flag=0;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>token;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ptr=str;*ptr;ptr++)<sp/>flag|=((*ptr&gt;0<sp/>&amp;&amp;<sp/>*ptr&lt;32)||(*ptr==</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">)||(*ptr==</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">))?1:0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!flag)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len=ptr-str;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>out=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,len+3);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(len+3);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr2=out;*ptr2++=</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(ptr2,str);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr2[len]=</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr2[len+1]=0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,3);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>out=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(3);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(out,</highlight><highlight class="stringliteral">&quot;\&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr=str;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((token=*ptr)<sp/>&amp;&amp;<sp/>++len)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strchr(</highlight><highlight class="stringliteral">&quot;\&quot;\\\b\f\n\r\t&quot;</highlight><highlight class="normal">,token))<sp/>len++;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(token&lt;32)<sp/>len+=5;ptr++;}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,len+3);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>out=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(len+3);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr2=out;ptr=str;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*ptr)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)*ptr&gt;31<sp/>&amp;&amp;<sp/>*ptr!=</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*ptr!=</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)<sp/>*ptr2++=*ptr++;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(token=*ptr++)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:<sp/><sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">:<sp/><sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\b&apos;</highlight><highlight class="normal">:<sp/><sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">:<sp/><sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:<sp/><sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:<sp/><sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;r&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:<sp/><sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>sprintf(ptr2,</highlight><highlight class="stringliteral">&quot;u%04x&quot;</highlight><highlight class="normal">,token);ptr2+=5;<sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">/*<sp/>escape<sp/>and<sp/>print<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr2++=</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">;*ptr2++=0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Invote<sp/>print_string_ptr<sp/>(which<sp/>is<sp/>useful)<sp/>on<sp/>an<sp/>item.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="c_j_s_o_n_8c_1a622cd4ca4e8c45cb0641b96847aaef27" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1a622cd4ca4e8c45cb0641b96847aaef27" kindref="member">print_string</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,<ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>*p)<sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1ab39938c41d77b354eb5674dc614b4665" kindref="member">print_string_ptr</ref>(item-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>,p);}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Predeclare<sp/>these<sp/>prototypes.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" kindref="member">parse_value</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" kindref="member">print_value</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmt,<ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>*p);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1a7729444034bb1c16924478e4806023af" kindref="member">parse_array</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" kindref="member">print_array</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmt,<ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>*p);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1aae5de4fb5317314153a9791567380768" kindref="member">parse_object</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" kindref="member">print_object</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmt,<ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>*p);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Utility<sp/>to<sp/>jump<sp/>whitespace<sp/>and<sp/>cr/lf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*in)<sp/>{</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(in<sp/>&amp;&amp;<sp/>*in<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)*in&lt;=32)<sp/>in++;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in;}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Parse<sp/>an<sp/>object<sp/>-<sp/>create<sp/>a<sp/>new<sp/>root,<sp/>and<sp/>populate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="c_j_s_o_n_8c_1a9c63df4d9350bee4bd1726f8f23ad536" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a9c63df4d9350bee4bd1726f8f23ad536" kindref="member">cJSON_ParseWithOpts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**return_parse_end,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>require_null_terminated)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end=0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*c=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>=0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>memory<sp/>fail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>end=<ref refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" kindref="member">parse_value</ref>(c,<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(value));</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!end)<sp/><sp/><sp/>{<ref refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" kindref="member">cJSON_Delete</ref>(c);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}<sp/></highlight><highlight class="comment">/*<sp/>parse<sp/>failure.<sp/>ep<sp/>is<sp/>set.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>we<sp/>require<sp/>null-terminated<sp/>JSON<sp/>without<sp/>appended<sp/>garbage,<sp/>skip<sp/>and<sp/>then<sp/>check<sp/>for<sp/>a<sp/>null<sp/>terminator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(require_null_terminated)<sp/>{end=<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(end);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*end)<sp/>{<ref refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" kindref="member">cJSON_Delete</ref>(c);<ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>=end;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_parse_end)<sp/>*return_parse_end=end;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Default<sp/>options<sp/>for<sp/>cJSON_Parse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="c_j_s_o_n_8c_1ad3df5f943457d4befebe4109d48e4a50" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1ad3df5f943457d4befebe4109d48e4a50" kindref="member">cJSON_Parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a9c63df4d9350bee4bd1726f8f23ad536" kindref="member">cJSON_ParseWithOpts</ref>(value,0,0);}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Render<sp/>a<sp/>cJSON<sp/>item/entity/structure<sp/>to<sp/>text.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="c_j_s_o_n_8c_1aea4f15b04dba4dff2edc2bb1d387b555" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1aea4f15b04dba4dff2edc2bb1d387b555" kindref="member">cJSON_Print</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" kindref="member">print_value</ref>(item,0,1,0);}</highlight></codeline>
<codeline lineno="343" refid="c_j_s_o_n_8c_1a5539c9504a8e65390a94852707f105d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1a5539c9504a8e65390a94852707f105d4" kindref="member">cJSON_PrintUnformatted</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item)<sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" kindref="member">print_value</ref>(item,0,0,0);}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="c_j_s_o_n_8c_1a4354cf61f1d9b71688c34ab626b726ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1a4354cf61f1d9b71688c34ab626b726ce" kindref="member">cJSON_PrintBuffered</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prebuffer,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmt)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>p;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(prebuffer);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="structprintbuffer_1a9f59b34b1f25fe00023291b678246bcc" kindref="member">length</ref>=prebuffer;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>=0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" kindref="member">print_value</ref>(item,0,fmt,&amp;p);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p.<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Parser<sp/>core<sp/>-<sp/>when<sp/>encountering<sp/>text,<sp/>process<sp/>appropriately.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" kindref="member">parse_value</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fail<sp/>on<sp/>null.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(value,</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">,4))<sp/><sp/><sp/>{<sp/>item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1aeadaba63ddb68aaa518528595d503dcd" kindref="member">cJSON_NULL</ref>;<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value+4;<sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(value,</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">,5))<sp/><sp/>{<sp/>item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1a2d240682316354b5748f909ad220184b" kindref="member">cJSON_False</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value+5;<sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strncmp(value,</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">,4))<sp/><sp/><sp/>{<sp/>item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1aad4e442b8095939decddfb67d87d9324" kindref="member">cJSON_True</ref>;<sp/>item-&gt;<ref refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" kindref="member">valueint</ref>=1;<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value+4;<sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value==</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" kindref="member">parse_string</ref>(item,value);<sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value==</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>||<sp/>(*value&gt;=</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*value&lt;=</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a77cf18cc6fa5c35cb069532cb978ddee" kindref="member">parse_number</ref>(item,value);<sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value==</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a7729444034bb1c16924478e4806023af" kindref="member">parse_array</ref>(item,value);<sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value==</highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1aae5de4fb5317314153a9791567380768" kindref="member">parse_object</ref>(item,value);<sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>=<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>failure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Render<sp/>a<sp/>value<sp/>to<sp/>text.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" kindref="member">print_value</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmt,<ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>*p)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out=0;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>((item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>)&amp;255)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1aeadaba63ddb68aaa518528595d503dcd" kindref="member">cJSON_NULL</ref>:<sp/><sp/><sp/><sp/>{out=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,5);<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out)<sp/>strcpy(out,</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1a2d240682316354b5748f909ad220184b" kindref="member">cJSON_False</ref>:<sp/><sp/><sp/>{out=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,6);<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out)<sp/>strcpy(out,</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1aad4e442b8095939decddfb67d87d9324" kindref="member">cJSON_True</ref>:<sp/><sp/><sp/><sp/>{out=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,5);<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out)<sp/>strcpy(out,</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>:<sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1a363f9c1512c939122c6bc611cb03c645" kindref="member">print_number</ref>(item,p);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1aa2cb4765308e2bbdf01988b2acdf92d9" kindref="member">cJSON_String</ref>:<sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1a622cd4ca4e8c45cb0641b96847aaef27" kindref="member">print_string</ref>(item,p);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1a57cffa126740a8efcdcb7bcef80e8897" kindref="member">cJSON_Array</ref>:<sp/><sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" kindref="member">print_array</ref>(item,depth,fmt,p);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1a22c6e13481c090629afbd77b7cebd24c" kindref="member">cJSON_Object</ref>:<sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" kindref="member">print_object</ref>(item,depth,fmt,p);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>((item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>)&amp;255)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1aeadaba63ddb68aaa518528595d503dcd" kindref="member">cJSON_NULL</ref>:<sp/><sp/><sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" kindref="member">cJSON_strdup</ref>(</highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1a2d240682316354b5748f909ad220184b" kindref="member">cJSON_False</ref>:<sp/><sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" kindref="member">cJSON_strdup</ref>(</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1aad4e442b8095939decddfb67d87d9324" kindref="member">cJSON_True</ref>:<sp/><sp/><sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" kindref="member">cJSON_strdup</ref>(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>:<sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1a363f9c1512c939122c6bc611cb03c645" kindref="member">print_number</ref>(item,0);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1aa2cb4765308e2bbdf01988b2acdf92d9" kindref="member">cJSON_String</ref>:<sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1a622cd4ca4e8c45cb0641b96847aaef27" kindref="member">print_string</ref>(item,0);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1a57cffa126740a8efcdcb7bcef80e8897" kindref="member">cJSON_Array</ref>:<sp/><sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" kindref="member">print_array</ref>(item,depth,fmt,0);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8h_1a22c6e13481c090629afbd77b7cebd24c" kindref="member">cJSON_Object</ref>:<sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" kindref="member">print_object</ref>(item,depth,fmt,0);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Build<sp/>an<sp/>array<sp/>from<sp/>input<sp/>text.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="c_j_s_o_n_8c_1a7729444034bb1c16924478e4806023af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1a7729444034bb1c16924478e4806023af" kindref="member">parse_array</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*child;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value!=</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>{<ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>=<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>an<sp/>array!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1a57cffa126740a8efcdcb7bcef80e8897" kindref="member">cJSON_Array</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>value=<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(value+1);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value==</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value+1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>empty<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>=child=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>memory<sp/>fail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>value=<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(<ref refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" kindref="member">parse_value</ref>(child,<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(value)));<sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>any<sp/>spacing,<sp/>get<sp/>the<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*value==</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*new_item;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(new_item=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>()))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>memory<sp/>fail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=new_item;new_item-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=child;child=new_item;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value=<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(<ref refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" kindref="member">parse_value</ref>(child,<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(value+1)));</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>memory<sp/>fail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value==</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value+1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>=<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>malformed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Render<sp/>an<sp/>array<sp/>to<sp/>text<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1aede2cae9f5360220a287376ba1620777" kindref="member">print_array</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmt,<ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>*p)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**entries;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out=0,*ptr,*ret;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len=5;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*child=item-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numentries=0,i=0,fail=0;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tmplen=0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>How<sp/>many<sp/>entries<sp/>in<sp/>the<sp/>array?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(child)<sp/>numentries++,child=child-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Explicitly<sp/>handle<sp/>numentries==0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!numentries)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/><sp/>out=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,3);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>out=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(3);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(out)<sp/>strcpy(out,</highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compose<sp/>the<sp/>output<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i=p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,1);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>*ptr=</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/>p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>++;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child=item-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(child<sp/>&amp;&amp;<sp/>!fail)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" kindref="member">print_value</ref>(child,depth+1,fmt,p);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>=<ref refid="c_j_s_o_n_8c_1a5d29c7d0b4eb532b15d6dddfc65e699a" kindref="member">update</ref>(p);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child-&gt;next)<sp/>{len=fmt?2:1;ptr=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,len+1);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;*ptr++=</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fmt)*ptr++=</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;*ptr=0;p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>+=len;}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child=child-&gt;next;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,2);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">;*ptr=0;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out=(p-&gt;<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)+i;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>an<sp/>array<sp/>to<sp/>hold<sp/>the<sp/>values<sp/>for<sp/>each<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(numentries*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entries)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(entries,0,numentries*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Retrieve<sp/>all<sp/>the<sp/>results:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child=item-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(child<sp/>&amp;&amp;<sp/>!fail)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=<ref refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" kindref="member">print_value</ref>(child,depth+1,fmt,0);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries[i++]=ret;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret)<sp/>len+=strlen(ret)+2+(fmt?1:0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fail=1;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child=child-&gt;next;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>didn&apos;t<sp/>fail,<sp/>try<sp/>to<sp/>malloc<sp/>the<sp/>output<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fail)<sp/><sp/>out=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(len);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>that<sp/>fails,<sp/>we<sp/>fail.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/>fail=1;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>failure.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fail)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;numentries;i++)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entries[i])<sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(entries[i]);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(entries);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compose<sp/>the<sp/>output<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out=</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=out+1;*ptr=0;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;numentries;i++)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmplen=strlen(entries[i]);memcpy(ptr,entries[i],tmplen);ptr+=tmplen;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i!=numentries-1)<sp/>{*ptr++=</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fmt)*ptr++=</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;*ptr=0;}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(entries[i]);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(entries);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr++=</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">;*ptr++=0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;<sp/></highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Build<sp/>an<sp/>object<sp/>from<sp/>the<sp/>text.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="c_j_s_o_n_8c_1aae5de4fb5317314153a9791567380768" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1aae5de4fb5317314153a9791567380768" kindref="member">parse_object</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*child;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value!=</highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>{<ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>=<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>an<sp/>object!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1a22c6e13481c090629afbd77b7cebd24c" kindref="member">cJSON_Object</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>value=<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(value+1);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value==</highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value+1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>empty<sp/>array.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>item-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>=child=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>value=<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(<ref refid="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" kindref="member">parse_string</ref>(child,<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(value)));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>child-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>=child-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>;child-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>=0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value!=</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>{<ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>=<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fail!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>value=<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(<ref refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" kindref="member">parse_value</ref>(child,<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(value+1)));<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>any<sp/>spacing,<sp/>get<sp/>the<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*value==</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*new_item;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(new_item=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>()))<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>memory<sp/>fail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=new_item;new_item-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=child;child=new_item;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value=<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(<ref refid="c_j_s_o_n_8c_1ae928a03f612fd8ab2e9152dee6a1035d" kindref="member">parse_string</ref>(child,<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(value+1)));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>=child-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>;child-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>=0;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value!=</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>{<ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>=<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fail!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value=<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(<ref refid="c_j_s_o_n_8c_1aa9d7542467e921558b62ea2dbd4b9c60" kindref="member">parse_value</ref>(child,<ref refid="c_j_s_o_n_8c_1ad1c991ebe6cb88144a8e06e6443c36c9" kindref="member">skip</ref>(value+1)));<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>any<sp/>spacing,<sp/>get<sp/>the<sp/>value.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value==</highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value+1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a00793ba086b417bb3d75ab79af8c83fb" kindref="member">ep</ref>=<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">/*<sp/>malformed.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Render<sp/>an<sp/>object<sp/>to<sp/>text.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="c_j_s_o_n_8c_1ac95875766ce44280fa49e9ab35b9ce32" kindref="member">print_object</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fmt,<ref refid="structprintbuffer" kindref="compound">printbuffer</ref><sp/>*p)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**entries=0,**names=0;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out=0,*ptr,*ret,*str;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len=7,i=0,j;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*child=item-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numentries=0,fail=0;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tmplen=0;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>entries.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(child)<sp/>numentries++,child=child-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Explicitly<sp/>handle<sp/>empty<sp/>object<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!numentries)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>out=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,fmt?depth+4:3);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>out=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(fmt?depth+4:3);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=out;*ptr++=</highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)<sp/>{*ptr++=</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;depth-1;i++)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr++=</highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">;*ptr++=0;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compose<sp/>the<sp/>output:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i=p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len=fmt?2:1;<sp/><sp/><sp/><sp/>ptr=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,len+1);<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr++=</highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/>*ptr=0;<sp/>p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>+=len;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child=item-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;depth++;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(child)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,depth);<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;j&lt;depth;j++)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>+=depth;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1ab39938c41d77b354eb5674dc614b4665" kindref="member">print_string_ptr</ref>(child-&gt;string,p);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>=<ref refid="c_j_s_o_n_8c_1a5d29c7d0b4eb532b15d6dddfc65e699a" kindref="member">update</ref>(p);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len=fmt?2:1;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,len);<sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr++=</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>+=len;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" kindref="member">print_value</ref>(child,depth,fmt,p);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>=<ref refid="c_j_s_o_n_8c_1a5d29c7d0b4eb532b15d6dddfc65e699a" kindref="member">update</ref>(p);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len=(fmt?1:0)+(child-&gt;next?1:0);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,len+1);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child-&gt;next)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;*ptr=0;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structprintbuffer_1aed7ea92f45bd273dde380a45ddced592" kindref="member">offset</ref>+=len;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child=child-&gt;next;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr=<ref refid="c_j_s_o_n_8c_1adcc58c744c83afbfecf917bb5be603ff" kindref="member">ensure</ref>(p,fmt?(depth+1):2);<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;depth-1;i++)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr++=</highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">;*ptr=0;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out=(p-&gt;<ref refid="structprintbuffer_1aff2566f4c366b48d73479bef43ee4d2e" kindref="member">buffer</ref>)+i;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>space<sp/>for<sp/>the<sp/>names<sp/>and<sp/>the<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(numentries*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entries)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(numentries*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!names)<sp/>{<ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(entries);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(entries,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)*numentries);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(names,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)*numentries);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Collect<sp/>all<sp/>the<sp/>results<sp/>into<sp/>our<sp/>arrays:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child=item-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;depth++;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)<sp/>len+=depth;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(child)</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names[i]=str=<ref refid="c_j_s_o_n_8c_1ab39938c41d77b354eb5674dc614b4665" kindref="member">print_string_ptr</ref>(child-&gt;string,0);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries[i++]=ret=<ref refid="c_j_s_o_n_8c_1aad22e0fc125dba829a01e575754b0602" kindref="member">print_value</ref>(child,depth,fmt,0);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>&amp;&amp;<sp/>ret)<sp/>len+=strlen(ret)+strlen(str)+2+(fmt?2+depth:0);<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fail=1;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child=child-&gt;next;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Try<sp/>to<sp/>allocate<sp/>the<sp/>output<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fail)<sp/><sp/>out=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="c_j_s_o_n_8c_1a6a44d5f7b45076951879e341ef363689" kindref="member">cJSON_malloc</ref>(len);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/>fail=1;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Handle<sp/>failure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fail)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;numentries;i++)<sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(names[i])<sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(names[i]);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entries[i])<sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(entries[i]);}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(names);<ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(entries);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Compose<sp/>the<sp/>output:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out=</highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">;ptr=out+1;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)*ptr++=</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;*ptr=0;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;numentries;i++)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;j&lt;depth;j++)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmplen=strlen(names[i]);memcpy(ptr,names[i],tmplen);ptr+=tmplen;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr++=</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(ptr,entries[i]);ptr+=strlen(entries[i]);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i!=numentries-1)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;*ptr=0;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(names[i]);<ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(entries[i]);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(names);<ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(entries);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fmt)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;i&lt;depth-1;i++)<sp/>*ptr++=</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr++=</highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">;*ptr++=0;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;<sp/></highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>Array<sp/>size/item<sp/>/<sp/>object<sp/>item.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="c_j_s_o_n_8c_1adb5c049d3211599c90cd5a3d5e68d854" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1adb5c049d3211599c90cd5a3d5e68d854" kindref="member">cJSON_GetArraySize</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*array)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*c=array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(c)i++,c=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;}</highlight></codeline>
<codeline lineno="662" refid="c_j_s_o_n_8c_1ac48335f22f743aff913991d809e0d620" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1ac48335f22f743aff913991d809e0d620" kindref="member">cJSON_GetArrayItem</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*array,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>item)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*c=array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;<sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>&amp;&amp;<sp/>item&gt;0)<sp/>item--,c=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;}</highlight></codeline>
<codeline lineno="663" refid="c_j_s_o_n_8c_1aba766c9d2c20996e323522cbf2ba46c6" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1aba766c9d2c20996e323522cbf2ba46c6" kindref="member">cJSON_GetObjectItem</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*c=</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>&amp;&amp;<sp/><ref refid="c_j_s_o_n_8c_1ab6066e9a7036815e0c14b658dee3d1f5" kindref="member">cJSON_strcasecmp</ref>(c-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">))<sp/>c=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Utility<sp/>for<sp/>array<sp/>list<sp/>handling.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" kindref="member">suffix_object</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*prev,<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item)<sp/>{prev-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=item;item-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=prev;}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Utility<sp/>for<sp/>handling<sp/>references.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668" refid="c_j_s_o_n_8c_1a840197ebe7308bc68b2a8a108b06b004" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a840197ebe7308bc68b2a8a108b06b004" kindref="member">create_reference</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item)<sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*ref=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ref)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;memcpy(ref,item,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref>));ref-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>=0;ref-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>|=<ref refid="c_j_s_o_n_8h_1ad3d18116aae3bfa46f13bcfd7fd6d4e7" kindref="member">cJSON_IsReference</ref>;ref-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=ref-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=0;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ref;}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Add<sp/>item<sp/>to<sp/>array/object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" kindref="member">cJSON_AddItemToArray</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*array,<sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*c=array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c)<sp/>{array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>=item;}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>&amp;&amp;<sp/>c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>)<sp/>c=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;<sp/><ref refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" kindref="member">suffix_object</ref>(c,item);}}</highlight></codeline>
<codeline lineno="672" refid="c_j_s_o_n_8c_1a096004811663311569e95aa77518959c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a096004811663311569e95aa77518959c" kindref="member">cJSON_AddItemToObject</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item)<sp/><sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>)<sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(item-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>);item-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>=<ref refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" kindref="member">cJSON_strdup</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);<ref refid="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" kindref="member">cJSON_AddItemToArray</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,item);}</highlight></codeline>
<codeline lineno="673" refid="c_j_s_o_n_8c_1af5153e89d76785c5b2ebdd0d8e8f258e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1af5153e89d76785c5b2ebdd0d8e8f258e" kindref="member">cJSON_AddItemToObjectCS</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item)<sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>&amp;<ref refid="c_j_s_o_n_8h_1a491c3484a36f3915cc4710088f55971f" kindref="member">cJSON_StringIsConst</ref>)<sp/>&amp;&amp;<sp/>item-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>)<sp/><ref refid="c_j_s_o_n_8c_1a5b14d3353d354b84d67889ddb4d8bc3c" kindref="member">cJSON_free</ref>(item-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>);item-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>=(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">;item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>|=<ref refid="c_j_s_o_n_8h_1a491c3484a36f3915cc4710088f55971f" kindref="member">cJSON_StringIsConst</ref>;<ref refid="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" kindref="member">cJSON_AddItemToArray</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,item);}</highlight></codeline>
<codeline lineno="674" refid="c_j_s_o_n_8c_1a076941e875d547f20959c66de97beee5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a076941e875d547f20959c66de97beee5" kindref="member">cJSON_AddItemReferenceToArray</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*array,<sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" kindref="member">cJSON_AddItemToArray</ref>(array,<ref refid="c_j_s_o_n_8c_1a840197ebe7308bc68b2a8a108b06b004" kindref="member">create_reference</ref>(item));}</highlight></codeline>
<codeline lineno="675" refid="c_j_s_o_n_8c_1a001634f84d255810784155f4c8e4e288" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a001634f84d255810784155f4c8e4e288" kindref="member">cJSON_AddItemReferenceToObject</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item)<sp/><sp/><sp/><sp/>{<ref refid="c_j_s_o_n_8c_1a096004811663311569e95aa77518959c" kindref="member">cJSON_AddItemToObject</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<ref refid="c_j_s_o_n_8c_1a840197ebe7308bc68b2a8a108b06b004" kindref="member">create_reference</ref>(item));}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677" refid="c_j_s_o_n_8c_1a68b9e0b2d984f1d873fb571425a98b9b" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a68b9e0b2d984f1d873fb571425a98b9b" kindref="member">cJSON_DetachItemFromArray</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*array,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*c=array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>&amp;&amp;<sp/>which&gt;0)<sp/>c=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>,which--;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>)<sp/>c-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>)<sp/>c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=c-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c==array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>)<sp/>array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;c-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=0;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;}</highlight></codeline>
<codeline lineno="679" refid="c_j_s_o_n_8c_1a2b08ee3d172cb94e9abea1e4031a366f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a2b08ee3d172cb94e9abea1e4031a366f" kindref="member">cJSON_DeleteItemFromArray</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*array,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" kindref="member">cJSON_Delete</ref>(<ref refid="c_j_s_o_n_8c_1a68b9e0b2d984f1d873fb571425a98b9b" kindref="member">cJSON_DetachItemFromArray</ref>(array,which));}</highlight></codeline>
<codeline lineno="680" refid="c_j_s_o_n_8c_1a7010822d267256f274e0adf22be2b202" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a7010822d267256f274e0adf22be2b202" kindref="member">cJSON_DetachItemFromObject</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>{</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*c=</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>&amp;&amp;<sp/><ref refid="c_j_s_o_n_8c_1ab6066e9a7036815e0c14b658dee3d1f5" kindref="member">cJSON_strcasecmp</ref>(c-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">))<sp/>i++,c=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a68b9e0b2d984f1d873fb571425a98b9b" kindref="member">cJSON_DetachItemFromArray</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,i);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="681" refid="c_j_s_o_n_8c_1a148a56617a2a97921d9b9dfbe5dc85bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a148a56617a2a97921d9b9dfbe5dc85bf" kindref="member">cJSON_DeleteItemFromObject</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>{<ref refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" kindref="member">cJSON_Delete</ref>(<ref refid="c_j_s_o_n_8c_1a7010822d267256f274e0adf22be2b202" kindref="member">cJSON_DetachItemFromObject</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">));}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Replace<sp/>array/object<sp/>items<sp/>with<sp/>new<sp/>ones.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684" refid="c_j_s_o_n_8c_1a26521dbb099b8247457808972930547b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a26521dbb099b8247457808972930547b" kindref="member">cJSON_InsertItemInArray</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*array,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which,<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*newitem)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*c=array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>&amp;&amp;<sp/>which&gt;0)<sp/>c=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>,which--;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c)<sp/>{<ref refid="c_j_s_o_n_8c_1a164dcefd36af8654942116c444bd0b6a" kindref="member">cJSON_AddItemToArray</ref>(array,newitem);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>newitem-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=c;newitem-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=c-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>;c-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=newitem;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c==array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>)<sp/>array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>=newitem;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>newitem-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=newitem;}</highlight></codeline>
<codeline lineno="686" refid="c_j_s_o_n_8c_1a567d357a7a0c3c0c9c896d98aae3dcec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a567d357a7a0c3c0c9c896d98aae3dcec" kindref="member">cJSON_ReplaceItemInArray</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*array,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>which,<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*newitem)<sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*c=array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>&amp;&amp;<sp/>which&gt;0)<sp/>c=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>,which--;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>newitem-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;newitem-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=c-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newitem-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>)<sp/>newitem-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=newitem;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c==array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>)<sp/>array-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>=newitem;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>newitem-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=newitem;c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=c-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=0;<ref refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" kindref="member">cJSON_Delete</ref>(c);}</highlight></codeline>
<codeline lineno="689" refid="c_j_s_o_n_8c_1a31202ffebc9e4f86c3db12f9793b6800" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="c_j_s_o_n_8c_1a31202ffebc9e4f86c3db12f9793b6800" kindref="member">cJSON_ReplaceItemInObject</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*newitem){</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*c=</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(c<sp/>&amp;&amp;<sp/><ref refid="c_j_s_o_n_8c_1ab6066e9a7036815e0c14b658dee3d1f5" kindref="member">cJSON_strcasecmp</ref>(c-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>,</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">))i++,c=c-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c){newitem-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>=<ref refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" kindref="member">cJSON_strdup</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);<ref refid="c_j_s_o_n_8c_1a567d357a7a0c3c0c9c896d98aae3dcec" kindref="member">cJSON_ReplaceItemInArray</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,i,newitem);}}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Create<sp/>basic<sp/>types:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="c_j_s_o_n_8c_1a83ea2a0b33071a1120b9052170a2bc13" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a83ea2a0b33071a1120b9052170a2bc13" kindref="member">cJSON_CreateNull</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item)item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1aeadaba63ddb68aaa518528595d503dcd" kindref="member">cJSON_NULL</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;}</highlight></codeline>
<codeline lineno="693" refid="c_j_s_o_n_8c_1a07b3d4616c5a682aa558180713ce858a" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a07b3d4616c5a682aa558180713ce858a" kindref="member">cJSON_CreateTrue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item)item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1aad4e442b8095939decddfb67d87d9324" kindref="member">cJSON_True</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;}</highlight></codeline>
<codeline lineno="694" refid="c_j_s_o_n_8c_1a33dcdd4d4f5da12bc91372376908c42b" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a33dcdd4d4f5da12bc91372376908c42b" kindref="member">cJSON_CreateFalse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item)item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1a2d240682316354b5748f909ad220184b" kindref="member">cJSON_False</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;}</highlight></codeline>
<codeline lineno="695" refid="c_j_s_o_n_8c_1a06b0c43427994498d770e65b0089f8a8" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a06b0c43427994498d770e65b0089f8a8" kindref="member">cJSON_CreateBool</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item)item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=b?<ref refid="c_j_s_o_n_8h_1aad4e442b8095939decddfb67d87d9324" kindref="member">cJSON_True</ref>:<ref refid="c_j_s_o_n_8h_1a2d240682316354b5748f909ad220184b" kindref="member">cJSON_False</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;}</highlight></codeline>
<codeline lineno="696" refid="c_j_s_o_n_8c_1a220d076d7d3a309049d6889be6d4904a" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a220d076d7d3a309049d6889be6d4904a" kindref="member">cJSON_CreateNumber</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item){item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1a15e77e2f6457dc9b19c10ddb032af971" kindref="member">cJSON_Number</ref>;item-&gt;<ref refid="structc_j_s_o_n_1a2983295369d8ff0183638d8550a22263" kindref="member">valuedouble</ref>=num;item-&gt;<ref refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" kindref="member">valueint</ref>=(int)num;}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;}</highlight></codeline>
<codeline lineno="697" refid="c_j_s_o_n_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" kindref="member">cJSON_CreateString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item){item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1aa2cb4765308e2bbdf01988b2acdf92d9" kindref="member">cJSON_String</ref>;item-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>=<ref refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" kindref="member">cJSON_strdup</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;}</highlight></codeline>
<codeline lineno="698" refid="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" kindref="member">cJSON_CreateArray</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item)item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1a57cffa126740a8efcdcb7bcef80e8897" kindref="member">cJSON_Array</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;}</highlight></codeline>
<codeline lineno="699" refid="c_j_s_o_n_8c_1a9c5f44afdd781b16dead90042fe74085" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a9c5f44afdd781b16dead90042fe74085" kindref="member">cJSON_CreateObject</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item)item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=<ref refid="c_j_s_o_n_8h_1a22c6e13481c090629afbd77b7cebd24c" kindref="member">cJSON_Object</ref>;</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>item;}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Create<sp/>Arrays:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702" refid="c_j_s_o_n_8c_1a12576edcea9baca64be6fe7a6ae8d4fa" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a12576edcea9baca64be6fe7a6ae8d4fa" kindref="member">cJSON_CreateIntArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*numbers,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*n=0,*p=0,*a=<ref refid="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" kindref="member">cJSON_CreateArray</ref>();</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;a<sp/>&amp;&amp;<sp/>i&lt;count;i++){n=<ref refid="c_j_s_o_n_8c_1a220d076d7d3a309049d6889be6d4904a" kindref="member">cJSON_CreateNumber</ref>(numbers[i]);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!i)a-&gt;child=n;</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" kindref="member">suffix_object</ref>(p,n);p=n;}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;}</highlight></codeline>
<codeline lineno="703" refid="c_j_s_o_n_8c_1a328fe12c04efcf2073b218bbf35ac6ec" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a328fe12c04efcf2073b218bbf35ac6ec" kindref="member">cJSON_CreateFloatArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*numbers,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/><sp/><sp/>{</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*n=0,*p=0,*a=<ref refid="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" kindref="member">cJSON_CreateArray</ref>();</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;a<sp/>&amp;&amp;<sp/>i&lt;count;i++){n=<ref refid="c_j_s_o_n_8c_1a220d076d7d3a309049d6889be6d4904a" kindref="member">cJSON_CreateNumber</ref>(numbers[i]);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!i)a-&gt;child=n;</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" kindref="member">suffix_object</ref>(p,n);p=n;}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;}</highlight></codeline>
<codeline lineno="704" refid="c_j_s_o_n_8c_1a04cb41ee475a68bd2ee63e92d8534049" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a04cb41ee475a68bd2ee63e92d8534049" kindref="member">cJSON_CreateDoubleArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*numbers,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/>{</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*n=0,*p=0,*a=<ref refid="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" kindref="member">cJSON_CreateArray</ref>();</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;a<sp/>&amp;&amp;<sp/>i&lt;count;i++){n=<ref refid="c_j_s_o_n_8c_1a220d076d7d3a309049d6889be6d4904a" kindref="member">cJSON_CreateNumber</ref>(numbers[i]);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!i)a-&gt;child=n;</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" kindref="member">suffix_object</ref>(p,n);p=n;}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;}</highlight></codeline>
<codeline lineno="705" refid="c_j_s_o_n_8c_1abeecb344ac9a0318cd42ac32b6e22289" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1abeecb344ac9a0318cd42ac32b6e22289" kindref="member">cJSON_CreateStringArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**strings,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count)<sp/><sp/>{</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*n=0,*p=0,*a=<ref refid="c_j_s_o_n_8c_1a29e5808c66c1cf1f3edbf117babe07b3" kindref="member">cJSON_CreateArray</ref>();</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;a<sp/>&amp;&amp;<sp/>i&lt;count;i++){n=<ref refid="c_j_s_o_n_8c_1a5987bbc1c94d9f602d719a4015ff0e6c" kindref="member">cJSON_CreateString</ref>(strings[i]);</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!i)a-&gt;child=n;</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1a5d61bcc0045ace88c2ae04f0928eeace" kindref="member">suffix_object</ref>(p,n);p=n;}</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Duplication<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="c_j_s_o_n_8c_1a9acb1410be711f33d7c6d39f916b2d35" refkind="member"><highlight class="normal"><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*<ref refid="c_j_s_o_n_8c_1a9acb1410be711f33d7c6d39f916b2d35" kindref="member">cJSON_Duplicate</ref>(<ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*item,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recurse)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structc_j_s_o_n" kindref="compound">cJSON</ref><sp/>*newitem,*cptr,*nptr=0,*newchild;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bail<sp/>on<sp/>bad<sp/>ptr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>new<sp/>item<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>newitem=<ref refid="c_j_s_o_n_8c_1a39a97485cfb9d19bad65a0522faea19f" kindref="member">cJSON_New_Item</ref>();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newitem)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>over<sp/>all<sp/>vars<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>newitem-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>=item-&gt;<ref refid="structc_j_s_o_n_1ac765329451135abec74c45e1897abf26" kindref="member">type</ref>&amp;(~<ref refid="c_j_s_o_n_8h_1ad3d18116aae3bfa46f13bcfd7fd6d4e7" kindref="member">cJSON_IsReference</ref>),newitem-&gt;<ref refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" kindref="member">valueint</ref>=item-&gt;<ref refid="structc_j_s_o_n_1af69506d34291edd0be9fa15660ac01ec" kindref="member">valueint</ref>,newitem-&gt;<ref refid="structc_j_s_o_n_1a2983295369d8ff0183638d8550a22263" kindref="member">valuedouble</ref>=item-&gt;<ref refid="structc_j_s_o_n_1a2983295369d8ff0183638d8550a22263" kindref="member">valuedouble</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(item-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>)<sp/><sp/>{newitem-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>=<ref refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" kindref="member">cJSON_strdup</ref>(item-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>);<sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newitem-&gt;<ref refid="structc_j_s_o_n_1a4d2b95f0dc1f37a46452f5ddd6963455" kindref="member">valuestring</ref>)<sp/><sp/>{<ref refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" kindref="member">cJSON_Delete</ref>(newitem);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{newitem-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>=<ref refid="c_j_s_o_n_8c_1a52edadd0bf81e05a1fb04200388475f9" kindref="member">cJSON_strdup</ref>(item-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newitem-&gt;<ref refid="structc_j_s_o_n_1aed1cfb225a5fb77461e7972691e68a72" kindref="member">string</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<ref refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" kindref="member">cJSON_Delete</ref>(newitem);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>non-recursive,<sp/>then<sp/>we&apos;re<sp/>done!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!recurse)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newitem;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Walk<sp/>the<sp/>-&gt;next<sp/>chain<sp/>for<sp/>the<sp/>child.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>cptr=item-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cptr)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newchild=<ref refid="c_j_s_o_n_8c_1a9acb1410be711f33d7c6d39f916b2d35" kindref="member">cJSON_Duplicate</ref>(cptr,1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Duplicate<sp/>(with<sp/>recurse)<sp/>each<sp/>item<sp/>in<sp/>the<sp/>-&gt;next<sp/>chain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newchild)<sp/>{<ref refid="c_j_s_o_n_8c_1ab18060251de70a2b55a18dec694f8f8a" kindref="member">cJSON_Delete</ref>(newitem);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nptr)<sp/><sp/><sp/>{nptr-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>=newchild,newchild-&gt;<ref refid="structc_j_s_o_n_1ad8252b317903156cce35de2ea43e34dc" kindref="member">prev</ref>=nptr;nptr=newchild;}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>newitem-&gt;child<sp/>already<sp/>set,<sp/>then<sp/>crosswire<sp/>-&gt;prev<sp/>and<sp/>-&gt;next<sp/>and<sp/>move<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{newitem-&gt;<ref refid="structc_j_s_o_n_1af3da6753e4916f328721d324d62af50d" kindref="member">child</ref>=newchild;nptr=newchild;}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>newitem-&gt;child<sp/>and<sp/>move<sp/>to<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cptr=cptr-&gt;<ref refid="structc_j_s_o_n_1a91a95ab3a28ac01716663d0bdd7215f9" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newitem;</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735" refid="c_j_s_o_n_8c_1afd416be779f90b6369a189437d3bcc05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c_j_s_o_n_8c_1afd416be779f90b6369a189437d3bcc05" kindref="member">cJSON_Minify</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*into=json;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*json)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*json==</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>json++;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*json==</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)<sp/>json++;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Whitespace<sp/>characters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*json==</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)<sp/>json++;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*json==</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>json++;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*json==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>json[1]==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*json<sp/>&amp;&amp;<sp/>*json!=</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>json++;<sp/><sp/></highlight><highlight class="comment">/*<sp/>double-slash<sp/>comments,<sp/>to<sp/>end<sp/>of<sp/>line.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*json==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>json[1]==</highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">)<sp/>{</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*json<sp/>&amp;&amp;<sp/>!(*json==</highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>json[1]==</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">))<sp/>json++;json+=2;}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>multiline<sp/>comments.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*json==</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">){*into++=*json++;</highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*json<sp/>&amp;&amp;<sp/>*json!=</highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*json==</highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">)<sp/>*into++=*json++;*into++=*json++;}*into++=*json++;}<sp/></highlight><highlight class="comment">/*<sp/>string<sp/>literals,<sp/>which<sp/>are<sp/>\&quot;<sp/>sensitive.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>*into++=*json++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>other<sp/>characters.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>*into=0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>null-terminate.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/cJSON.c"/>
  </compounddef>
</doxygen>
