<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___security_8h" kind="file">
    <compoundname>Serval_Security.h</compoundname>
    <includes refid="_serval___defines_8h" local="no">Serval_Defines.h</includes>
    <includes refid="_serval___msg_8h" local="no">Serval_Msg.h</includes>
    <includes refid="_serval___basics_8h" local="no">Serval_Basics.h</includes>
    <includes refid="_serval___msg_sending_ctx_8h" local="no">Serval_MsgSendingCtx.h</includes>
    <includedby refid="_mbed_t_l_s___flags_8h" local="no">SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Flags.h</includedby>
    <includedby refid="_mbed_t_l_s___tls_8h" local="no">SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Tls.h</includedby>
    <includedby refid="_serval___udp_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Udp.h</includedby>
    <includedby refid="_serval___coap_client_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h</includedby>
    <includedby refid="_serval___coap_server_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h</includedby>
    <includedby refid="_serval___lwm2m_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h</includedby>
    <includedby refid="_serval___rest_client_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestClient.h</includedby>
    <includedby refid="_serval___rest_server_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h</includedby>
    <incdepgraph>
      <node id="31433">
        <label>stdbool.h</label>
      </node>
      <node id="31426">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="31427" relation="include">
        </childnode>
        <childnode refid="31467" relation="include">
        </childnode>
      </node>
      <node id="31437">
        <label>stdarg.h</label>
      </node>
      <node id="31464">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="31455" relation="include">
        </childnode>
      </node>
      <node id="31449">
        <label>list.h</label>
      </node>
      <node id="31451">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="31452" relation="include">
        </childnode>
        <childnode refid="31431" relation="include">
        </childnode>
        <childnode refid="31430" relation="include">
        </childnode>
      </node>
      <node id="31468">
        <label>Serval_StringDescr.h</label>
        <link refid="_serval___string_descr_8h"/>
        <childnode refid="31426" relation="include">
        </childnode>
      </node>
      <node id="31429">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="31430" relation="include">
        </childnode>
      </node>
      <node id="31432">
        <label>stdint.h</label>
      </node>
      <node id="31430">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="31431" relation="include">
        </childnode>
      </node>
      <node id="31435">
        <label>stdlib.h</label>
      </node>
      <node id="31467">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="31475">
        <label>Serval_Policy.h</label>
        <link refid="_serval___policy_8h"/>
      </node>
      <node id="31443">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="31446">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="31447" relation="include">
        </childnode>
      </node>
      <node id="31454">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="31456">
        <label>user.h</label>
      </node>
      <node id="31450">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="31430" relation="include">
        </childnode>
        <childnode refid="31451" relation="include">
        </childnode>
        <childnode refid="31454" relation="include">
        </childnode>
      </node>
      <node id="31457">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="31455" relation="include">
        </childnode>
      </node>
      <node id="31471">
        <label>Serval_Callable.h</label>
        <link refid="_serval___callable_8h"/>
        <childnode refid="31426" relation="include">
        </childnode>
        <childnode refid="31472" relation="include">
        </childnode>
      </node>
      <node id="31423">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h</label>
        <link refid="Serval_Security.h"/>
        <childnode refid="31424" relation="include">
        </childnode>
        <childnode refid="31425" relation="include">
        </childnode>
        <childnode refid="31427" relation="include">
        </childnode>
        <childnode refid="31477" relation="include">
        </childnode>
      </node>
      <node id="31477">
        <label>Serval_MsgSendingCtx.h</label>
        <link refid="_serval___msg_sending_ctx_8h"/>
        <childnode refid="31475" relation="include">
        </childnode>
      </node>
      <node id="31441">
        <label>stddef.h</label>
      </node>
      <node id="31459">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="31455" relation="include">
        </childnode>
      </node>
      <node id="31439">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="31440" relation="include">
        </childnode>
        <childnode refid="31442" relation="include">
        </childnode>
        <childnode refid="31446" relation="include">
        </childnode>
        <childnode refid="31448" relation="include">
        </childnode>
      </node>
      <node id="31428">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="31429" relation="include">
        </childnode>
        <childnode refid="31431" relation="include">
        </childnode>
        <childnode refid="31436" relation="include">
        </childnode>
        <childnode refid="31437" relation="include">
        </childnode>
        <childnode refid="31438" relation="include">
        </childnode>
        <childnode refid="31435" relation="include">
        </childnode>
        <childnode refid="31426" relation="include">
        </childnode>
        <childnode refid="31439" relation="include">
        </childnode>
        <childnode refid="31450" relation="include">
        </childnode>
        <childnode refid="31455" relation="include">
        </childnode>
      </node>
      <node id="31436">
        <label>limits.h</label>
      </node>
      <node id="31425">
        <label>Serval_Msg.h</label>
        <link refid="_serval___msg_8h"/>
        <childnode refid="31424" relation="include">
        </childnode>
        <childnode refid="31426" relation="include">
        </childnode>
        <childnode refid="31468" relation="include">
        </childnode>
        <childnode refid="31469" relation="include">
        </childnode>
        <childnode refid="31470" relation="include">
        </childnode>
        <childnode refid="31471" relation="include">
        </childnode>
        <childnode refid="31473" relation="include">
        </childnode>
        <childnode refid="31475" relation="include">
        </childnode>
        <childnode refid="31476" relation="include">
        </childnode>
      </node>
      <node id="31445">
        <label>portable.h</label>
      </node>
      <node id="31453">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="31434">
        <label>string.h</label>
      </node>
      <node id="31452">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="31453" relation="include">
        </childnode>
        <childnode refid="31430" relation="include">
        </childnode>
      </node>
      <node id="31472">
        <label>Serval_StructCtx.h</label>
        <link refid="_serval___struct_ctx_8h"/>
        <childnode refid="31441" relation="include">
        </childnode>
      </node>
      <node id="31431">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="31432" relation="include">
        </childnode>
        <childnode refid="31433" relation="include">
        </childnode>
        <childnode refid="31434" relation="include">
        </childnode>
        <childnode refid="31435" relation="include">
        </childnode>
      </node>
      <node id="31476">
        <label>Serval_Msg_Obsolete.h</label>
        <link refid="_serval___msg___obsolete_8h"/>
        <childnode refid="31426" relation="include">
        </childnode>
        <childnode refid="31475" relation="include">
        </childnode>
        <childnode refid="31425" relation="include">
        </childnode>
      </node>
      <node id="31473">
        <label>Serval_Ip.h</label>
        <link refid="_serval___ip_8h"/>
        <childnode refid="31474" relation="include">
        </childnode>
        <childnode refid="31426" relation="include">
        </childnode>
      </node>
      <node id="31444">
        <label>projdefs.h</label>
      </node>
      <node id="31466">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="31474">
        <label>PIp.h</label>
        <link refid="_p_ip_8h"/>
        <childnode refid="31430" relation="include">
        </childnode>
      </node>
      <node id="31465">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="31455" relation="include">
        </childnode>
      </node>
      <node id="31470">
        <label>Serval_Filesystem.h</label>
        <link refid="_serval___filesystem_8h"/>
        <childnode refid="31426" relation="include">
        </childnode>
      </node>
      <node id="31424">
        <label>Serval_Defines.h</label>
        <link refid="_serval___defines_8h"/>
      </node>
      <node id="31461">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="31455" relation="include">
        </childnode>
      </node>
      <node id="31447">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="31462">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="31455" relation="include">
        </childnode>
      </node>
      <node id="31469">
        <label>Serval_XmlParser.h</label>
        <link refid="_serval___xml_parser_8h"/>
        <childnode refid="31468" relation="include">
        </childnode>
      </node>
      <node id="31460">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="31455" relation="include">
        </childnode>
      </node>
      <node id="31448">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="31449" relation="include">
        </childnode>
      </node>
      <node id="31463">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="31455" relation="include">
        </childnode>
      </node>
      <node id="31442">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="31432" relation="include">
        </childnode>
        <childnode refid="31429" relation="include">
        </childnode>
        <childnode refid="31443" relation="include">
        </childnode>
      </node>
      <node id="31427">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="31428" relation="include">
        </childnode>
      </node>
      <node id="31440">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="31441" relation="include">
        </childnode>
        <childnode refid="31432" relation="include">
        </childnode>
        <childnode refid="31442" relation="include">
        </childnode>
        <childnode refid="31444" relation="include">
        </childnode>
        <childnode refid="31445" relation="include">
        </childnode>
      </node>
      <node id="31438">
        <label>stdio.h</label>
      </node>
      <node id="31458">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="31455" relation="include">
        </childnode>
      </node>
      <node id="31455">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="31456" relation="include">
        </childnode>
        <childnode refid="31457" relation="include">
        </childnode>
        <childnode refid="31458" relation="include">
        </childnode>
        <childnode refid="31459" relation="include">
        </childnode>
        <childnode refid="31460" relation="include">
        </childnode>
        <childnode refid="31461" relation="include">
        </childnode>
        <childnode refid="31462" relation="include">
        </childnode>
        <childnode refid="31463" relation="include">
        </childnode>
        <childnode refid="31464" relation="include">
        </childnode>
        <childnode refid="31465" relation="include">
        </childnode>
        <childnode refid="31466" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="31514">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceEnvironment.c</label>
        <link refid="_l_w_m2_m_sensor_device_environment_8c"/>
      </node>
      <node id="31485">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h</label>
        <link refid="_serval___coap_server_8h"/>
        <childnode refid="31486" relation="include">
        </childnode>
      </node>
      <node id="31499">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.c</label>
        <link refid="_l_w_m2_m_objects_8c"/>
      </node>
      <node id="31489">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.h</label>
        <link refid="_l_w_m2_m_objects_8h"/>
        <childnode refid="31488" relation="include">
        </childnode>
        <childnode refid="31490" relation="include">
        </childnode>
        <childnode refid="31491" relation="include">
        </childnode>
        <childnode refid="31492" relation="include">
        </childnode>
        <childnode refid="31493" relation="include">
        </childnode>
        <childnode refid="31494" relation="include">
        </childnode>
        <childnode refid="31495" relation="include">
        </childnode>
        <childnode refid="31496" relation="include">
        </childnode>
        <childnode refid="31497" relation="include">
        </childnode>
        <childnode refid="31498" relation="include">
        </childnode>
        <childnode refid="31499" relation="include">
        </childnode>
        <childnode refid="31500" relation="include">
        </childnode>
        <childnode refid="31501" relation="include">
        </childnode>
        <childnode refid="31502" relation="include">
        </childnode>
      </node>
      <node id="31483">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h</label>
        <link refid="_serval___coap_client_8h"/>
        <childnode refid="31484" relation="include">
        </childnode>
      </node>
      <node id="31490">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.c</label>
        <link refid="_l_w_m2_m_object_alert_notification_8c"/>
      </node>
      <node id="31517">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.h</label>
        <link refid="_l_w_m2_m_object_alert_notification_8h"/>
        <childnode refid="31489" relation="include">
        </childnode>
        <childnode refid="31490" relation="include">
        </childnode>
      </node>
      <node id="31493">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.c</label>
        <link refid="_l_w_m2_m_object_device_8c"/>
      </node>
      <node id="31512">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceIlluminance.c</label>
        <link refid="_l_w_m2_m_sensor_device_illuminance_8c"/>
      </node>
      <node id="31504">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.h</label>
        <link refid="_l_w_m2_m_object_device_8h"/>
        <childnode refid="31489" relation="include">
        </childnode>
        <childnode refid="31493" relation="include">
        </childnode>
      </node>
      <node id="31492">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.c</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8c"/>
      </node>
      <node id="31505">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.h</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8h"/>
        <childnode refid="31489" relation="include">
        </childnode>
      </node>
      <node id="31519">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestClient.h</label>
        <link refid="_serval___rest_client_8h"/>
      </node>
      <node id="31503">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceAccelerometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_accelerometer_8c"/>
      </node>
      <node id="31479">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Flags.h</label>
        <link refid="_mbed_t_l_s___flags_8h"/>
      </node>
      <node id="31520">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h</label>
        <link refid="_serval___rest_server_8h"/>
      </node>
      <node id="31500">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.c</label>
        <link refid="_l_w_m2_m_object_sensor_device_8c"/>
      </node>
      <node id="31515">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.h</label>
        <link refid="_l_w_m2_m_object_sensor_device_8h"/>
        <childnode refid="31489" relation="include">
        </childnode>
        <childnode refid="31493" relation="include">
        </childnode>
        <childnode refid="31500" relation="include">
        </childnode>
      </node>
      <node id="31482">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Socket.h</label>
        <link refid="_mbed_t_l_s___socket_8h"/>
      </node>
      <node id="31478">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h</label>
        <link refid="Serval_Security.h"/>
        <childnode refid="31479" relation="include">
        </childnode>
        <childnode refid="31480" relation="include">
        </childnode>
        <childnode refid="31481" relation="include">
        </childnode>
        <childnode refid="31483" relation="include">
        </childnode>
        <childnode refid="31485" relation="include">
        </childnode>
        <childnode refid="31486" relation="include">
        </childnode>
        <childnode refid="31519" relation="include">
        </childnode>
        <childnode refid="31520" relation="include">
        </childnode>
      </node>
      <node id="31510">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceMagnetometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_magnetometer_8c"/>
      </node>
      <node id="31501">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectTemperature.c</label>
        <link refid="_l_w_m2_m_object_temperature_8c"/>
      </node>
      <node id="31496">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.c</label>
        <link refid="_l_w_m2_m_object_illuminance_8c"/>
      </node>
      <node id="31511">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.h</label>
        <link refid="_l_w_m2_m_object_illuminance_8h"/>
        <childnode refid="31489" relation="include">
        </childnode>
        <childnode refid="31512" relation="include">
        </childnode>
      </node>
      <node id="31484">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.c</label>
        <link refid="_l_w_m2_m_object_firmware_update_8c"/>
      </node>
      <node id="31497">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.c</label>
        <link refid="_l_w_m2_m_object_light_control_8c"/>
      </node>
      <node id="31506">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.h</label>
        <link refid="_l_w_m2_m_object_firmware_update_8h"/>
        <childnode refid="31489" relation="include">
        </childnode>
        <childnode refid="31484" relation="include">
        </childnode>
      </node>
      <node id="31498">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.c</label>
        <link refid="_l_w_m2_m_object_magnetometer_8c"/>
      </node>
      <node id="31516">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.h</label>
        <link refid="_l_w_m2_m_object_light_control_8h"/>
        <childnode refid="31489" relation="include">
        </childnode>
        <childnode refid="31497" relation="include">
        </childnode>
      </node>
      <node id="31509">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.h</label>
        <link refid="_l_w_m2_m_object_magnetometer_8h"/>
        <childnode refid="31489" relation="include">
        </childnode>
        <childnode refid="31510" relation="include">
        </childnode>
      </node>
      <node id="31486">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h</label>
        <link refid="_serval___lwm2m_8h"/>
        <childnode refid="31487" relation="include">
        </childnode>
        <childnode refid="31489" relation="include">
        </childnode>
        <childnode refid="31504" relation="include">
        </childnode>
        <childnode refid="31505" relation="include">
        </childnode>
        <childnode refid="31506" relation="include">
        </childnode>
        <childnode refid="31507" relation="include">
        </childnode>
        <childnode refid="31509" relation="include">
        </childnode>
        <childnode refid="31511" relation="include">
        </childnode>
        <childnode refid="31513" relation="include">
        </childnode>
        <childnode refid="31515" relation="include">
        </childnode>
        <childnode refid="31516" relation="include">
        </childnode>
        <childnode refid="31517" relation="include">
        </childnode>
        <childnode refid="31518" relation="include">
        </childnode>
        <childnode refid="31488" relation="include">
        </childnode>
        <childnode refid="31490" relation="include">
        </childnode>
        <childnode refid="31497" relation="include">
        </childnode>
        <childnode refid="31499" relation="include">
        </childnode>
        <childnode refid="31500" relation="include">
        </childnode>
        <childnode refid="31508" relation="include">
        </childnode>
        <childnode refid="31512" relation="include">
        </childnode>
      </node>
      <node id="31481">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Udp.h</label>
        <link refid="_serval___udp_8h"/>
        <childnode refid="31482" relation="include">
        </childnode>
        <childnode refid="31480" relation="include">
        </childnode>
      </node>
      <node id="31488">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.c</label>
        <link refid="_l_w_m2_m_object_accelerometer_8c"/>
      </node>
      <node id="31480">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Tls.h</label>
        <link refid="_mbed_t_l_s___tls_8h"/>
      </node>
      <node id="31487">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.h</label>
        <link refid="_l_w_m2_m_object_accelerometer_8h"/>
        <childnode refid="31488" relation="include">
        </childnode>
        <childnode refid="31489" relation="include">
        </childnode>
        <childnode refid="31503" relation="include">
        </childnode>
      </node>
      <node id="31495">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectHumidity.c</label>
        <link refid="_l_w_m2_m_object_humidity_8c"/>
      </node>
      <node id="31508">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceGyroscope.c</label>
        <link refid="_l_w_m2_m_sensor_device_gyroscope_8c"/>
      </node>
      <node id="31491">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.c</label>
        <link refid="_l_w_m2_m_object_barometer_8c"/>
      </node>
      <node id="31513">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.h</label>
        <link refid="_l_w_m2_m_object_barometer_8h"/>
        <childnode refid="31489" relation="include">
        </childnode>
        <childnode refid="31514" relation="include">
        </childnode>
      </node>
      <node id="31502">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.c</label>
        <link refid="_l_w_m2_m_util_8c"/>
      </node>
      <node id="31518">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.h</label>
        <link refid="_l_w_m2_m_util_8h"/>
        <childnode refid="31488" relation="include">
        </childnode>
        <childnode refid="31490" relation="include">
        </childnode>
        <childnode refid="31491" relation="include">
        </childnode>
        <childnode refid="31492" relation="include">
        </childnode>
        <childnode refid="31494" relation="include">
        </childnode>
        <childnode refid="31495" relation="include">
        </childnode>
        <childnode refid="31496" relation="include">
        </childnode>
        <childnode refid="31497" relation="include">
        </childnode>
        <childnode refid="31498" relation="include">
        </childnode>
        <childnode refid="31500" relation="include">
        </childnode>
        <childnode refid="31501" relation="include">
        </childnode>
        <childnode refid="31502" relation="include">
        </childnode>
      </node>
      <node id="31494">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.c</label>
        <link refid="_l_w_m2_m_object_gyroscope_8c"/>
      </node>
      <node id="31507">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.h</label>
        <link refid="_l_w_m2_m_object_gyroscope_8h"/>
        <childnode refid="31489" relation="include">
        </childnode>
        <childnode refid="31508" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_ca_data___s" prot="public">CaData_S</innerclass>
    <innerclass refid="struct_ciphers_data___s" prot="public">CiphersData_S</innerclass>
    <innerclass refid="struct_current_time_data___s" prot="public">CurrentTimeData_S</innerclass>
    <innerclass refid="struct_input_buffer___s" prot="public">InputBuffer_S</innerclass>
    <innerclass refid="struct_output_buffer___s" prot="public">OutputBuffer_S</innerclass>
    <innerclass refid="struct_own_certificate_data___s" prot="public">OwnCertificateData_S</innerclass>
    <innerclass refid="struct_peer_data___s" prot="public">PeerData_S</innerclass>
    <innerclass refid="struct_peer_key_and_id_data___s" prot="public">PeerKeyAndIdData_S</innerclass>
    <innerclass refid="struct_peer_name_data___s" prot="public">PeerNameData_S</innerclass>
    <innerclass refid="union_security_data___u" prot="public">SecurityData_U</innerclass>
    <innerclass refid="struct_security_token___s" prot="public">SecurityToken_S</innerclass>
    <innerclass refid="struct_server_id_hint_data___s" prot="public">ServerIdHintData_S</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_serval___security_8h_1ad0e297c81186cd06ef860eef6f85df0c" prot="public" static="no">
        <name>DTLS_RETRANSMISSION_MONITOR_INTERVAL</name>
        <initializer>1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of retries for a particular flight until giving up. Setting this parameter to 0 disables retries completely. Note that this could lead to poor performance if packet loss is possible on the transmission link and not mitigated through other means. Defines the interval in ms with which the resource monitor checks for DTLS timeouts. Only relevant if SERVAL_DTLS_FLIGHT_MAX_RETRIES &gt; 0 and DTLS is enabled </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="351" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___security_8h_1a275f2e9a774f9733d0ffa3e14bf2128c" prot="public" static="no">
        <name>SERVAL_CYCURTLS_HANDSHAKE_BUFFER_SIZE</name>
        <initializer>250</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="42" column="10" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___security_8h_1af2d6561ea25b3b5446c7199b803e6c11" prot="public" static="no">
        <name>SERVAL_ENABLE_DTLS_PARALLEL_HANDSHAKE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable SERVAL_ENABLE_DTLS_PARALLEL_HANDSHAKE in order to enable parallel processing of multiple Handshakes. If not enabled DTLS handshakes are processed in sequential manner. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="333" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___security_8h_1a828bad332a8969cf39fabf877a3c8f13" prot="public" static="no">
        <name>SERVAL_TEST_DTLS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable SERVAL_TEST_DTLS in order to enable the Datagram Transport Layer Security (dTLS) Testmode this is only temporary used and will be removed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="324" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___security_8h_1a72fc7fb0a9b42282f36fa96dc841f912" prot="public" static="no">
        <name>UNIX_TIMESTAMP_OFFSET</name>
        <initializer>2208988800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="55" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305" prot="public" static="no">
        <name>SecureConnectionState_T</name>
        <enumvalue id="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a7a983ba785455228672da66f414a2db8" prot="public">
          <name>SECURE_STATE_FREE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Connection is free </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a97a8e4dc55969cf1c2b2371ea4fef4c8" prot="public">
          <name>SECURE_STATE_IN_NEGOTIATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Connection is in negotiation handshake </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a2e0d003502d391eb149861b42c6d1167" prot="public">
          <name>SECURE_STATE_WAIT_ESTABLISHED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Connection is established in view of cyassl, but send callback is pending </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a2cc908064bebf70786d06a5e4bd4ea3a" prot="public">
          <name>SECURE_STATE_ESTABLISHED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Connection is established, normal app data can be send/rceived </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a171a3476514aa5f3c744d37d74d0eefc" prot="public">
          <name>SECURE_STATE_HALFCLOSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Connection is in teardown handshake </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305ab683a7522202c01076cbf5d2a1a6eb42" prot="public">
          <name>SECURE_STATE_CLOSING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Connection teardown handshake ready but socket still not closed </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable SERVAL_ENABLE_DTLS_PSK in order to enable pre-shared keys key exchange/creation in DTLS. Enable SERVAL_ENABLE_DTLS_ECC in order to enable elliptic curves key exchange/creation in DTLS. define the timeout in ms for garbage collection of secure connections of DTLS server. it should be a Multiple of RESOURCE_MONITOR_PERIODE of 0, if disabled (server application must clean up by itself) Enum for DTLS Connection States (used i.e. for getSecureConnectionState() ) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="502" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="501" bodyend="528"/>
      </memberdef>
      <memberdef kind="enum" id="_serval___security_8h_1a2232e58d3f6114ab015f68c10a22271a" prot="public" static="no">
        <name>SecurityConnection_e</name>
        <enumvalue id="_serval___security_8h_1a2232e58d3f6114ab015f68c10a22271aac60337f6c63b015a24fe86e2a387e08c" prot="public">
          <name>TLS</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1a2232e58d3f6114ab015f68c10a22271aaf18f534f9e4c860d9fcec5d8c7dd90a8" prot="public">
          <name>DTLS</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="83" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="enum" id="_serval___security_8h_1aeb571afefa3a51fe35ba9f31be38ba5f" prot="public" static="no">
        <name>SecurityDeviceRole_e</name>
        <enumvalue id="_serval___security_8h_1aeb571afefa3a51fe35ba9f31be38ba5fa67c96b24b23bcb408bae7626730a04b7" prot="public">
          <name>SERVER</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1aeb571afefa3a51fe35ba9f31be38ba5fa48e4cb37544c8e69715d45e5a83b2109" prot="public">
          <name>CLIENT</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="76" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="enum" id="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5" prot="public" static="no">
        <name>SecurityTokenType_e</name>
        <enumvalue id="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a802cda28b9346b57d0c6d66dc44723e8" prot="public">
          <name>CURRENT_TIME</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a68aa13f0b16f479a6781693c5cf3b0d0" prot="public">
          <name>CIPHERS</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a676f6c77a479872b019225ac6c20152b" prot="public">
          <name>PSK_SERVER_ID_HINT</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a7f9c1f93ffe2e7bd3d1d96d53578dc86" prot="public">
          <name>PSK_PEER_KEY_AND_ID</name>
          <initializer>= 0x3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5adbc692d08112f88c0f5309cdde8180e2" prot="public">
          <name>CRT_PEER_NAME</name>
          <initializer>= 0x4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a65ad5dc8b84aee6ddbafc68ff8cb0d30" prot="public">
          <name>CRT_CA</name>
          <initializer>= 0x5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a87f02e08deef6ca5b626a4267f98b151" prot="public">
          <name>CRT_OWN_CERTIFICATE</name>
          <initializer>= 0x6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="61" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="60" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_serval___security_8h_1a4746ecaf6b93a1bb51432e2df6ab668d" prot="public" static="no">
        <type>struct <ref refid="struct_ca_data___s" kindref="compound">CaData_S</ref></type>
        <definition>typedef struct CaData_S CaData_T</definition>
        <argsstring></argsstring>
        <name>CaData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1a5c3e89e29d6c07e6932f38fa08cacd7f" prot="public" static="no">
        <type>struct <ref refid="struct_ciphers_data___s" kindref="compound">CiphersData_S</ref></type>
        <definition>typedef struct CiphersData_S CiphersData_T</definition>
        <argsstring></argsstring>
        <name>CiphersData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1a17e44926fc0e992ccb082ac4959c3814" prot="public" static="no">
        <type>struct <ref refid="struct_current_time_data___s" kindref="compound">CurrentTimeData_S</ref></type>
        <definition>typedef struct CurrentTimeData_S CurrentTimeData_T</definition>
        <argsstring></argsstring>
        <name>CurrentTimeData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1a0031bcb9a8b78ff877de7839936e264e" prot="public" static="no">
        <type>struct <ref refid="struct_input_buffer___s" kindref="compound">InputBuffer_S</ref></type>
        <definition>typedef struct InputBuffer_S InputBuffer_T</definition>
        <argsstring></argsstring>
        <name>InputBuffer_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1a519d4f8a93f606c9c24b59fcbbfb75fd" prot="public" static="no">
        <type>struct <ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_S</ref></type>
        <definition>typedef struct OutputBuffer_S OutputBuffer_T</definition>
        <argsstring></argsstring>
        <name>OutputBuffer_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1a4b6bf8651fb5de4b203a3685871f3f00" prot="public" static="no">
        <type>struct <ref refid="struct_own_certificate_data___s" kindref="compound">OwnCertificateData_S</ref></type>
        <definition>typedef struct OwnCertificateData_S OwnCertificateData_T</definition>
        <argsstring></argsstring>
        <name>OwnCertificateData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1a05eb8a8603dee37f5f6b3e87744c5875" prot="public" static="no">
        <type>struct <ref refid="struct_peer_data___s" kindref="compound">PeerData_S</ref></type>
        <definition>typedef struct PeerData_S PeerData_T</definition>
        <argsstring></argsstring>
        <name>PeerData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1ab0ca07f4d085fe081aad0c004a2220f7" prot="public" static="no">
        <type>struct <ref refid="struct_peer_key_and_id_data___s" kindref="compound">PeerKeyAndIdData_S</ref></type>
        <definition>typedef struct PeerKeyAndIdData_S PeerKeyAndIdData_T</definition>
        <argsstring></argsstring>
        <name>PeerKeyAndIdData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1a17733200890f702e57a301ed3e810243" prot="public" static="no">
        <type>struct <ref refid="struct_peer_name_data___s" kindref="compound">PeerNameData_S</ref></type>
        <definition>typedef struct PeerNameData_S PeerNameData_T</definition>
        <argsstring></argsstring>
        <name>PeerNameData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1ad6215bb82b269752700e37e49e7f026c" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* SecurityCallback_T)(SecurityToken_T token, SecurityData_T *tokenData)</definition>
        <argsstring>)(SecurityToken_T token, SecurityData_T *tokenData)</argsstring>
        <name>SecurityCallback_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NOTE: this is a preliminary API implementation. This is subject to changes in future releases</para><para>Callback function used to obtain security information such as pre-shared-keys, certificates, etc.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">token</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of token that is requested. The token.type field determines the data type of tokenData. The other fields in token determine the validity of fields in that data type and provide additional information to the application about the type of connection involved.</para></parameterdescription>
</parameteritem>
</parameterlist>
The mapping of the token.type field to data types of tokenData is CIPHERS -&gt; CiphersData_T, PSK_SERVER_ID_HINT -&gt; ServerIdHintData_T, PSK_PEER_KEY_AND_ID -&gt; PeerKeyAndIdData_T, CRT_PEER_NAME -&gt; PeerNameData_T, CRT_CA -&gt; CaData_T, CRT_OWN_CERTIFICATE -&gt; OwnCertificateData_T,</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>tokenData Token data contains additional data to help identify what to provide to the implementation as well as everything required to actually provide this data. An application implementing the callback is expected to cast token data to a type depending on the type field of the provided token.</para></parameterdescription>
</parameteritem>
</parameterlist>
The data that is provided in output buffers must be in a format that the underlying SSL implementation can understand. No conversion is performed.</para><para><simplesect kind="return"><para>RC_OK if the token was provided RC_DTLS_TOKEN_NOT_PROVIDED if the application does not want to provide the token (e.g. client certificate) RC_DTLS_PEER_REJECTED if the application does not want to communicate with that peer RC_DTLS_UNSUPPORTED_TOKEN if the token type cannot be provided by the application RC_DTLS_INSUFFICIENT_MEMORY if the token does not fit into the allocated space</para></simplesect>
<simplesect kind="since"><para>1.7 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="252" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1afea49e17968ca472a37abf2f60cd3a9d" prot="public" static="no">
        <type>enum <ref refid="_serval___security_8h_1a2232e58d3f6114ab015f68c10a22271a" kindref="member">SecurityConnection_e</ref></type>
        <definition>typedef enum SecurityConnection_e SecurityConnection_t</definition>
        <argsstring></argsstring>
        <name>SecurityConnection_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1a796e391bd6ee7fcbafcc70ab8b9751a3" prot="public" static="no">
        <type>union <ref refid="union_security_data___u" kindref="compound">SecurityData_U</ref></type>
        <definition>typedef union SecurityData_U SecurityData_T</definition>
        <argsstring></argsstring>
        <name>SecurityData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1a659a53a86511ccd92e53bb116cf19a6b" prot="public" static="no">
        <type>enum <ref refid="_serval___security_8h_1aeb571afefa3a51fe35ba9f31be38ba5f" kindref="member">SecurityDeviceRole_e</ref></type>
        <definition>typedef enum SecurityDeviceRole_e SecurityDeviceRole_t</definition>
        <argsstring></argsstring>
        <name>SecurityDeviceRole_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1a5d85606d815307595bafa1193838258b" prot="public" static="no">
        <type>struct <ref refid="struct_security_token___s" kindref="compound">SecurityToken_S</ref></type>
        <definition>typedef struct SecurityToken_S SecurityToken_T</definition>
        <argsstring></argsstring>
        <name>SecurityToken_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1ab1b252720b69c1d18c6c3fc5f9ad34ac" prot="public" static="no">
        <type>enum <ref refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5" kindref="member">SecurityTokenType_e</ref></type>
        <definition>typedef enum SecurityTokenType_e SecurityTokenType_t</definition>
        <argsstring></argsstring>
        <name>SecurityTokenType_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___security_8h_1a33da5a98eead516f067b23029a8122e2" prot="public" static="no">
        <type>struct <ref refid="struct_server_id_hint_data___s" kindref="compound">ServerIdHintData_S</ref></type>
        <definition>typedef struct ServerIdHintData_S ServerIdHintData_T</definition>
        <argsstring></argsstring>
        <name>ServerIdHintData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="179" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___security_8h_1a25766cab3da0d96b88a135ac09de9e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Security_setCallback</definition>
        <argsstring>(SecurityCallback_T securityCallback)</argsstring>
        <name>Security_setCallback</name>
        <param>
          <type><ref refid="_serval___security_8h_1ad6215bb82b269752700e37e49e7f026c" kindref="member">SecurityCallback_T</ref></type>
          <declname>securityCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>WARNING: this is a preliminary API implementation. This is subject to changes in future releases</para><para>This function sets the security callback which is called whenever security information, such as keys, certificates, etc., must be provided to the application.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">securityCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback to be executed to ask the application for security-related information</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_serval___security_8h_1ad6215bb82b269752700e37e49e7f026c" kindref="member">SecurityCallback_T</ref> </para></simplesect>
<simplesect kind="since"><para>1.7 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___security_8h_1abc92a34d683565732dc7eb526472b6f6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>static retcode_t Serval_copyToOutputBuffer</definition>
        <argsstring>(OutputBuffer_T *buffer, const char *data, uint16_t len)</argsstring>
        <name>Serval_copyToOutputBuffer</name>
        <param>
          <type><ref refid="_serval___security_8h_1a519d4f8a93f606c9c24b59fcbbfb75fd" kindref="member">OutputBuffer_T</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" line="195" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h" bodystart="195" bodyend="213"/>
        <references refid="struct_output_buffer___s_1af020145131bfd46892f63b05d5dd6306" compoundref="_serval___security_8h" startline="107">OutputBuffer_S::writableLength</references>
        <references refid="struct_output_buffer___s_1a1892eba2086d12ac2b09005aeb09ea3b" compoundref="_serval___security_8h" startline="108">OutputBuffer_S::length</references>
        <references refid="struct_output_buffer___s_1ab0746fb6288bd31fd0d505fab48d8785" compoundref="_serval___security_8h" startline="109">OutputBuffer_S::content</references>
        <references refid="_serval___exceptions_8h_1a63c2b4e52d920a11ad698d49b6a47a80ab834a5bb2ce6d97c2831fe3d71103c14" compoundref="_serval___exceptions_8h" startline="123">RC_OK</references>
        <references refid="_serval___exceptions_8h_1a63c2b4e52d920a11ad698d49b6a47a80a8fd4e04d96aa22eb9a9e84ac8412cd8b" compoundref="_serval___exceptions_8h" startline="977">RC_DTLS_INSUFFICIENT_MEMORY</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Security configurations of the library. </para>    </briefdescription>
    <detaileddescription>
<para>This header contains the security configurations which the user can use to customize the security settings and resources of the library. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">#ifndef<sp/>SERVAL_SECURITY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_SECURITY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___defines_8h" kindref="compound">Serval_Defines.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___msg_8h" kindref="compound">Serval_Msg.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___basics_8h" kindref="compound">Serval_Basics.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SERVAL_SECURITY_API_VERSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_SECURITY_API_VERSION<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_TLS_CYCURTLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SERVAL_CYCURTLS_HANDSHAKE_BUFFER_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_TLS_ECC<sp/>||<sp/>SERVAL_ENABLE_DTLS_ECC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor">#define<sp/>SERVAL_CYCURTLS_HANDSHAKE_BUFFER_SIZE<sp/>1500</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="_serval___security_8h_1a275f2e9a774f9733d0ffa3e14bf2128c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_CYCURTLS_HANDSHAKE_BUFFER_SIZE<sp/>250</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_TLS_ECC<sp/>||<sp/>SERVAL_ENABLE_DTLS_ECC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_CYCURTLS_HANDSHAKE_BUFFER_SIZE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_TLS_CYCURTLS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_SECURITY_API_VERSION<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>SERVAL_SECURITY_API_VERSION<sp/>!=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;SERVAL_SECURITY_API_VERSION<sp/>must<sp/>be<sp/>1<sp/>or<sp/>2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>UNIX<sp/>uses<sp/>01.<sp/>Jan<sp/>1970,<sp/>NTP<sp/>uses<sp/>01.<sp/>Jan<sp/>1900</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>This<sp/>contains<sp/>17<sp/>leap<sp/>years</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>(<sp/>70*365<sp/>+<sp/>17<sp/>)<sp/>*<sp/>24<sp/>*<sp/>60<sp/>*<sp/>60<sp/>=<sp/>2208988800</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="_serval___security_8h_1a72fc7fb0a9b42282f36fa96dc841f912" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNIX_TIMESTAMP_OFFSET<sp/>2208988800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS<sp/>||<sp/>SERVAL_ENABLE_TLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___msg_sending_ctx_8h" kindref="compound">Serval_MsgSendingCtx.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_SECURITY_API_VERSION<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5" kindref="member">SecurityTokenType_e</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62" refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a802cda28b9346b57d0c6d66dc44723e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a802cda28b9346b57d0c6d66dc44723e8" kindref="member">CURRENT_TIME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="63" refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a68aa13f0b16f479a6781693c5cf3b0d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a68aa13f0b16f479a6781693c5cf3b0d0" kindref="member">CIPHERS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a676f6c77a479872b019225ac6c20152b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a676f6c77a479872b019225ac6c20152b" kindref="member">PSK_SERVER_ID_HINT</ref><sp/><sp/><sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="66" refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a7f9c1f93ffe2e7bd3d1d96d53578dc86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a7f9c1f93ffe2e7bd3d1d96d53578dc86" kindref="member">PSK_PEER_KEY_AND_ID</ref><sp/><sp/>=<sp/>0x3,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5adbc692d08112f88c0f5309cdde8180e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5adbc692d08112f88c0f5309cdde8180e2" kindref="member">CRT_PEER_NAME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x4,</highlight></codeline>
<codeline lineno="69" refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a65ad5dc8b84aee6ddbafc68ff8cb0d30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a65ad5dc8b84aee6ddbafc68ff8cb0d30" kindref="member">CRT_CA</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x5,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a87f02e08deef6ca5b626a4267f98b151" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5a87f02e08deef6ca5b626a4267f98b151" kindref="member">CRT_OWN_CERTIFICATE</ref><sp/><sp/>=<sp/>0x6,</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73" refid="_serval___security_8h_1ab1b252720b69c1d18c6c3fc5f9ad34ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___security_8h_1aa1f30a0fdf5c144d633b633866946af5" kindref="member">SecurityTokenType_e</ref><sp/><ref refid="_serval___security_8h_1ab1b252720b69c1d18c6c3fc5f9ad34ac" kindref="member">SecurityTokenType_t</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="_serval___security_8h_1aeb571afefa3a51fe35ba9f31be38ba5f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___security_8h_1aeb571afefa3a51fe35ba9f31be38ba5f" kindref="member">SecurityDeviceRole_e</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77" refid="_serval___security_8h_1aeb571afefa3a51fe35ba9f31be38ba5fa67c96b24b23bcb408bae7626730a04b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1aeb571afefa3a51fe35ba9f31be38ba5fa67c96b24b23bcb408bae7626730a04b7" kindref="member">SERVER</ref><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="78" refid="_serval___security_8h_1aeb571afefa3a51fe35ba9f31be38ba5fa48e4cb37544c8e69715d45e5a83b2109" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1aeb571afefa3a51fe35ba9f31be38ba5fa48e4cb37544c8e69715d45e5a83b2109" kindref="member">CLIENT</ref><sp/>=<sp/>0x1</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80" refid="_serval___security_8h_1a659a53a86511ccd92e53bb116cf19a6b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___security_8h_1aeb571afefa3a51fe35ba9f31be38ba5f" kindref="member">SecurityDeviceRole_e</ref><sp/><ref refid="_serval___security_8h_1a659a53a86511ccd92e53bb116cf19a6b" kindref="member">SecurityDeviceRole_t</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="_serval___security_8h_1a2232e58d3f6114ab015f68c10a22271a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___security_8h_1a2232e58d3f6114ab015f68c10a22271a" kindref="member">SecurityConnection_e</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84" refid="_serval___security_8h_1a2232e58d3f6114ab015f68c10a22271aac60337f6c63b015a24fe86e2a387e08c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a2232e58d3f6114ab015f68c10a22271aac60337f6c63b015a24fe86e2a387e08c" kindref="member">TLS</ref><sp/><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="85" refid="_serval___security_8h_1a2232e58d3f6114ab015f68c10a22271aaf18f534f9e4c860d9fcec5d8c7dd90a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a2232e58d3f6114ab015f68c10a22271aaf18f534f9e4c860d9fcec5d8c7dd90a8" kindref="member">DTLS</ref><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87" refid="_serval___security_8h_1afea49e17968ca472a37abf2f60cd3a9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___security_8h_1a2232e58d3f6114ab015f68c10a22271a" kindref="member">SecurityConnection_e</ref><sp/><ref refid="_serval___security_8h_1afea49e17968ca472a37abf2f60cd3a9d" kindref="member">SecurityConnection_t</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="struct_security_token___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_security_token___s" kindref="compound">SecurityToken_S</ref></highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91" refid="struct_security_token___s_1a5d7c4a8ea452d54b2892a2183a69f23e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1ab1b252720b69c1d18c6c3fc5f9ad34ac" kindref="member">SecurityTokenType_t</ref><sp/><sp/><ref refid="struct_security_token___s_1a5d7c4a8ea452d54b2892a2183a69f23e" kindref="member">type</ref>:3;</highlight></codeline>
<codeline lineno="92" refid="struct_security_token___s_1a91dd40f0af473860071eb6a08deb1724" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1afea49e17968ca472a37abf2f60cd3a9d" kindref="member">SecurityConnection_t</ref><sp/><ref refid="struct_security_token___s_1a91dd40f0af473860071eb6a08deb1724" kindref="member">connection</ref>:1;</highlight></codeline>
<codeline lineno="93" refid="struct_security_token___s_1ac899a70eccd86819b38b5a8b95a1fe7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a659a53a86511ccd92e53bb116cf19a6b" kindref="member">SecurityDeviceRole_t</ref><sp/><ref refid="struct_security_token___s_1ac899a70eccd86819b38b5a8b95a1fe7a" kindref="member">deviceRole</ref>:1;</highlight></codeline>
<codeline lineno="94" refid="struct_security_token___s_1af3138032961911b5742b4344e37f43d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_security_token___s_1af3138032961911b5742b4344e37f43d4" kindref="member">unused</ref>:3;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96" refid="_serval___security_8h_1a5d85606d815307595bafa1193838258b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_security_token___s" kindref="compound">SecurityToken_S</ref><sp/><ref refid="struct_security_token___s" kindref="compound">SecurityToken_T</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="struct_input_buffer___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_input_buffer___s" kindref="compound">InputBuffer_S</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100" refid="struct_input_buffer___s_1a1892eba2086d12ac2b09005aeb09ea3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><ref refid="struct_input_buffer___s_1a1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="101" refid="struct_input_buffer___s_1a9f57644783bcde40e11e2276d69f8642" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_input_buffer___s_1a9f57644783bcde40e11e2276d69f8642" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103" refid="_serval___security_8h_1a0031bcb9a8b78ff877de7839936e264e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_input_buffer___s" kindref="compound">InputBuffer_S</ref><sp/><ref refid="struct_input_buffer___s" kindref="compound">InputBuffer_T</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="struct_output_buffer___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_S</ref></highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107" refid="struct_output_buffer___s_1af020145131bfd46892f63b05d5dd6306" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_output_buffer___s_1af020145131bfd46892f63b05d5dd6306" kindref="member">writableLength</ref>;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>is<sp/>0<sp/>for<sp/>an<sp/>output,<sp/>only<sp/>provide<sp/>reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="struct_output_buffer___s_1a1892eba2086d12ac2b09005aeb09ea3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_output_buffer___s_1a1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="109" refid="struct_output_buffer___s_1ab0746fb6288bd31fd0d505fab48d8785" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><ref refid="struct_output_buffer___s_1ab0746fb6288bd31fd0d505fab48d8785" kindref="member">content</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111" refid="_serval___security_8h_1a519d4f8a93f606c9c24b59fcbbfb75fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_S</ref><sp/><ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_T</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="struct_peer_data___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_peer_data___s" kindref="compound">PeerData_S</ref></highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116" refid="struct_peer_data___s_1a305b8e945a29c36aa9a7391a1aad313d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1aa89ed089ee7e2fadb12bde448aeaad7b" kindref="member">Tcp_Listener_T</ref>*<sp/><ref refid="struct_peer_data___s_1a305b8e945a29c36aa9a7391a1aad313d" kindref="member">tcpServer</ref>;<sp/></highlight></codeline>
<codeline lineno="117" refid="struct_peer_data___s_1a6367e37a08565d62bc94797bbdf152bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1afed1528da870730b59c4f58ea77bc5ae" kindref="member">Tcp_Socket_T</ref>*<sp/><sp/><sp/><ref refid="struct_peer_data___s_1a6367e37a08565d62bc94797bbdf152bd" kindref="member">tcpClient</ref>;<sp/></highlight></codeline>
<codeline lineno="118" refid="struct_peer_data___s_1a1129e7c807a0e66bd97543e91ae05046" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a98c98398d67f4f7443a66da696479bc3" kindref="member">Udp_Socket_T</ref>*<sp/><sp/><sp/><ref refid="struct_peer_data___s_1a1129e7c807a0e66bd97543e91ae05046" kindref="member">udp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_peer_data___s_1a90ec4ccacff6e8f39fc51442284d2c43" kindref="member">socket</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="struct_peer_data___s_1ae7e9d3a21f77b2bedad681829985a438" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref>*<sp/><ref refid="struct_peer_data___s_1ae7e9d3a21f77b2bedad681829985a438" kindref="member">address</ref>;<sp/></highlight></codeline>
<codeline lineno="122" refid="struct_peer_data___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_peer_data___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" kindref="member">port</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124" refid="_serval___security_8h_1a05eb8a8603dee37f5f6b3e87744c5875" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_peer_data___s" kindref="compound">PeerData_S</ref><sp/><ref refid="struct_peer_data___s" kindref="compound">PeerData_T</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="struct_current_time_data___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_current_time_data___s" kindref="compound">CurrentTimeData_S</ref></highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128" refid="struct_current_time_data___s_1ac172589449aafb825f3a0324c494bb7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_peer_data___s" kindref="compound">PeerData_T</ref><sp/><ref refid="struct_current_time_data___s_1ac172589449aafb825f3a0324c494bb7b" kindref="member">peer</ref>;</highlight></codeline>
<codeline lineno="129" refid="struct_current_time_data___s_1ab20b0c7772544cf5d318507f34231fbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_current_time_data___s_1ab20b0c7772544cf5d318507f34231fbe" kindref="member">timestamp</ref>;<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131" refid="_serval___security_8h_1a17e44926fc0e992ccb082ac4959c3814" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_current_time_data___s" kindref="compound">CurrentTimeData_S</ref><sp/><ref refid="struct_current_time_data___s" kindref="compound">CurrentTimeData_T</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="struct_ciphers_data___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ciphers_data___s" kindref="compound">CiphersData_S</ref></highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135" refid="struct_ciphers_data___s_1ac172589449aafb825f3a0324c494bb7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_peer_data___s" kindref="compound">PeerData_T</ref><sp/><ref refid="struct_ciphers_data___s_1ac172589449aafb825f3a0324c494bb7b" kindref="member">peer</ref>;</highlight></codeline>
<codeline lineno="136" refid="struct_ciphers_data___s_1aa9308b1f4da81d7d9acb5ba305128ce6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_T</ref><sp/><ref refid="struct_ciphers_data___s_1aa9308b1f4da81d7d9acb5ba305128ce6" kindref="member">ciphers</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138" refid="_serval___security_8h_1a5c3e89e29d6c07e6932f38fa08cacd7f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ciphers_data___s" kindref="compound">CiphersData_S</ref><sp/><ref refid="struct_ciphers_data___s" kindref="compound">CiphersData_T</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="struct_server_id_hint_data___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_server_id_hint_data___s" kindref="compound">ServerIdHintData_S</ref></highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142" refid="struct_server_id_hint_data___s_1ac172589449aafb825f3a0324c494bb7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_peer_data___s" kindref="compound">PeerData_T</ref><sp/><ref refid="struct_server_id_hint_data___s_1ac172589449aafb825f3a0324c494bb7b" kindref="member">peer</ref>;</highlight></codeline>
<codeline lineno="143" refid="struct_server_id_hint_data___s_1a15ec6d634d65e63cf0bec3786b369812" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_T</ref><sp/><ref refid="struct_server_id_hint_data___s_1a15ec6d634d65e63cf0bec3786b369812" kindref="member">identity</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">};</highlight></codeline>
<codeline lineno="145" refid="_serval___security_8h_1a33da5a98eead516f067b23029a8122e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_server_id_hint_data___s" kindref="compound">ServerIdHintData_S</ref><sp/><ref refid="struct_server_id_hint_data___s" kindref="compound">ServerIdHintData_T</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="struct_peer_key_and_id_data___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_peer_key_and_id_data___s" kindref="compound">PeerKeyAndIdData_S</ref></highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149" refid="struct_peer_key_and_id_data___s_1ac172589449aafb825f3a0324c494bb7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_peer_data___s" kindref="compound">PeerData_T</ref><sp/><ref refid="struct_peer_key_and_id_data___s_1ac172589449aafb825f3a0324c494bb7b" kindref="member">peer</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="struct_peer_key_and_id_data___s_1ad1dae33d9d1dfe2815f83cd7780eec3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_input_buffer___s" kindref="compound">InputBuffer_T</ref><sp/><ref refid="struct_peer_key_and_id_data___s_1ad1dae33d9d1dfe2815f83cd7780eec3b" kindref="member">peerIdentity</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="struct_peer_key_and_id_data___s_1a4501b89692471eb45853ea8a9b23702d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_T</ref><sp/><ref refid="struct_peer_key_and_id_data___s_1a4501b89692471eb45853ea8a9b23702d" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="154" refid="struct_peer_key_and_id_data___s_1a25d644d2bde32b9908fc885f8005d1a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_T</ref><sp/><ref refid="struct_peer_key_and_id_data___s_1a25d644d2bde32b9908fc885f8005d1a6" kindref="member">ourIdentity</ref>;<sp/></highlight><highlight class="comment">//only<sp/>to<sp/>be<sp/>used<sp/>if<sp/>CLIENT<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156" refid="_serval___security_8h_1ab0ca07f4d085fe081aad0c004a2220f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_peer_key_and_id_data___s" kindref="compound">PeerKeyAndIdData_S</ref><sp/><ref refid="struct_peer_key_and_id_data___s" kindref="compound">PeerKeyAndIdData_T</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="struct_peer_name_data___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_peer_name_data___s" kindref="compound">PeerNameData_S</ref></highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160" refid="struct_peer_name_data___s_1ac172589449aafb825f3a0324c494bb7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_peer_data___s" kindref="compound">PeerData_T</ref><sp/><ref refid="struct_peer_name_data___s_1ac172589449aafb825f3a0324c494bb7b" kindref="member">peer</ref>;</highlight></codeline>
<codeline lineno="161" refid="struct_peer_name_data___s_1a2ade982dbd520e33f66735f6b86b02a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_T</ref><sp/><ref refid="struct_peer_name_data___s_1a2ade982dbd520e33f66735f6b86b02a3" kindref="member">acceptedName</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163" refid="_serval___security_8h_1a17733200890f702e57a301ed3e810243" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_peer_name_data___s" kindref="compound">PeerNameData_S</ref><sp/><ref refid="struct_peer_name_data___s" kindref="compound">PeerNameData_T</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="struct_ca_data___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ca_data___s" kindref="compound">CaData_S</ref></highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167" refid="struct_ca_data___s_1ac172589449aafb825f3a0324c494bb7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_peer_data___s" kindref="compound">PeerData_T</ref><sp/><ref refid="struct_ca_data___s_1ac172589449aafb825f3a0324c494bb7b" kindref="member">peer</ref>;</highlight></codeline>
<codeline lineno="168" refid="struct_ca_data___s_1a3aa339e28607eccb472e17ea4ae0b6a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_T</ref><sp/><ref refid="struct_ca_data___s_1a3aa339e28607eccb472e17ea4ae0b6a4" kindref="member">trustedCertificates</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170" refid="_serval___security_8h_1a4746ecaf6b93a1bb51432e2df6ab668d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ca_data___s" kindref="compound">CaData_S</ref><sp/><ref refid="struct_ca_data___s" kindref="compound">CaData_T</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="struct_own_certificate_data___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_own_certificate_data___s" kindref="compound">OwnCertificateData_S</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174" refid="struct_own_certificate_data___s_1ac172589449aafb825f3a0324c494bb7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_peer_data___s" kindref="compound">PeerData_T</ref><sp/><ref refid="struct_own_certificate_data___s_1ac172589449aafb825f3a0324c494bb7b" kindref="member">peer</ref>;</highlight></codeline>
<codeline lineno="175" refid="struct_own_certificate_data___s_1afe7a73039b85ebccb573533b7555f59c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_T</ref><sp/><ref refid="struct_own_certificate_data___s_1afe7a73039b85ebccb573533b7555f59c" kindref="member">certificate</ref>;</highlight></codeline>
<codeline lineno="176" refid="struct_own_certificate_data___s_1a1f407ad2692b129da82a5030a22190bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_T</ref><sp/><ref refid="struct_own_certificate_data___s_1a1f407ad2692b129da82a5030a22190bd" kindref="member">privateKey</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">};</highlight></codeline>
<codeline lineno="178" refid="_serval___security_8h_1a4b6bf8651fb5de4b203a3685871f3f00" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_own_certificate_data___s" kindref="compound">OwnCertificateData_S</ref><sp/><ref refid="struct_own_certificate_data___s" kindref="compound">OwnCertificateData_T</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Peer<sp/>is<sp/>always<sp/>the<sp/>first<sp/>entry.<sp/>This<sp/>allows<sp/>an<sp/>easier<sp/>handling</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>of<sp/>PAL<sp/>implementations.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="union_security_data___u" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_security_data___u" kindref="compound">SecurityData_U</ref><sp/>{</highlight></codeline>
<codeline lineno="184" refid="union_security_data___u_1ae5375ba61bbbf8457526865c3ec44ced" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_current_time_data___s" kindref="compound">CurrentTimeData_T</ref><sp/><sp/><sp/><sp/><ref refid="union_security_data___u_1ae5375ba61bbbf8457526865c3ec44ced" kindref="member">timeData</ref>;</highlight></codeline>
<codeline lineno="185" refid="union_security_data___u_1ac172589449aafb825f3a0324c494bb7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_peer_data___s" kindref="compound">PeerData_T</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_security_data___u_1ac172589449aafb825f3a0324c494bb7b" kindref="member">peer</ref>;</highlight></codeline>
<codeline lineno="186" refid="union_security_data___u_1aede8072dd1560d793d79acfe59a86855" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_ciphers_data___s" kindref="compound">CiphersData_T</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_security_data___u_1aede8072dd1560d793d79acfe59a86855" kindref="member">ciphersData</ref>;</highlight></codeline>
<codeline lineno="187" refid="union_security_data___u_1a96018d3cfe7d3a831406d643af587089" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_server_id_hint_data___s" kindref="compound">ServerIdHintData_T</ref><sp/><sp/><sp/><ref refid="union_security_data___u_1a96018d3cfe7d3a831406d643af587089" kindref="member">serverIdHintData</ref>;</highlight></codeline>
<codeline lineno="188" refid="union_security_data___u_1abed55bcad18f28ac116d5234635b7f09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_peer_key_and_id_data___s" kindref="compound">PeerKeyAndIdData_T</ref><sp/><sp/><sp/><ref refid="union_security_data___u_1abed55bcad18f28ac116d5234635b7f09" kindref="member">peerKeyAndIdData</ref>;</highlight></codeline>
<codeline lineno="189" refid="union_security_data___u_1aa645f64b4eb0a0113b7c254fa004ac84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_peer_name_data___s" kindref="compound">PeerNameData_T</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_security_data___u_1aa645f64b4eb0a0113b7c254fa004ac84" kindref="member">peerNameData</ref>;</highlight></codeline>
<codeline lineno="190" refid="union_security_data___u_1acb14cdf6e38ff0a953d11e27a24d8cd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_ca_data___s" kindref="compound">CaData_T</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_security_data___u_1acb14cdf6e38ff0a953d11e27a24d8cd8" kindref="member">caData</ref>;</highlight></codeline>
<codeline lineno="191" refid="union_security_data___u_1af641907ac95bba185477d9e00744d241" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_own_certificate_data___s" kindref="compound">OwnCertificateData_T</ref><sp/><ref refid="union_security_data___u_1af641907ac95bba185477d9e00744d241" kindref="member">ownCertificateData</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193" refid="_serval___security_8h_1a796e391bd6ee7fcbafcc70ab8b9751a3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_security_data___u" kindref="compound">SecurityData_U</ref><sp/><ref refid="union_security_data___u" kindref="compound">SecurityData_T</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="_serval___security_8h_1abc92a34d683565732dc7eb526472b6f6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___security_8h_1abc92a34d683565732dc7eb526472b6f6" kindref="member">Serval_copyToOutputBuffer</ref>(<ref refid="struct_output_buffer___s" kindref="compound">OutputBuffer_T</ref>*<sp/>buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,<sp/>uint16_t<sp/>len)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>buffer-&gt;<ref refid="struct_output_buffer___s_1af020145131bfd46892f63b05d5dd6306" kindref="member">writableLength</ref><sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="struct_output_buffer___s_1a1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/><sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="struct_output_buffer___s_1ab0746fb6288bd31fd0d505fab48d8785" kindref="member">content</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>data;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_serval___exceptions_8h_1a63c2b4e52d920a11ad698d49b6a47a80ab834a5bb2ce6d97c2831fe3d71103c14" kindref="member">RC_OK</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>buffer-&gt;<ref refid="struct_output_buffer___s_1af020145131bfd46892f63b05d5dd6306" kindref="member">writableLength</ref><sp/>&gt;=<sp/>len<sp/>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="struct_output_buffer___s_1a1892eba2086d12ac2b09005aeb09ea3b" kindref="member">length</ref><sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(buffer-&gt;<ref refid="struct_output_buffer___s_1ab0746fb6288bd31fd0d505fab48d8785" kindref="member">content</ref>,<sp/>data,<sp/>len);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_serval___exceptions_8h_1a63c2b4e52d920a11ad698d49b6a47a80ab834a5bb2ce6d97c2831fe3d71103c14" kindref="member">RC_OK</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_serval___exceptions_8h_1a63c2b4e52d920a11ad698d49b6a47a80a8fd4e04d96aa22eb9a9e84ac8412cd8b" kindref="member">RC_DTLS_INSUFFICIENT_MEMORY</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="_serval___security_8h_1ad6215bb82b269752700e37e49e7f026c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___security_8h_1ad6215bb82b269752700e37e49e7f026c" kindref="member">SecurityCallback_T</ref>)<sp/>(<ref refid="struct_security_token___s" kindref="compound">SecurityToken_T</ref><sp/>token,<sp/><ref refid="union_security_data___u" kindref="compound">SecurityData_T</ref>*<sp/>tokenData);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___security_8h_1a25766cab3da0d96b88a135ac09de9e50" kindref="member">Security_setCallback</ref>(<ref refid="_serval___security_8h_1ad6215bb82b269752700e37e49e7f026c" kindref="member">SecurityCallback_T</ref><sp/>securityCallback);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_SECURITY_SERVAL_SECURITY_API_VERSION<sp/>==<sp/>2<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/>(ClientPskCallback_T)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_msg_sending_ctx___s" kindref="compound">MsgSendingCtx_T</ref><sp/>*msgCtx_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>peer_identiy,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>my_identity,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id_max_len,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_max_len);</highlight></codeline>
<codeline lineno="311"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/>(ServerPskCallback_T)<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_msg_sending_ctx___s" kindref="compound">MsgSendingCtx_T</ref><sp/>*msgCtx_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>peer_identity,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key_max_len);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_SECURITY_API_VERSION<sp/>==<sp/>2<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor">#ifndef<sp/>SERVAL_TEST_DTLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="_serval___security_8h_1a828bad332a8969cf39fabf877a3c8f13" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_TEST_DTLS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor">#ifndef<sp/>SERVAL_ENABLE_DTLS_PARALLEL_HANDSHAKE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="_serval___security_8h_1af2d6561ea25b3b5446c7199b803e6c11" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_ENABLE_DTLS_PARALLEL_HANDSHAKE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_DTLS_PARALLEL_HANDSHAKE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor">#ifndef<sp/>SERVAL_DTLS_FLIGHT_MAX_RETRIES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_DTLS_FLIGHT_MAX_RETRIES<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor">#ifndef<sp/>DTLS_RETRANSMISSION_MONITOR_INTERVAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="_serval___security_8h_1ad0e297c81186cd06ef860eef6f85df0c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DTLS_RETRANSMISSION_MONITOR_INTERVAL<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor">#ifndef<sp/>SERVAL_ENABLE_DTLS_PSK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_ENABLE_DTLS_PSK<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_DTLS_PSK<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor">#ifndef<sp/>SERVAL_ENABLE_DTLS_ECC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_ENABLE_DTLS_ECC<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_DTLS_ECC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor">#ifndef<sp/>SERVAL_SECURE_SERVER_CONNECTION_TIMEOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_SECURE_SERVER_CONNECTION_TIMEOUT<sp/>(60*1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS_PSK<sp/>&amp;&amp;<sp/>SERVAL_ENABLE_DTLS_ECC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Only<sp/>one<sp/>of<sp/>PSK<sp/>or<sp/>ECC<sp/>for<sp/>DTLS<sp/>can<sp/>be<sp/>configured&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!(SERVAL_ENABLE_DTLS_PSK<sp/>||<sp/>SERVAL_ENABLE_DTLS_ECC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;One<sp/>of<sp/>PSK<sp/>or<sp/>ECC<sp/>for<sp/>DTLS<sp/>must<sp/>be<sp/>configured&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_SECURITY_API_VERSION<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dtls_setClientPskCallback(ClientPskCallback_T<sp/>*clientPskCallback);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Dtls_setServerPskCallback(ServerPskCallback_T<sp/>*serverPskCallback);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_SECURITY_API_VERSION<sp/>==<sp/>1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>#if<sp/>SERVAL_ENABLE_DTLS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_TLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor">#ifndef<sp/>SERVAL_ENABLE_TLS_PSK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_ENABLE_TLS_PSK<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_TLS_PSK<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="preprocessor">#ifndef<sp/>SERVAL_ENABLE_TLS_ECC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_ENABLE_TLS_ECC<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_TLS_ECC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_TLS_PSK<sp/>&amp;&amp;<sp/>SERVAL_ENABLE_TLS_ECC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Only<sp/>one<sp/>of<sp/>PSK<sp/>or<sp/>ECC<sp/>for<sp/>TLS<sp/>can<sp/>be<sp/>configered&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!(SERVAL_ENABLE_TLS_PSK<sp/>||<sp/>SERVAL_ENABLE_TLS_ECC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;One<sp/>of<sp/>PSK<sp/>or<sp/>ECC<sp/>for<sp/>TLS<sp/>must<sp/>be<sp/>configered&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_SECURITY_API_VERSION<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tls_setClientPskCallback(ClientPskCallback_T<sp/>*clientPskCallback);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tls_setServerPskCallback(ServerPskCallback_T<sp/>*serverPskCallback);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_SECURITY_API_VERSION<sp/>==<sp/>1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_TLS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS<sp/>||<sp/>SERVAL_ENABLE_TLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506" refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a7a983ba785455228672da66f414a2db8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a7a983ba785455228672da66f414a2db8" kindref="member">SECURE_STATE_FREE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="510" refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a97a8e4dc55969cf1c2b2371ea4fef4c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a97a8e4dc55969cf1c2b2371ea4fef4c8" kindref="member">SECURE_STATE_IN_NEGOTIATION</ref>,</highlight></codeline>
<codeline lineno="515" refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a2e0d003502d391eb149861b42c6d1167" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a2e0d003502d391eb149861b42c6d1167" kindref="member">SECURE_STATE_WAIT_ESTABLISHED</ref>,</highlight></codeline>
<codeline lineno="519" refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a2cc908064bebf70786d06a5e4bd4ea3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a2cc908064bebf70786d06a5e4bd4ea3a" kindref="member">SECURE_STATE_ESTABLISHED</ref>,</highlight></codeline>
<codeline lineno="523" refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a171a3476514aa5f3c744d37d74d0eefc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305a171a3476514aa5f3c744d37d74d0eefc" kindref="member">SECURE_STATE_HALFCLOSED</ref>,</highlight></codeline>
<codeline lineno="527" refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305ab683a7522202c01076cbf5d2a1a6eb42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305ab683a7522202c01076cbf5d2a1a6eb42" kindref="member">SECURE_STATE_CLOSING</ref></highlight></codeline>
<codeline lineno="528"><highlight class="normal">}<sp/><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305" kindref="member">SecureConnectionState_T</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="preprocessor">#ifndef<sp/>SERVAL_MAX_SECURE_SOCKETS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_MAX_SECURE_SOCKETS<sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_MAX_SECURE_SOCKETS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor">#ifndef<sp/>SERVAL_MAX_SECURE_CONNECTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_MAX_SECURE_CONNECTIONS<sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_MAX_SECURE_CONNECTIONS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_DTLS<sp/>||<sp/>SERVAL_ENABLE_TLS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_SECURITY_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h"/>
  </compounddef>
</doxygen>
