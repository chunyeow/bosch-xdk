<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___stop_watch_8h" kind="file">
    <compoundname>Serval_StopWatch.h</compoundname>
    <includes refid="_serval___types_8h" local="no">Serval_Types.h</includes>
    <includes refid="_serval___exceptions_8h" local="no">Serval_Exceptions.h</includes>
    <incdepgraph>
      <node id="31578">
        <label>stdbool.h</label>
      </node>
      <node id="31571">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="31572" relation="include">
        </childnode>
        <childnode refid="31612" relation="include">
        </childnode>
      </node>
      <node id="31582">
        <label>stdarg.h</label>
      </node>
      <node id="31609">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="31600" relation="include">
        </childnode>
      </node>
      <node id="31594">
        <label>list.h</label>
      </node>
      <node id="31596">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="31597" relation="include">
        </childnode>
        <childnode refid="31576" relation="include">
        </childnode>
        <childnode refid="31575" relation="include">
        </childnode>
      </node>
      <node id="31574">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="31575" relation="include">
        </childnode>
      </node>
      <node id="31577">
        <label>stdint.h</label>
      </node>
      <node id="31575">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="31576" relation="include">
        </childnode>
      </node>
      <node id="31580">
        <label>stdlib.h</label>
      </node>
      <node id="31612">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="31570">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_StopWatch.h</label>
        <link refid="Serval_StopWatch.h"/>
        <childnode refid="31571" relation="include">
        </childnode>
        <childnode refid="31612" relation="include">
        </childnode>
      </node>
      <node id="31588">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="31591">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="31592" relation="include">
        </childnode>
      </node>
      <node id="31599">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="31601">
        <label>user.h</label>
      </node>
      <node id="31595">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="31575" relation="include">
        </childnode>
        <childnode refid="31596" relation="include">
        </childnode>
        <childnode refid="31599" relation="include">
        </childnode>
      </node>
      <node id="31602">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="31600" relation="include">
        </childnode>
      </node>
      <node id="31586">
        <label>stddef.h</label>
      </node>
      <node id="31604">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="31600" relation="include">
        </childnode>
      </node>
      <node id="31584">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="31585" relation="include">
        </childnode>
        <childnode refid="31587" relation="include">
        </childnode>
        <childnode refid="31591" relation="include">
        </childnode>
        <childnode refid="31593" relation="include">
        </childnode>
      </node>
      <node id="31573">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="31574" relation="include">
        </childnode>
        <childnode refid="31576" relation="include">
        </childnode>
        <childnode refid="31581" relation="include">
        </childnode>
        <childnode refid="31582" relation="include">
        </childnode>
        <childnode refid="31583" relation="include">
        </childnode>
        <childnode refid="31580" relation="include">
        </childnode>
        <childnode refid="31571" relation="include">
        </childnode>
        <childnode refid="31584" relation="include">
        </childnode>
        <childnode refid="31595" relation="include">
        </childnode>
        <childnode refid="31600" relation="include">
        </childnode>
      </node>
      <node id="31581">
        <label>limits.h</label>
      </node>
      <node id="31590">
        <label>portable.h</label>
      </node>
      <node id="31598">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="31579">
        <label>string.h</label>
      </node>
      <node id="31597">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="31598" relation="include">
        </childnode>
        <childnode refid="31575" relation="include">
        </childnode>
      </node>
      <node id="31576">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="31577" relation="include">
        </childnode>
        <childnode refid="31578" relation="include">
        </childnode>
        <childnode refid="31579" relation="include">
        </childnode>
        <childnode refid="31580" relation="include">
        </childnode>
      </node>
      <node id="31589">
        <label>projdefs.h</label>
      </node>
      <node id="31611">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="31610">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="31600" relation="include">
        </childnode>
      </node>
      <node id="31606">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="31600" relation="include">
        </childnode>
      </node>
      <node id="31592">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="31607">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="31600" relation="include">
        </childnode>
      </node>
      <node id="31605">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="31600" relation="include">
        </childnode>
      </node>
      <node id="31593">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="31594" relation="include">
        </childnode>
      </node>
      <node id="31608">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="31600" relation="include">
        </childnode>
      </node>
      <node id="31587">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="31577" relation="include">
        </childnode>
        <childnode refid="31574" relation="include">
        </childnode>
        <childnode refid="31588" relation="include">
        </childnode>
      </node>
      <node id="31572">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="31573" relation="include">
        </childnode>
      </node>
      <node id="31585">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="31586" relation="include">
        </childnode>
        <childnode refid="31577" relation="include">
        </childnode>
        <childnode refid="31587" relation="include">
        </childnode>
        <childnode refid="31589" relation="include">
        </childnode>
        <childnode refid="31590" relation="include">
        </childnode>
      </node>
      <node id="31583">
        <label>stdio.h</label>
      </node>
      <node id="31603">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="31600" relation="include">
        </childnode>
      </node>
      <node id="31600">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="31601" relation="include">
        </childnode>
        <childnode refid="31602" relation="include">
        </childnode>
        <childnode refid="31603" relation="include">
        </childnode>
        <childnode refid="31604" relation="include">
        </childnode>
        <childnode refid="31605" relation="include">
        </childnode>
        <childnode refid="31606" relation="include">
        </childnode>
        <childnode refid="31607" relation="include">
        </childnode>
        <childnode refid="31608" relation="include">
        </childnode>
        <childnode refid="31609" relation="include">
        </childnode>
        <childnode refid="31610" relation="include">
        </childnode>
        <childnode refid="31611" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_stop_watch___s" prot="public">StopWatch_S</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_serval___stop_watch_8h_1a2367e199c4e81176a4d1a9f48d48ef67" prot="public" static="no">
        <type>struct <ref refid="struct_stop_watch___s" kindref="compound">StopWatch_S</ref></type>
        <definition>typedef struct StopWatch_S StopWatch_T</definition>
        <argsstring></argsstring>
        <name>StopWatch_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This data structure represents a context of a stop watch.</para><para><simplesect kind="see"><para>struct <ref refid="struct_stop_watch___s" kindref="compound">StopWatch_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_StopWatch.h" line="318" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_StopWatch.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___stop_watch_8h_1ae2d4fa3659d8d4d43ed6092376b9d051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t StopWatch_getDuaration</definition>
        <argsstring>(StopWatch_T *watch_ptr, uint32_t *time_ptr)</argsstring>
        <name>StopWatch_getDuaration</name>
        <param>
          <type><ref refid="_serval___stop_watch_8h_1a2367e199c4e81176a4d1a9f48d48ef67" kindref="member">StopWatch_T</ref> *</type>
          <declname>watch_ptr</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>time_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to fetch the duration in second(s) since start of given instance of stop watch. The function <ref refid="_serval___stop_watch_8h_1a9759498ca7096c5d63f7fd4b624c4c30" kindref="member">StopWatch_start()</ref> should have been called before calling this function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">watch_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a StopWatch_T object which identifies the instance of stop watch been used. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">time_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This will contain time value in second(s) when the function returns.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK if successful</para></simplesect>
<simplesect kind="see"><para><ref refid="_serval___stop_watch_8h_1a4fea3c5b93d1331e1ca376cf6afb0ef8" kindref="member">StopWatch_getDuarationMillis()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_StopWatch.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___stop_watch_8h_1a4fea3c5b93d1331e1ca376cf6afb0ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t StopWatch_getDuarationMillis</definition>
        <argsstring>(StopWatch_T *watch_ptr, uint64_t *time_ptr)</argsstring>
        <name>StopWatch_getDuarationMillis</name>
        <param>
          <type><ref refid="_serval___stop_watch_8h_1a2367e199c4e81176a4d1a9f48d48ef67" kindref="member">StopWatch_T</ref> *</type>
          <declname>watch_ptr</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>time_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to fetch the duration in millisecond(s) since start of given instance of stop watch. The function <ref refid="_serval___stop_watch_8h_1a9759498ca7096c5d63f7fd4b624c4c30" kindref="member">StopWatch_start()</ref> should have been called before calling this function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">watch_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a StopWatch_T object which identifies the instance of stop watch been used. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">time_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This will contain time value in millisecond(s) when the function returns.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK if successful</para></simplesect>
<simplesect kind="see"><para><ref refid="_serval___stop_watch_8h_1ae2d4fa3659d8d4d43ed6092376b9d051" kindref="member">StopWatch_getDuaration()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_StopWatch.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___stop_watch_8h_1aa2a64bd76d607711e49397276cf64b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t StopWatch_getStartTime</definition>
        <argsstring>(StopWatch_T *watch_ptr, uint64_t *time_ptr)</argsstring>
        <name>StopWatch_getStartTime</name>
        <param>
          <type><ref refid="_serval___stop_watch_8h_1a2367e199c4e81176a4d1a9f48d48ef67" kindref="member">StopWatch_T</ref> *</type>
          <declname>watch_ptr</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>time_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to fetch the starting time value of given instance of stop watch.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">watch_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a StopWatch_T object which identifies the instance of stop watch been used. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">time_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to store the start time to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK if successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_StopWatch.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___stop_watch_8h_1a9759498ca7096c5d63f7fd4b624c4c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t StopWatch_start</definition>
        <argsstring>(StopWatch_T *watch_ptr)</argsstring>
        <name>StopWatch_start</name>
        <param>
          <type><ref refid="_serval___stop_watch_8h_1a2367e199c4e81176a4d1a9f48d48ef67" kindref="member">StopWatch_T</ref> *</type>
          <declname>watch_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to mark start of stop watch.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">watch_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a StopWatch_T object which identifies the instance of stop watch been started. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_StopWatch.h" line="60" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interface to the stop watch module.</para><para>This file provides interfaces to use stop watch functionality. In addition to the data structures needed to represent and manage a stop watch, this file also includes the interfaces which provides functionality like starting a stop watch, getting absolute time in millisecond and second since the start of stop watch and also getting starting time of stop watch. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor">#ifndef<sp/>SERVAL_STOPWATCH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_STOPWATCH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___types_8h" kindref="compound">Serval_Types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___exceptions_8h" kindref="compound">Serval_Exceptions.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="_serval___stop_watch_8h_1a2367e199c4e81176a4d1a9f48d48ef67" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_stop_watch___s" kindref="compound">StopWatch_S</ref><sp/><ref refid="struct_stop_watch___s" kindref="compound">StopWatch_T</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="struct_stop_watch___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_stop_watch___s" kindref="compound">StopWatch_S</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46" refid="struct_stop_watch___s_1a6a51e9baeec9b06ae477cf6475efc71d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="struct_stop_watch___s_1a6a51e9baeec9b06ae477cf6475efc71d" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___stop_watch_8h_1a9759498ca7096c5d63f7fd4b624c4c30" kindref="member">StopWatch_start</ref>(<ref refid="struct_stop_watch___s" kindref="compound">StopWatch_T</ref><sp/>*watch_ptr);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___stop_watch_8h_1aa2a64bd76d607711e49397276cf64b36" kindref="member">StopWatch_getStartTime</ref>(<ref refid="struct_stop_watch___s" kindref="compound">StopWatch_T</ref><sp/>*watch_ptr,<sp/>uint64_t<sp/>*time_ptr);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___stop_watch_8h_1a4fea3c5b93d1331e1ca376cf6afb0ef8" kindref="member">StopWatch_getDuarationMillis</ref>(<ref refid="struct_stop_watch___s" kindref="compound">StopWatch_T</ref><sp/>*watch_ptr,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>*time_ptr);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___stop_watch_8h_1ae2d4fa3659d8d4d43ed6092376b9d051" kindref="member">StopWatch_getDuaration</ref>(<ref refid="struct_stop_watch___s" kindref="compound">StopWatch_T</ref><sp/>*watch_ptr,<sp/>uint32_t<sp/>*time_ptr);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_STOPWATCH_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_StopWatch.h"/>
  </compounddef>
</doxygen>
