<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="group___r_o_t_a_t_i_o_n" kind="group">
    <compoundname>ROTATION</compoundname>
    <title>Rotation</title>
    <innerfile refid="_b_c_d_s___rotation_8h">BCDS_Rotation.h</innerfile>
    <innerclass refid="struct_rotation___euler_data___s" prot="public">Rotation_EulerData_S</innerclass>
    <innerclass refid="struct_rotation___quaternion_data___s" prot="public">Rotation_QuaternionData_S</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___r_o_t_a_t_i_o_n_1ga9aa9a1743625d253ce534ace8607984f" prot="public" static="no">
        <name>Rotation_InitStatus_E</name>
        <enumvalue id="group___r_o_t_a_t_i_o_n_1gga9aa9a1743625d253ce534ace8607984fabe02a667be9162b0d0621ff3156a91fb" prot="public">
          <name>ROTATION_SENSOR_UNINITIALISED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Specifies rotation sensor is uninitialised </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___r_o_t_a_t_i_o_n_1gga9aa9a1743625d253ce534ace8607984fa9fa72aed5924d176bf6364fe5c0d3e62" prot="public">
          <name>ROTATION_SENSOR_INITIALISED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Specifies rotation sensor is initialised </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enum values to represent Rotation sensor initialisation status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="88" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="87" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga861889134c39b596bed3bdd7971c1373" prot="public" static="no">
        <type>float</type>
        <definition>typedef float Rotation_DataType_T</definition>
        <argsstring></argsstring>
        <name>Rotation_DataType_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data type used for reading Rotation data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="84" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga9b6b5c443be7a48286e983c5b739722c" prot="public" static="no">
        <type>struct <ref refid="struct_rotation___euler_data___s" kindref="compound">Rotation_EulerData_S</ref></type>
        <definition>typedef struct Rotation_EulerData_S Rotation_EulerData_T</definition>
        <argsstring></argsstring>
        <name>Rotation_EulerData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="102" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1gaeea61e592d750a62d1f8c2fbe4511c5c" prot="public" static="no">
        <type>struct <ref refid="struct_rotation___euler_data___s" kindref="compound">Rotation_EulerData_S</ref> *</type>
        <definition>typedef struct Rotation_EulerData_S * Rotation_EulerDataPtr_T</definition>
        <argsstring></argsstring>
        <name>Rotation_EulerDataPtr_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="111" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga150d5a7c22603a2e984c1b06fbeb6ad0" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* Rotation_HandlePtr_T</definition>
        <argsstring></argsstring>
        <name>Rotation_HandlePtr_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the handle for Rotation sensor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="114" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga8a74055a5f9909b712328fd34760d78a" prot="public" static="no">
        <type>enum <ref refid="group___r_o_t_a_t_i_o_n_1ga9aa9a1743625d253ce534ace8607984f" kindref="member">Rotation_InitStatus_E</ref></type>
        <definition>typedef enum Rotation_InitStatus_E Rotation_InitStatus_T</definition>
        <argsstring></argsstring>
        <name>Rotation_InitStatus_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="84" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga7bd79444657f60ea363d007a8e8d5a0a" prot="public" static="no">
        <type>struct <ref refid="struct_rotation___quaternion_data___s" kindref="compound">Rotation_QuaternionData_S</ref></type>
        <definition>typedef struct Rotation_QuaternionData_S Rotation_QuaternionData_T</definition>
        <argsstring></argsstring>
        <name>Rotation_QuaternionData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="84" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga247c8631a5472da804c5f5c0b16ce3d5" prot="public" static="no">
        <type>struct <ref refid="struct_rotation___quaternion_data___s" kindref="compound">Rotation_QuaternionData_S</ref> *</type>
        <definition>typedef struct Rotation_QuaternionData_S * Rotation_QuaternionDataPtr_T</definition>
        <argsstring></argsstring>
        <name>Rotation_QuaternionDataPtr_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="102" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___r_o_t_a_t_i_o_n_1ga882fa72761c0a55d276f4356f25b8c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Rotation_deInit</definition>
        <argsstring>(void)</argsstring>
        <name>Rotation_deInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>API to Deinitialise the rotation module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation sensor De-initialization success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" kindref="member">RETCODE_FAILURE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation sensor De-initialization failure</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>This API needs to be called when we require to stop the rotation data reading.</para></simplesect>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next Byte represents Severity and Last 2 LSBytes represents error code). </para></simplesect>
<simplesect kind="note"><para>Pass the return value of this function to #BCDS_getUserErrorCode() API to know the user type return code present in #BCDS_SensorErrorType.h. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___r_o_t_a_t_i_o_n_1ga4123b9f2d804083ae26763d65ce30e9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Rotation_init</definition>
        <argsstring>(Rotation_HandlePtr_T handle)</argsstring>
        <name>Rotation_init</name>
        <param>
          <type><ref refid="group___r_o_t_a_t_i_o_n_1ga150d5a7c22603a2e984c1b06fbeb6ad0" kindref="member">Rotation_HandlePtr_T</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Initializes the rotation sensor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Orientation_HandlePtr_T</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the rotation object that should be initialized</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation sensor initialization success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>In case of invalid sensor handle.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Refer #XdkSensorHandle.h for selecting the proper handle. </para></simplesect>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next Byte represents Severity and Last 2 LSBytes represents error code). </para></simplesect>
<simplesect kind="note"><para>Pass the return value of this function to #BCDS_getUserErrorCode() API to know the user type return code present in #BCDS_SensorErrorType.h. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___r_o_t_a_t_i_o_n_1gabee3b9ca61b5bba969d9025d14ebc9a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Rotation_readQuaternionValue</definition>
        <argsstring>(Rotation_QuaternionDataPtr_T quaternionValue)</argsstring>
        <name>Rotation_readQuaternionValue</name>
        <param>
          <type><ref refid="group___r_o_t_a_t_i_o_n_1ga247c8631a5472da804c5f5c0b16ce3d5" kindref="member">Rotation_QuaternionDataPtr_T</ref></type>
          <declname>quaternionValue</declname>
        </param>
        <briefdescription>
<para>Reads rotation quaternion value from the rotation sensor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">Rotation_QuaternionDataPtr_T</parametername>
</parameternamelist>
<parameterdescription>
<para>quaternionValue, output parameter in which the quaternion value will be written to, from within the function</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reading rotation quaternion value success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbaea901b927978b56cbfae3fa93c3ddfa4" kindref="member">RETCODE_UNINITIALIZED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>If called without initializing the sensor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>In case quaternionValue is a NULL pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next Byte represents Severity and Last 2 LSBytes represents error code). </para></simplesect>
<simplesect kind="note"><para>Pass the return value of this function to #BCDS_getUserErrorCode() API to know the user type return code present in #BCDS_SensorErrorType.h. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="149" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Rotation Sensor based on BMI160 and BMM150. </para>    </briefdescription>
    <detaileddescription>
<para>In geometry, the Rotation of an object (such as a line, plane or rigid body) is part of the description of how it is placed in the space it is in. <linebreak/>
 Rotation sensor is applied to detect direction status of the device in two or three dimensions. <linebreak/>
 Certain methods to describe Rotations of a rigid body in three dimensions have been developed. <linebreak/>
 They are as follows :</para><para><bold>EULER</bold> <bold>ANGLES</bold> <bold></bold>:</para><para>To describe an Rotation in 3-dimensional Euclidean space, three parameters are required. <linebreak/>
 They can be given in several ways, Euler angles being one of them, which describes the Rotation of a frame of reference (typically, a coordinate system or basis) relative to another. <linebreak/>
 They are represented by <bold>heading</bold> (rotation around the Z-axis), <bold>pitch</bold> (rotation around the X-axis) and <bold>roll</bold> (rotation around the Y-axis). <linebreak/>
 Euler Angles can be represented in <emphasis>degrees</emphasis> or in <emphasis>radians</emphasis>.</para><para><bold>QUATERNION</bold> <bold></bold>:</para><para>Unit quaternion provides a convenient mathematical notation for representing Rotations and rotations of objects in three dimensions. <linebreak/>
 A quaternion represents two things. It has an x, y and z component, which represents the axis about which a rotation will occur. <linebreak/>
 It also has a w component, which represents the amount of rotation which will occur about this axis.</para><para>Quaternion is represented by vector q(q[0],q[1],q[2],q[3]) where in, <bold>q</bold>[0] <bold>=</bold> <bold>cos</bold>(θ/2) , <bold>q</bold>[1] <bold>=</bold> <bold>u</bold> <bold>*</bold> <bold>sin</bold>(θ/2) , <bold>q</bold>[2] <bold>=</bold> <bold>v</bold> <bold>*</bold> <bold>sin</bold>(θ/2) , <bold>q</bold>[3] <bold>=</bold> <bold>w</bold> <bold>*</bold> <bold>sin</bold>(θ/2) ( [u,v,w] is the unit vector parallel to rotation axis )</para><para><bold>Rotation</bold> <bold>Calibration</bold> <bold>method</bold> : <linebreak/>
 Rotation calibration should be done by leaving the device in flat position a few seconds (for gyroscope calibration) and then making the &apos;8&apos; figure motion (for magnetometer calibration) as in <ulink url="https://www.youtube.com/watch?v=sP3d00Hr14o">https://www.youtube.com/watch?v=sP3d00Hr14o</ulink>. <linebreak/>
 &apos;8&apos; figure motion may be done more than once (maybe 5 times) for a proper calibration.</para><para><bold>Limitations</bold> <bold>of</bold> <bold>Rotation</bold> <bold></bold>: <linebreak/>
This sensor cannot be used while using virtual sensor fingerPrint. </para>    </detaileddescription>
  </compounddef>
</doxygen>
