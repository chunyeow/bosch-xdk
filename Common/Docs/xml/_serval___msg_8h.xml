<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___msg_8h" kind="file">
    <compoundname>Serval_Msg.h</compoundname>
    <includes refid="_serval___defines_8h" local="no">Serval_Defines.h</includes>
    <includes refid="_serval___types_8h" local="no">Serval_Types.h</includes>
    <includes refid="_serval___string_descr_8h" local="no">Serval_StringDescr.h</includes>
    <includes refid="_serval___xml_parser_8h" local="no">Serval_XmlParser.h</includes>
    <includes refid="_serval___filesystem_8h" local="no">Serval_Filesystem.h</includes>
    <includes refid="_serval___callable_8h" local="no">Serval_Callable.h</includes>
    <includes refid="_serval___ip_8h" local="no">Serval_Ip.h</includes>
    <includes refid="_serval___policy_8h" local="no">Serval_Policy.h</includes>
    <includes refid="_serval___msg___obsolete_8h" local="no">Serval_Msg_Obsolete.h</includes>
    <includedby refid="_mbed_t_l_s___tls_8h" local="no">SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Tls.h</includedby>
    <includedby refid="_serval___tcp_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Tcp.h</includedby>
    <includedby refid="_serval___udp_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Udp.h</includedby>
    <includedby refid="_serval___coap_client_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h</includedby>
    <includedby refid="_serval___coap_server_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h</includedby>
    <includedby refid="_serval___http_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Http.h</includedby>
    <includedby refid="_serval___http_client_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_HttpClient.h</includedby>
    <includedby refid="_serval___lwm2m_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h</includedby>
    <includedby refid="_serval___msg___obsolete_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h</includedby>
    <includedby refid="_serval___rest_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Rest.h</includedby>
    <includedby refid="_serval___rest_client_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestClient.h</includedby>
    <includedby refid="_serval___security_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h</includedby>
    <includedby refid="_serval___webserver_8h" local="yes">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Webserver.h</includedby>
    <includedby refid="_serval___x_tcp_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcp.h</includedby>
    <includedby refid="_serval___x_tcp_client_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcpClient.h</includedby>
    <includedby refid="_serval___x_udp_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h</includedby>
    <incdepgraph>
      <node id="30729">
        <label>stdbool.h</label>
      </node>
      <node id="30722">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="30723" relation="include">
        </childnode>
        <childnode refid="30763" relation="include">
        </childnode>
      </node>
      <node id="30733">
        <label>stdarg.h</label>
      </node>
      <node id="30760">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="30751" relation="include">
        </childnode>
      </node>
      <node id="30745">
        <label>list.h</label>
      </node>
      <node id="30747">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="30748" relation="include">
        </childnode>
        <childnode refid="30727" relation="include">
        </childnode>
        <childnode refid="30726" relation="include">
        </childnode>
      </node>
      <node id="30764">
        <label>Serval_StringDescr.h</label>
        <link refid="_serval___string_descr_8h"/>
        <childnode refid="30722" relation="include">
        </childnode>
      </node>
      <node id="30725">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="30726" relation="include">
        </childnode>
      </node>
      <node id="30728">
        <label>stdint.h</label>
      </node>
      <node id="30726">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="30727" relation="include">
        </childnode>
      </node>
      <node id="30731">
        <label>stdlib.h</label>
      </node>
      <node id="30763">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="30771">
        <label>Serval_Policy.h</label>
        <link refid="_serval___policy_8h"/>
      </node>
      <node id="30739">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="30742">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="30743" relation="include">
        </childnode>
      </node>
      <node id="30750">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="30752">
        <label>user.h</label>
      </node>
      <node id="30746">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="30726" relation="include">
        </childnode>
        <childnode refid="30747" relation="include">
        </childnode>
        <childnode refid="30750" relation="include">
        </childnode>
      </node>
      <node id="30753">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="30751" relation="include">
        </childnode>
      </node>
      <node id="30767">
        <label>Serval_Callable.h</label>
        <link refid="_serval___callable_8h"/>
        <childnode refid="30722" relation="include">
        </childnode>
        <childnode refid="30768" relation="include">
        </childnode>
      </node>
      <node id="30737">
        <label>stddef.h</label>
      </node>
      <node id="30755">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="30751" relation="include">
        </childnode>
      </node>
      <node id="30735">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="30736" relation="include">
        </childnode>
        <childnode refid="30738" relation="include">
        </childnode>
        <childnode refid="30742" relation="include">
        </childnode>
        <childnode refid="30744" relation="include">
        </childnode>
      </node>
      <node id="30724">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="30725" relation="include">
        </childnode>
        <childnode refid="30727" relation="include">
        </childnode>
        <childnode refid="30732" relation="include">
        </childnode>
        <childnode refid="30733" relation="include">
        </childnode>
        <childnode refid="30734" relation="include">
        </childnode>
        <childnode refid="30731" relation="include">
        </childnode>
        <childnode refid="30722" relation="include">
        </childnode>
        <childnode refid="30735" relation="include">
        </childnode>
        <childnode refid="30746" relation="include">
        </childnode>
        <childnode refid="30751" relation="include">
        </childnode>
      </node>
      <node id="30732">
        <label>limits.h</label>
      </node>
      <node id="30720">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h</label>
        <link refid="Serval_Msg.h"/>
        <childnode refid="30721" relation="include">
        </childnode>
        <childnode refid="30722" relation="include">
        </childnode>
        <childnode refid="30764" relation="include">
        </childnode>
        <childnode refid="30765" relation="include">
        </childnode>
        <childnode refid="30766" relation="include">
        </childnode>
        <childnode refid="30767" relation="include">
        </childnode>
        <childnode refid="30769" relation="include">
        </childnode>
        <childnode refid="30771" relation="include">
        </childnode>
        <childnode refid="30772" relation="include">
        </childnode>
      </node>
      <node id="30741">
        <label>portable.h</label>
      </node>
      <node id="30749">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="30730">
        <label>string.h</label>
      </node>
      <node id="30748">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="30749" relation="include">
        </childnode>
        <childnode refid="30726" relation="include">
        </childnode>
      </node>
      <node id="30768">
        <label>Serval_StructCtx.h</label>
        <link refid="_serval___struct_ctx_8h"/>
        <childnode refid="30737" relation="include">
        </childnode>
      </node>
      <node id="30727">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="30728" relation="include">
        </childnode>
        <childnode refid="30729" relation="include">
        </childnode>
        <childnode refid="30730" relation="include">
        </childnode>
        <childnode refid="30731" relation="include">
        </childnode>
      </node>
      <node id="30772">
        <label>Serval_Msg_Obsolete.h</label>
        <link refid="_serval___msg___obsolete_8h"/>
        <childnode refid="30722" relation="include">
        </childnode>
        <childnode refid="30771" relation="include">
        </childnode>
        <childnode refid="30720" relation="include">
        </childnode>
      </node>
      <node id="30769">
        <label>Serval_Ip.h</label>
        <link refid="_serval___ip_8h"/>
        <childnode refid="30770" relation="include">
        </childnode>
        <childnode refid="30722" relation="include">
        </childnode>
      </node>
      <node id="30740">
        <label>projdefs.h</label>
      </node>
      <node id="30762">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="30770">
        <label>PIp.h</label>
        <link refid="_p_ip_8h"/>
        <childnode refid="30726" relation="include">
        </childnode>
      </node>
      <node id="30761">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="30751" relation="include">
        </childnode>
      </node>
      <node id="30766">
        <label>Serval_Filesystem.h</label>
        <link refid="_serval___filesystem_8h"/>
        <childnode refid="30722" relation="include">
        </childnode>
      </node>
      <node id="30721">
        <label>Serval_Defines.h</label>
        <link refid="_serval___defines_8h"/>
      </node>
      <node id="30757">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="30751" relation="include">
        </childnode>
      </node>
      <node id="30743">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="30758">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="30751" relation="include">
        </childnode>
      </node>
      <node id="30765">
        <label>Serval_XmlParser.h</label>
        <link refid="_serval___xml_parser_8h"/>
        <childnode refid="30764" relation="include">
        </childnode>
      </node>
      <node id="30756">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="30751" relation="include">
        </childnode>
      </node>
      <node id="30744">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="30745" relation="include">
        </childnode>
      </node>
      <node id="30759">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="30751" relation="include">
        </childnode>
      </node>
      <node id="30738">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="30728" relation="include">
        </childnode>
        <childnode refid="30725" relation="include">
        </childnode>
        <childnode refid="30739" relation="include">
        </childnode>
      </node>
      <node id="30723">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="30724" relation="include">
        </childnode>
      </node>
      <node id="30736">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="30737" relation="include">
        </childnode>
        <childnode refid="30728" relation="include">
        </childnode>
        <childnode refid="30738" relation="include">
        </childnode>
        <childnode refid="30740" relation="include">
        </childnode>
        <childnode refid="30741" relation="include">
        </childnode>
      </node>
      <node id="30734">
        <label>stdio.h</label>
      </node>
      <node id="30754">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="30751" relation="include">
        </childnode>
      </node>
      <node id="30751">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="30752" relation="include">
        </childnode>
        <childnode refid="30753" relation="include">
        </childnode>
        <childnode refid="30754" relation="include">
        </childnode>
        <childnode refid="30755" relation="include">
        </childnode>
        <childnode refid="30756" relation="include">
        </childnode>
        <childnode refid="30757" relation="include">
        </childnode>
        <childnode refid="30758" relation="include">
        </childnode>
        <childnode refid="30759" relation="include">
        </childnode>
        <childnode refid="30760" relation="include">
        </childnode>
        <childnode refid="30761" relation="include">
        </childnode>
        <childnode refid="30762" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="30811">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceEnvironment.c</label>
        <link refid="_l_w_m2_m_sensor_device_environment_8c"/>
      </node>
      <node id="30782">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h</label>
        <link refid="_serval___coap_server_8h"/>
        <childnode refid="30783" relation="include">
        </childnode>
      </node>
      <node id="30822">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Webserver.h</label>
        <link refid="_serval___webserver_8h"/>
      </node>
      <node id="30796">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.c</label>
        <link refid="_l_w_m2_m_objects_8c"/>
      </node>
      <node id="30786">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.h</label>
        <link refid="_l_w_m2_m_objects_8h"/>
        <childnode refid="30785" relation="include">
        </childnode>
        <childnode refid="30787" relation="include">
        </childnode>
        <childnode refid="30788" relation="include">
        </childnode>
        <childnode refid="30789" relation="include">
        </childnode>
        <childnode refid="30790" relation="include">
        </childnode>
        <childnode refid="30791" relation="include">
        </childnode>
        <childnode refid="30792" relation="include">
        </childnode>
        <childnode refid="30793" relation="include">
        </childnode>
        <childnode refid="30794" relation="include">
        </childnode>
        <childnode refid="30795" relation="include">
        </childnode>
        <childnode refid="30796" relation="include">
        </childnode>
        <childnode refid="30797" relation="include">
        </childnode>
        <childnode refid="30798" relation="include">
        </childnode>
        <childnode refid="30799" relation="include">
        </childnode>
      </node>
      <node id="30780">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h</label>
        <link refid="_serval___coap_client_8h"/>
        <childnode refid="30781" relation="include">
        </childnode>
      </node>
      <node id="30787">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.c</label>
        <link refid="_l_w_m2_m_object_alert_notification_8c"/>
      </node>
      <node id="30814">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.h</label>
        <link refid="_l_w_m2_m_object_alert_notification_8h"/>
        <childnode refid="30786" relation="include">
        </childnode>
        <childnode refid="30787" relation="include">
        </childnode>
      </node>
      <node id="30790">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.c</label>
        <link refid="_l_w_m2_m_object_device_8c"/>
      </node>
      <node id="30809">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceIlluminance.c</label>
        <link refid="_l_w_m2_m_sensor_device_illuminance_8c"/>
      </node>
      <node id="30818">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Resources.h</label>
        <link refid="_serval___resources_8h"/>
      </node>
      <node id="30801">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.h</label>
        <link refid="_l_w_m2_m_object_device_8h"/>
        <childnode refid="30786" relation="include">
        </childnode>
        <childnode refid="30790" relation="include">
        </childnode>
      </node>
      <node id="30789">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.c</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8c"/>
      </node>
      <node id="30802">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.h</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8h"/>
        <childnode refid="30786" relation="include">
        </childnode>
      </node>
      <node id="30820">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestClient.h</label>
        <link refid="_serval___rest_client_8h"/>
      </node>
      <node id="30800">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceAccelerometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_accelerometer_8c"/>
      </node>
      <node id="30777">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_HttpServer.h</label>
        <link refid="_serval___http_server_8h"/>
      </node>
      <node id="30825">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Flags.h</label>
        <link refid="_mbed_t_l_s___flags_8h"/>
      </node>
      <node id="30819">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Rest.h</label>
        <link refid="_serval___rest_8h"/>
        <childnode refid="30818" relation="include">
        </childnode>
        <childnode refid="30820" relation="include">
        </childnode>
        <childnode refid="30821" relation="include">
        </childnode>
      </node>
      <node id="30821">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h</label>
        <link refid="_serval___rest_server_8h"/>
      </node>
      <node id="30797">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.c</label>
        <link refid="_l_w_m2_m_object_sensor_device_8c"/>
      </node>
      <node id="30827">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcpClient.h</label>
        <link refid="_serval___x_tcp_client_8h"/>
      </node>
      <node id="30812">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.h</label>
        <link refid="_l_w_m2_m_object_sensor_device_8h"/>
        <childnode refid="30786" relation="include">
        </childnode>
        <childnode refid="30790" relation="include">
        </childnode>
        <childnode refid="30797" relation="include">
        </childnode>
      </node>
      <node id="30776">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Socket.h</label>
        <link refid="_mbed_t_l_s___socket_8h"/>
      </node>
      <node id="30824">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h</label>
        <link refid="_serval___security_8h"/>
        <childnode refid="30825" relation="include">
        </childnode>
        <childnode refid="30774" relation="include">
        </childnode>
        <childnode refid="30779" relation="include">
        </childnode>
        <childnode refid="30780" relation="include">
        </childnode>
        <childnode refid="30782" relation="include">
        </childnode>
        <childnode refid="30783" relation="include">
        </childnode>
        <childnode refid="30820" relation="include">
        </childnode>
        <childnode refid="30821" relation="include">
        </childnode>
      </node>
      <node id="30807">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceMagnetometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_magnetometer_8c"/>
      </node>
      <node id="30798">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectTemperature.c</label>
        <link refid="_l_w_m2_m_object_temperature_8c"/>
      </node>
      <node id="30773">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h</label>
        <link refid="Serval_Msg.h"/>
        <childnode refid="30774" relation="include">
        </childnode>
        <childnode refid="30775" relation="include">
        </childnode>
        <childnode refid="30779" relation="include">
        </childnode>
        <childnode refid="30780" relation="include">
        </childnode>
        <childnode refid="30782" relation="include">
        </childnode>
        <childnode refid="30816" relation="include">
        </childnode>
        <childnode refid="30817" relation="include">
        </childnode>
        <childnode refid="30783" relation="include">
        </childnode>
        <childnode refid="30823" relation="include">
        </childnode>
        <childnode refid="30819" relation="include">
        </childnode>
        <childnode refid="30820" relation="include">
        </childnode>
        <childnode refid="30824" relation="include">
        </childnode>
        <childnode refid="30822" relation="include">
        </childnode>
        <childnode refid="30826" relation="include">
        </childnode>
        <childnode refid="30827" relation="include">
        </childnode>
        <childnode refid="30828" relation="include">
        </childnode>
      </node>
      <node id="30816">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Http.h</label>
        <link refid="_serval___http_8h"/>
        <childnode refid="30817" relation="include">
        </childnode>
        <childnode refid="30777" relation="include">
        </childnode>
        <childnode refid="30818" relation="include">
        </childnode>
        <childnode refid="30819" relation="include">
        </childnode>
        <childnode refid="30821" relation="include">
        </childnode>
        <childnode refid="30822" relation="include">
        </childnode>
      </node>
      <node id="30793">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.c</label>
        <link refid="_l_w_m2_m_object_illuminance_8c"/>
      </node>
      <node id="30808">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.h</label>
        <link refid="_l_w_m2_m_object_illuminance_8h"/>
        <childnode refid="30786" relation="include">
        </childnode>
        <childnode refid="30809" relation="include">
        </childnode>
      </node>
      <node id="30826">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcp.h</label>
        <link refid="_serval___x_tcp_8h"/>
        <childnode refid="30818" relation="include">
        </childnode>
        <childnode refid="30827" relation="include">
        </childnode>
        <childnode refid="30778" relation="include">
        </childnode>
      </node>
      <node id="30823">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h</label>
        <link refid="_serval___msg___obsolete_8h"/>
        <childnode refid="30773" relation="include">
        </childnode>
      </node>
      <node id="30781">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.c</label>
        <link refid="_l_w_m2_m_object_firmware_update_8c"/>
      </node>
      <node id="30794">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.c</label>
        <link refid="_l_w_m2_m_object_light_control_8c"/>
      </node>
      <node id="30803">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.h</label>
        <link refid="_l_w_m2_m_object_firmware_update_8h"/>
        <childnode refid="30786" relation="include">
        </childnode>
        <childnode refid="30781" relation="include">
        </childnode>
      </node>
      <node id="30795">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.c</label>
        <link refid="_l_w_m2_m_object_magnetometer_8c"/>
      </node>
      <node id="30813">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.h</label>
        <link refid="_l_w_m2_m_object_light_control_8h"/>
        <childnode refid="30786" relation="include">
        </childnode>
        <childnode refid="30794" relation="include">
        </childnode>
      </node>
      <node id="30806">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.h</label>
        <link refid="_l_w_m2_m_object_magnetometer_8h"/>
        <childnode refid="30786" relation="include">
        </childnode>
        <childnode refid="30807" relation="include">
        </childnode>
      </node>
      <node id="30828">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h</label>
        <link refid="_serval___x_udp_8h"/>
      </node>
      <node id="30783">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h</label>
        <link refid="_serval___lwm2m_8h"/>
        <childnode refid="30784" relation="include">
        </childnode>
        <childnode refid="30786" relation="include">
        </childnode>
        <childnode refid="30801" relation="include">
        </childnode>
        <childnode refid="30802" relation="include">
        </childnode>
        <childnode refid="30803" relation="include">
        </childnode>
        <childnode refid="30804" relation="include">
        </childnode>
        <childnode refid="30806" relation="include">
        </childnode>
        <childnode refid="30808" relation="include">
        </childnode>
        <childnode refid="30810" relation="include">
        </childnode>
        <childnode refid="30812" relation="include">
        </childnode>
        <childnode refid="30813" relation="include">
        </childnode>
        <childnode refid="30814" relation="include">
        </childnode>
        <childnode refid="30815" relation="include">
        </childnode>
        <childnode refid="30785" relation="include">
        </childnode>
        <childnode refid="30787" relation="include">
        </childnode>
        <childnode refid="30794" relation="include">
        </childnode>
        <childnode refid="30796" relation="include">
        </childnode>
        <childnode refid="30797" relation="include">
        </childnode>
        <childnode refid="30805" relation="include">
        </childnode>
        <childnode refid="30809" relation="include">
        </childnode>
      </node>
      <node id="30778">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcpServer.h</label>
        <link refid="_serval___x_tcp_server_8h"/>
      </node>
      <node id="30779">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Udp.h</label>
        <link refid="_serval___udp_8h"/>
        <childnode refid="30776" relation="include">
        </childnode>
        <childnode refid="30774" relation="include">
        </childnode>
      </node>
      <node id="30775">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Tcp.h</label>
        <link refid="_serval___tcp_8h"/>
        <childnode refid="30776" relation="include">
        </childnode>
        <childnode refid="30774" relation="include">
        </childnode>
        <childnode refid="30777" relation="include">
        </childnode>
        <childnode refid="30778" relation="include">
        </childnode>
      </node>
      <node id="30785">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.c</label>
        <link refid="_l_w_m2_m_object_accelerometer_8c"/>
      </node>
      <node id="30774">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Tls.h</label>
        <link refid="_mbed_t_l_s___tls_8h"/>
      </node>
      <node id="30784">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.h</label>
        <link refid="_l_w_m2_m_object_accelerometer_8h"/>
        <childnode refid="30785" relation="include">
        </childnode>
        <childnode refid="30786" relation="include">
        </childnode>
        <childnode refid="30800" relation="include">
        </childnode>
      </node>
      <node id="30792">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectHumidity.c</label>
        <link refid="_l_w_m2_m_object_humidity_8c"/>
      </node>
      <node id="30805">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceGyroscope.c</label>
        <link refid="_l_w_m2_m_sensor_device_gyroscope_8c"/>
      </node>
      <node id="30788">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.c</label>
        <link refid="_l_w_m2_m_object_barometer_8c"/>
      </node>
      <node id="30810">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.h</label>
        <link refid="_l_w_m2_m_object_barometer_8h"/>
        <childnode refid="30786" relation="include">
        </childnode>
        <childnode refid="30811" relation="include">
        </childnode>
      </node>
      <node id="30817">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_HttpClient.h</label>
        <link refid="_serval___http_client_8h"/>
      </node>
      <node id="30799">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.c</label>
        <link refid="_l_w_m2_m_util_8c"/>
      </node>
      <node id="30815">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.h</label>
        <link refid="_l_w_m2_m_util_8h"/>
        <childnode refid="30785" relation="include">
        </childnode>
        <childnode refid="30787" relation="include">
        </childnode>
        <childnode refid="30788" relation="include">
        </childnode>
        <childnode refid="30789" relation="include">
        </childnode>
        <childnode refid="30791" relation="include">
        </childnode>
        <childnode refid="30792" relation="include">
        </childnode>
        <childnode refid="30793" relation="include">
        </childnode>
        <childnode refid="30794" relation="include">
        </childnode>
        <childnode refid="30795" relation="include">
        </childnode>
        <childnode refid="30797" relation="include">
        </childnode>
        <childnode refid="30798" relation="include">
        </childnode>
        <childnode refid="30799" relation="include">
        </childnode>
      </node>
      <node id="30791">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.c</label>
        <link refid="_l_w_m2_m_object_gyroscope_8c"/>
      </node>
      <node id="30804">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.h</label>
        <link refid="_l_w_m2_m_object_gyroscope_8h"/>
        <childnode refid="30786" relation="include">
        </childnode>
        <childnode refid="30805" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_app_in_output___manager___s" prot="public">AppInOutput_Manager_S</innerclass>
    <innerclass refid="struct_content_base___s" prot="public">ContentBase_S</innerclass>
    <innerclass refid="struct_content_handle___s" prot="public">ContentHandle_S</innerclass>
    <innerclass refid="struct_out_msg_recipe___s" prot="public">OutMsgRecipe_S</innerclass>
    <innerclass refid="struct_out_msg_serialization_handover___s" prot="public">OutMsgSerializationHandover_S</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_serval___msg_8h_1acdc1825ca4bb12bb33dab2c956fb5b4a" prot="public" static="no">
        <name>CB_DYNAMIC</name>
        <param><defname>index</defname></param>
        <initializer>( (index) &amp; ~0xC0 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="107" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___msg_8h_1a940cb2a60c493da4b30b1fd661491c37" prot="public" static="no">
        <name>CB_EXTERNAL</name>
        <param><defname>index</defname></param>
        <initializer>( (index) | 0x80 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="105" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___msg_8h_1a9cf4eb588feb32480c72f605c84f9ea0" prot="public" static="no">
        <name>CB_STATIC</name>
        <param><defname>index</defname></param>
        <initializer>( ((index) &amp; ~0x80) | ((index) | 0x40) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="106" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___msg_8h_1a30e713c8495e5100de03835a7715a6c8" prot="public" static="no">
        <name>SERVAL_MAX_NUM_MSG_PARTS</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The threshold on the number of message part factories. Notice that an OutMsgFactory consists of a list of part factories which are responsible for serializing the message parts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="40" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___msg_8h_1a58c636746f4397f7b83783a7026e3c3c" prot="public" static="no">
        <name>SERVAL_MSG_MONITOR_TIMEOUT</name>
        <initializer>2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>define the timeout in ms for garbage collection of messages it must be a Multiple of RESOURCE_MONITOR_PERIODE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="50" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___msg_8h_1a95aac432dccbba2fc02ffed4d8ce381f" prot="public" static="no">
        <name>SERVAL_MSG_MONITOR_TRACE_TIMEOUT</name>
        <initializer>(<ref refid="_serval___msg_8h_1a58c636746f4397f7b83783a7026e3c3c" kindref="member">SERVAL_MSG_MONITOR_TIMEOUT</ref> * (1 + SERVAL_LOG_LEVEL/3))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="54" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_serval___msg_8h_1ab0a54c0b450f8d11fca98eb4bfbbbb8a" prot="public" static="no">
        <type><ref refid="_serval___msg_8h_1af29aecb4103bc7942714cfb09979614b" kindref="member">AppSentCallback_T</ref></type>
        <definition>typedef AppSentCallback_T AppCallback_T</definition>
        <argsstring></argsstring>
        <name>AppCallback_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type representing a callback function pointer for application. The application uses such callback functions in order to be notified about the sending result of outgoing messages. <xrefsect id="deprecated_1_deprecated000064"><xreftitle>Deprecated</xreftitle><xrefdescription><para>The type AppSentCallback_T should be used instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="281" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1ad493589255c5834eee2be7d2edd84cac" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* AppInOutput_AllocInputFunc_T)(AppInput_T **)</definition>
        <argsstring>)(AppInput_T **)</argsstring>
        <name>AppInOutput_AllocInputFunc_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="313" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1a661f6d379f652d167c28fcfd9ee584e0" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* AppInOutput_AllocOutputFunc_T)(AppOutput_T **)</definition>
        <argsstring>)(AppOutput_T **)</argsstring>
        <name>AppInOutput_AllocOutputFunc_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="319" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1a9ad34418939e8d70834d8ff8fcfbcb0d" prot="public" static="no">
        <type>struct <ref refid="struct_app_in_output___manager___s" kindref="compound">AppInOutput_Manager_S</ref></type>
        <definition>typedef struct AppInOutput_Manager_S AppInOutput_Manager_T</definition>
        <argsstring></argsstring>
        <name>AppInOutput_Manager_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The data structure which holds all functions to manage application&apos;s input and output objects.</para><para><simplesect kind="see"><para>struct <ref refid="struct_app_in_output___manager___s" kindref="compound">AppInOutput_Manager_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="281" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1a2e8b23d5da329484d412471ac3cd13f5" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* AppInOutput_ReleaseInputFunc_T)(AppInput_T *)</definition>
        <argsstring>)(AppInput_T *)</argsstring>
        <name>AppInOutput_ReleaseInputFunc_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="325" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1aac7e7a7707662d73b768a5e11172a681" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* AppInOutput_ReleaseOutputFunc_T)(AppOutput_T *)</definition>
        <argsstring>)(AppOutput_T *)</argsstring>
        <name>AppInOutput_ReleaseOutputFunc_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="331" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1a19b64d465820ca71f3010d134cd32eeb" prot="public" static="no">
        <type>union AppInput_U</type>
        <definition>typedef union AppInput_U AppInput_T</definition>
        <argsstring></argsstring>
        <name>AppInput_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type that represents application&apos;s input object.</para><para>Notice that the union itself is defined in the application.</para><para><simplesect kind="see"><para>union AppInput_U </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="281" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1a30e732f5763e923797320e48634d088e" prot="public" static="no">
        <type>union AppOutput_U</type>
        <definition>typedef union AppOutput_U AppOutput_T</definition>
        <argsstring></argsstring>
        <name>AppOutput_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type that represents application&apos;s output object.</para><para>Notice that the union itself is defined in the application.</para><para><simplesect kind="see"><para>union AppOutput_U </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="281" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1af29aecb4103bc7942714cfb09979614b" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* AppSentCallback_T)(Msg_T *msg_ptr, retcode_t status)</definition>
        <argsstring>)(Msg_T *msg_ptr, retcode_t status)</argsstring>
        <name>AppSentCallback_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type representing a callback function pointer for application. The application uses such callback functions in order to be notified about the sending result of outgoing messages. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="273" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1a53fc26dd3130322d9acc642fb8bfe2a7" prot="public" static="no">
        <type>struct <ref refid="struct_content_base___s" kindref="compound">ContentBase_S</ref></type>
        <definition>typedef struct ContentBase_S ContentBase_T</definition>
        <argsstring></argsstring>
        <name>ContentBase_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This holds the information about various content bases from where a message will be constructed using message recipe.</para><para><simplesect kind="see"><para>struct <ref refid="struct_content_base___s" kindref="compound">ContentBase_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="104" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1a53656309ee47365f9bdffd0e493de25f" prot="public" static="no">
        <type>struct <ref refid="struct_content_handle___s" kindref="compound">ContentHandle_S</ref></type>
        <definition>typedef struct ContentHandle_S ContentHandle_T</definition>
        <argsstring></argsstring>
        <name>ContentHandle_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This represents a handle for a content from content base.</para><para><simplesect kind="see"><para>struct <ref refid="struct_content_handle___s" kindref="compound">ContentHandle_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="104" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1ac0aec8f118da4a411e69090fa3d3f889" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* DynamicContent_T)(OutMsgSerializationHandover_T *)</definition>
        <argsstring>)(OutMsgSerializationHandover_T *)</argsstring>
        <name>DynamicContent_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type for functions which serialize a dynamic content of an outgoing message. The OutMsgSerializationHandover_T object handed in as a a parameter encapsulates all input and output information which might be needed by the function. The function should serialize the content into the buffer given in the OutMsgSerializationHandover_T object and return RC_OK. The field bufLen gives the maximal length which the function is allowed to write into the buffer. If the bufLen is too small to serialize the entire content, then no bytes should be written and the function should return RC_MSG_FACTORY_INCOMPLETE. The function must set the field len to the number of written bytes. Both offset and position must not be touched by the function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="154" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" prot="public" static="no">
        <type>struct Msg_S</type>
        <definition>typedef struct Msg_S Msg_T</definition>
        <argsstring></argsstring>
        <name>Msg_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Message Data Types The data structure for a messaging context. An element of this struct represents the context of a messaging session of any supported pattern, e.g. Request/Response, Request/No-Response, ... This means, it holds all information about a complete communication cycle, rather than just one message.</para><para><simplesect kind="see"><para>struct Msg_S </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="479" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1aa061b8fc18d02e4d09e14a5b8b47b67c" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* MsgOnSentCallback_T)(Msg_T *msg_ptr, retcode_t status)</definition>
        <argsstring>)(Msg_T *msg_ptr, retcode_t status)</argsstring>
        <name>MsgOnSentCallback_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type representing a callback function pointer to inform an upper layer that the lower layer has completed sending the message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="79" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1abc6e55d820d2dbb8950162e9baa35940" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* OutMsgPartFactoryFunc_T)(OutMsgSerializationHandover_T *)</definition>
        <argsstring>)(OutMsgSerializationHandover_T *)</argsstring>
        <name>OutMsgPartFactoryFunc_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type for message part factory functions. These are function which are responsible for serializing a part of an outgoing message. An OutMsgFactory_T object consists of a list of such part factories. The OutMsgSerializationHandover_T object handed in as a a parameter encapsulates all input and output information which might be needed by the part factory. The part factory should serialize the content into the buffer given in the OutMsgSerializationHandover_T object and return RC_OK. The field bufLen gives the maximal length which the function is allowed to write into the buffer. If the bufLen is too small to serialize the entire content, then the part factory can serialize a segment of its part and return RC_MSG_FACTORY_INCOMPLETE. Both fields offset and position can be used by the part factory in order to mark the position at which it should start the serialization in the next chunk. In any case, the function must set the field len to the number of written bytes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="174" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1ad6397bad63999489219ac10022fba15d" prot="public" static="no">
        <type>struct <ref refid="struct_out_msg_recipe___s" kindref="compound">OutMsgRecipe_S</ref></type>
        <definition>typedef struct OutMsgRecipe_S OutMsgRecipe_T</definition>
        <argsstring></argsstring>
        <name>OutMsgRecipe_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This represents a recipe for outgoing message construction.</para><para><simplesect kind="see"><para>struct <ref refid="struct_out_msg_recipe___s" kindref="compound">OutMsgRecipe_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="104" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1a446745d0bbe6255300c09f1cb6599733" prot="public" static="no">
        <type>struct <ref refid="struct_out_msg_serialization_handover___s" kindref="compound">OutMsgSerializationHandover_S</ref></type>
        <definition>typedef struct OutMsgSerializationHandover_S OutMsgSerializationHandover_T</definition>
        <argsstring></argsstring>
        <name>OutMsgSerializationHandover_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This data structure is used hold the buffer and information needed by the serializer to append the data at the right place.</para><para><simplesect kind="see"><para>struct <ref refid="struct_out_msg_serialization_handover___s" kindref="compound">OutMsgSerializationHandover_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="104" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___msg_8h_1a39c086e5005afdad5a67ff27c5c1e2b5" prot="public" static="no">
        <type>uint8_t const *</type>
        <definition>typedef uint8_t const* RecipeTable_T</definition>
        <argsstring></argsstring>
        <name>RecipeTable_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This represents a recipe for message construction. It is a list of entries. Each entry references an element of a given content base. Notice that a recipe is only defined in relation to a certain content base. Each entry of the recipe consists of 8 bits. If the most significant bit is set to 1, then the entry is interpreted as a reference to an external element of the content base. The remaining 7 bits indicate the index of the element in the external elements table. If the most significant bit is 0 and the following bit is set to 1, then the entry is interpreted as a reference to a static element of the content base. The remaining 6 bits indicate the index of the element in the static elements table. If both most significant 2 bits are 0, then the entry is interpreted as a reference to a dynamic element of the content base. The remaining 6 bits indicate the index of the element in the dynamic elements table.</para><para>This scheme results in that the recipe can reference at most 128 external elements, 64 static elements, and 64 dynamic elements.</para><para>use the macros CB_EXTERNAL, CB_STATIC, CB_DYNAMIC for easier access (since 1.5)</para><para><simplesect kind="see"><para><ref refid="_serval___msg_8h_1a53fc26dd3130322d9acc642fb8bfe2a7" kindref="member">ContentBase_T</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="104" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___msg_8h_1a6c56342ed53d40c3dac9a33cdd4522c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Msg_close</definition>
        <argsstring>(Msg_T *msg_ptr)</argsstring>
        <name>Msg_close</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to close a previously allocated message. After this call the message will be released form the message pool.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a Msg_T object which holds the message to be closed. It has to be a valid pointer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___msg_8h_1a57c5296db698b5bed416b0cdba35e26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref> *</type>
        <definition>Callable_T* Msg_defineCallback</definition>
        <argsstring>(Msg_T *msg_ptr, CallableFunc_T callback)</argsstring>
        <name>Msg_defineCallback</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___callable_8h_1a6db595a6161d5ec5d75d560bd11d9ff2" kindref="member">CallableFunc_T</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to initialize callback in the given message. This callback will be invoked to signal completion of sending.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a Msg_T object which holds the current message. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a CallableFunc_T object, this holds the callback to be assigned. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___msg_8h_1a7157317e87987104713755b6484bfcef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref> *</type>
        <definition>Callable_T* Msg_getCallback</definition>
        <argsstring>(Msg_T *msg_ptr)</argsstring>
        <name>Msg_getCallback</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___msg_8h_1ab6c7330f1b18a57fa87b7e0536e39bd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t TcpMsg_copyContentAtomic</definition>
        <argsstring>(OutMsgSerializationHandover_T *omsh_ptr, const void *content, uint16_t contentLength)</argsstring>
        <name>TcpMsg_copyContentAtomic</name>
        <param>
          <type><ref refid="_serval___msg_8h_1a446745d0bbe6255300c09f1cb6599733" kindref="member">OutMsgSerializationHandover_T</ref> *</type>
          <declname>omsh_ptr</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>content</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>contentLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialize content of length contentLength into the buffer contained in omsh_ptr. If the buffer can hold the entire content, RC_OK is returned. However, in contrast to TcpMsg_copyStaticContent, if the content does not fit, no data is written to the buffer and RC_MSG_FACTORY_INCOMPLETE is returned.</para><para>It is expected, that the calling function will return this error code to its caller, triggering a further call by the message serialization core. In that call, TcpMsg_copyContentAtomic must me called with precisely the same values for content and contentLength in order to resume serialization.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">omsh_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The structure holding serialization information such as the maximum size or the current position of the data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_serval___msg_8h_1a446745d0bbe6255300c09f1cb6599733" kindref="member">OutMsgSerializationHandover_T</ref>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">content</parametername>
</parameternamelist>
<parameterdescription>
<para>The content to be copied into the message</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the content to be serialized</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK if the content has been copied completely RC_MSG_FACTORY_INCOMPLETE if only parts of the content have been copied </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___msg_8h_1a543f8010cb1951680340bfbcf51ac755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t TcpMsg_copyStaticContent</definition>
        <argsstring>(OutMsgSerializationHandover_T *omsh_ptr, const void *content, uint16_t contentLength)</argsstring>
        <name>TcpMsg_copyStaticContent</name>
        <param>
          <type><ref refid="_serval___msg_8h_1a446745d0bbe6255300c09f1cb6599733" kindref="member">OutMsgSerializationHandover_T</ref> *</type>
          <declname>omsh_ptr</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>content</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>contentLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialize content of length contentLength into the buffer contained in omsh_ptr. If the buffer can hold the entire content, RC_OK is returned. If the content does not fit, part of the content is copied into the message, the offset field of omsh_ptr is manipulated to store the amount of already serialized content for a subsequent call, and RC_MSG_FACTORY_INCOMPLETE is returned.</para><para>It is expected, that the calling function will return this error code to its caller, triggering a further call by the message serialization core. In that call, TcpMsg_copyStaticContent must me called with precisely the same values for content and contentLength in order to resume serialization.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">omsh_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The structure holding serialization information such as the maximum size or the current position of the data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_serval___msg_8h_1a446745d0bbe6255300c09f1cb6599733" kindref="member">OutMsgSerializationHandover_T</ref>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">content</parametername>
</parameternamelist>
<parameterdescription>
<para>The content to be copied into the message</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">contentLength</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the content to be serialized</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK if the content has been copied completely RC_MSG_FACTORY_INCOMPLETE if only parts of the content have been copied </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___msg_8h_1a616a2cd47466c68e076bcff30c3573d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t TcpMsg_prependPartFactory</definition>
        <argsstring>(Msg_T *msg_ptr, OutMsgPartFactoryFunc_T partFactoryFunc_ptr)</argsstring>
        <name>TcpMsg_prependPartFactory</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___msg_8h_1abc6e55d820d2dbb8950162e9baa35940" kindref="member">OutMsgPartFactoryFunc_T</ref></type>
          <declname>partFactoryFunc_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function adds a function to the factory of the given message, that should add or modify the current data in the buffer by serializing a specific recipe or adding a header or ending etc...</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the message. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">partFactoryFunc_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The function pointer that should be added to the list of part factory functions.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK <linebreak/>
 RC_MSG_FACTORY_SIZE_ERROR if there is no place to accommodate the new part factory.<linebreak/>
 RC_MSG_FACTORY_ALREADY_COMMITTED if the factory is already committed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h" line="398" column="1"/>
        <referencedby refid="_serval___msg___obsolete_8h_1ab0af988cfce9efd26b0e836024a14870" compoundref="_serval___msg___obsolete_8h" startline="565" endline="568">Msg_prependPartFactory</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interface to the Messaging Module.</para><para>This interface provides type definitions, data types and functions to handle messages. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor">#ifndef<sp/>MSG_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MSG_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___defines_8h" kindref="compound">Serval_Defines.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___types_8h" kindref="compound">Serval_Types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___string_descr_8h" kindref="compound">Serval_StringDescr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___xml_parser_8h" kindref="compound">Serval_XmlParser.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___filesystem_8h" kindref="compound">Serval_Filesystem.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___callable_8h" kindref="compound">Serval_Callable.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___ip_8h" kindref="compound">Serval_Ip.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___policy_8h" kindref="compound">Serval_Policy.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="_serval___msg_8h_1a30e713c8495e5100de03835a7715a6c8" refkind="member"><highlight class="preprocessor">#define<sp/>SERVAL_MAX_NUM_MSG_PARTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_MAX_NUM_MSG_PARTS<sp/>&gt;<sp/>127</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;At<sp/>most<sp/>127<sp/>message<sp/>parts<sp/>are<sp/>supported&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor">#ifndef<sp/>SERVAL_MSG_MONITOR_TIMEOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="_serval___msg_8h_1a58c636746f4397f7b83783a7026e3c3c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_MSG_MONITOR_TIMEOUT<sp/>2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Message<sp/>timeout<sp/>correction<sp/>in<sp/>case<sp/>of<sp/>trace<sp/>level<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="_serval___msg_8h_1a95aac432dccbba2fc02ffed4d8ce381f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_MSG_MONITOR_TRACE_TIMEOUT<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/>(SERVAL_MSG_MONITOR_TIMEOUT<sp/>*<sp/>(1<sp/>+<sp/>SERVAL_LOG_LEVEL/3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Msg_S<sp/><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="_serval___msg_8h_1aa061b8fc18d02e4d09e14a5b8b47b67c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___msg_8h_1aa061b8fc18d02e4d09e14a5b8b47b67c" kindref="member">MsgOnSentCallback_T</ref>)(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>status);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="_serval___msg_8h_1a39c086e5005afdad5a67ff27c5c1e2b5" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_serval___msg_8h_1a39c086e5005afdad5a67ff27c5c1e2b5" kindref="member">RecipeTable_T</ref>;</highlight></codeline>
<codeline lineno="105" refid="_serval___msg_8h_1a940cb2a60c493da4b30b1fd661491c37" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CB_EXTERNAL(index)<sp/>(<sp/>(index)<sp/>|<sp/>0x80<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="_serval___msg_8h_1a9cf4eb588feb32480c72f605c84f9ea0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CB_STATIC(index)<sp/><sp/><sp/>(<sp/>((index)<sp/>&amp;<sp/>~0x80)<sp/>|<sp/>((index)<sp/>|<sp/>0x40)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="_serval___msg_8h_1acdc1825ca4bb12bb33dab2c956fb5b4a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CB_DYNAMIC(index)<sp/><sp/>(<sp/>(index)<sp/>&amp;<sp/>~0xC0<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="_serval___msg_8h_1a53fc26dd3130322d9acc642fb8bfe2a7" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_content_base___s" kindref="compound">ContentBase_S</ref><sp/><ref refid="struct_content_base___s" kindref="compound">ContentBase_T</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="_serval___msg_8h_1a53656309ee47365f9bdffd0e493de25f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_content_handle___s" kindref="compound">ContentHandle_S</ref><sp/><ref refid="struct_content_handle___s" kindref="compound">ContentHandle_T</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="_serval___msg_8h_1ad6397bad63999489219ac10022fba15d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_out_msg_recipe___s" kindref="compound">OutMsgRecipe_S</ref><sp/><ref refid="struct_out_msg_recipe___s" kindref="compound">OutMsgRecipe_T</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="_serval___msg_8h_1a446745d0bbe6255300c09f1cb6599733" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_out_msg_serialization_handover___s" kindref="compound">OutMsgSerializationHandover_S</ref><sp/><ref refid="struct_out_msg_serialization_handover___s" kindref="compound">OutMsgSerializationHandover_T</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="_serval___msg_8h_1ac0aec8f118da4a411e69090fa3d3f889" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___msg_8h_1ac0aec8f118da4a411e69090fa3d3f889" kindref="member">DynamicContent_T</ref>)(<ref refid="struct_out_msg_serialization_handover___s" kindref="compound">OutMsgSerializationHandover_T</ref><sp/>*);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="_serval___msg_8h_1abc6e55d820d2dbb8950162e9baa35940" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___msg_8h_1abc6e55d820d2dbb8950162e9baa35940" kindref="member">OutMsgPartFactoryFunc_T</ref>)(<ref refid="struct_out_msg_serialization_handover___s" kindref="compound">OutMsgSerializationHandover_T</ref><sp/>*);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="struct_out_msg_serialization_handover___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_out_msg_serialization_handover___s" kindref="compound">OutMsgSerializationHandover_S</ref></highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190" refid="struct_out_msg_serialization_handover___s_1a92f3f0a99936b67a2db12e6bab0d8c23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref>*<sp/><ref refid="struct_out_msg_serialization_handover___s_1a92f3f0a99936b67a2db12e6bab0d8c23" kindref="member">msg_ptr</ref>;</highlight></codeline>
<codeline lineno="192" refid="struct_out_msg_serialization_handover___s_1a753960e1acc54fb588209876a65bd04f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_out_msg_serialization_handover___s_1a753960e1acc54fb588209876a65bd04f" kindref="member">buf_ptr</ref>;</highlight></codeline>
<codeline lineno="194" refid="struct_out_msg_serialization_handover___s_1ab325e42b7c2a85c47405651cbae510ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_out_msg_serialization_handover___s_1ab325e42b7c2a85c47405651cbae510ce" kindref="member">bufLen</ref>;</highlight></codeline>
<codeline lineno="196" refid="struct_out_msg_serialization_handover___s_1a29b5297d3393519050e3126c4cb07c1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_out_msg_serialization_handover___s_1a29b5297d3393519050e3126c4cb07c1c" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="198" refid="struct_out_msg_serialization_handover___s_1a8aed22e2c7b283705ec82e0120515618" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_out_msg_serialization_handover___s_1a8aed22e2c7b283705ec82e0120515618" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="200" refid="struct_out_msg_serialization_handover___s_1a1d7b72031fa39d396d531503904f337b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_out_msg_serialization_handover___s_1a1d7b72031fa39d396d531503904f337b" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">};</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="struct_content_base___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_content_base___s" kindref="compound">ContentBase_S</ref></highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212" refid="struct_content_base___s_1a54c4ba947817cfce3d51eab6ff4eb942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_content_base___s_1a54c4ba947817cfce3d51eab6ff4eb942" kindref="member">externalContentIndex</ref>;</highlight></codeline>
<codeline lineno="213" refid="struct_content_base___s_1abece736622f2cb2118f1fb6fbf97a570" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___p_a_l___f_i_l_e_s_y_s_t_e_m_1gacff9165806f49d450d7711e3aa55fc49" kindref="member">FileHandle_T</ref><sp/><ref refid="struct_content_base___s_1abece736622f2cb2118f1fb6fbf97a570" kindref="member">externalContentFileHandle</ref>;</highlight></codeline>
<codeline lineno="214" refid="struct_content_base___s_1a44ad3d2d9aa381b7bb6c6c9b3579e71b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1ac0aec8f118da4a411e69090fa3d3f889" kindref="member">DynamicContent_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_content_base___s_1a44ad3d2d9aa381b7bb6c6c9b3579e71b" kindref="member">dynamicContentIndex</ref>;</highlight></codeline>
<codeline lineno="215" refid="struct_content_base___s_1a92195cf1020204f8c75fb7cb6acfc9a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_content_base___s_1a92195cf1020204f8c75fb7cb6acfc9a2" kindref="member">staticContentIndex</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">};</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="struct_out_msg_recipe___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_out_msg_recipe___s" kindref="compound">OutMsgRecipe_S</ref></highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226" refid="struct_out_msg_recipe___s_1a0fbad3e3a90115924d1614ad8c65a30a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_content_base___s" kindref="compound">ContentBase_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_out_msg_recipe___s_1a0fbad3e3a90115924d1614ad8c65a30a" kindref="member">contentBase_ptr</ref>;</highlight></codeline>
<codeline lineno="228" refid="struct_out_msg_recipe___s_1a9514a3931fdb9e4393165c5397997bb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_out_msg_recipe___s_1a9514a3931fdb9e4393165c5397997bb9" kindref="member">recipeLen</ref>;</highlight></codeline>
<codeline lineno="230" refid="struct_out_msg_recipe___s_1a11a044bdd494bb44771ac406d97edbcb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1a39c086e5005afdad5a67ff27c5c1e2b5" kindref="member">RecipeTable_T</ref><sp/><ref refid="struct_out_msg_recipe___s_1a11a044bdd494bb44771ac406d97edbcb" kindref="member">recipe</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="struct_content_handle___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_content_handle___s" kindref="compound">ContentHandle_S</ref></highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241" refid="struct_content_handle___s_1a3f31c2f593fc778dde311c6d3ccbe22d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_content_base___s" kindref="compound">ContentBase_T</ref><sp/>*<ref refid="struct_content_handle___s_1a3f31c2f593fc778dde311c6d3ccbe22d" kindref="member">contentBase_ptr</ref>;</highlight></codeline>
<codeline lineno="243" refid="struct_content_handle___s_1aae5a12e607d0f782506d9e6ec6179c64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_content_handle___s_1aae5a12e607d0f782506d9e6ec6179c64" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_GENERIC_AUTHORIZATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="keyword">union<sp/></highlight><highlight class="normal">AuthorizationToken_U</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>id;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>mask;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>custom;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">AuthorizationToken_U<sp/>AuthorizationToken_T;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>Application<sp/>In-<sp/>and<sp/>Output<sp/>and<sp/>Callback<sp/>Functions</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="_serval___msg_8h_1af29aecb4103bc7942714cfb09979614b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_serval___msg_8h_1af29aecb4103bc7942714cfb09979614b" kindref="member">AppSentCallback_T</ref>)(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>status);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="_serval___msg_8h_1ab0a54c0b450f8d11fca98eb4bfbbbb8a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___msg_8h_1af29aecb4103bc7942714cfb09979614b" kindref="member">AppSentCallback_T</ref><sp/><ref refid="_serval___msg_8h_1ab0a54c0b450f8d11fca98eb4bfbbbb8a" kindref="member">AppCallback_T</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="_serval___msg_8h_1a19b64d465820ca71f3010d134cd32eeb" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">AppInput_U<sp/><ref refid="_serval___msg_8h_1a19b64d465820ca71f3010d134cd32eeb" kindref="member">AppInput_T</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="_serval___msg_8h_1a30e732f5763e923797320e48634d088e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">AppOutput_U<sp/><ref refid="_serval___msg_8h_1a30e732f5763e923797320e48634d088e" kindref="member">AppOutput_T</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="_serval___msg_8h_1a9ad34418939e8d70834d8ff8fcfbcb0d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_app_in_output___manager___s" kindref="compound">AppInOutput_Manager_S</ref><sp/><ref refid="struct_app_in_output___manager___s" kindref="compound">AppInOutput_Manager_T</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>AppInOutput_AllocInputFunc_T<sp/>represents<sp/>a<sp/>function<sp/>pointer<sp/>for<sp/>allocating</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>application<sp/>input<sp/>objects.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="_serval___msg_8h_1ad493589255c5834eee2be7d2edd84cac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___msg_8h_1ad493589255c5834eee2be7d2edd84cac" kindref="member">AppInOutput_AllocInputFunc_T</ref>)(<ref refid="_serval___msg_8h_1a19b64d465820ca71f3010d134cd32eeb" kindref="member">AppInput_T</ref>**);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/>AppInOutput_AllocOutputFunc_T<sp/>represents<sp/>a<sp/>function<sp/>pointer<sp/>for<sp/>allocating</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>application<sp/>output<sp/>objects.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="_serval___msg_8h_1a661f6d379f652d167c28fcfd9ee584e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___msg_8h_1a661f6d379f652d167c28fcfd9ee584e0" kindref="member">AppInOutput_AllocOutputFunc_T</ref>)(<ref refid="_serval___msg_8h_1a30e732f5763e923797320e48634d088e" kindref="member">AppOutput_T</ref>**);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>AppInOutput_ReleaseInputFunc_T<sp/>represents<sp/>a<sp/>function<sp/>pointer<sp/>for<sp/>releasing</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>application<sp/>input<sp/>objects.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="_serval___msg_8h_1a2e8b23d5da329484d412471ac3cd13f5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___msg_8h_1a2e8b23d5da329484d412471ac3cd13f5" kindref="member">AppInOutput_ReleaseInputFunc_T</ref>)(<ref refid="_serval___msg_8h_1a19b64d465820ca71f3010d134cd32eeb" kindref="member">AppInput_T</ref>*);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>AppInOutput_ReleaseOutputFunc_T<sp/>represents<sp/>a<sp/>function<sp/>pointer<sp/>for<sp/>releasing</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>application<sp/>output<sp/>objects.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="_serval___msg_8h_1aac7e7a7707662d73b768a5e11172a681" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___msg_8h_1aac7e7a7707662d73b768a5e11172a681" kindref="member">AppInOutput_ReleaseOutputFunc_T</ref>)(<ref refid="_serval___msg_8h_1a30e732f5763e923797320e48634d088e" kindref="member">AppOutput_T</ref>*);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="struct_app_in_output___manager___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_app_in_output___manager___s" kindref="compound">AppInOutput_Manager_S</ref></highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347" refid="struct_app_in_output___manager___s_1a280badde018ca1e8fbbd614db489b960" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1ad493589255c5834eee2be7d2edd84cac" kindref="member">AppInOutput_AllocInputFunc_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_app_in_output___manager___s_1a280badde018ca1e8fbbd614db489b960" kindref="member">allocInput</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="struct_app_in_output___manager___s_1ae520b5b7d0a2279ffa541a64500788ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1a2e8b23d5da329484d412471ac3cd13f5" kindref="member">AppInOutput_ReleaseInputFunc_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_app_in_output___manager___s_1ae520b5b7d0a2279ffa541a64500788ce" kindref="member">releaseInput</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="struct_app_in_output___manager___s_1af27962835072db6ef68e33da361e5312" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1a661f6d379f652d167c28fcfd9ee584e0" kindref="member">AppInOutput_AllocOutputFunc_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_app_in_output___manager___s_1af27962835072db6ef68e33da361e5312" kindref="member">allocOutput</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="struct_app_in_output___manager___s_1a96728712bf51204395cdd696ca69c0c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1aac7e7a7707662d73b768a5e11172a681" kindref="member">AppInOutput_ReleaseOutputFunc_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_app_in_output___manager___s_1a96728712bf51204395cdd696ca69c0c5" kindref="member">releaseOutput</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">};</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___msg_8h_1a6c56342ed53d40c3dac9a33cdd4522c9" kindref="member">Msg_close</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___msg_8h_1a616a2cd47466c68e076bcff30c3573d7" kindref="member">TcpMsg_prependPartFactory</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1abc6e55d820d2dbb8950162e9baa35940" kindref="member">OutMsgPartFactoryFunc_T</ref><sp/>partFactoryFunc_ptr);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___msg_8h_1a543f8010cb1951680340bfbcf51ac755" kindref="member">TcpMsg_copyStaticContent</ref>(<ref refid="struct_out_msg_serialization_handover___s" kindref="compound">OutMsgSerializationHandover_T</ref>*<sp/>omsh_ptr,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>content,<sp/>uint16_t<sp/>contentLength);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___msg_8h_1ab6c7330f1b18a57fa87b7e0536e39bd9" kindref="member">TcpMsg_copyContentAtomic</ref>(<ref refid="struct_out_msg_serialization_handover___s" kindref="compound">OutMsgSerializationHandover_T</ref>*<sp/>omsh_ptr,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>content,<sp/>uint16_t<sp/>contentLength);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><ref refid="struct_callable___s" kindref="compound">Callable_T</ref><sp/>*<ref refid="_serval___msg_8h_1a57c5296db698b5bed416b0cdba35e26a" kindref="member">Msg_defineCallback</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/><ref refid="_serval___callable_8h_1a6db595a6161d5ec5d75d560bd11d9ff2" kindref="member">CallableFunc_T</ref><sp/>callback);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><ref refid="struct_callable___s" kindref="compound">Callable_T</ref>*<sp/><ref refid="_serval___msg_8h_1a7157317e87987104713755b6484bfcef" kindref="member">Msg_getCallback</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_GENERIC_AUTHORIZATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">AuthorizationToken_T<sp/>Msg_getAuthorizationToken(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Msg_setAuthorizationToken(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/>AuthorizationToken_T<sp/>token);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Msg_setAuthorizationTokenId(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/>uint16_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Msg_setAuthorizationTokenMask(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/>uint16_t<sp/>mask);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Msg_setAuthorizationTokenCustom(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>custom);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor">#if<sp/>(SERVAL_MSG_MONITOR_TIMEOUT<sp/>%<sp/>SERVAL_RESOURCE_MONITOR_PERIODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>SERVAL_MSG_MONITOR_TIMEOUT<sp/>must<sp/>be<sp/>a<sp/>multiple<sp/>of<sp/>RESOURCE_MONITOR_PERIODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Old,<sp/>obsolete<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___msg___obsolete_8h" kindref="compound">Serval_Msg_Obsolete.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MSG_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h"/>
  </compounddef>
</doxygen>
