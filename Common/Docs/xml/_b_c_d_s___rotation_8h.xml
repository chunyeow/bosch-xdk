<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_b_c_d_s___rotation_8h" kind="file">
    <compoundname>BCDS_Rotation.h</compoundname>
    <includes refid="_b_c_d_s___retcode_8h" local="yes">BCDS_Retcode.h</includes>
    <includedby refid="_x_d_k___sensor_handle_8h" local="yes">SDK/xdk110/Common/include/Sensor/XDK_SensorHandle.h</includedby>
    <incdepgraph>
      <node id="38292">
        <label>stdbool.h</label>
      </node>
      <node id="38291">
        <label>stdint.h</label>
      </node>
      <node id="38289">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="38290" relation="include">
        </childnode>
      </node>
      <node id="38294">
        <label>stdlib.h</label>
      </node>
      <node id="38288">
        <label>SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h</label>
        <link refid="BCDS_Rotation.h"/>
        <childnode refid="38289" relation="include">
        </childnode>
      </node>
      <node id="38293">
        <label>string.h</label>
      </node>
      <node id="38290">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="38291" relation="include">
        </childnode>
        <childnode refid="38292" relation="include">
        </childnode>
        <childnode refid="38293" relation="include">
        </childnode>
        <childnode refid="38294" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="38302">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceEnvironment.c</label>
        <link refid="_l_w_m2_m_sensor_device_environment_8c"/>
      </node>
      <node id="38304">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceIlluminance.c</label>
        <link refid="_l_w_m2_m_sensor_device_illuminance_8c"/>
      </node>
      <node id="38301">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceAccelerometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_accelerometer_8c"/>
      </node>
      <node id="38307">
        <label>SDK/xdk110/Common/legacy/include/XdkSensorHandle.h</label>
        <link refid="_xdk_sensor_handle_8h"/>
      </node>
      <node id="38299">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.c</label>
        <link refid="_l_w_m2_m_object_sensor_device_8c"/>
      </node>
      <node id="38305">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceMagnetometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_magnetometer_8c"/>
      </node>
      <node id="38300">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectTemperature.c</label>
        <link refid="_l_w_m2_m_object_temperature_8c"/>
      </node>
      <node id="38295">
        <label>SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h</label>
        <link refid="BCDS_Rotation.h"/>
        <childnode refid="38296" relation="include">
        </childnode>
      </node>
      <node id="38296">
        <label>SDK/xdk110/Common/include/Sensor/XDK_SensorHandle.h</label>
        <link refid="_x_d_k___sensor_handle_8h"/>
        <childnode refid="38297" relation="include">
        </childnode>
        <childnode refid="38298" relation="include">
        </childnode>
        <childnode refid="38299" relation="include">
        </childnode>
        <childnode refid="38300" relation="include">
        </childnode>
        <childnode refid="38301" relation="include">
        </childnode>
        <childnode refid="38302" relation="include">
        </childnode>
        <childnode refid="38303" relation="include">
        </childnode>
        <childnode refid="38304" relation="include">
        </childnode>
        <childnode refid="38305" relation="include">
        </childnode>
        <childnode refid="38306" relation="include">
        </childnode>
        <childnode refid="38307" relation="include">
        </childnode>
      </node>
      <node id="38298">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectHumidity.c</label>
        <link refid="_l_w_m2_m_object_humidity_8c"/>
      </node>
      <node id="38303">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceGyroscope.c</label>
        <link refid="_l_w_m2_m_sensor_device_gyroscope_8c"/>
      </node>
      <node id="38297">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.c</label>
        <link refid="_l_w_m2_m_object_barometer_8c"/>
      </node>
      <node id="38306">
        <label>SDK/xdk110/Common/source/Sensor/SensorHandle.c</label>
        <link refid="_sensor_handle_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_rotation___euler_data___s" prot="public">Rotation_EulerData_S</innerclass>
    <innerclass refid="struct_rotation___quaternion_data___s" prot="public">Rotation_QuaternionData_S</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___r_o_t_a_t_i_o_n_1ga9aa9a1743625d253ce534ace8607984f" prot="public" static="no">
        <name>Rotation_InitStatus_E</name>
        <enumvalue id="group___r_o_t_a_t_i_o_n_1gga9aa9a1743625d253ce534ace8607984fabe02a667be9162b0d0621ff3156a91fb" prot="public">
          <name>ROTATION_SENSOR_UNINITIALISED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Specifies rotation sensor is uninitialised </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___r_o_t_a_t_i_o_n_1gga9aa9a1743625d253ce534ace8607984fa9fa72aed5924d176bf6364fe5c0d3e62" prot="public">
          <name>ROTATION_SENSOR_INITIALISED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Specifies rotation sensor is initialised </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enum values to represent Rotation sensor initialisation status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="88" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="87" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga861889134c39b596bed3bdd7971c1373" prot="public" static="no">
        <type>float</type>
        <definition>typedef float Rotation_DataType_T</definition>
        <argsstring></argsstring>
        <name>Rotation_DataType_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data type used for reading Rotation data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="84" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga9b6b5c443be7a48286e983c5b739722c" prot="public" static="no">
        <type>struct <ref refid="struct_rotation___euler_data___s" kindref="compound">Rotation_EulerData_S</ref></type>
        <definition>typedef struct Rotation_EulerData_S Rotation_EulerData_T</definition>
        <argsstring></argsstring>
        <name>Rotation_EulerData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="102" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1gaeea61e592d750a62d1f8c2fbe4511c5c" prot="public" static="no">
        <type>struct <ref refid="struct_rotation___euler_data___s" kindref="compound">Rotation_EulerData_S</ref> *</type>
        <definition>typedef struct Rotation_EulerData_S * Rotation_EulerDataPtr_T</definition>
        <argsstring></argsstring>
        <name>Rotation_EulerDataPtr_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="111" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga150d5a7c22603a2e984c1b06fbeb6ad0" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* Rotation_HandlePtr_T</definition>
        <argsstring></argsstring>
        <name>Rotation_HandlePtr_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the handle for Rotation sensor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="114" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga8a74055a5f9909b712328fd34760d78a" prot="public" static="no">
        <type>enum <ref refid="group___r_o_t_a_t_i_o_n_1ga9aa9a1743625d253ce534ace8607984f" kindref="member">Rotation_InitStatus_E</ref></type>
        <definition>typedef enum Rotation_InitStatus_E Rotation_InitStatus_T</definition>
        <argsstring></argsstring>
        <name>Rotation_InitStatus_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="84" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga7bd79444657f60ea363d007a8e8d5a0a" prot="public" static="no">
        <type>struct <ref refid="struct_rotation___quaternion_data___s" kindref="compound">Rotation_QuaternionData_S</ref></type>
        <definition>typedef struct Rotation_QuaternionData_S Rotation_QuaternionData_T</definition>
        <argsstring></argsstring>
        <name>Rotation_QuaternionData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="84" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___r_o_t_a_t_i_o_n_1ga247c8631a5472da804c5f5c0b16ce3d5" prot="public" static="no">
        <type>struct <ref refid="struct_rotation___quaternion_data___s" kindref="compound">Rotation_QuaternionData_S</ref> *</type>
        <definition>typedef struct Rotation_QuaternionData_S * Rotation_QuaternionDataPtr_T</definition>
        <argsstring></argsstring>
        <name>Rotation_QuaternionDataPtr_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="102" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___r_o_t_a_t_i_o_n_1ga882fa72761c0a55d276f4356f25b8c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Rotation_deInit</definition>
        <argsstring>(void)</argsstring>
        <name>Rotation_deInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>API to Deinitialise the rotation module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation sensor De-initialization success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" kindref="member">RETCODE_FAILURE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation sensor De-initialization failure</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>This API needs to be called when we require to stop the rotation data reading.</para></simplesect>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next Byte represents Severity and Last 2 LSBytes represents error code). </para></simplesect>
<simplesect kind="note"><para>Pass the return value of this function to #BCDS_getUserErrorCode() API to know the user type return code present in #BCDS_SensorErrorType.h. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___r_o_t_a_t_i_o_n_1ga4123b9f2d804083ae26763d65ce30e9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Rotation_init</definition>
        <argsstring>(Rotation_HandlePtr_T handle)</argsstring>
        <name>Rotation_init</name>
        <param>
          <type><ref refid="group___r_o_t_a_t_i_o_n_1ga150d5a7c22603a2e984c1b06fbeb6ad0" kindref="member">Rotation_HandlePtr_T</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Initializes the rotation sensor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Orientation_HandlePtr_T</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the rotation object that should be initialized</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation sensor initialization success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>In case of invalid sensor handle.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Refer #XdkSensorHandle.h for selecting the proper handle. </para></simplesect>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next Byte represents Severity and Last 2 LSBytes represents error code). </para></simplesect>
<simplesect kind="note"><para>Pass the return value of this function to #BCDS_getUserErrorCode() API to know the user type return code present in #BCDS_SensorErrorType.h. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___r_o_t_a_t_i_o_n_1gabee3b9ca61b5bba969d9025d14ebc9a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Rotation_readQuaternionValue</definition>
        <argsstring>(Rotation_QuaternionDataPtr_T quaternionValue)</argsstring>
        <name>Rotation_readQuaternionValue</name>
        <param>
          <type><ref refid="group___r_o_t_a_t_i_o_n_1ga247c8631a5472da804c5f5c0b16ce3d5" kindref="member">Rotation_QuaternionDataPtr_T</ref></type>
          <declname>quaternionValue</declname>
        </param>
        <briefdescription>
<para>Reads rotation quaternion value from the rotation sensor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">Rotation_QuaternionDataPtr_T</parametername>
</parameternamelist>
<parameterdescription>
<para>quaternionValue, output parameter in which the quaternion value will be written to, from within the function</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reading rotation quaternion value success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbaea901b927978b56cbfae3fa93c3ddfa4" kindref="member">RETCODE_UNINITIALIZED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>If called without initializing the sensor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>In case quaternionValue is a NULL pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next Byte represents Severity and Last 2 LSBytes represents error code). </para></simplesect>
<simplesect kind="note"><para>Pass the return value of this function to #BCDS_getUserErrorCode() API to know the user type return code present in #BCDS_SensorErrorType.h. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h" line="149" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="75"><highlight class="comment">/*<sp/>header<sp/>definition<sp/>********************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BCDS_ROTATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCDS_ROTATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>interface<sp/>declaration<sp/>*********************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___retcode_8h" kindref="compound">BCDS_Retcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>type<sp/>and<sp/>macro<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="group___r_o_t_a_t_i_o_n_1ga861889134c39b596bed3bdd7971c1373" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga861889134c39b596bed3bdd7971c1373" kindref="member">Rotation_DataType_T</ref>;<sp/></highlight></codeline>
<codeline lineno="87" refid="group___r_o_t_a_t_i_o_n_1ga9aa9a1743625d253ce534ace8607984f" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga9aa9a1743625d253ce534ace8607984f" kindref="member">Rotation_InitStatus_E</ref></highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89" refid="group___r_o_t_a_t_i_o_n_1gga9aa9a1743625d253ce534ace8607984fabe02a667be9162b0d0621ff3156a91fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_o_t_a_t_i_o_n_1gga9aa9a1743625d253ce534ace8607984fabe02a667be9162b0d0621ff3156a91fb" kindref="member">ROTATION_SENSOR_UNINITIALISED</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="90" refid="group___r_o_t_a_t_i_o_n_1gga9aa9a1743625d253ce534ace8607984fa9fa72aed5924d176bf6364fe5c0d3e62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_o_t_a_t_i_o_n_1gga9aa9a1743625d253ce534ace8607984fa9fa72aed5924d176bf6364fe5c0d3e62" kindref="member">ROTATION_SENSOR_INITIALISED</ref>,<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92" refid="group___r_o_t_a_t_i_o_n_1ga8a74055a5f9909b712328fd34760d78a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga9aa9a1743625d253ce534ace8607984f" kindref="member">Rotation_InitStatus_E</ref><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga8a74055a5f9909b712328fd34760d78a" kindref="member">Rotation_InitStatus_T</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="struct_rotation___quaternion_data___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_rotation___quaternion_data___s" kindref="compound">Rotation_QuaternionData_S</ref></highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97" refid="struct_rotation___quaternion_data___s_1ad4e64be21556a2192a2c90db351fd5e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga861889134c39b596bed3bdd7971c1373" kindref="member">Rotation_DataType_T</ref><sp/><ref refid="struct_rotation___quaternion_data___s_1ad4e64be21556a2192a2c90db351fd5e6" kindref="member">w</ref>;<sp/></highlight></codeline>
<codeline lineno="98" refid="struct_rotation___quaternion_data___s_1acca13e6274ff99de8d4d4ee7abaf9410" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga861889134c39b596bed3bdd7971c1373" kindref="member">Rotation_DataType_T</ref><sp/><ref refid="struct_rotation___quaternion_data___s_1acca13e6274ff99de8d4d4ee7abaf9410" kindref="member">x</ref>;<sp/></highlight></codeline>
<codeline lineno="99" refid="struct_rotation___quaternion_data___s_1a570a7007d5e7507f83b875c42a28eff4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga861889134c39b596bed3bdd7971c1373" kindref="member">Rotation_DataType_T</ref><sp/><ref refid="struct_rotation___quaternion_data___s_1a570a7007d5e7507f83b875c42a28eff4" kindref="member">y</ref>;<sp/></highlight></codeline>
<codeline lineno="100" refid="struct_rotation___quaternion_data___s_1a1451d732be42aa537f894e3f899a4451" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga861889134c39b596bed3bdd7971c1373" kindref="member">Rotation_DataType_T</ref><sp/><ref refid="struct_rotation___quaternion_data___s_1a1451d732be42aa537f894e3f899a4451" kindref="member">z</ref>;<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102" refid="group___r_o_t_a_t_i_o_n_1ga247c8631a5472da804c5f5c0b16ce3d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_rotation___quaternion_data___s" kindref="compound">Rotation_QuaternionData_S</ref><sp/><ref refid="struct_rotation___quaternion_data___s" kindref="compound">Rotation_QuaternionData_T</ref>,<sp/>*<ref refid="group___r_o_t_a_t_i_o_n_1ga247c8631a5472da804c5f5c0b16ce3d5" kindref="member">Rotation_QuaternionDataPtr_T</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="struct_rotation___euler_data___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_rotation___euler_data___s" kindref="compound">Rotation_EulerData_S</ref></highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107" refid="struct_rotation___euler_data___s_1ab7a04e85000a5b3f5b1e45bb09ff8424" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga861889134c39b596bed3bdd7971c1373" kindref="member">Rotation_DataType_T</ref><sp/><ref refid="struct_rotation___euler_data___s_1ab7a04e85000a5b3f5b1e45bb09ff8424" kindref="member">heading</ref>;<sp/></highlight></codeline>
<codeline lineno="108" refid="struct_rotation___euler_data___s_1a2b2f602b3ec9d5e8dba29f258c4fd2b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga861889134c39b596bed3bdd7971c1373" kindref="member">Rotation_DataType_T</ref><sp/><ref refid="struct_rotation___euler_data___s_1a2b2f602b3ec9d5e8dba29f258c4fd2b4" kindref="member">pitch</ref>;<sp/></highlight></codeline>
<codeline lineno="109" refid="struct_rotation___euler_data___s_1a95936f2f762e63e04687cf10a355778b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga861889134c39b596bed3bdd7971c1373" kindref="member">Rotation_DataType_T</ref><sp/><ref refid="struct_rotation___euler_data___s_1a95936f2f762e63e04687cf10a355778b" kindref="member">roll</ref>;<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111" refid="group___r_o_t_a_t_i_o_n_1gaeea61e592d750a62d1f8c2fbe4511c5c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_rotation___euler_data___s" kindref="compound">Rotation_EulerData_S</ref><sp/><ref refid="struct_rotation___euler_data___s" kindref="compound">Rotation_EulerData_T</ref>,<sp/>*<ref refid="group___r_o_t_a_t_i_o_n_1gaeea61e592d750a62d1f8c2fbe4511c5c" kindref="member">Rotation_EulerDataPtr_T</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="group___r_o_t_a_t_i_o_n_1ga150d5a7c22603a2e984c1b06fbeb6ad0" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga150d5a7c22603a2e984c1b06fbeb6ad0" kindref="member">Rotation_HandlePtr_T</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>function<sp/>prototype<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga4123b9f2d804083ae26763d65ce30e9a" kindref="member">Rotation_init</ref>(<ref refid="group___r_o_t_a_t_i_o_n_1ga150d5a7c22603a2e984c1b06fbeb6ad0" kindref="member">Rotation_HandlePtr_T</ref><sp/>handle);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___r_o_t_a_t_i_o_n_1gabee3b9ca61b5bba969d9025d14ebc9a2" kindref="member">Rotation_readQuaternionValue</ref>(Rotation_QuaternionDataPtr_T<sp/>quaternionValue);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___r_o_t_a_t_i_o_n_1ga882fa72761c0a55d276f4356f25b8c8d" kindref="member">Rotation_deInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>global<sp/>variable<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inline<sp/>function<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BCDS_ROTATION_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Rotation.h"/>
  </compounddef>
</doxygen>
