<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___coap_server_8h" kind="file">
    <compoundname>Serval_CoapServer.h</compoundname>
    <includes refid="_serval___defines_8h" local="no">Serval_Defines.h</includes>
    <includes refid="_serval___exceptions_8h" local="no">Serval_Exceptions.h</includes>
    <includes refid="_serval___msg_8h" local="no">Serval_Msg.h</includes>
    <includes refid="_serval___coap_8h" local="no">Serval_Coap.h</includes>
    <includes refid="_serval___security_8h" local="no">Serval_Security.h</includes>
    <includedby refid="_serval___lwm2m_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h</includedby>
    <incdepgraph>
      <node id="30141">
        <label>stdbool.h</label>
      </node>
      <node id="30134">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="30135" relation="include">
        </childnode>
        <childnode refid="30132" relation="include">
        </childnode>
      </node>
      <node id="30145">
        <label>stdarg.h</label>
      </node>
      <node id="30130">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h</label>
        <link refid="Serval_CoapServer.h"/>
        <childnode refid="30131" relation="include">
        </childnode>
        <childnode refid="30132" relation="include">
        </childnode>
        <childnode refid="30133" relation="include">
        </childnode>
        <childnode refid="30184" relation="include">
        </childnode>
        <childnode refid="30185" relation="include">
        </childnode>
      </node>
      <node id="30172">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="30163" relation="include">
        </childnode>
      </node>
      <node id="30157">
        <label>list.h</label>
      </node>
      <node id="30159">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="30160" relation="include">
        </childnode>
        <childnode refid="30139" relation="include">
        </childnode>
        <childnode refid="30138" relation="include">
        </childnode>
      </node>
      <node id="30175">
        <label>Serval_StringDescr.h</label>
        <link refid="_serval___string_descr_8h"/>
        <childnode refid="30134" relation="include">
        </childnode>
      </node>
      <node id="30137">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="30138" relation="include">
        </childnode>
      </node>
      <node id="30140">
        <label>stdint.h</label>
      </node>
      <node id="30138">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="30139" relation="include">
        </childnode>
      </node>
      <node id="30143">
        <label>stdlib.h</label>
      </node>
      <node id="30132">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="30182">
        <label>Serval_Policy.h</label>
        <link refid="_serval___policy_8h"/>
      </node>
      <node id="30151">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="30154">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="30155" relation="include">
        </childnode>
      </node>
      <node id="30162">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="30164">
        <label>user.h</label>
      </node>
      <node id="30158">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="30138" relation="include">
        </childnode>
        <childnode refid="30159" relation="include">
        </childnode>
        <childnode refid="30162" relation="include">
        </childnode>
      </node>
      <node id="30165">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="30163" relation="include">
        </childnode>
      </node>
      <node id="30178">
        <label>Serval_Callable.h</label>
        <link refid="_serval___callable_8h"/>
        <childnode refid="30134" relation="include">
        </childnode>
        <childnode refid="30179" relation="include">
        </childnode>
      </node>
      <node id="30185">
        <label>Serval_Security.h</label>
        <link refid="_serval___security_8h"/>
        <childnode refid="30131" relation="include">
        </childnode>
        <childnode refid="30133" relation="include">
        </childnode>
        <childnode refid="30135" relation="include">
        </childnode>
        <childnode refid="30186" relation="include">
        </childnode>
      </node>
      <node id="30186">
        <label>Serval_MsgSendingCtx.h</label>
        <link refid="_serval___msg_sending_ctx_8h"/>
        <childnode refid="30182" relation="include">
        </childnode>
      </node>
      <node id="30149">
        <label>stddef.h</label>
      </node>
      <node id="30167">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="30163" relation="include">
        </childnode>
      </node>
      <node id="30147">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="30148" relation="include">
        </childnode>
        <childnode refid="30150" relation="include">
        </childnode>
        <childnode refid="30154" relation="include">
        </childnode>
        <childnode refid="30156" relation="include">
        </childnode>
      </node>
      <node id="30136">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="30137" relation="include">
        </childnode>
        <childnode refid="30139" relation="include">
        </childnode>
        <childnode refid="30144" relation="include">
        </childnode>
        <childnode refid="30145" relation="include">
        </childnode>
        <childnode refid="30146" relation="include">
        </childnode>
        <childnode refid="30143" relation="include">
        </childnode>
        <childnode refid="30134" relation="include">
        </childnode>
        <childnode refid="30147" relation="include">
        </childnode>
        <childnode refid="30158" relation="include">
        </childnode>
        <childnode refid="30163" relation="include">
        </childnode>
      </node>
      <node id="30144">
        <label>limits.h</label>
      </node>
      <node id="30133">
        <label>Serval_Msg.h</label>
        <link refid="_serval___msg_8h"/>
        <childnode refid="30131" relation="include">
        </childnode>
        <childnode refid="30134" relation="include">
        </childnode>
        <childnode refid="30175" relation="include">
        </childnode>
        <childnode refid="30176" relation="include">
        </childnode>
        <childnode refid="30177" relation="include">
        </childnode>
        <childnode refid="30178" relation="include">
        </childnode>
        <childnode refid="30180" relation="include">
        </childnode>
        <childnode refid="30182" relation="include">
        </childnode>
        <childnode refid="30183" relation="include">
        </childnode>
      </node>
      <node id="30153">
        <label>portable.h</label>
      </node>
      <node id="30161">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="30142">
        <label>string.h</label>
      </node>
      <node id="30160">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="30161" relation="include">
        </childnode>
        <childnode refid="30138" relation="include">
        </childnode>
      </node>
      <node id="30179">
        <label>Serval_StructCtx.h</label>
        <link refid="_serval___struct_ctx_8h"/>
        <childnode refid="30149" relation="include">
        </childnode>
      </node>
      <node id="30139">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="30140" relation="include">
        </childnode>
        <childnode refid="30141" relation="include">
        </childnode>
        <childnode refid="30142" relation="include">
        </childnode>
        <childnode refid="30143" relation="include">
        </childnode>
      </node>
      <node id="30183">
        <label>Serval_Msg_Obsolete.h</label>
        <link refid="_serval___msg___obsolete_8h"/>
        <childnode refid="30134" relation="include">
        </childnode>
        <childnode refid="30182" relation="include">
        </childnode>
        <childnode refid="30133" relation="include">
        </childnode>
      </node>
      <node id="30180">
        <label>Serval_Ip.h</label>
        <link refid="_serval___ip_8h"/>
        <childnode refid="30181" relation="include">
        </childnode>
        <childnode refid="30134" relation="include">
        </childnode>
      </node>
      <node id="30152">
        <label>projdefs.h</label>
      </node>
      <node id="30174">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="30181">
        <label>PIp.h</label>
        <link refid="_p_ip_8h"/>
        <childnode refid="30138" relation="include">
        </childnode>
      </node>
      <node id="30173">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="30163" relation="include">
        </childnode>
      </node>
      <node id="30177">
        <label>Serval_Filesystem.h</label>
        <link refid="_serval___filesystem_8h"/>
        <childnode refid="30134" relation="include">
        </childnode>
      </node>
      <node id="30131">
        <label>Serval_Defines.h</label>
        <link refid="_serval___defines_8h"/>
      </node>
      <node id="30184">
        <label>Serval_Coap.h</label>
        <link refid="_serval___coap_8h"/>
        <childnode refid="30131" relation="include">
        </childnode>
        <childnode refid="30182" relation="include">
        </childnode>
      </node>
      <node id="30169">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="30163" relation="include">
        </childnode>
      </node>
      <node id="30155">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="30170">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="30163" relation="include">
        </childnode>
      </node>
      <node id="30176">
        <label>Serval_XmlParser.h</label>
        <link refid="_serval___xml_parser_8h"/>
        <childnode refid="30175" relation="include">
        </childnode>
      </node>
      <node id="30168">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="30163" relation="include">
        </childnode>
      </node>
      <node id="30156">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="30157" relation="include">
        </childnode>
      </node>
      <node id="30171">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="30163" relation="include">
        </childnode>
      </node>
      <node id="30150">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="30140" relation="include">
        </childnode>
        <childnode refid="30137" relation="include">
        </childnode>
        <childnode refid="30151" relation="include">
        </childnode>
      </node>
      <node id="30135">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="30136" relation="include">
        </childnode>
      </node>
      <node id="30148">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="30149" relation="include">
        </childnode>
        <childnode refid="30140" relation="include">
        </childnode>
        <childnode refid="30150" relation="include">
        </childnode>
        <childnode refid="30152" relation="include">
        </childnode>
        <childnode refid="30153" relation="include">
        </childnode>
      </node>
      <node id="30146">
        <label>stdio.h</label>
      </node>
      <node id="30166">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="30163" relation="include">
        </childnode>
      </node>
      <node id="30163">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="30164" relation="include">
        </childnode>
        <childnode refid="30165" relation="include">
        </childnode>
        <childnode refid="30166" relation="include">
        </childnode>
        <childnode refid="30167" relation="include">
        </childnode>
        <childnode refid="30168" relation="include">
        </childnode>
        <childnode refid="30169" relation="include">
        </childnode>
        <childnode refid="30170" relation="include">
        </childnode>
        <childnode refid="30171" relation="include">
        </childnode>
        <childnode refid="30172" relation="include">
        </childnode>
        <childnode refid="30173" relation="include">
        </childnode>
        <childnode refid="30174" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="30217">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceEnvironment.c</label>
        <link refid="_l_w_m2_m_sensor_device_environment_8c"/>
      </node>
      <node id="30187">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h</label>
        <link refid="Serval_CoapServer.h"/>
        <childnode refid="30188" relation="include">
        </childnode>
      </node>
      <node id="30201">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.c</label>
        <link refid="_l_w_m2_m_objects_8c"/>
      </node>
      <node id="30191">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.h</label>
        <link refid="_l_w_m2_m_objects_8h"/>
        <childnode refid="30190" relation="include">
        </childnode>
        <childnode refid="30192" relation="include">
        </childnode>
        <childnode refid="30193" relation="include">
        </childnode>
        <childnode refid="30194" relation="include">
        </childnode>
        <childnode refid="30195" relation="include">
        </childnode>
        <childnode refid="30196" relation="include">
        </childnode>
        <childnode refid="30197" relation="include">
        </childnode>
        <childnode refid="30198" relation="include">
        </childnode>
        <childnode refid="30199" relation="include">
        </childnode>
        <childnode refid="30200" relation="include">
        </childnode>
        <childnode refid="30201" relation="include">
        </childnode>
        <childnode refid="30202" relation="include">
        </childnode>
        <childnode refid="30203" relation="include">
        </childnode>
        <childnode refid="30204" relation="include">
        </childnode>
      </node>
      <node id="30192">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.c</label>
        <link refid="_l_w_m2_m_object_alert_notification_8c"/>
      </node>
      <node id="30220">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.h</label>
        <link refid="_l_w_m2_m_object_alert_notification_8h"/>
        <childnode refid="30191" relation="include">
        </childnode>
        <childnode refid="30192" relation="include">
        </childnode>
      </node>
      <node id="30195">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.c</label>
        <link refid="_l_w_m2_m_object_device_8c"/>
      </node>
      <node id="30215">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceIlluminance.c</label>
        <link refid="_l_w_m2_m_sensor_device_illuminance_8c"/>
      </node>
      <node id="30206">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.h</label>
        <link refid="_l_w_m2_m_object_device_8h"/>
        <childnode refid="30191" relation="include">
        </childnode>
        <childnode refid="30195" relation="include">
        </childnode>
      </node>
      <node id="30194">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.c</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8c"/>
      </node>
      <node id="30207">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.h</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8h"/>
        <childnode refid="30191" relation="include">
        </childnode>
      </node>
      <node id="30205">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceAccelerometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_accelerometer_8c"/>
      </node>
      <node id="30202">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.c</label>
        <link refid="_l_w_m2_m_object_sensor_device_8c"/>
      </node>
      <node id="30218">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.h</label>
        <link refid="_l_w_m2_m_object_sensor_device_8h"/>
        <childnode refid="30191" relation="include">
        </childnode>
        <childnode refid="30195" relation="include">
        </childnode>
        <childnode refid="30202" relation="include">
        </childnode>
      </node>
      <node id="30213">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceMagnetometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_magnetometer_8c"/>
      </node>
      <node id="30203">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectTemperature.c</label>
        <link refid="_l_w_m2_m_object_temperature_8c"/>
      </node>
      <node id="30198">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.c</label>
        <link refid="_l_w_m2_m_object_illuminance_8c"/>
      </node>
      <node id="30214">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.h</label>
        <link refid="_l_w_m2_m_object_illuminance_8h"/>
        <childnode refid="30191" relation="include">
        </childnode>
        <childnode refid="30215" relation="include">
        </childnode>
      </node>
      <node id="30209">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.c</label>
        <link refid="_l_w_m2_m_object_firmware_update_8c"/>
      </node>
      <node id="30199">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.c</label>
        <link refid="_l_w_m2_m_object_light_control_8c"/>
      </node>
      <node id="30208">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.h</label>
        <link refid="_l_w_m2_m_object_firmware_update_8h"/>
        <childnode refid="30191" relation="include">
        </childnode>
        <childnode refid="30209" relation="include">
        </childnode>
      </node>
      <node id="30200">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.c</label>
        <link refid="_l_w_m2_m_object_magnetometer_8c"/>
      </node>
      <node id="30219">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.h</label>
        <link refid="_l_w_m2_m_object_light_control_8h"/>
        <childnode refid="30191" relation="include">
        </childnode>
        <childnode refid="30199" relation="include">
        </childnode>
      </node>
      <node id="30212">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.h</label>
        <link refid="_l_w_m2_m_object_magnetometer_8h"/>
        <childnode refid="30191" relation="include">
        </childnode>
        <childnode refid="30213" relation="include">
        </childnode>
      </node>
      <node id="30188">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h</label>
        <link refid="_serval___lwm2m_8h"/>
        <childnode refid="30189" relation="include">
        </childnode>
        <childnode refid="30191" relation="include">
        </childnode>
        <childnode refid="30206" relation="include">
        </childnode>
        <childnode refid="30207" relation="include">
        </childnode>
        <childnode refid="30208" relation="include">
        </childnode>
        <childnode refid="30210" relation="include">
        </childnode>
        <childnode refid="30212" relation="include">
        </childnode>
        <childnode refid="30214" relation="include">
        </childnode>
        <childnode refid="30216" relation="include">
        </childnode>
        <childnode refid="30218" relation="include">
        </childnode>
        <childnode refid="30219" relation="include">
        </childnode>
        <childnode refid="30220" relation="include">
        </childnode>
        <childnode refid="30221" relation="include">
        </childnode>
        <childnode refid="30190" relation="include">
        </childnode>
        <childnode refid="30192" relation="include">
        </childnode>
        <childnode refid="30199" relation="include">
        </childnode>
        <childnode refid="30201" relation="include">
        </childnode>
        <childnode refid="30202" relation="include">
        </childnode>
        <childnode refid="30211" relation="include">
        </childnode>
        <childnode refid="30215" relation="include">
        </childnode>
      </node>
      <node id="30190">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.c</label>
        <link refid="_l_w_m2_m_object_accelerometer_8c"/>
      </node>
      <node id="30189">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.h</label>
        <link refid="_l_w_m2_m_object_accelerometer_8h"/>
        <childnode refid="30190" relation="include">
        </childnode>
        <childnode refid="30191" relation="include">
        </childnode>
        <childnode refid="30205" relation="include">
        </childnode>
      </node>
      <node id="30197">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectHumidity.c</label>
        <link refid="_l_w_m2_m_object_humidity_8c"/>
      </node>
      <node id="30211">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceGyroscope.c</label>
        <link refid="_l_w_m2_m_sensor_device_gyroscope_8c"/>
      </node>
      <node id="30193">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.c</label>
        <link refid="_l_w_m2_m_object_barometer_8c"/>
      </node>
      <node id="30216">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.h</label>
        <link refid="_l_w_m2_m_object_barometer_8h"/>
        <childnode refid="30191" relation="include">
        </childnode>
        <childnode refid="30217" relation="include">
        </childnode>
      </node>
      <node id="30204">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.c</label>
        <link refid="_l_w_m2_m_util_8c"/>
      </node>
      <node id="30221">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.h</label>
        <link refid="_l_w_m2_m_util_8h"/>
        <childnode refid="30190" relation="include">
        </childnode>
        <childnode refid="30192" relation="include">
        </childnode>
        <childnode refid="30193" relation="include">
        </childnode>
        <childnode refid="30194" relation="include">
        </childnode>
        <childnode refid="30196" relation="include">
        </childnode>
        <childnode refid="30197" relation="include">
        </childnode>
        <childnode refid="30198" relation="include">
        </childnode>
        <childnode refid="30199" relation="include">
        </childnode>
        <childnode refid="30200" relation="include">
        </childnode>
        <childnode refid="30202" relation="include">
        </childnode>
        <childnode refid="30203" relation="include">
        </childnode>
        <childnode refid="30204" relation="include">
        </childnode>
      </node>
      <node id="30196">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.c</label>
        <link refid="_l_w_m2_m_object_gyroscope_8c"/>
      </node>
      <node id="30210">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.h</label>
        <link refid="_l_w_m2_m_object_gyroscope_8h"/>
        <childnode refid="30191" relation="include">
        </childnode>
        <childnode refid="30211" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_serval___coap_server_8h_1a3738b8b0093ac849c1797f675f9f8951" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* CoapAppReqCallback_T)(Msg_T *msg_ptr, retcode_t status)</definition>
        <argsstring>)(Msg_T *msg_ptr, retcode_t status)</argsstring>
        <name>CoapAppReqCallback_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type representing a callback function pointer for CoAP server applications. The application uses such callback functions in order to be notified about the received messages. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" line="41" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___coap_server_8h_1ab831a66e13db3a80928ceac8ce609707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapServer_closeSecureConn</definition>
        <argsstring>(Ip_Address_T *peerAddr_ptr, Ip_Port_T peerPort)</argsstring>
        <name>CoapServer_closeSecureConn</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>peerAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>peerPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function close and disconnect an existing secure COAP connection.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ip address of the remote server socket</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peerPort</parametername>
</parameternamelist>
<parameterdescription>
<para>port number of the remote server socket</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>when error code available On success, RC_OK is returned. <linebreak/>
 RC_COAP_SECURE_CONNECTION_ERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_server_8h_1a2a8ef017ce02d8d710592bae4e1256d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapServer_getSecureConnError</definition>
        <argsstring>(Ip_Address_T *peerAddr_ptr, Ip_Port_T peerPort, retcode_t *rc_ptr)</argsstring>
        <name>CoapServer_getSecureConnError</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>peerAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>peerPort</declname>
        </param>
        <param>
          <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref> *</type>
          <declname>rc_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function reports the errors of a secure connection</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned ip address of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peerPort</parametername>
</parameternamelist>
<parameterdescription>
<para>returned port number of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rc_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>status of this connection</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>On success, RC_OK is returned.<linebreak/>
 RC_COAP_SECURE_CONNECTION_ERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_server_8h_1a2b101dd6311022e987211d2b99931257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapServer_getSecureConnState</definition>
        <argsstring>(Ip_Address_T *peerAddr_ptr, Ip_Port_T peerPort, SecureConnectionState_T *state_ptr)</argsstring>
        <name>CoapServer_getSecureConnState</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>peerAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>peerPort</declname>
        </param>
        <param>
          <type><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305" kindref="member">SecureConnectionState_T</ref> *</type>
          <declname>state_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function reports the status of a secure connection</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned ip address of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peerPort</parametername>
</parameternamelist>
<parameterdescription>
<para>returned port number of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">state_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>status of this connection</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>On success, RC_OK is returned.<linebreak/>
 RC_COAP_SECURE_CONNECTION_ERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_server_8h_1a9e1a772579cb7808a771adcdc9442a4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapServer_initialize</definition>
        <argsstring>(void)</argsstring>
        <name>CoapServer_initialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to initialize CoAP server and related modules</para><para><simplesect kind="return"><para>, RC_OK, if successful RC_COAP_SERVER_INIT_ERROR, otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_server_8h_1ab0611861870c212bcf87748da94dd078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapServer_initNotificationMsg</definition>
        <argsstring>(Ip_Address_T *addr_ptr, Ip_Port_T port, Msg_T **msg_pptr)</argsstring>
        <name>CoapServer_initNotificationMsg</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>addr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> **</type>
          <declname>msg_pptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to initiate a notification from the CoAP server. This function checks for any previous active transaction with the given client and if not provides the message to be filled for sending the request.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">addr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the reference to the IP address of the receiver.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">port</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the server port of the receiver.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">msg_pptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This holds message to be filled by application for request.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_COAP_SERVER_INIT_REQ_ERROR, otherwise.</para></simplesect>
<simplesect kind="since"><para>1.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_server_8h_1a94ec2e33c95aa41dc4a7efb5ca2642ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapServer_initSecureNotificationMsg</definition>
        <argsstring>(Ip_Address_T *addr_ptr, Ip_Port_T port, Msg_T **msg_pptr)</argsstring>
        <name>CoapServer_initSecureNotificationMsg</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>addr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> **</type>
          <declname>msg_pptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to initiate a secure notification from the CoAP server. This function checks for any previous active transaction with the given client and if not provides the message to be filled for sending the request.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">addr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the reference to the IP address of the receiver.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">port</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the server port of the receiver.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">msg_pptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This holds message to be filled by application for request.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_COAP_SERVER_INIT_REQ_ERROR, otherwise.</para></simplesect>
<simplesect kind="since"><para>1.4 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_server_8h_1a5aa789227fc688903ffac6b6c23d5a0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoapServer_iterateSecureConnections</definition>
        <argsstring>(int16_t *iterator_ptr, bool onlyWithError, Ip_Address_T *ipAddr_ptr, Ip_Port_T *port_ptr)</argsstring>
        <name>CoapServer_iterateSecureConnections</name>
        <param>
          <type>int16_t *</type>
          <declname>iterator_ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlyWithError</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>ipAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref> *</type>
          <declname>port_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function reports the secure connections.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">iterator_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator for this function. Initialized to -1 it reports the first connection. The next returned values will report the next connections. if -1 returns, no more connections are assigned to this socket. Example: int16_t iter = -1; while(1) { rc = _getSecureConnection(&amp;iter,...); if(iter &lt; 0) break; do_some_thing(...); }</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">onlyWithError</parametername>
</parameternamelist>
<parameterdescription>
<para>true -&gt; report only connections with failures. false -&gt; report all connections</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ipAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned ip address of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">port_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned port number of the connection endpoint </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_server_8h_1a5456e7ef9b3018c6fe68b3644eceec7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapServer_respond</definition>
        <argsstring>(Msg_T *msg_ptr, Callable_T *sentCallback_ptr)</argsstring>
        <name>CoapServer_respond</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref> *</type>
          <declname>sentCallback_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to push a response from CoAP server. This function prepares the message for further processing before passing it to the lower layers.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the reference to the message to be pushed.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sentCallback_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the application callback to be called for informing application about status of sending.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>, RC_OK, if successful RC_COAP_SENDING_ERROR, otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_server_8h_1ab03fe8c55d34c51f05f6488f2a00a671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapServer_startInstance</definition>
        <argsstring>(Ip_Port_T port, CoapAppReqCallback_T appCallback_ptr)</argsstring>
        <name>CoapServer_startInstance</name>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="_serval___coap_server_8h_1a3738b8b0093ac849c1797f675f9f8951" kindref="member">CoapAppReqCallback_T</ref></type>
          <declname>appCallback_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to start the default CoAP server</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">port</parametername>
</parameternamelist>
<parameterdescription>
<para>The port the CoAP default server will listen on. The default port for CoAP is 5683.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appCallback_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the reference to the application callback for received message. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>, RC_OK, if successful RC_COAP_LISTEN_ERROR, otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_server_8h_1ac5025e0db6daf44f5ce249de90651306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapServer_startSecureInstance</definition>
        <argsstring>(Ip_Port_T port, CoapAppReqCallback_T appCallback_ptr)</argsstring>
        <name>CoapServer_startSecureInstance</name>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="_serval___coap_server_8h_1a3738b8b0093ac849c1797f675f9f8951" kindref="member">CoapAppReqCallback_T</ref></type>
          <declname>appCallback_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to start the secure CoAP server</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">port</parametername>
</parameternamelist>
<parameterdescription>
<para>The port the CoAP secure server will listen on.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appCallback_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the reference to the application callback for received message. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>, RC_OK, if successful RC_COAP_SECURE_CONNECTION_ERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h" line="163" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CoAP Server Module</para><para>The interface description of the CoAP Server. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">#ifndef<sp/>SERVAL_COAPSERVER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_COAPSERVER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___defines_8h" kindref="compound">Serval_Defines.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_COAP_SERVER<sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>CoAP<sp/>server<sp/>is<sp/>disabled<sp/>-&gt;<sp/>no<sp/>compilation<sp/>here<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___exceptions_8h" kindref="compound">Serval_Exceptions.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___msg_8h" kindref="compound">Serval_Msg.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___coap_8h" kindref="compound">Serval_Coap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___security_8h" kindref="compound">Serval_Security.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="_serval___coap_server_8h_1a3738b8b0093ac849c1797f675f9f8951" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___coap_server_8h_1a3738b8b0093ac849c1797f675f9f8951" kindref="member">CoapAppReqCallback_T</ref>)(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>status);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_server_8h_1a9e1a772579cb7808a771adcdc9442a4b" kindref="member">CoapServer_initialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_server_8h_1ab03fe8c55d34c51f05f6488f2a00a671" kindref="member">CoapServer_startInstance</ref>(<ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>port,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___coap_server_8h_1a3738b8b0093ac849c1797f675f9f8951" kindref="member">CoapAppReqCallback_T</ref><sp/>appCallback_ptr);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_COAP_SERVER_MULTICAST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>CoapServer_joinAllCoAPNodes();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_COAP_SERVER_MULTICAST<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_server_8h_1a5456e7ef9b3018c6fe68b3644eceec7e" kindref="member">CoapServer_respond</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/><ref refid="struct_callable___s" kindref="compound">Callable_T</ref><sp/>*sentCallback_ptr);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_COAP_OBSERVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_server_8h_1ab0611861870c212bcf87748da94dd078" kindref="member">CoapServer_initNotificationMsg</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*addr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>port,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>**msg_pptr);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_server_8h_1a94ec2e33c95aa41dc4a7efb5ca2642ee" kindref="member">CoapServer_initSecureNotificationMsg</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*addr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>port,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>**msg_pptr);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_DTLS_SERVER<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_COAP_OBSERVE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_server_8h_1ac5025e0db6daf44f5ce249de90651306" kindref="member">CoapServer_startSecureInstance</ref>(<ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>port,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___coap_server_8h_1a3738b8b0093ac849c1797f675f9f8951" kindref="member">CoapAppReqCallback_T</ref><sp/>appCallback_ptr);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_server_8h_1ab831a66e13db3a80928ceac8ce609707" kindref="member">CoapServer_closeSecureConn</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*peerAddr_ptr,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>peerPort);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___coap_server_8h_1a5aa789227fc688903ffac6b6c23d5a0b" kindref="member">CoapServer_iterateSecureConnections</ref>(int16_t<sp/>*iterator_ptr,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyWithError,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*ipAddr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>*port_ptr);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_server_8h_1a2a8ef017ce02d8d710592bae4e1256d4" kindref="member">CoapServer_getSecureConnError</ref>(</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*peerAddr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>peerPort,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>*rc_ptr);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_server_8h_1a2b101dd6311022e987211d2b99931257" kindref="member">CoapServer_getSecureConnState</ref>(</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*peerAddr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>peerPort,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305" kindref="member">SecureConnectionState_T</ref><sp/>*state_ptr);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_DTLS_SERVER<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_COAP_SERVER<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_COAPSERVER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h"/>
  </compounddef>
</doxygen>
