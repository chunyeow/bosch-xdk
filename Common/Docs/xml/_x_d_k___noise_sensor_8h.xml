<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_x_d_k___noise_sensor_8h" kind="file">
    <compoundname>XDK_NoiseSensor.h</compoundname>
    <includes refid="_b_c_d_s___h_a_l_config_8h" local="yes">BCDS_HALConfig.h</includes>
    <includes refid="_b_c_d_s___retcode_8h" local="yes">BCDS_Retcode.h</includes>
    <includedby refid="_noise_sensor_8c" local="yes">SDK/xdk110/Common/source/Sensor/NoiseSensor.c</includedby>
    <includedby refid="_virtual_xdk_demo_2source_2_app_controller_8c" local="yes">SDK/xdk110/Apps/VirtualXdkDemo/source/AppController.c</includedby>
    <incdepgraph>
      <node id="23262">
        <label>stdbool.h</label>
      </node>
      <node id="23258">
        <label>BCDS_HALConfig.h</label>
        <link refid="_b_c_d_s___h_a_l_config_8h"/>
      </node>
      <node id="23257">
        <label>SDK/xdk110/Common/include/Sensor/XDK_NoiseSensor.h</label>
        <link refid="XDK_NoiseSensor.h"/>
        <childnode refid="23258" relation="include">
        </childnode>
        <childnode refid="23259" relation="include">
        </childnode>
      </node>
      <node id="23261">
        <label>stdint.h</label>
      </node>
      <node id="23259">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="23260" relation="include">
        </childnode>
      </node>
      <node id="23264">
        <label>stdlib.h</label>
      </node>
      <node id="23263">
        <label>string.h</label>
      </node>
      <node id="23260">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="23261" relation="include">
        </childnode>
        <childnode refid="23262" relation="include">
        </childnode>
        <childnode refid="23263" relation="include">
        </childnode>
        <childnode refid="23264" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="23266">
        <label>SDK/xdk110/Common/source/Sensor/NoiseSensor.c</label>
        <link refid="_noise_sensor_8c"/>
      </node>
      <node id="23265">
        <label>SDK/xdk110/Common/include/Sensor/XDK_NoiseSensor.h</label>
        <link refid="XDK_NoiseSensor.h"/>
        <childnode refid="23266" relation="include">
        </childnode>
        <childnode refid="23267" relation="include">
        </childnode>
      </node>
      <node id="23267">
        <label>SDK/xdk110/Apps/VirtualXdkDemo/source/AppController.c</label>
        <link refid="_virtual_xdk_demo_2source_2_app_controller_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___n_o_i_s_e_s_e_n_s_o_r_1gafa8ad9fb725675e7472de8030fe42d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T NoiseSensor_Close</definition>
        <argsstring>(void)</argsstring>
        <name>NoiseSensor_Close</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>To close noise sensor module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>upon successful execution </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; </para>        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/Sensor/XDK_NoiseSensor.h" line="119" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Sensor/NoiseSensor.c" bodystart="210" bodyend="217"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
      </memberdef>
      <memberdef kind="function" id="group___n_o_i_s_e_s_e_n_s_o_r_1gaaf106b5b0f33ff97ed750f001d741030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T NoiseSensor_Disable</definition>
        <argsstring>(void)</argsstring>
        <name>NoiseSensor_Disable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disable the noise sensor module and stop adc scan. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>upon successful execution </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>In case of any other error code refer <ref refid="group___m_c_u___a_d_c_1ga624c10c0aaa3e1cf89b2b0aa08c8cc62" kindref="member">AdcCentral_StopScan</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/Sensor/XDK_NoiseSensor.h" line="112" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Sensor/NoiseSensor.c" bodystart="190" bodyend="208"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___m_c_u___a_d_c_1ga624c10c0aaa3e1cf89b2b0aa08c8cc62" compoundref="_adc_central_8c" startline="589" endline="642">AdcCentral_StopScan</references>
        <references refid="_noise_sensor_8c_1a635874a76d8527c8ba4c5c8ab9fbb180" compoundref="_noise_sensor_8c" startline="64">AdcHandle</references>
        <references refid="struct_adc_central___config_scan___s_1a087ed4815f756a0687b5c916b936f11d" compoundref="_adc_central_8h" startline="92">AdcCentral_ConfigScan_S::ChannelScanMask</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___mic___a_k_u340_1ga40c4493a092bfe26eeeb9bc597c114af" compoundref="_b_s_p___mic___a_k_u340_8c" startline="95" endline="105">BSP_Mic_AKU340_Disable</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___mic___a_k_u340_1gaa068d5786953c81912bf3ba4ce405216" compoundref="_b_s_p___mic___a_k_u340_8c" startline="110" endline="116">BSP_Mic_AKU340_Disconnect</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group___n_o_i_s_e_s_e_n_s_o_r_1ga7fb2dfb213f9bacae96eee4e1bc65fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T NoiseSensor_Enable</definition>
        <argsstring>(void)</argsstring>
        <name>NoiseSensor_Enable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Enable the noise sensor, Configure the ADC parameters and start ADC scan. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the Adc resource handle is NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>In case of any other error code refer <ref refid="group___m_c_u___a_d_c_1ga4487fdc581149fa5086b20427da36045" kindref="member">AdcCentral_StartScan</ref></para></simplesect>
<simplesect kind="note"><para>Channel-4 is used for ADC to read the noise sensor data. ADC Resolution as 12 bit </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/Sensor/XDK_NoiseSensor.h" line="83" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Sensor/NoiseSensor.c" bodystart="120" bodyend="147"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___mic___a_k_u340_1ga8489886b647fba04b1cbb62714859e4c" compoundref="_b_s_p___mic___a_k_u340_8c" startline="65" endline="76">BSP_Mic_AKU340_Connect</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___mic___a_k_u340_1ga8823fe26ce3f53dd20444ab5ba4a85e2" compoundref="_b_s_p___mic___a_k_u340_8c" startline="81" endline="90">BSP_Mic_AKU340_Enable</references>
        <references refid="_noise_sensor_8c_1a635874a76d8527c8ba4c5c8ab9fbb180" compoundref="_noise_sensor_8c" startline="64">AdcHandle</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" compoundref="_b_c_d_s___retcode_8h" startline="112">RETCODE_NULL_POINTER</references>
        <references refid="struct_adc_central___config_scan___s_1ae4398a2ee15010b2562c2825560d44cf" compoundref="_adc_central_8h" startline="93">AdcCentral_ConfigScan_S::BufferPtr</references>
        <references refid="_noise_sensor_8c_1a292ed20aec219b1fa9eab28782197a54" compoundref="_noise_sensor_8c" startline="63">CH4UserBuffer</references>
        <references refid="struct_adc_central___config_scan___s_1aeef0ecb1357ed3c02bba93c808e78e40" compoundref="_adc_central_8h" startline="95">AdcCentral_ConfigScan_S::Appcallback</references>
        <references refid="_noise_sensor_8c_1a340f6c2fa8e708a8a9c4617fd7ef88b3" compoundref="_noise_sensor_8c" startline="68" endline="94">ProcessCH4Data</references>
        <references refid="struct_adc_central___config_scan___s_1a087ed4815f756a0687b5c916b936f11d" compoundref="_adc_central_8h" startline="92">AdcCentral_ConfigScan_S::ChannelScanMask</references>
        <references refid="_mcu___adc_8h_1aa647504c454af04bd9f621c93071481aaee839bb094f25582a465d557723432cd" compoundref="_mcu___adc_8h" startline="126">ADC_ENABLE_CH4_SCAN</references>
        <references refid="group___m_c_u___a_d_c_1ga4487fdc581149fa5086b20427da36045" compoundref="_adc_central_8c" startline="506" endline="587">AdcCentral_StartScan</references>
        <referencedby refid="group___v_i_r_t_u_a_l___x_d_k___d_e_m_o_1ga5ef9cc8f277726dc19c525c8049d388f" compoundref="_virtual_xdk_demo_2source_2_app_controller_8c" startline="1052" endline="1134">AppControllerEnable</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___n_o_i_s_e_s_e_n_s_o_r_1ga9224b270431190333187713b2f53f92c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T NoiseSensor_ReadRmsValue</definition>
        <argsstring>(float *rmsValue, uint32_t timeout)</argsstring>
        <name>NoiseSensor_ReadRmsValue</name>
        <param>
          <type>float *</type>
          <declname>rmsValue</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>To read the last calculated RMS voltage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">rmsValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Calculated RMS voltage for the range of 256 samples</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>in milli seconds Timeout to read the RmsVoltage</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>upon successful execution </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga440396a99858d69393bf1bb90ff5f4f7" kindref="member">RETCODE_RTOS_QUEUE_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if queue create fails </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the pointer is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_xdk_common_info_8h_1af47ea12fc017f15b07bf3c5b537cba8bab161cf9fda497e973486eca368e5cbdf" kindref="member">RETCODE_NOISE_SENSOR_ENABLE_FAILED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if noise sensor enable fails </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_xdk_common_info_8h_1af47ea12fc017f15b07bf3c5b537cba8ba686908bf42f99b86415d12abb1debd33" kindref="member">RETCODE_NO_DATA_ON_QUEUE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if no data available on queue</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If the calculated value isn&apos;t available in queue then it will wait until the data availability </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/Sensor/XDK_NoiseSensor.h" line="104" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Sensor/NoiseSensor.c" bodystart="149" bodyend="188"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="_noise_sensor_8c_1a635874a76d8527c8ba4c5c8ab9fbb180" compoundref="_noise_sensor_8c" startline="64">AdcHandle</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="_xdk_common_info_8h_1af47ea12fc017f15b07bf3c5b537cba8bab161cf9fda497e973486eca368e5cbdf" compoundref="_xdk_common_info_8h" startline="247">RETCODE_NOISE_SENSOR_ENABLE_FAILED</references>
        <references refid="_noise_sensor_8c_1a16a0be4e5b3c0870e44d6227ed43a247" compoundref="_noise_sensor_8c" startline="65">RmsQueue</references>
        <references refid="queue_8h_1ae8364d988c6f9b63c771cc2b3dfe5df9" compoundref="queue_8c" startline="1239" endline="1378">xQueueReceive</references>
        <references refid="_xdk_common_info_8h_1af47ea12fc017f15b07bf3c5b537cba8ba686908bf42f99b86415d12abb1debd33" compoundref="_xdk_common_info_8h" startline="246">RETCODE_NO_DATA_ON_QUEUE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga440396a99858d69393bf1bb90ff5f4f7" compoundref="_b_c_d_s___retcode_8h" startline="94">RETCODE_RTOS_QUEUE_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" compoundref="_b_c_d_s___retcode_8h" startline="112">RETCODE_NULL_POINTER</references>
        <referencedby refid="group___v_i_r_t_u_a_l___x_d_k___d_e_m_o_1gaab68311898e45f13c98dc0a156f27394" compoundref="_virtual_xdk_demo_2source_2_app_controller_8c" startline="979" endline="1039">NoiseSensorTask</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___n_o_i_s_e_s_e_n_s_o_r_1ga768120add5c75dfb2e6942d35101b7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T NoiseSensor_Setup</definition>
        <argsstring>(uint32_t samplingFreqency)</argsstring>
        <name>NoiseSensor_Setup</name>
        <param>
          <type>uint32_t</type>
          <declname>samplingFreqency</declname>
        </param>
        <briefdescription>
<para>Initialize the required components and variables of noise sensor module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">samplingFreqency</parametername>
</parameternamelist>
<parameterdescription>
<para>Adc Sampling frequency in hertz (Hz)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>upon successful initialization </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga440396a99858d69393bf1bb90ff5f4f7" kindref="member">RETCODE_RTOS_QUEUE_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if freertos queue create fails </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/Sensor/XDK_NoiseSensor.h" line="70" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Sensor/NoiseSensor.c" bodystart="96" bodyend="118"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="_noise_sensor_8c_1a16a0be4e5b3c0870e44d6227ed43a247" compoundref="_noise_sensor_8c" startline="65">RmsQueue</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga440396a99858d69393bf1bb90ff5f4f7" compoundref="_b_c_d_s___retcode_8h" startline="94">RETCODE_RTOS_QUEUE_ERROR</references>
        <references refid="group___m_c_u___a_d_c_1ga384bfb9ef993b0b92e10b86f753de9b2" compoundref="_adc_central_8c" startline="435" endline="473">AdcCentral_Init</references>
        <references refid="struct_adc_central___config_scan___s_1a7e11be3a2417ae8e19905c8e13aa2442" compoundref="_adc_central_8h" startline="94">AdcCentral_ConfigScan_S::SamplingRateInHz</references>
        <referencedby refid="group___v_i_r_t_u_a_l___x_d_k___d_e_m_o_1ga5ca12481e985f2cd2437fe712e08c9b7" compoundref="_virtual_xdk_demo_2source_2_app_controller_8c" startline="1153" endline="1266">AppControllerSetup</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor">#ifndef<sp/>XDK_NOISESENSOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XDK_NOISESENSOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___h_a_l_config_8h" kindref="compound">BCDS_HALConfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BCDS_FEATURE_BSP_MIC_AKU340</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCDS_FEATURE_BSP_MIC_AKU340<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>BCDS_FEATURE_BSP_MIC_AKU340<sp/>was<sp/>not<sp/>defined<sp/>in<sp/>BCDS_HALConfig.h<sp/>file.<sp/>Disabling<sp/>Noise<sp/>Sensor<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BCDS_FEATURE_BSP_MIC_AKU340<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BCDS_FEATURE_BSP_MIC_AKU340</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___retcode_8h" kindref="compound">BCDS_Retcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___n_o_i_s_e_s_e_n_s_o_r_1ga768120add5c75dfb2e6942d35101b7fa" kindref="member">NoiseSensor_Setup</ref>(uint32_t<sp/>samplingFreqency);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___n_o_i_s_e_s_e_n_s_o_r_1ga7fb2dfb213f9bacae96eee4e1bc65fbe" kindref="member">NoiseSensor_Enable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___n_o_i_s_e_s_e_n_s_o_r_1ga9224b270431190333187713b2f53f92c" kindref="member">NoiseSensor_ReadRmsValue</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*rmsValue,<sp/>uint32_t<sp/>timeout);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___n_o_i_s_e_s_e_n_s_o_r_1gaaf106b5b0f33ff97ed750f001d741030" kindref="member">NoiseSensor_Disable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___n_o_i_s_e_s_e_n_s_o_r_1gafa8ad9fb725675e7472de8030fe42d9f" kindref="member">NoiseSensor_Close</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>BCDS_FEATURE_BSP_MIC_AKU340<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>XDK_NOISESENSOR_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/Sensor/XDK_NoiseSensor.h"/>
  </compounddef>
</doxygen>
