<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="struct_msg_sending_ctx___s" kind="struct" prot="public">
    <compoundname>MsgSendingCtx_S</compoundname>
    <includes local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h</includes>
    <innerclass refid="union_msg_sending_ctx___s_1_1_socket___u" prot="public">MsgSendingCtx_S::Socket_U</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_msg_sending_ctx___s_1ac2c09243de689c35c335b641ceab1854" prot="public" static="no" mutable="no">
        <type><ref refid="_p_basics_8h_1a77e5973480645dc927598cee9a08beca" kindref="member">CommBuff_T</ref></type>
        <definition>CommBuff_T buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The handle of the communication buffer which will be allocated at some point of time for serializing and sending the message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" line="189" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_msg_sending_ctx___s_1a3b73e657541d90a06ff4dfa35b82cd4c" prot="public" static="no" mutable="no">
        <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref> *</type>
        <definition>Callable_T* callback_ptr</definition>
        <argsstring></argsstring>
        <name>callback_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The callback function which will be invoked after the message has been completely sent. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" line="177" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_msg_sending_ctx___s_1a9503c39add58a0c67b643ffed8e2b7d1" prot="public" static="no" mutable="no">
        <type>union <ref refid="union_msg_sending_ctx___s_1_1_socket___u" kindref="compound">MsgSendingCtx_S::Socket_U</ref></type>
        <definition>union MsgSendingCtx_S::Socket_U  conn</definition>
        <argsstring></argsstring>
        <name>conn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_msg_sending_ctx___s_1a3554651d133a4f69159ca18b78bd4ec5" prot="public" static="no" mutable="no">
        <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref></type>
        <definition>Ip_Address_T destAddr</definition>
        <argsstring></argsstring>
        <name>destAddr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The destination IP address. It is just need together with MsgSender_sendToViaUdp(). In the case of MsgSender_sendViaTcp() and MsgSender_sendViaUdp() the destination IP address is attached to the socket. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" line="162" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_msg_sending_ctx___s_1aae4657b941706a18f38322acfde78cc0" prot="public" static="no" mutable="no">
        <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
        <definition>Ip_Port_T destPort</definition>
        <argsstring></argsstring>
        <name>destPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The destination port. It is just need together with MsgSender_sendToViaUdp(). In the case of MsgSender_sendViaTcp() and MsgSender_sendViaUdp() the destination port is attached to the socket. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" line="170" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_msg_sending_ctx___s_1a5c584753d604eeaf2835125ee24618ee" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool retx</definition>
        <argsstring></argsstring>
        <name>retx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A flag which indicates the need to re-send the last chunk. This flag will be set when TCP asks for retransmitting the last packet. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" line="195" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_msg_sending_ctx___s_1ae2c2212bf73213064b6e197b72644d37" prot="public" static="no" mutable="no">
        <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref></type>
        <definition>Callable_T sendingFunc</definition>
        <argsstring></argsstring>
        <name>sendingFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A callable function object referencing the sending procedure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" line="183" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This data structure holds the data needed for sending a message.</para><para>It is used by the message sending functions to save and retrieve the details of the sending job between the sending steps, e.g. saving the details before and retrieving them after scheduling the sending procedure. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="2811">
        <label>MsgSendingCtx_S</label>
        <link refid="struct_msg_sending_ctx___s"/>
        <childnode refid="2812" relation="usage">
          <edgelabel>conn</edgelabel>
        </childnode>
        <childnode refid="2813" relation="usage">
          <edgelabel>sendingFunc</edgelabel>
          <edgelabel>callback_ptr</edgelabel>
        </childnode>
      </node>
      <node id="2813">
        <label>Callable_S</label>
        <link refid="struct_callable___s"/>
        <childnode refid="2813" relation="usage">
          <edgelabel>func</edgelabel>
        </childnode>
      </node>
      <node id="2812">
        <label>Socket_U</label>
        <link refid="union_msg_sending_ctx___s_1_1_socket___u"/>
      </node>
    </collaborationgraph>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" line="142" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h" bodystart="141" bodyend="196"/>
    <listofallmembers>
      <member refid="struct_msg_sending_ctx___s_1ac2c09243de689c35c335b641ceab1854" prot="public" virt="non-virtual"><scope>MsgSendingCtx_S</scope><name>buffer</name></member>
      <member refid="struct_msg_sending_ctx___s_1a3b73e657541d90a06ff4dfa35b82cd4c" prot="public" virt="non-virtual"><scope>MsgSendingCtx_S</scope><name>callback_ptr</name></member>
      <member refid="struct_msg_sending_ctx___s_1a9503c39add58a0c67b643ffed8e2b7d1" prot="public" virt="non-virtual"><scope>MsgSendingCtx_S</scope><name>conn</name></member>
      <member refid="struct_msg_sending_ctx___s_1a3554651d133a4f69159ca18b78bd4ec5" prot="public" virt="non-virtual"><scope>MsgSendingCtx_S</scope><name>destAddr</name></member>
      <member refid="struct_msg_sending_ctx___s_1aae4657b941706a18f38322acfde78cc0" prot="public" virt="non-virtual"><scope>MsgSendingCtx_S</scope><name>destPort</name></member>
      <member refid="struct_msg_sending_ctx___s_1a5c584753d604eeaf2835125ee24618ee" prot="public" virt="non-virtual"><scope>MsgSendingCtx_S</scope><name>retx</name></member>
      <member refid="struct_msg_sending_ctx___s_1ae2c2212bf73213064b6e197b72644d37" prot="public" virt="non-virtual"><scope>MsgSendingCtx_S</scope><name>sendingFunc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
