<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___timer_8h" kind="file">
    <compoundname>Serval_Timer.h</compoundname>
    <includes refid="_serval___types_8h" local="no">Serval_Types.h</includes>
    <incdepgraph>
      <node id="33086">
        <label>stdbool.h</label>
      </node>
      <node id="33079">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="33080" relation="include">
        </childnode>
        <childnode refid="33120" relation="include">
        </childnode>
      </node>
      <node id="33090">
        <label>stdarg.h</label>
      </node>
      <node id="33117">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="33108" relation="include">
        </childnode>
      </node>
      <node id="33102">
        <label>list.h</label>
      </node>
      <node id="33104">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="33105" relation="include">
        </childnode>
        <childnode refid="33084" relation="include">
        </childnode>
        <childnode refid="33083" relation="include">
        </childnode>
      </node>
      <node id="33082">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="33083" relation="include">
        </childnode>
      </node>
      <node id="33085">
        <label>stdint.h</label>
      </node>
      <node id="33083">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="33084" relation="include">
        </childnode>
      </node>
      <node id="33088">
        <label>stdlib.h</label>
      </node>
      <node id="33120">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="33096">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="33099">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="33100" relation="include">
        </childnode>
      </node>
      <node id="33107">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="33109">
        <label>user.h</label>
      </node>
      <node id="33103">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="33083" relation="include">
        </childnode>
        <childnode refid="33104" relation="include">
        </childnode>
        <childnode refid="33107" relation="include">
        </childnode>
      </node>
      <node id="33110">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="33108" relation="include">
        </childnode>
      </node>
      <node id="33094">
        <label>stddef.h</label>
      </node>
      <node id="33112">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="33108" relation="include">
        </childnode>
      </node>
      <node id="33092">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="33093" relation="include">
        </childnode>
        <childnode refid="33095" relation="include">
        </childnode>
        <childnode refid="33099" relation="include">
        </childnode>
        <childnode refid="33101" relation="include">
        </childnode>
      </node>
      <node id="33081">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="33082" relation="include">
        </childnode>
        <childnode refid="33084" relation="include">
        </childnode>
        <childnode refid="33089" relation="include">
        </childnode>
        <childnode refid="33090" relation="include">
        </childnode>
        <childnode refid="33091" relation="include">
        </childnode>
        <childnode refid="33088" relation="include">
        </childnode>
        <childnode refid="33079" relation="include">
        </childnode>
        <childnode refid="33092" relation="include">
        </childnode>
        <childnode refid="33103" relation="include">
        </childnode>
        <childnode refid="33108" relation="include">
        </childnode>
      </node>
      <node id="33089">
        <label>limits.h</label>
      </node>
      <node id="33098">
        <label>portable.h</label>
      </node>
      <node id="33106">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="33087">
        <label>string.h</label>
      </node>
      <node id="33105">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="33106" relation="include">
        </childnode>
        <childnode refid="33083" relation="include">
        </childnode>
      </node>
      <node id="33084">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="33085" relation="include">
        </childnode>
        <childnode refid="33086" relation="include">
        </childnode>
        <childnode refid="33087" relation="include">
        </childnode>
        <childnode refid="33088" relation="include">
        </childnode>
      </node>
      <node id="33097">
        <label>projdefs.h</label>
      </node>
      <node id="33119">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="33118">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="33108" relation="include">
        </childnode>
      </node>
      <node id="33114">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="33108" relation="include">
        </childnode>
      </node>
      <node id="33100">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="33115">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="33108" relation="include">
        </childnode>
      </node>
      <node id="33113">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="33108" relation="include">
        </childnode>
      </node>
      <node id="33101">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="33102" relation="include">
        </childnode>
      </node>
      <node id="33116">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="33108" relation="include">
        </childnode>
      </node>
      <node id="33095">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="33085" relation="include">
        </childnode>
        <childnode refid="33082" relation="include">
        </childnode>
        <childnode refid="33096" relation="include">
        </childnode>
      </node>
      <node id="33080">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="33081" relation="include">
        </childnode>
      </node>
      <node id="33093">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="33094" relation="include">
        </childnode>
        <childnode refid="33085" relation="include">
        </childnode>
        <childnode refid="33095" relation="include">
        </childnode>
        <childnode refid="33097" relation="include">
        </childnode>
        <childnode refid="33098" relation="include">
        </childnode>
      </node>
      <node id="33078">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Timer.h</label>
        <link refid="Serval_Timer.h"/>
        <childnode refid="33079" relation="include">
        </childnode>
      </node>
      <node id="33091">
        <label>stdio.h</label>
      </node>
      <node id="33111">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="33108" relation="include">
        </childnode>
      </node>
      <node id="33108">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="33109" relation="include">
        </childnode>
        <childnode refid="33110" relation="include">
        </childnode>
        <childnode refid="33111" relation="include">
        </childnode>
        <childnode refid="33112" relation="include">
        </childnode>
        <childnode refid="33113" relation="include">
        </childnode>
        <childnode refid="33114" relation="include">
        </childnode>
        <childnode refid="33115" relation="include">
        </childnode>
        <childnode refid="33116" relation="include">
        </childnode>
        <childnode refid="33117" relation="include">
        </childnode>
        <childnode refid="33118" relation="include">
        </childnode>
        <childnode refid="33119" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_serval___timer_8h_1a3744ad9c4fae15e7adb98ebb496a5928" prot="public" static="no">
        <type>struct <ref refid="struct_timer___s" kindref="compound">Timer_S</ref></type>
        <definition>typedef struct Timer_S Timer_T</definition>
        <argsstring></argsstring>
        <name>Timer_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type definition for timers. The platform exports the declaration of the struct <ref refid="struct_timer___s" kindref="compound">Timer_S</ref> in the platform header file <ref refid="_p_basics_8h" kindref="compound">PBasics.h</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Timer.h" line="599" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Timer.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___timer_8h_1ad82cae26802f8c2c7f899b2971916f6b" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* TimerFunc_T)(Timer_T *timer_ptr)</definition>
        <argsstring>)(Timer_T *timer_ptr)</argsstring>
        <name>TimerFunc_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type for timeout functions. A timer is associated with such a function which is invoked every time the timer times out. It is recommended to keep time-out functions as light as possible. If executing a time-out function takes longer than the timer period, some RT problems might occur. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Timer.h" line="39" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Timer.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___timer_8h_1a73f3301cbdd5584ddcd2d4f6b50fd576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Timer_config</definition>
        <argsstring>(Timer_T *timer_ptr, unsigned int milliseconds, TimerFunc_T func)</argsstring>
        <name>Timer_config</name>
        <param>
          <type><ref refid="_serval___timer_8h_1a3744ad9c4fae15e7adb98ebb496a5928" kindref="member">Timer_T</ref> *</type>
          <declname>timer_ptr</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>milliseconds</declname>
        </param>
        <param>
          <type><ref refid="_serval___timer_8h_1ad82cae26802f8c2c7f899b2971916f6b" kindref="member">TimerFunc_T</ref></type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function configures the given timer. Before invoking this function the timer must be initialized via <ref refid="_serval___timer_8h_1a0ff132688ff52a0ccd2079f06c6cab85" kindref="member">Timer_init()</ref>. After invoking this function the given function func is called periodically every x milliseconds. If an existing timer is reconfigured, any internal state must be reset.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">timer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the timer to be configured. It is configured with the given milliseconds and the given function func. This must be valid and should have a valid handle. The timer must not be active when this function is called.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">milliseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>Time after which timer expires. It is a periodic timer. It must not be zero. The first execution of the timer function is expected to occur after the value of milliseconds after the timer has been started using Timer_start.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">func</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to a function to be called periodically when the timer times out.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_serval___timer_8h_1a0ff132688ff52a0ccd2079f06c6cab85" kindref="member">Timer_init()</ref></para></simplesect>
<simplesect kind="return"><para>RC_OK if function successful, RC_TIMER_INVALID_OPERATION if timer is already active, RC_TIMER_ERROR_FATAL otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Timer.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___timer_8h_1a0ff132688ff52a0ccd2079f06c6cab85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Timer_init</definition>
        <argsstring>(Timer_T *timer_ptr)</argsstring>
        <name>Timer_init</name>
        <param>
          <type><ref refid="_serval___timer_8h_1a3744ad9c4fae15e7adb98ebb496a5928" kindref="member">Timer_T</ref> *</type>
          <declname>timer_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function initializes the given timer. After invoking this function the timer can be configured using Timer_config(...) and used (e.g. <ref refid="_serval___timer_8h_1ae1575206b43889794009b06c4b135a9b" kindref="member">Timer_start()</ref>).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">timer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to timer. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK if function successful, RC_TIMER_INIT if initialization fails.</para></simplesect>
<simplesect kind="see"><para><ref refid="_serval___timer_8h_1ae1575206b43889794009b06c4b135a9b" kindref="member">Timer_start()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Timer.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___timer_8h_1a6083c2910d0fce54193b469d032bb62b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Timer_isActive</definition>
        <argsstring>(Timer_T *timer_ptr)</argsstring>
        <name>Timer_isActive</name>
        <param>
          <type><ref refid="_serval___timer_8h_1a3744ad9c4fae15e7adb98ebb496a5928" kindref="member">Timer_T</ref> *</type>
          <declname>timer_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function checks if the given timer is active. Before invoking this function the timer should be initialized via <ref refid="_serval___timer_8h_1a0ff132688ff52a0ccd2079f06c6cab85" kindref="member">Timer_init()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer reference to timer to be initialized.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if timer is active, FALSE if timer is inactive</para></simplesect>
<simplesect kind="see"><para><ref refid="_serval___timer_8h_1a0ff132688ff52a0ccd2079f06c6cab85" kindref="member">Timer_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Timer.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___timer_8h_1ae1575206b43889794009b06c4b135a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Timer_start</definition>
        <argsstring>(Timer_T *timer_ptr)</argsstring>
        <name>Timer_start</name>
        <param>
          <type><ref refid="_serval___timer_8h_1a3744ad9c4fae15e7adb98ebb496a5928" kindref="member">Timer_T</ref> *</type>
          <declname>timer_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function starts the given timer. Before invoking this function the timer has to be initialized via <ref refid="_serval___timer_8h_1a0ff132688ff52a0ccd2079f06c6cab85" kindref="member">Timer_init()</ref> and configured via <ref refid="_serval___timer_8h_1a73f3301cbdd5584ddcd2d4f6b50fd576" kindref="member">Timer_config()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">timer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer handle. It contains the context of the timer including the period (milliseconds) and the timeout function. This must be valid and should have a valid handle.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_serval___timer_8h_1a0ff132688ff52a0ccd2079f06c6cab85" kindref="member">Timer_init()</ref>, Tier_config()</para></simplesect>
<simplesect kind="return"><para>RC_OK if function successful, RC_TIMER_INVALID_OPERATION if timer is already active, RC_TIMER_ERROR_FATAL otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Timer.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___timer_8h_1a4eb12fa1ae033019ce286084c07d40c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Timer_stop</definition>
        <argsstring>(Timer_T *timer_ptr)</argsstring>
        <name>Timer_stop</name>
        <param>
          <type><ref refid="_serval___timer_8h_1a3744ad9c4fae15e7adb98ebb496a5928" kindref="member">Timer_T</ref> *</type>
          <declname>timer_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function stops the given timer. If the timer is not active, i.e., started using <ref refid="_serval___timer_8h_1ae1575206b43889794009b06c4b135a9b" kindref="member">Timer_start()</ref>, this function does not have any effect.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">timer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer to a Timer. After stopping the timer, it has to be re-configured before it can re-started. This must be valid and should have a valid handle.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_serval___timer_8h_1ae1575206b43889794009b06c4b135a9b" kindref="member">Timer_start()</ref></para></simplesect>
<simplesect kind="return"><para>RC_OK if function successful, RC_TIMER_ERROR_FATAL otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Timer.h" line="132" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interface to the platform timer. </para>    </briefdescription>
    <detaileddescription>
<para>This interface provides functions to handle a periodic timer. It provides functions to initialize, configure, start and stop a timer. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">#ifndef<sp/>SERVAL_TIMER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_TIMER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___types_8h" kindref="compound">Serval_Types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="_serval___timer_8h_1a3744ad9c4fae15e7adb98ebb496a5928" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_timer___s" kindref="compound">Timer_S</ref><sp/><ref refid="struct_timer___s" kindref="compound">Timer_T</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="_serval___timer_8h_1ad82cae26802f8c2c7f899b2971916f6b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___timer_8h_1ad82cae26802f8c2c7f899b2971916f6b" kindref="member">TimerFunc_T</ref>)(<ref refid="struct_timer___s" kindref="compound">Timer_T</ref><sp/>*timer_ptr);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___timer_8h_1a0ff132688ff52a0ccd2079f06c6cab85" kindref="member">Timer_init</ref>(<ref refid="struct_timer___s" kindref="compound">Timer_T</ref><sp/>*timer_ptr);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_serval___timer_8h_1a6083c2910d0fce54193b469d032bb62b" kindref="member">Timer_isActive</ref>(<ref refid="struct_timer___s" kindref="compound">Timer_T</ref><sp/>*timer_ptr);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___timer_8h_1a73f3301cbdd5584ddcd2d4f6b50fd576" kindref="member">Timer_config</ref>(<ref refid="struct_timer___s" kindref="compound">Timer_T</ref><sp/>*timer_ptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>milliseconds,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___timer_8h_1ad82cae26802f8c2c7f899b2971916f6b" kindref="member">TimerFunc_T</ref><sp/><ref refid="struct_timer___s_1a822882f63a7d8c041728282c08484cdd" kindref="member">func</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___timer_8h_1ae1575206b43889794009b06c4b135a9b" kindref="member">Timer_start</ref>(<ref refid="struct_timer___s" kindref="compound">Timer_T</ref><sp/>*timer_ptr);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___timer_8h_1a4eb12fa1ae033019ce286084c07d40c1" kindref="member">Timer_stop</ref>(<ref refid="struct_timer___s" kindref="compound">Timer_T</ref><sp/>*timer_ptr);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_TIMER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Timer.h"/>
  </compounddef>
</doxygen>
