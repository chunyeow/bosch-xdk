<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___lwm2m_8h" kind="file">
    <compoundname>Serval_Lwm2m.h</compoundname>
    <includes refid="_serval___policy_8h" local="no">Serval_Policy.h</includes>
    <includes refid="_serval___defines_8h" local="no">Serval_Defines.h</includes>
    <includes refid="_serval___types_8h" local="no">Serval_Types.h</includes>
    <includes refid="_serval___ip_8h" local="no">Serval_Ip.h</includes>
    <includes refid="_serval___msg_8h" local="no">Serval_Msg.h</includes>
    <includes refid="_serval___coap_8h" local="no">Serval_Coap.h</includes>
    <includes refid="_serval___security_8h" local="no">Serval_Security.h</includes>
    <includes refid="_serval___url_8h" local="no">Serval_Url.h</includes>
    <includes refid="_serval___coap_server_8h" local="no">Serval_CoapServer.h</includes>
    <includedby refid="_l_w_m2_m_object_accelerometer_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.h</includedby>
    <includedby refid="_l_w_m2_m_objects_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.h</includedby>
    <includedby refid="_l_w_m2_m_object_device_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.h</includedby>
    <includedby refid="_l_w_m2_m_object_connectivity_monitoring_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.h</includedby>
    <includedby refid="_l_w_m2_m_object_firmware_update_8h" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.h</includedby>
    <includedby refid="_l_w_m2_m_object_gyroscope_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.h</includedby>
    <includedby refid="_l_w_m2_m_object_magnetometer_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.h</includedby>
    <includedby refid="_l_w_m2_m_object_illuminance_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.h</includedby>
    <includedby refid="_l_w_m2_m_object_barometer_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.h</includedby>
    <includedby refid="_l_w_m2_m_object_sensor_device_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.h</includedby>
    <includedby refid="_l_w_m2_m_object_light_control_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.h</includedby>
    <includedby refid="_l_w_m2_m_object_alert_notification_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.h</includedby>
    <includedby refid="_l_w_m2_m_util_8h" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.h</includedby>
    <includedby refid="_l_w_m2_m_object_accelerometer_8c" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.c</includedby>
    <includedby refid="_l_w_m2_m_object_alert_notification_8c" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.c</includedby>
    <includedby refid="_l_w_m2_m_object_light_control_8c" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.c</includedby>
    <includedby refid="_l_w_m2_m_objects_8c" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.c</includedby>
    <includedby refid="_l_w_m2_m_object_sensor_device_8c" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.c</includedby>
    <includedby refid="_l_w_m2_m_sensor_device_gyroscope_8c" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceGyroscope.c</includedby>
    <includedby refid="_l_w_m2_m_sensor_device_illuminance_8c" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceIlluminance.c</includedby>
    <incdepgraph>
      <node id="30633">
        <label>stdbool.h</label>
      </node>
      <node id="30626">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="30627" relation="include">
        </childnode>
        <childnode refid="30667" relation="include">
        </childnode>
      </node>
      <node id="30637">
        <label>stdarg.h</label>
      </node>
      <node id="30681">
        <label>Serval_CoapServer.h</label>
        <link refid="_serval___coap_server_8h"/>
        <childnode refid="30625" relation="include">
        </childnode>
        <childnode refid="30667" relation="include">
        </childnode>
        <childnode refid="30670" relation="include">
        </childnode>
        <childnode refid="30677" relation="include">
        </childnode>
        <childnode refid="30678" relation="include">
        </childnode>
      </node>
      <node id="30664">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="30655" relation="include">
        </childnode>
      </node>
      <node id="30649">
        <label>list.h</label>
      </node>
      <node id="30651">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="30652" relation="include">
        </childnode>
        <childnode refid="30631" relation="include">
        </childnode>
        <childnode refid="30630" relation="include">
        </childnode>
      </node>
      <node id="30671">
        <label>Serval_StringDescr.h</label>
        <link refid="_serval___string_descr_8h"/>
        <childnode refid="30626" relation="include">
        </childnode>
      </node>
      <node id="30629">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="30630" relation="include">
        </childnode>
      </node>
      <node id="30632">
        <label>stdint.h</label>
      </node>
      <node id="30630">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="30631" relation="include">
        </childnode>
      </node>
      <node id="30635">
        <label>stdlib.h</label>
      </node>
      <node id="30667">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="30624">
        <label>Serval_Policy.h</label>
        <link refid="_serval___policy_8h"/>
      </node>
      <node id="30643">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="30646">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="30647" relation="include">
        </childnode>
      </node>
      <node id="30654">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="30656">
        <label>user.h</label>
      </node>
      <node id="30650">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="30630" relation="include">
        </childnode>
        <childnode refid="30651" relation="include">
        </childnode>
        <childnode refid="30654" relation="include">
        </childnode>
      </node>
      <node id="30657">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="30655" relation="include">
        </childnode>
      </node>
      <node id="30674">
        <label>Serval_Callable.h</label>
        <link refid="_serval___callable_8h"/>
        <childnode refid="30626" relation="include">
        </childnode>
        <childnode refid="30675" relation="include">
        </childnode>
      </node>
      <node id="30678">
        <label>Serval_Security.h</label>
        <link refid="_serval___security_8h"/>
        <childnode refid="30625" relation="include">
        </childnode>
        <childnode refid="30670" relation="include">
        </childnode>
        <childnode refid="30627" relation="include">
        </childnode>
        <childnode refid="30679" relation="include">
        </childnode>
      </node>
      <node id="30679">
        <label>Serval_MsgSendingCtx.h</label>
        <link refid="_serval___msg_sending_ctx_8h"/>
        <childnode refid="30624" relation="include">
        </childnode>
      </node>
      <node id="30641">
        <label>stddef.h</label>
      </node>
      <node id="30680">
        <label>Serval_Url.h</label>
        <link refid="_serval___url_8h"/>
        <childnode refid="30671" relation="include">
        </childnode>
        <childnode refid="30626" relation="include">
        </childnode>
        <childnode refid="30668" relation="include">
        </childnode>
      </node>
      <node id="30659">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="30655" relation="include">
        </childnode>
      </node>
      <node id="30639">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="30640" relation="include">
        </childnode>
        <childnode refid="30642" relation="include">
        </childnode>
        <childnode refid="30646" relation="include">
        </childnode>
        <childnode refid="30648" relation="include">
        </childnode>
      </node>
      <node id="30628">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="30629" relation="include">
        </childnode>
        <childnode refid="30631" relation="include">
        </childnode>
        <childnode refid="30636" relation="include">
        </childnode>
        <childnode refid="30637" relation="include">
        </childnode>
        <childnode refid="30638" relation="include">
        </childnode>
        <childnode refid="30635" relation="include">
        </childnode>
        <childnode refid="30626" relation="include">
        </childnode>
        <childnode refid="30639" relation="include">
        </childnode>
        <childnode refid="30650" relation="include">
        </childnode>
        <childnode refid="30655" relation="include">
        </childnode>
      </node>
      <node id="30636">
        <label>limits.h</label>
      </node>
      <node id="30670">
        <label>Serval_Msg.h</label>
        <link refid="_serval___msg_8h"/>
        <childnode refid="30625" relation="include">
        </childnode>
        <childnode refid="30626" relation="include">
        </childnode>
        <childnode refid="30671" relation="include">
        </childnode>
        <childnode refid="30672" relation="include">
        </childnode>
        <childnode refid="30673" relation="include">
        </childnode>
        <childnode refid="30674" relation="include">
        </childnode>
        <childnode refid="30668" relation="include">
        </childnode>
        <childnode refid="30624" relation="include">
        </childnode>
        <childnode refid="30676" relation="include">
        </childnode>
      </node>
      <node id="30645">
        <label>portable.h</label>
      </node>
      <node id="30653">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="30634">
        <label>string.h</label>
      </node>
      <node id="30652">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="30653" relation="include">
        </childnode>
        <childnode refid="30630" relation="include">
        </childnode>
      </node>
      <node id="30675">
        <label>Serval_StructCtx.h</label>
        <link refid="_serval___struct_ctx_8h"/>
        <childnode refid="30641" relation="include">
        </childnode>
      </node>
      <node id="30631">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="30632" relation="include">
        </childnode>
        <childnode refid="30633" relation="include">
        </childnode>
        <childnode refid="30634" relation="include">
        </childnode>
        <childnode refid="30635" relation="include">
        </childnode>
      </node>
      <node id="30676">
        <label>Serval_Msg_Obsolete.h</label>
        <link refid="_serval___msg___obsolete_8h"/>
        <childnode refid="30626" relation="include">
        </childnode>
        <childnode refid="30624" relation="include">
        </childnode>
        <childnode refid="30670" relation="include">
        </childnode>
      </node>
      <node id="30668">
        <label>Serval_Ip.h</label>
        <link refid="_serval___ip_8h"/>
        <childnode refid="30669" relation="include">
        </childnode>
        <childnode refid="30626" relation="include">
        </childnode>
      </node>
      <node id="30644">
        <label>projdefs.h</label>
      </node>
      <node id="30666">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="30669">
        <label>PIp.h</label>
        <link refid="_p_ip_8h"/>
        <childnode refid="30630" relation="include">
        </childnode>
      </node>
      <node id="30665">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="30655" relation="include">
        </childnode>
      </node>
      <node id="30623">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h</label>
        <link refid="Serval_Lwm2m.h"/>
        <childnode refid="30624" relation="include">
        </childnode>
        <childnode refid="30625" relation="include">
        </childnode>
        <childnode refid="30626" relation="include">
        </childnode>
        <childnode refid="30668" relation="include">
        </childnode>
        <childnode refid="30670" relation="include">
        </childnode>
        <childnode refid="30677" relation="include">
        </childnode>
        <childnode refid="30678" relation="include">
        </childnode>
        <childnode refid="30680" relation="include">
        </childnode>
        <childnode refid="30681" relation="include">
        </childnode>
      </node>
      <node id="30673">
        <label>Serval_Filesystem.h</label>
        <link refid="_serval___filesystem_8h"/>
        <childnode refid="30626" relation="include">
        </childnode>
      </node>
      <node id="30625">
        <label>Serval_Defines.h</label>
        <link refid="_serval___defines_8h"/>
      </node>
      <node id="30677">
        <label>Serval_Coap.h</label>
        <link refid="_serval___coap_8h"/>
        <childnode refid="30625" relation="include">
        </childnode>
        <childnode refid="30624" relation="include">
        </childnode>
      </node>
      <node id="30661">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="30655" relation="include">
        </childnode>
      </node>
      <node id="30647">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="30662">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="30655" relation="include">
        </childnode>
      </node>
      <node id="30672">
        <label>Serval_XmlParser.h</label>
        <link refid="_serval___xml_parser_8h"/>
        <childnode refid="30671" relation="include">
        </childnode>
      </node>
      <node id="30660">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="30655" relation="include">
        </childnode>
      </node>
      <node id="30648">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="30649" relation="include">
        </childnode>
      </node>
      <node id="30663">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="30655" relation="include">
        </childnode>
      </node>
      <node id="30642">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="30632" relation="include">
        </childnode>
        <childnode refid="30629" relation="include">
        </childnode>
        <childnode refid="30643" relation="include">
        </childnode>
      </node>
      <node id="30627">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="30628" relation="include">
        </childnode>
      </node>
      <node id="30640">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="30641" relation="include">
        </childnode>
        <childnode refid="30632" relation="include">
        </childnode>
        <childnode refid="30642" relation="include">
        </childnode>
        <childnode refid="30644" relation="include">
        </childnode>
        <childnode refid="30645" relation="include">
        </childnode>
      </node>
      <node id="30638">
        <label>stdio.h</label>
      </node>
      <node id="30658">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="30655" relation="include">
        </childnode>
      </node>
      <node id="30655">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="30656" relation="include">
        </childnode>
        <childnode refid="30657" relation="include">
        </childnode>
        <childnode refid="30658" relation="include">
        </childnode>
        <childnode refid="30659" relation="include">
        </childnode>
        <childnode refid="30660" relation="include">
        </childnode>
        <childnode refid="30661" relation="include">
        </childnode>
        <childnode refid="30662" relation="include">
        </childnode>
        <childnode refid="30663" relation="include">
        </childnode>
        <childnode refid="30664" relation="include">
        </childnode>
        <childnode refid="30665" relation="include">
        </childnode>
        <childnode refid="30666" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="30711">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceEnvironment.c</label>
        <link refid="_l_w_m2_m_sensor_device_environment_8c"/>
      </node>
      <node id="30695">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.c</label>
        <link refid="_l_w_m2_m_objects_8c"/>
      </node>
      <node id="30685">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.h</label>
        <link refid="_l_w_m2_m_objects_8h"/>
        <childnode refid="30684" relation="include">
        </childnode>
        <childnode refid="30686" relation="include">
        </childnode>
        <childnode refid="30687" relation="include">
        </childnode>
        <childnode refid="30688" relation="include">
        </childnode>
        <childnode refid="30689" relation="include">
        </childnode>
        <childnode refid="30690" relation="include">
        </childnode>
        <childnode refid="30691" relation="include">
        </childnode>
        <childnode refid="30692" relation="include">
        </childnode>
        <childnode refid="30693" relation="include">
        </childnode>
        <childnode refid="30694" relation="include">
        </childnode>
        <childnode refid="30695" relation="include">
        </childnode>
        <childnode refid="30696" relation="include">
        </childnode>
        <childnode refid="30697" relation="include">
        </childnode>
        <childnode refid="30698" relation="include">
        </childnode>
      </node>
      <node id="30686">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.c</label>
        <link refid="_l_w_m2_m_object_alert_notification_8c"/>
      </node>
      <node id="30714">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.h</label>
        <link refid="_l_w_m2_m_object_alert_notification_8h"/>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30686" relation="include">
        </childnode>
      </node>
      <node id="30689">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.c</label>
        <link refid="_l_w_m2_m_object_device_8c"/>
      </node>
      <node id="30709">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceIlluminance.c</label>
        <link refid="_l_w_m2_m_sensor_device_illuminance_8c"/>
      </node>
      <node id="30700">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.h</label>
        <link refid="_l_w_m2_m_object_device_8h"/>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30689" relation="include">
        </childnode>
      </node>
      <node id="30688">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.c</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8c"/>
      </node>
      <node id="30701">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.h</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8h"/>
        <childnode refid="30685" relation="include">
        </childnode>
      </node>
      <node id="30699">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceAccelerometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_accelerometer_8c"/>
      </node>
      <node id="30696">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.c</label>
        <link refid="_l_w_m2_m_object_sensor_device_8c"/>
      </node>
      <node id="30712">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.h</label>
        <link refid="_l_w_m2_m_object_sensor_device_8h"/>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30689" relation="include">
        </childnode>
        <childnode refid="30696" relation="include">
        </childnode>
      </node>
      <node id="30707">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceMagnetometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_magnetometer_8c"/>
      </node>
      <node id="30697">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectTemperature.c</label>
        <link refid="_l_w_m2_m_object_temperature_8c"/>
      </node>
      <node id="30692">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.c</label>
        <link refid="_l_w_m2_m_object_illuminance_8c"/>
      </node>
      <node id="30708">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.h</label>
        <link refid="_l_w_m2_m_object_illuminance_8h"/>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30709" relation="include">
        </childnode>
      </node>
      <node id="30703">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.c</label>
        <link refid="_l_w_m2_m_object_firmware_update_8c"/>
      </node>
      <node id="30693">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.c</label>
        <link refid="_l_w_m2_m_object_light_control_8c"/>
      </node>
      <node id="30702">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.h</label>
        <link refid="_l_w_m2_m_object_firmware_update_8h"/>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30703" relation="include">
        </childnode>
      </node>
      <node id="30694">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.c</label>
        <link refid="_l_w_m2_m_object_magnetometer_8c"/>
      </node>
      <node id="30713">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.h</label>
        <link refid="_l_w_m2_m_object_light_control_8h"/>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30693" relation="include">
        </childnode>
      </node>
      <node id="30706">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.h</label>
        <link refid="_l_w_m2_m_object_magnetometer_8h"/>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30707" relation="include">
        </childnode>
      </node>
      <node id="30682">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h</label>
        <link refid="Serval_Lwm2m.h"/>
        <childnode refid="30683" relation="include">
        </childnode>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30700" relation="include">
        </childnode>
        <childnode refid="30701" relation="include">
        </childnode>
        <childnode refid="30702" relation="include">
        </childnode>
        <childnode refid="30704" relation="include">
        </childnode>
        <childnode refid="30706" relation="include">
        </childnode>
        <childnode refid="30708" relation="include">
        </childnode>
        <childnode refid="30710" relation="include">
        </childnode>
        <childnode refid="30712" relation="include">
        </childnode>
        <childnode refid="30713" relation="include">
        </childnode>
        <childnode refid="30714" relation="include">
        </childnode>
        <childnode refid="30715" relation="include">
        </childnode>
        <childnode refid="30684" relation="include">
        </childnode>
        <childnode refid="30686" relation="include">
        </childnode>
        <childnode refid="30693" relation="include">
        </childnode>
        <childnode refid="30695" relation="include">
        </childnode>
        <childnode refid="30696" relation="include">
        </childnode>
        <childnode refid="30705" relation="include">
        </childnode>
        <childnode refid="30709" relation="include">
        </childnode>
      </node>
      <node id="30684">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.c</label>
        <link refid="_l_w_m2_m_object_accelerometer_8c"/>
      </node>
      <node id="30683">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.h</label>
        <link refid="_l_w_m2_m_object_accelerometer_8h"/>
        <childnode refid="30684" relation="include">
        </childnode>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30699" relation="include">
        </childnode>
      </node>
      <node id="30691">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectHumidity.c</label>
        <link refid="_l_w_m2_m_object_humidity_8c"/>
      </node>
      <node id="30705">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceGyroscope.c</label>
        <link refid="_l_w_m2_m_sensor_device_gyroscope_8c"/>
      </node>
      <node id="30687">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.c</label>
        <link refid="_l_w_m2_m_object_barometer_8c"/>
      </node>
      <node id="30710">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.h</label>
        <link refid="_l_w_m2_m_object_barometer_8h"/>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30711" relation="include">
        </childnode>
      </node>
      <node id="30698">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.c</label>
        <link refid="_l_w_m2_m_util_8c"/>
      </node>
      <node id="30715">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.h</label>
        <link refid="_l_w_m2_m_util_8h"/>
        <childnode refid="30684" relation="include">
        </childnode>
        <childnode refid="30686" relation="include">
        </childnode>
        <childnode refid="30687" relation="include">
        </childnode>
        <childnode refid="30688" relation="include">
        </childnode>
        <childnode refid="30690" relation="include">
        </childnode>
        <childnode refid="30691" relation="include">
        </childnode>
        <childnode refid="30692" relation="include">
        </childnode>
        <childnode refid="30693" relation="include">
        </childnode>
        <childnode refid="30694" relation="include">
        </childnode>
        <childnode refid="30696" relation="include">
        </childnode>
        <childnode refid="30697" relation="include">
        </childnode>
        <childnode refid="30698" relation="include">
        </childnode>
      </node>
      <node id="30690">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.c</label>
        <link refid="_l_w_m2_m_object_gyroscope_8c"/>
      </node>
      <node id="30704">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.h</label>
        <link refid="_l_w_m2_m_object_gyroscope_8h"/>
        <childnode refid="30685" relation="include">
        </childnode>
        <childnode refid="30705" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_lwm2m___u_r_i___path___s" prot="public">Lwm2m_URI_Path_S</innerclass>
    <innerclass refid="struct_lwm2m_bootstrap_server___s" prot="public">Lwm2mBootstrapServer_S</innerclass>
    <innerclass refid="struct_lwm2m_device___s" prot="public">Lwm2mDevice_S</innerclass>
    <innerclass refid="struct_lwm2m_object_instance___s" prot="public">Lwm2mObjectInstance_S</innerclass>
    <innerclass refid="struct_lwm2m_resource___s" prot="public">Lwm2mResource_S</innerclass>
    <innerclass refid="struct_lwm2m_security_info___s" prot="public">Lwm2mSecurityInfo_S</innerclass>
    <innerclass refid="struct_lwm2m_server___s" prot="public">Lwm2mServer_S</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_serval___lwm2m_8h_1af9aa91b26db29071e486e298e3da3fd4" prot="public" static="no">
        <name>LWM2M_ACCESS_CONTROL_OWNER</name>
        <initializer>0x3F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>macro used to determine the owner of the access control object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="124" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1aac48e6d5363d1d22181226d7055f53d4" prot="public" static="no">
        <name>LWM2M_BOOL</name>
        <param><defname>boolean</defname></param>
        <initializer>{.b = boolean},     (uint8_t) <ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a4ae0a266a85d7d8d2af5d92bcc7fe962" kindref="member">LWM2M_RESOURCE_BOOL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to initialize a bool resource </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="101" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1ab1dc331e8498dc627716951b25d43644" prot="public" static="no">
        <name>LWM2M_BOOTSTRAP_TIMEOUT</name>
        <initializer>COAP_ACK_TIMEOUT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BOOTSTRAP_TIMEOUT in seconds (default value 2) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="121" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1ab402fc3f8b36eccbd3e35b68f04a11b3" prot="public" static="no">
        <name>LWM2M_CONFIRM_NOTIFY</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark the resource to be delivered via confirmable messages </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="215" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="215" bodyend="-1"/>
        <referencedby refid="_l_w_m2_m_objects_8c_1ade9546d0f7a5eb8b8b4144bb79057609" compoundref="_l_w_m2_m_objects_8c" startline="172" endline="184">LWM2MObjectsEnableConNotifies</referencedby>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a58eba2c61f53f551bec62317ad525275" prot="public" static="no">
        <name>LWM2M_CREATE_ALLOWED</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="132" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a973a35f2cb2a14339d50bb643e184a41" prot="public" static="no">
        <name>LWM2M_DELETE_ALLOWED</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="131" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a76c056a7c0ed1924917ade1e6f7d1f92" prot="public" static="no">
        <name>LWM2M_DYNAMIC</name>
        <param><defname>dyn</defname></param>
        <initializer>{.dynamic = dyn},   (uint8_t) <ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a94f37fb4c4193f64124d92aa15144d89" kindref="member">LWM2M_RESOURCE_DYNAMIC</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to initialize a dynamic resource </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="105" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a51c5a0068d3a0c934dd06cfc966e7b55" prot="public" static="no">
        <name>LWM2M_DYNAMIC_ARRAY</name>
        <param><defname>dyn</defname></param>
        <initializer>{.dynamic = dyn},   (uint8_t) <ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69ae04f18871517612ec09eab4298890b8c" kindref="member">LWM2M_RESOURCE_DYNAMIC_ARRAY</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to initialize a dynamic resource as an array </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="107" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1aecc220543a782a4519a27fa74876c4fc" prot="public" static="no">
        <name>LWM2M_DYNAMIC_BULK</name>
        <param><defname>dyn</defname></param>
        <initializer>{.dynamic = dyn},   (uint8_t) <ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a94782e3312710a29301e89778c9a8e49" kindref="member">LWM2M_RESOURCE_DYNAMIC_BULK</ref> | <ref refid="_serval___lwm2m_8h_1a379b2a6273f9c4bd6e8579f3b249565a" kindref="member">LWM2M_READ_ONLY</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to initialize a bulk resource </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="111" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a84961f4a89793fbf8a7781552682eea3" prot="public" static="no">
        <name>LWM2M_EXECUTE_ALLOWED</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="130" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1ab5198d8bd971f4f93ae0c16601681cec" prot="public" static="no">
        <name>LWM2M_FLOAT</name>
        <param><defname>floating</defname></param>
        <initializer>{.f = floating},    (uint8_t) <ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69ab538dbb17833dbc19c3a9d77b0b9378c" kindref="member">LWM2M_RESOURCE_FLOAT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to initialize a floating point resource </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="99" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a0fb3be08c9e8ea98cd0187768a42fc4a" prot="public" static="no">
        <name>LWM2M_FULL_ACCESS</name>
        <initializer>0x1F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="133" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1ac6067e91752fd2d1ba06764c73d2fedf" prot="public" static="no">
        <name>LWM2M_FUNCTION</name>
        <param><defname>function</defname></param>
        <initializer>{.func = function}, (uint8_t) <ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69abf1a17b0f564a216eb38efc2b83632cf" kindref="member">LWM2M_RESOURCE_FUNCTION</ref> | <ref refid="_serval___lwm2m_8h_1afd46a13b9bfc4c7eb8319aab5f728f56" kindref="member">LWM2M_NOT_WRITABLE</ref> | <ref refid="_serval___lwm2m_8h_1a86ef4324cc3d10b0aed5a55e5d258dbd" kindref="member">LWM2M_NOT_READABLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to initialize a function resource </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="109" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a18f02890e5e24a7cafd18da4a5b5eac4" prot="public" static="no">
        <name>LWM2M_INACTIVE_INSTANCE</name>
        <initializer>0xFFFE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to define an object instance as inactive / not allocated </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="72" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a166cb6b29ebf408428ecea0ec56472d0" prot="public" static="no">
        <name>LWM2M_INACTIVE_RESOURCE_INSTANCE</name>
        <initializer>0xFFFE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to define a non instanced multiple resource </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="86" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1afa7c252691125c39b4c82d4b34983325" prot="public" static="no">
        <name>LWM2M_INTEGER</name>
        <param><defname>integer</defname></param>
        <initializer>{.i = integer},     (uint8_t) <ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a9e7f13a85a2d9e1e3b19e9b2b4fe7b73" kindref="member">LWM2M_RESOURCE_INTEGER</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to initialize an integer resource </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="97" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1aeddfe881e45453d9df8746fe09b28c6f" prot="public" static="no">
        <name>LWM2M_INVISIBLE_INSTANCE</name>
        <initializer>0xFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to define an object instance as invisible (it won&apos;t be considered for discovery) This is mainly useful for testing </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="77" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a3f3294152c00e99fd63ac2221d6079a3" prot="public" static="no">
        <name>LWM2M_IP_ADDRESS_MAX_LENGTH</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum length of the name that the device registers with Maximum length of the address of a (bootstrap) server (coap(s)://xxx.xxx.xxx.xxx:xxxxx) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="57" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1ad7846c732476104297d1eb498a49557d" prot="public" static="no">
        <name>LWM2M_MAX_NUMBER_SERVERS</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of servers supported by LwM2M </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="62" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a86ef4324cc3d10b0aed5a55e5d258dbd" prot="public" static="no">
        <name>LWM2M_NOT_READABLE</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark the resource type as not readable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="213" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="213" bodyend="-1"/>
        <referencedby refid="_l_w_m2_m_objects_8c_1ade9546d0f7a5eb8b8b4144bb79057609" compoundref="_l_w_m2_m_objects_8c" startline="172" endline="184">LWM2MObjectsEnableConNotifies</referencedby>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1afd46a13b9bfc4c7eb8319aab5f728f56" prot="public" static="no">
        <name>LWM2M_NOT_WRITABLE</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark the resource type as not writable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="211" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a3929a6712c9a04cf0475b5b90a731aaf" prot="public" static="no">
        <name>LWM2M_OBJECT_INSTANCE_COUNT</name>
        <param><defname>objectInstances</defname></param>
        <initializer>sizeof(objectInstances) / sizeof(<ref refid="_serval___lwm2m_8h_1a8a1b63ecea8f026be591584bd2e33646" kindref="member">Lwm2mObjectInstance_T</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to set the count of objects in the Lwm2m device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="89" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1adf2df1776fec5647305c375adc33bce1" prot="public" static="no">
        <name>LWM2M_QUEUE_MODE_TIMEOUT</name>
        <initializer>COAP_ACK_TIMEOUT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>QUEUE_MODE_TIMEOUT in seconds (default value 2) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="116" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a2360bfb699a099a1d1eab8e5e7cc14d0" prot="public" static="no">
        <name>LWM2M_READ_ALLOWED</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macros used to set the access right for servers. Read access means right for Read, Observe, Write Attributes and Discover </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="128" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a379b2a6273f9c4bd6e8579f3b249565a" prot="public" static="no">
        <name>LWM2M_READ_ONLY</name>
        <initializer><ref refid="_serval___lwm2m_8h_1afd46a13b9bfc4c7eb8319aab5f728f56" kindref="member">LWM2M_NOT_WRITABLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience value, same as not writable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="218" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1ad9cdf1aad70a6e32d8f4917bb41fd683" prot="public" static="no">
        <name>LWM2M_REJECT_ANONYMOUS_DTLS_SERVERS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable to reject any server that does not provide a DTLS Server hint. Only applicable with DTLS enabled and when using LWm2mSecurity_callback as the security callback </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="68" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a233ad0bbf0ba00095358bf60f106c362" prot="public" static="no">
        <name>LWM2M_RESOURCE_AFFIX_MASK</name>
        <initializer>0xE0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mask for the bits that contain affixes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="225" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1abfe839d21acdc9fe9bbdb48994490273" prot="public" static="no">
        <name>LWM2M_RESOURCE_TYPE_MASK</name>
        <initializer>0x0F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mask for the bits that contain the raw type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="223" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a2801d625d41c1a7a78c23b1704447ca4" prot="public" static="no">
        <name>LWM2M_RESOURCES</name>
        <param><defname>resources</defname></param>
        <initializer>&amp;resources, sizeof(resources)/sizeof(<ref refid="_serval___lwm2m_8h_1a7aa17765bff5d9f2e3bd4449b319bb47" kindref="member">Lwm2mResource_T</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to set the count of resources in an Lwm2m object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="92" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1abeccf0464dfeb593800d4bf21bf84456" prot="public" static="no">
        <name>LWM2M_SINGLE_INSTANCE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro to point out the semantic difference between a non-multiple object and the instance 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="80" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a7690f178e3efc7b7180e0502f67aad5d" prot="public" static="no">
        <name>LWM2M_SINGLE_RESOURCE_INSTANCE</name>
        <initializer>0xFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to define a resource as single </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="83" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a789ff08d1972a37ec3c7d1901a4941d2" prot="public" static="no">
        <name>LWM2M_STRING_RO</name>
        <param><defname>string</defname></param>
        <initializer>{.s = string},      (uint8_t) <ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69aeb759d0eded18623b92c554c517e3bde" kindref="member">LWM2M_RESOURCE_STRING</ref> | <ref refid="_serval___lwm2m_8h_1a379b2a6273f9c4bd6e8579f3b249565a" kindref="member">LWM2M_READ_ONLY</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to initialize a string resource </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="95" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1aca82fd03c4918100b4a89623a43d5eea" prot="public" static="no">
        <name>LWM2M_TIME</name>
        <param><defname>time</defname></param>
        <initializer>{.i = <ref refid="_b_l_e_s_w___human_interface_device_01_release_notes_8txt_1a6f3a3fee0e1981cddf3c3bc3cde36aa5" kindref="member">time</ref>},        (uint8_t) <ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69abf9389ec139475ce8f5f74932070d1b4" kindref="member">LWM2M_RESOURCE_TIME</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper macro to initialize a time resource </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="103" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a0d11440fdbd13801e1df3e5dbdc226a6" prot="public" static="no">
        <name>LWM2M_WRITE_ALLOWED</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="129" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a148726b42b87461f20aa51c9dd4f546d" prot="public" static="no">
        <name>LWM2M_WRITE_ONLY</name>
        <initializer><ref refid="_serval___lwm2m_8h_1a86ef4324cc3d10b0aed5a55e5d258dbd" kindref="member">LWM2M_NOT_READABLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience value, same as not readable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="220" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_serval___lwm2m_8h_1a6be143e219d2f88e654779b2312e849f" prot="public" static="no">
        <name>SERVAL_LWM2M_SECURITY_INFO_MAX_LENGTH</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro used to set a maximum for the security informations such as identity length or PSK length </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="390" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72d" prot="public" static="no">
        <name>Lwm2m_Binding_E</name>
        <enumvalue id="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72daed4ee4ba62b6cc15078ee06b4b724461" prot="public">
          <name>LWM2M_BINDING_UNDEFINED</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72daa3eb0570e589b7e1b1ab0ac95161a93f" prot="public">
          <name>LWM2M_BINDING_QUEUED</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dadb542475cf9d0636e4225e216cee9ae6" prot="public">
          <name>UDP</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The device is reachable via UDP (default) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dafc7e56e9935ee609750e345714386c36" prot="public">
          <name>SMS</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The device is reachable via SMS </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da44f50d46918767f6b2487db6bd0545df" prot="public">
          <name>UDP_QUEUED</name>
          <initializer>= UDP | LWM2M_BINDING_QUEUED</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The device is reachable via UDP only after having sent an update to the server </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da5b9e031496d90bc10909d3eb239db1e8" prot="public">
          <name>SMS_QUEUED</name>
          <initializer>= SMS | LWM2M_BINDING_QUEUED</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The device is reachable via SMS only after having sent an update to the server </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da14bad80b90bcdae157c1ee88bb07ed14" prot="public">
          <name>UDP_AND_SMS</name>
          <initializer>= UDP | SMS</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The device is reachable via either UDP or SMS </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da02abd098d6871facfb688b95d8085cd9" prot="public">
          <name>UDP_QUEUED_AND_SMS</name>
          <initializer>= UDP | SMS | LWM2M_BINDING_QUEUED</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The device is reachable via either UDP after having sent an update or via SMS </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumeration of different communication modes available to the lwm2m device See section 5.2.1.1 &quot;Behavior with Current Transport Binding and Mode&quot; of the Lightweight M2M technical specification. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="151" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="150" bodyend="169"/>
      </memberdef>
      <memberdef kind="enum" id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490f" prot="public" static="no">
        <name>Lwm2m_Event_Type_E</name>
        <enumvalue id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa268a5af790081316afb61055249d6fde" prot="public">
          <name>LWM2M_EVENT_TYPE_BOOTSTRAP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Bootstrapping </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa86530b4f2468efa60a10e4c2ca640e7b" prot="public">
          <name>LWM2M_EVENT_TYPE_REGISTRATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Registration </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa3e61c279bb4128605c503d4039f294f7" prot="public">
          <name>LWM2M_EVENT_TYPE_REGISTRATION_UPDATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Registration update </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fabb65b80a300b95f57a716cc157a1b584" prot="public">
          <name>LWM2M_EVENT_TYPE_DEREGISTRATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Deregistration </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490faaac78704e8ae2f350679ca41217087cd" prot="public">
          <name>LWM2M_EVENT_TYPE_WRITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Write operation executed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa4e4b1db28c002384b125715b85bdf4dc" prot="public">
          <name>LWM2M_EVENT_TYPE_OBJECT_CREATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Create operation executed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa79ff18f022326714b8522a096b95bac4" prot="public">
          <name>LWM2M_EVENT_TYPE_OBJECT_DELETED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Delete operation executed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa85f2b4f31bc2aba565fda078a8038148" prot="public">
          <name>LWM2M_EVENT_TYPE_NEW_OBSERVER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Observe operation executed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa790f91368763e3a8200d8eddd8d83f03" prot="public">
          <name>LWM2M_EVENT_TYPE_NOTIFICATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Notification operation executed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa540eea79a23aff2b2976ee0b2fd1d905" prot="public">
          <name>LWM2M_EVENT_TYPE_OBSERVATION_CANCELED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Cancel observation executed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490faabf458e4472b3ec5687f7b741e0e83ad" prot="public">
          <name>LWM2M_EVENT_TYPE_NEW_SERVER_ADDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Cancel observation executed </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumeration of event types that the Lwm2m could notify the application about. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="238" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="237" bodyend="261"/>
      </memberdef>
      <memberdef kind="enum" id="_serval___lwm2m_8h_1ae9064caa4d861808633acbe662c37b0a" prot="public" static="no">
        <name>Lwm2m_Notification_Resumption_e</name>
        <enumvalue id="_serval___lwm2m_8h_1ae9064caa4d861808633acbe662c37b0aa69f2e39e4cacf3ebcbfc6933d50b0af6" prot="public">
          <name>LWM2M_DROP_NOTIFICATIONS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1ae9064caa4d861808633acbe662c37b0aa956447988677e985effd7e12ea8fe430" prot="public">
          <name>LWM2M_SEND_NOTIFICATIONS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1042" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="1041" bodyend="1045"/>
      </memberdef>
      <memberdef kind="enum" id="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69" prot="public" static="no">
        <name>Lwm2m_Resource_Type_E</name>
        <enumvalue id="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69aeb759d0eded18623b92c554c517e3bde" prot="public">
          <name>LWM2M_RESOURCE_STRING</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resource is a (read-only) String. Use &apos;dynamic&apos; for strings writable by the server </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a9e7f13a85a2d9e1e3b19e9b2b4fe7b73" prot="public">
          <name>LWM2M_RESOURCE_INTEGER</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resource is an Integer </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69ab538dbb17833dbc19c3a9d77b0b9378c" prot="public">
          <name>LWM2M_RESOURCE_FLOAT</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resource is a floating point number </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a4ae0a266a85d7d8d2af5d92bcc7fe962" prot="public">
          <name>LWM2M_RESOURCE_BOOL</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resource is a boolean </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69abf9389ec139475ce8f5f74932070d1b4" prot="public">
          <name>LWM2M_RESOURCE_TIME</name>
          <initializer>= 0x05</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resource is a time value </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a94f37fb4c4193f64124d92aa15144d89" prot="public">
          <name>LWM2M_RESOURCE_DYNAMIC</name>
          <initializer>= 0x06</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resource is dynamic, i.e. serialized with a callback </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69ae04f18871517612ec09eab4298890b8c" prot="public">
          <name>LWM2M_RESOURCE_DYNAMIC_ARRAY</name>
          <initializer>= 0x07</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resource is dynamic array, i.e. serialized with a callback </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69abf1a17b0f564a216eb38efc2b83632cf" prot="public">
          <name>LWM2M_RESOURCE_FUNCTION</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resource is a function that can be executed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a94782e3312710a29301e89778c9a8e49" prot="public">
          <name>LWM2M_RESOURCE_DYNAMIC_BULK</name>
          <initializer>= 0x09</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Resource that contains a large data that requires blockwise transfer </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumeration of resource types. Note that read-only refers to the access from the network, not internal access to the resources.</para><para>The affixes LWM2M_READ_ONLY and LWM2M_WRITE_ONLY can be combined with the helper macros for resource initialization, like this:</para><para><programlisting><codeline><highlight class="normal">{<sp/>6,<sp/><sp/><ref refid="_serval___lwm2m_8h_1afa7c252691125c39b4c82d4b34983325" kindref="member">LWM2M_INTEGER</ref>(<sp/>1<sp/>)<sp/><sp/><sp/>|<sp/><ref refid="_serval___lwm2m_8h_1a148726b42b87461f20aa51c9dd4f546d" kindref="member">LWM2M_WRITE_ONLY</ref>},</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="188" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="187" bodyend="207"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1a6b8425f07996250f560d2f124d3460de" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Lwm2m_ApplicationCallback_T)(Lwm2m_Event_Type_T eventType, Lwm2m_URI_Path_T *path, retcode_t status)</definition>
        <argsstring>)(Lwm2m_Event_Type_T eventType, Lwm2m_URI_Path_T *path, retcode_t status)</argsstring>
        <name>Lwm2m_ApplicationCallback_T</name>
        <briefdescription>
<para>Callback function triggered after an event occurred in the stack that need to be notified to the application. This callback function is used for registration for example or resources changes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>type to specify which event we are notifying the application about (registration success or resources changed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">structure</parametername>
</parameternamelist>
<parameterdescription>
<para>containing the uri path of the target </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">status</parametername>
</parameternamelist>
<parameterdescription>
<para>will tell the application about the kind of error that occurred </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="509" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1a74fda8acf8e1459b47cffeb1ade3be49" prot="public" static="no">
        <type>enum <ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72d" kindref="member">Lwm2m_Binding_E</ref></type>
        <definition>typedef enum Lwm2m_Binding_E Lwm2m_Binding_T</definition>
        <argsstring></argsstring>
        <name>Lwm2m_Binding_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type definition for the lightweight M2M communication binding. <simplesect kind="see"><para><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72d" kindref="member">Lwm2m_Binding_E</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="184" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1a8098c198828bc7a1b33a807072d2cf1d" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* Lwm2m_Dynamic_Resource_T)(Lwm2mSerializer_T *serializer_ptr, Lwm2mParser_T *parser_ptr)</definition>
        <argsstring>)(Lwm2mSerializer_T *serializer_ptr, Lwm2mParser_T *parser_ptr)</argsstring>
        <name>Lwm2m_Dynamic_Resource_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="317" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1a0f96255eafbe400b10f94c798b92f37e" prot="public" static="no">
        <type>enum <ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490f" kindref="member">Lwm2m_Event_Type_E</ref></type>
        <definition>typedef enum Lwm2m_Event_Type_E Lwm2m_Event_Type_T</definition>
        <argsstring></argsstring>
        <name>Lwm2m_Event_Type_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type definition for the event type. <simplesect kind="see"><para><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490f" kindref="member">Lwm2m_Event_Type_E</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="184" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1ae2e7392662b3fa670121d7ae8cdb316d" prot="public" static="no">
        <type>enum <ref refid="_serval___lwm2m_8h_1ae9064caa4d861808633acbe662c37b0a" kindref="member">Lwm2m_Notification_Resumption_e</ref></type>
        <definition>typedef enum Lwm2m_Notification_Resumption_e Lwm2m_Notification_Resumption_t</definition>
        <argsstring></argsstring>
        <name>Lwm2m_Notification_Resumption_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1039" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="1046" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1a59eee50bc50ee36d0bb7a0ff72e875d8" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* Lwm2m_Resource_Function_T)(Lwm2mSerializer_T *serializer_ptr, Lwm2mParser_T *parser_ptr)</definition>
        <argsstring>)(Lwm2mSerializer_T *serializer_ptr, Lwm2mParser_T *parser_ptr)</argsstring>
        <name>Lwm2m_Resource_Function_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="332" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1a5ab22070629f98ba54f84a824df507f8" prot="public" static="no">
        <type>enum <ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69" kindref="member">Lwm2m_Resource_Type_E</ref></type>
        <definition>typedef enum Lwm2m_Resource_Type_E Lwm2m_Resource_Type_T</definition>
        <argsstring></argsstring>
        <name>Lwm2m_Resource_Type_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type definition for the resource type. <simplesect kind="see"><para><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69" kindref="member">Lwm2m_Resource_Type_E</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="184" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1a25e2d343888ace930acb390bf600708a" prot="public" static="no">
        <type>struct <ref refid="struct_lwm2m___u_r_i___path___s" kindref="compound">Lwm2m_URI_Path_S</ref></type>
        <definition>typedef struct Lwm2m_URI_Path_S Lwm2m_URI_Path_T</definition>
        <argsstring></argsstring>
        <name>Lwm2m_URI_Path_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type definition for the uri path. <simplesect kind="see"><para><ref refid="struct_lwm2m___u_r_i___path___s" kindref="compound">Lwm2m_URI_Path_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="184" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1a6a1a67be925b13daa826a5dfba083235" prot="public" static="no">
        <type>struct <ref refid="struct_lwm2m_bootstrap_server___s" kindref="compound">Lwm2mBootstrapServer_S</ref></type>
        <definition>typedef struct Lwm2mBootstrapServer_S Lwm2mBootstrapServer_T</definition>
        <argsstring></argsstring>
        <name>Lwm2mBootstrapServer_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="332" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1ad9ad0ac783de38f6a5e137f7b1565425" prot="public" static="no">
        <type>struct <ref refid="struct_lwm2m_device___s" kindref="compound">Lwm2mDevice_S</ref></type>
        <definition>typedef struct Lwm2mDevice_S Lwm2mDevice_T</definition>
        <argsstring></argsstring>
        <name>Lwm2mDevice_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type definition for the lightweight M2M device. <simplesect kind="see"><para><ref refid="struct_lwm2m_device___s" kindref="compound">Lwm2mDevice_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="332" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1a8a1b63ecea8f026be591584bd2e33646" prot="public" static="no">
        <type>struct <ref refid="struct_lwm2m_object_instance___s" kindref="compound">Lwm2mObjectInstance_S</ref></type>
        <definition>typedef struct Lwm2mObjectInstance_S Lwm2mObjectInstance_T</definition>
        <argsstring></argsstring>
        <name>Lwm2mObjectInstance_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type definition for the lightweight M2M object. <simplesect kind="see"><para>Lwm2mObject_S </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="332" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" prot="public" static="no">
        <type>struct Lwm2mParser_S</type>
        <definition>typedef struct Lwm2mParser_S Lwm2mParser_T</definition>
        <argsstring></argsstring>
        <name>Lwm2mParser_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opaque type to use for message parsing. Used only to pass into the parsing API </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="184" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1a7aa17765bff5d9f2e3bd4449b319bb47" prot="public" static="no">
        <type>struct <ref refid="struct_lwm2m_resource___s" kindref="compound">Lwm2mResource_S</ref></type>
        <definition>typedef struct Lwm2mResource_S Lwm2mResource_T</definition>
        <argsstring></argsstring>
        <name>Lwm2mResource_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="332" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1ac3ec1b8e55c4e2f07af64c5e2846a46e" prot="public" static="no">
        <type>struct <ref refid="struct_lwm2m_security_info___s" kindref="compound">Lwm2mSecurityInfo_S</ref></type>
        <definition>typedef struct Lwm2mSecurityInfo_S Lwm2mSecurityInfo_T</definition>
        <argsstring></argsstring>
        <name>Lwm2mSecurityInfo_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="332" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" prot="public" static="no">
        <type>struct Lwm2mSerializer_S</type>
        <definition>typedef struct Lwm2mSerializer_S Lwm2mSerializer_T</definition>
        <argsstring></argsstring>
        <name>Lwm2mSerializer_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opaque type to use for message serialization. Used only to pass into the serialization API </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="184" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___lwm2m_8h_1ad98e7139c5abe44495ad1388ad264a67" prot="public" static="no">
        <type>struct <ref refid="struct_lwm2m_server___s" kindref="compound">Lwm2mServer_S</ref></type>
        <definition>typedef struct Lwm2mServer_S Lwm2mServer_T</definition>
        <argsstring></argsstring>
        <name>Lwm2mServer_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="332" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___lwm2m_8h_1ac965f7bc69d62f296dc90b079d2e757c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___lwm2m_8h_1ad98e7139c5abe44495ad1388ad264a67" kindref="member">Lwm2mServer_T</ref> *</type>
        <definition>Lwm2mServer_T* Lwm2m_getServer</definition>
        <argsstring>(uint8_t serverIndex)</argsstring>
        <name>Lwm2m_getServer</name>
        <param>
          <type>uint8_t</type>
          <declname>serverIndex</declname>
        </param>
        <briefdescription>
<para>Get a reference to a particular server. The application can then set and access to the server informations. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serverIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the server in the array of servers</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lwm2mServer: pointer to the LwM2M server of serverIndex- </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1083" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1ae2f63ec2f648b938e68e2ab885cfedff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2m_initialize</definition>
        <argsstring>(Lwm2mDevice_T *device)</argsstring>
        <name>Lwm2m_initialize</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1ad9ad0ac783de38f6a5e137f7b1565425" kindref="member">Lwm2mDevice_T</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
<para>Initialize the Lightweight M2M module for a device described by device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">device</parametername>
</parameternamelist>
<parameterdescription>
<para>structure containing the information about the device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bootstrapServer</parametername>
</parameternamelist>
<parameterdescription>
<para>structure containing information about the bootstrap server (in case of factory bootstrap the bootstrapServer argument must be NULL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">servers</parametername>
</parameternamelist>
<parameterdescription>
<para>structure containing information about the servers (in case of client initiate bootstrap the servers should be NULL)</para></parameterdescription>
</parameteritem>
</parameterlist>
Initializes the LwM2M module. Device is a pointer to an initialized structure which contains the relevant information about the device. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1ae3396779705da89ec66f5fa3c5d0db47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lwm2m_setNumberOfServers</definition>
        <argsstring>(uint8_t numberOfServers)</argsstring>
        <name>Lwm2m_setNumberOfServers</name>
        <param>
          <type>uint8_t</type>
          <declname>numberOfServers</declname>
        </param>
        <briefdescription>
<para>Sets the number of instanciated servers. This function should be called after the application set servers informations to tell the stack about the number of instanciated servers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">numberOfServers</parametername>
</parameternamelist>
<parameterdescription>
<para>number of active servers (this MUST be less than maximum number of servers) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1093" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a9e9c0190a6b28b2cdd477bb49795ee3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2m_start</definition>
        <argsstring>(Ip_Port_T port, Lwm2m_ApplicationCallback_T applicationCallback)</argsstring>
        <name>Lwm2m_start</name>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a6b8425f07996250f560d2f124d3460de" kindref="member">Lwm2m_ApplicationCallback_T</ref></type>
          <declname>applicationCallback</declname>
        </param>
        <briefdescription>
<para>Start the Lightweight M2M module. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000063"><xreftitle>Deprecated</xreftitle><xrefdescription></xrefdescription></xrefsect></para><para>Starts the LwM2M service. Depending on the value of the secure flag in the Lwm2mDevice, this is equivalent to Lwm2m_startService(SERVAL_SCHEME_COAP, ...) or Lwm2m_startService(SERVAL_SCHEME_COAPS, ...) for the secure flag being false and true, respectively.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">port</parametername>
</parameternamelist>
<parameterdescription>
<para>The coap server port, i.e. the local port used by this device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">applicationCallback</parametername>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>callback used to tell the application about events (like write, registration, bootstrapping)</para></parameterdescription>
</parameteritem>
</parameterlist>
Starts a CoAP server on the given port. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a6c009cac7ac32569f8825bbd38d51ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___lwm2m_8h_1a6a1a67be925b13daa826a5dfba083235" kindref="member">Lwm2mBootstrapServer_T</ref> *</type>
        <definition>Lwm2mBootstrapServer_T* Lwm2mBootstrap_getBootstrapServer</definition>
        <argsstring>(void)</argsstring>
        <name>Lwm2mBootstrap_getBootstrapServer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets a reference to the bootstrap server. The application can then set the bootstrap informations. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Lwm2mBootstrapServer: pointer to the LwM2M bootstrap server. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1073" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1ac720b45765a4a95ce7a07f2f94dcd83a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mBootstrap_request</definition>
        <argsstring>(void)</argsstring>
        <name>Lwm2mBootstrap_request</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Request Bootstrap to a bootstrap server for the LwM2M device. </para>        </briefdescription>
        <detaileddescription>
<para>Note: This is preliminary API</para><para><simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="918" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1ad9f2c8ad1d0c321237ecc983b7885800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mParser_convertStringToInt</definition>
        <argsstring>(const char *string, const uint32_t length, int32_t *value)</argsstring>
        <name>Lwm2mParser_convertStringToInt</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Converts a parsed string to an integer. Use this function when obtaining string data from the parser that you want to convert to at integer value. </para>        </briefdescription>
        <detaileddescription>
<para>It rejects white space or any other non-digit characters.</para><para>The key difference to existing standard functions is that the string provided by the parser is not terminated by &apos;\0&apos;! In memory, the string data is followed by the remaining payload in order to prevent copying the string data. Thus, the following TLV header may resemble an ASCII digit (e.g. object instance with 16-bit ID and 16-bit length will encode to 0x30 == &apos;0&apos;)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">string</parametername>
</parameternamelist>
<parameterdescription>
<para>the string data obtained from <ref refid="_serval___lwm2m_8h_1aadd0160a0f800e890fd6209652258883" kindref="member">Lwm2mParser_getString()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the string data obtained from <ref refid="_serval___lwm2m_8h_1aadd0160a0f800e890fd6209652258883" kindref="member">Lwm2mParser_getString()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the converted string value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_PARSING_ERROR if the string could not be converted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="909" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a617c5a1991863ec615c7cd0829177f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mParser_getBool</definition>
        <argsstring>(Lwm2mParser_T *parser_ptr, bool *value)</argsstring>
        <name>Lwm2mParser_getBool</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref> *</type>
          <declname>parser_ptr</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Parses a bool from an incoming lwm2m message. The function takes care to handle TLV decoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parser_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parser structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>of the bool that was parsed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_PARSING_ERROR if the data could not be parsed properly </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="827" column="1"/>
        <referencedby refid="_l_w_m2_m_object_light_control_8c_1aeb855237778e4128d7e5e17a00c35ef5" compoundref="_l_w_m2_m_object_light_control_8c" startline="143" endline="176">LightControl</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a8fe3c9d5763fa8b6cb7b22601622ea19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mParser_getFloat</definition>
        <argsstring>(Lwm2mParser_T *parser_ptr, float *value)</argsstring>
        <name>Lwm2mParser_getFloat</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref> *</type>
          <declname>parser_ptr</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Parses a float from an incoming lwm2m message. The function takes care to handle TLV decoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parser_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parser structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>of the float that was parsed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_PARSING_ERROR if the data could not be parsed properly </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="815" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a3712e05e52f9835276c848d2dfaf594c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mParser_getInt</definition>
        <argsstring>(Lwm2mParser_T *parser_ptr, int32_t *value)</argsstring>
        <name>Lwm2mParser_getInt</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref> *</type>
          <declname>parser_ptr</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Parses an integer from an incoming lwm2m message. The function takes care to handle TLV decoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parser_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parser structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>of the integer that was parsed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_PARSING_ERROR if the data could not be parsed properly </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="803" column="1"/>
        <referencedby refid="_l_w_m2_m_object_sensor_device_8c_1af887ef922ca578a14913d28a0f9d7f02" compoundref="_l_w_m2_m_object_sensor_device_8c" startline="208" endline="238">Interval</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1ab5ab3aec18fea28ddf604fa9feb61185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mParser_getOpaque</definition>
        <argsstring>(Lwm2mParser_T *parser_ptr, const uint8_t **value, uint32_t *length)</argsstring>
        <name>Lwm2mParser_getOpaque</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref> *</type>
          <declname>parser_ptr</declname>
        </param>
        <param>
          <type>const uint8_t **</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Parses opaque data from an incoming lwm2m message. The function takes care to handle TLV decoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parser_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parser structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the data that was parsed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">length</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the data that was parsed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_PARSING_ERROR if the data could not be parsed properly </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="840" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a78f94f06a09f20583175150e87609bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mParser_getResourceInstanceId</definition>
        <argsstring>(Lwm2mParser_T *parser_ptr, uint16_t *id)</argsstring>
        <name>Lwm2mParser_getResourceInstanceId</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref> *</type>
          <declname>parser_ptr</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>This is used to get the resource instance Id from the Tlv header before parsing the corresponding resource instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parser_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parser structure (typically obtained in the callback)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_SERIALIZATION_ERROR if the next element is not a resource instance </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="889" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1aadd0160a0f800e890fd6209652258883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mParser_getString</definition>
        <argsstring>(Lwm2mParser_T *parser_ptr, StringDescr_T *strDescr)</argsstring>
        <name>Lwm2mParser_getString</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref> *</type>
          <declname>parser_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> *</type>
          <declname>strDescr</declname>
        </param>
        <briefdescription>
<para>Parses a string from an incoming lwm2m message. The function takes care to handle TLV decoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the string is not guaranteed to be terminated by &apos;\0&apos;. In case of TLV encoded payload, it is followed by the remaining payload of the message.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parser_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parser structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">strDescriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>contains the the string that was parsed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_PARSING_ERROR if the data could not be parsed properly </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="791" column="1"/>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a4777f35732578da875cf3b6f555a9afa" compoundref="_l_w_m2_m_object_device_8c" startline="471" endline="502">lwm2mDeviceUtcOffset</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a076a4cd33f0468dead1fe212a21da3ae" compoundref="_l_w_m2_m_object_device_8c" startline="507" endline="542">getTimeZone</referencedby>
        <referencedby refid="_l_w_m2_m_object_sensor_device_8c_1a08a55806d7f3e9a2bf776aa0939e13a5" compoundref="_l_w_m2_m_object_sensor_device_8c" startline="240" endline="302">PreprocessingMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1af24f5f8c9ee03f04aeb3360057ebad6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mParser_getTime</definition>
        <argsstring>(Lwm2mParser_T *parser_ptr, int32_t *value)</argsstring>
        <name>Lwm2mParser_getTime</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref> *</type>
          <declname>parser_ptr</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Parses a timestamp from an incoming lwm2m message. The function takes care to handle TLV decoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parser_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parser structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>of the timestamp that was parsed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_PARSING_ERROR if the data could not be parsed properly </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="852" column="1"/>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a3b7414ca4d8f5ecb90ff96c61f26ce8a" compoundref="_l_w_m2_m_object_device_8c" startline="417" endline="468">getCurrentTime</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a2634dcb95df594476458d5e749f83e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mParser_parseNextResourceInstance</definition>
        <argsstring>(Lwm2mParser_T *parser_ptr)</argsstring>
        <name>Lwm2mParser_parseNextResourceInstance</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref> *</type>
          <declname>parser_ptr</declname>
        </param>
        <briefdescription>
<para>This is used to parse the next resource instance. This function get the next resource instance in the tlv encoded payload to be able to parsing using Lwm2mParser_get functions. </para>        </briefdescription>
        <detaileddescription>
<para>Function to get the next resource instance in the tlv encoded payload <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parser_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parser structure (typically obtained in the callback)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_PARSER_END if we reached the end of the resource array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="878" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a9c60c984aeb51618ca4ee923e3c27581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mParser_startParsingResourceArray</definition>
        <argsstring>(Lwm2mParser_T *parser_ptr)</argsstring>
        <name>Lwm2mParser_startParsingResourceArray</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref> *</type>
          <declname>parser_ptr</declname>
        </param>
        <briefdescription>
<para>This is used to start the parsing of a resource array. This function prepares the parser_ptr to parse resource arrays. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">parser_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the parser structure (typically obtained in the callback)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_PARSING_ERROR if the data is not a resource array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="863" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a099b0ad01af6515c7d1c1b20c1bfb2ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mRegistration_closeSecureConn</definition>
        <argsstring>(uint8_t serverIndex)</argsstring>
        <name>Lwm2mRegistration_closeSecureConn</name>
        <param>
          <type>uint8_t</type>
          <declname>serverIndex</declname>
        </param>
        <briefdescription>
<para>close and disconnect an existing secure COAP connection. </para>        </briefdescription>
        <detaileddescription>
<para>Note: This is preliminary API</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serverIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the server(in the array of server) to close the secure connection</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success (or if connection is not secure), <linebreak/>
 RC_COAP_SECURE_CONNECTION_ERROR on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1003" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a2b6401deb272b3121cbc92cf91bf4719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mRegistration_deRegister</definition>
        <argsstring>(uint8_t serverIndex)</argsstring>
        <name>Lwm2mRegistration_deRegister</name>
        <param>
          <type>uint8_t</type>
          <declname>serverIndex</declname>
        </param>
        <briefdescription>
<para>Perform a deregistration of an LwM2M device with an LwM2M server. </para>        </briefdescription>
        <detaileddescription>
<para>A successful registration with Lwm2m_register MUST have been performed.</para><para>Note: This is preliminary API</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serverIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the server(in the array of server) to deregister from</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="978" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1adfbb8d075f6143ab7d99b5acf53b43c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mRegistration_deRegisterFromAllServers</definition>
        <argsstring>(void)</argsstring>
        <name>Lwm2mRegistration_deRegisterFromAllServers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Perform a deregistration of an LwM2M device with all the LwM2M servers. </para>        </briefdescription>
        <detaileddescription>
<para>A successful registration with Lwm2m_register MUST have been performed.</para><para>Note: This is preliminary API</para><para><simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="989" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a11d749b362cfad3a7d436b16187d532d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mRegistration_register</definition>
        <argsstring>(uint8_t serverIndex)</argsstring>
        <name>Lwm2mRegistration_register</name>
        <param>
          <type>uint8_t</type>
          <declname>serverIndex</declname>
        </param>
        <briefdescription>
<para>Register a LwM2M device with an LwM2M server. </para>        </briefdescription>
        <detaileddescription>
<para>Note: This is preliminary API</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serverIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the server(in the array of server) to register to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="930" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a2996e65dfc37c6a77490fb1924f56c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mRegistration_registerToAllServers</definition>
        <argsstring>(void)</argsstring>
        <name>Lwm2mRegistration_registerToAllServers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Register a LwM2M device with all the LwM2M servers. </para>        </briefdescription>
        <detaileddescription>
<para>Note: This is preliminary API</para><para><simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="939" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1aab641164d466b0f46b7c126fa08c80b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mRegistration_update</definition>
        <argsstring>(uint8_t serverIndex)</argsstring>
        <name>Lwm2mRegistration_update</name>
        <param>
          <type>uint8_t</type>
          <declname>serverIndex</declname>
        </param>
        <briefdescription>
<para>Perform a registration update of an LwM2M device with an LwM2M server. </para>        </briefdescription>
        <detaileddescription>
<para>A successful registration with Lwm2m_register MUST have been performed.</para><para>Note: This is preliminary API</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serverIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the server(in the array of server) to update to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="953" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a8331d7ff42886de9560bc37eac52f2b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mRegistration_updateToAllServers</definition>
        <argsstring>(void)</argsstring>
        <name>Lwm2mRegistration_updateToAllServers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Perform a registration update of an LwM2M device with all the LwM2M servers. </para>        </briefdescription>
        <detaileddescription>
<para>A successful registration with Lwm2m_register MUST have been performed.</para><para>Note: This is preliminary API</para><para><simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="964" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1ac4322b6bce3d9abbe86e8b7ece716e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mReporting_multipleResourcesChanged</definition>
        <argsstring>(Lwm2m_URI_Path_T *objectInstanceUripath, uint8_t count,...)</argsstring>
        <name>Lwm2mReporting_multipleResourcesChanged</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a25e2d343888ace930acb390bf600708a" kindref="member">Lwm2m_URI_Path_T</ref> *</type>
          <declname>objectInstanceUripath</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Notify the stack that a resource has changed. This will cause the stack to notify any pending observers about the changed resource. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uripath</parametername>
</parameternamelist>
<parameterdescription>
<para>The uripath of the object instance that has changed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of resources of the object instance that have changed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">resourceIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The indexes of the resources that have changed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1026" column="1"/>
        <referencedby refid="_l_w_m2_m_util_8h_1a0f053e8f1028f39a770fcfd021459706" compoundref="_l_w_m2_m_util_8c" startline="104" endline="134">LWM2MUtil_ReportChanges</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a1417b89dbde7c6ae4af794ac7261b313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mReporting_resourceChanged</definition>
        <argsstring>(Lwm2m_URI_Path_T *uripath)</argsstring>
        <name>Lwm2mReporting_resourceChanged</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a25e2d343888ace930acb390bf600708a" kindref="member">Lwm2m_URI_Path_T</ref> *</type>
          <declname>uripath</declname>
        </param>
        <briefdescription>
<para>Notify the stack that a resource has changed. This will cause the stack to notify any pending observers about the changed resource. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uripath</parametername>
</parameternamelist>
<parameterdescription>
<para>The uripath of the resource that has changed</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1014" column="1"/>
        <referencedby refid="_l_w_m2_m_object_alert_notification_8c_1a60d3269108e1ce9e280671a6062d965c" compoundref="_l_w_m2_m_object_alert_notification_8c" startline="75" endline="92">LWM2MResetAlertFunc</referencedby>
        <referencedby refid="_l_w_m2_m_object_alert_notification_8h_1a72e95fc05037d95be4adb51f9f9b4de1" compoundref="_l_w_m2_m_object_alert_notification_8c" startline="127" endline="141">LWM2MObjectAlertNotification_SetValue</referencedby>
        <referencedby refid="_l_w_m2_m_object_connectivity_monitoring_8h_1a99c25ebdab288f6c4dbb2a169b3eafd7" compoundref="_l_w_m2_m_object_connectivity_monitoring_8c" startline="157" endline="171">LWM2MObjectConnectivityMonitoring_SetRadioSignalStrength</referencedby>
        <referencedby refid="_l_w_m2_m_object_connectivity_monitoring_8h_1a5d050414ea0e4d5472253611cb0a58dd" compoundref="_l_w_m2_m_object_connectivity_monitoring_8c" startline="174" endline="192">LWM2MObjectConnectivityMonitoring_SetIpAddress</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a940db231d78feb7c6c1e8c7146df51da" compoundref="_l_w_m2_m_object_device_8c" startline="392" endline="412">resetErrorCodeFunc</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a3b7414ca4d8f5ecb90ff96c61f26ce8a" compoundref="_l_w_m2_m_object_device_8c" startline="417" endline="468">getCurrentTime</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a076a4cd33f0468dead1fe212a21da3ae" compoundref="_l_w_m2_m_object_device_8c" startline="507" endline="542">getTimeZone</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8h_1aab6fb8e9e49ab8cd6bf06d68a04ab566" compoundref="_l_w_m2_m_object_device_8c" startline="801" endline="813">LWM2MObjectDevice_NotifyTimeChanged</referencedby>
        <referencedby refid="_l_w_m2_m_object_light_control_8c_1abe92eec13dd9cef75acdd1e558cccf17" compoundref="_l_w_m2_m_object_light_control_8c" startline="113" endline="121">NotifyRed</referencedby>
        <referencedby refid="_l_w_m2_m_object_light_control_8c_1a3b83a57aea7564037e1772370dda7362" compoundref="_l_w_m2_m_object_light_control_8c" startline="123" endline="131">NotifyOrange</referencedby>
        <referencedby refid="_l_w_m2_m_object_light_control_8c_1a56d6ca93723932211fded9b9b939b922" compoundref="_l_w_m2_m_object_light_control_8c" startline="133" endline="141">NotifyYellow</referencedby>
        <referencedby refid="_l_w_m2_m_object_sensor_device_8c_1af887ef922ca578a14913d28a0f9d7f02" compoundref="_l_w_m2_m_object_sensor_device_8c" startline="208" endline="238">Interval</referencedby>
        <referencedby refid="_l_w_m2_m_object_sensor_device_8c_1a08a55806d7f3e9a2bf776aa0939e13a5" compoundref="_l_w_m2_m_object_sensor_device_8c" startline="240" endline="302">PreprocessingMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a591bb6d61476adf0bc696ac4c7dc8acb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lwm2mReporting_resumeNotifications</definition>
        <argsstring>(uint8_t serverIndex, Lwm2m_Notification_Resumption_t mode)</argsstring>
        <name>Lwm2mReporting_resumeNotifications</name>
        <param>
          <type>uint8_t</type>
          <declname>serverIndex</declname>
        </param>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1ae2e7392662b3fa670121d7ae8cdb316d" kindref="member">Lwm2m_Notification_Resumption_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Resume sending notifications to a server. </para>        </briefdescription>
        <detaileddescription>
<para>Resume transmitting notifications resulting from Lwm2mReporting_resourceChanged or Lwm2mReporting_multipleResourcesChanged. This function is only required, if the server has been suspended before by a call to Lwm2mReporting_suspendNotifications.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serverIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the server in the array of servers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the way that changed observations are handled LWM2M_DROP_NOTIFICATIONS will cause changed observations to be silently ignored. Only future calls to Lwm2m_resourceChanged will trigger notifications. LWM2M_SEND_NOTIFICATIONS will cause a single notification to be triggered for changed resources. Thus, the observer will be notified about the <emphasis>new</emphasis> state of the resource, but not necessarily of <emphasis>all</emphasis> state changes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1065" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1ab93c6b2682a838067be6532536812f4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lwm2mReporting_suspendNotifications</definition>
        <argsstring>(uint8_t serverIndex)</argsstring>
        <name>Lwm2mReporting_suspendNotifications</name>
        <param>
          <type>uint8_t</type>
          <declname>serverIndex</declname>
        </param>
        <briefdescription>
<para>Suspend sending of notifications to the given server. </para>        </briefdescription>
        <detaileddescription>
<para>Any notification resulting Lwm2mReporting_resourceChanged or Lwm2mReporting_multipleResourcesChanged will not be sent to the given server. The notification will silently be dropped.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serverIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the server in the array of servers</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1039" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a02cd270c79d10c3e1036a0522d45cd45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mSecurity_defaultCallback</definition>
        <argsstring>(SecurityToken_T token, SecurityData_T *tokenData)</argsstring>
        <name>Lwm2mSecurity_defaultCallback</name>
        <param>
          <type><ref refid="_serval___security_8h_1a5d85606d815307595bafa1193838258b" kindref="member">SecurityToken_T</ref></type>
          <declname>token</declname>
        </param>
        <param>
          <type><ref refid="_serval___security_8h_1a796e391bd6ee7fcbafcc70ab8b9751a3" kindref="member">SecurityData_T</ref> *</type>
          <declname>tokenData</declname>
        </param>
        <briefdescription>
<para>Callback that can be provided to Security_setCallback to take over security token handling. </para>        </briefdescription>
        <detaileddescription>
<para>Lwm2m provides a notion of servers and the associated keying information for these servers. If the application has no special needs, this function can be provided to Security_setCallback in order to let the Lwm2m module perform security token management.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">token</parametername>
</parameternamelist>
<parameterdescription>
<para>the security token to be provided</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>tokenData additional data about the token to be provided and memory to provide it</para></parameterdescription>
</parameteritem>
</parameterlist>
return RC_OK on success, see SecurityCallback_T for a description of return codes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="1158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a6c9d9c8170f4708db3a0913629512430" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Lwm2mSerializer_checkIfDone</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr, uint32_t availableSize)</argsstring>
        <name>Lwm2mSerializer_checkIfDone</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>availableSize</declname>
        </param>
        <briefdescription>
<para>Check if resource is serialized completely and set the more flag if required. </para>        </briefdescription>
        <detaileddescription>
<para>NOTE: This is experimental API and subject to change!</para><para>Resources marked as LWM2M_RESOURCE_DYNAMIC_BULK support blockwise transfer. In such a resource, this function can be used to check if the resource is transferred completely and, if required, mark the transfer with the flag indicating that more data can be transmitted.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer that is used to extract the server details </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">availableSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The total size of the resource available for serialization</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.8 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="738" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="738" bodyend="743"/>
        <references refid="_serval___lwm2m_8h_1a1f92229f9706e1535a4227047a1f803e">Lwm2mSerializer_getBlockOffset</references>
        <references refid="_serval___lwm2m_8h_1a1e893ccf7f07d37365b596f2c1fdfcdc">Lwm2mSerializer_getBlockSize</references>
        <references refid="_serval___lwm2m_8h_1afb180d945afe44fd2d467dd97ba54223">Lwm2mSerializer_haveMoreData</references>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1ab4920d10548534fbc9497389db96e130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mSerializer_endSerializingResourceArray</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr)</argsstring>
        <name>Lwm2mSerializer_endSerializingResourceArray</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <briefdescription>
<para>This is used to end the parsing of a resource array. The function takes care of ending the array by writing the length of the array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer structure (typically obtained in the callback)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_SERIALIZATION_ERROR if this is called without calling first  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="636" column="1"/>
        <referencedby refid="_l_w_m2_m_object_connectivity_monitoring_8c_1a67bb4d82aad96e47818db52b1c650300" compoundref="_l_w_m2_m_object_connectivity_monitoring_8c" startline="84" endline="104">LWM2MGetAvailableNetworkBearer</referencedby>
        <referencedby refid="_l_w_m2_m_object_connectivity_monitoring_8c_1ab7290eeb15fa57cfea5ff96548cafa4d" compoundref="_l_w_m2_m_object_connectivity_monitoring_8c" startline="109" endline="135">LWM2MGetIpAddresses</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a1e01037a069f24775036af956528766a" compoundref="_l_w_m2_m_object_device_8c" startline="281" endline="303">util_serialize_array</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1acc3a338156b69c3aeaeb39b21ee46675" compoundref="_l_w_m2_m_object_device_8c" startline="573" endline="607">availablePowerSourcesfunc</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a3de693371743de156ee2b5b921e9661e" compoundref="_l_w_m2_m_object_device_8c" startline="612" endline="654">powerSourceVoltageFunc</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a1f92229f9706e1535a4227047a1f803e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t Lwm2mSerializer_getBlockOffset</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr)</argsstring>
        <name>Lwm2mSerializer_getBlockOffset</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <briefdescription>
<para>Get the offset of the current block to be serialized. </para>        </briefdescription>
        <detaileddescription>
<para>NOTE: This is experimental API and subject to change!</para><para>Resources marked as LWM2M_RESOURCE_DYNAMIC_BULK support blockwise transfer. In such a resource, this function can be used to obtain the offset of data to be written. For other resources, the returned value will always be 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer that is used to extract the server details</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>offset in bytes of the block that was requested.</para></simplesect>
<simplesect kind="since"><para>1.8 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="663" column="1"/>
        <referencedby refid="_serval___lwm2m_8h_1aec0170a284fa0ba8c7631c99c540d3b1" compoundref="_serval___lwm2m_8h" startline="716" endline="721">Lwm2mSerializer_getSerializableSize</referencedby>
        <referencedby refid="_serval___lwm2m_8h_1a6c9d9c8170f4708db3a0913629512430" compoundref="_serval___lwm2m_8h" startline="738" endline="743">Lwm2mSerializer_checkIfDone</referencedby>
        <referencedby refid="_serval___lwm2m_8h_1a277cf022ab85a978b5c527f37560af56" compoundref="_serval___lwm2m_8h" startline="763" endline="776">Lwm2mSerializer_serializeOpaqueBulk</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a1e893ccf7f07d37365b596f2c1fdfcdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t Lwm2mSerializer_getBlockSize</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr)</argsstring>
        <name>Lwm2mSerializer_getBlockSize</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <briefdescription>
<para>Get the size of the current block to be serialized. </para>        </briefdescription>
        <detaileddescription>
<para>NOTE: This is experimental API and subject to change!</para><para>Resources marked as LWM2M_RESOURCE_DYNAMIC_BULK support blockwise transfer. In such a resource, this function can be used to obtain the size of the data block to be written. For other resources, the returned value is undefined.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer that is used to extract the server details</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size in bytes of the block that was requested.</para></simplesect>
<simplesect kind="since"><para>1.8 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="680" column="1"/>
        <referencedby refid="_serval___lwm2m_8h_1aec0170a284fa0ba8c7631c99c540d3b1" compoundref="_serval___lwm2m_8h" startline="716" endline="721">Lwm2mSerializer_getSerializableSize</referencedby>
        <referencedby refid="_serval___lwm2m_8h_1a6c9d9c8170f4708db3a0913629512430" compoundref="_serval___lwm2m_8h" startline="738" endline="743">Lwm2mSerializer_checkIfDone</referencedby>
        <referencedby refid="_serval___lwm2m_8h_1a277cf022ab85a978b5c527f37560af56" compoundref="_serval___lwm2m_8h" startline="763" endline="776">Lwm2mSerializer_serializeOpaqueBulk</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1aec0170a284fa0ba8c7631c99c540d3b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t Lwm2mSerializer_getSerializableSize</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr, uint32_t availableSize)</argsstring>
        <name>Lwm2mSerializer_getSerializableSize</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>availableSize</declname>
        </param>
        <briefdescription>
<para>Get the chunk size of the resource that is to be serialized. </para>        </briefdescription>
        <detaileddescription>
<para>NOTE: This is experimental API and subject to change!</para><para>Resources marked as LWM2M_RESOURCE_DYNAMIC_BULK support blockwise transfer. In such a resource, this function can be used to obtain the size of the data block to be written, including the correct value for the last block. Thus, if the available length of the resource is larger than the block size, the block size is returned. Otherwise, the residual size is returned. For resources that are not of type LWM2M_RESOURCE_DYNAMIC_BULK, the returned value is undefined.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer that is used to extract the server details </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">availableSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The total size of the resource available for serialization</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size to be serialized in bytes, 0 if no bytes need to be serialized.</para></simplesect>
<simplesect kind="since"><para>1.8 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="716" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="716" bodyend="721"/>
        <references refid="_serval___lwm2m_8h_1a1f92229f9706e1535a4227047a1f803e">Lwm2mSerializer_getBlockOffset</references>
        <references refid="_serval___lwm2m_8h_1a1e893ccf7f07d37365b596f2c1fdfcdc">Lwm2mSerializer_getBlockSize</references>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1af0b925f8aafc51702d159a94a633890f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Lwm2mSerializer_getServerIndex</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr)</argsstring>
        <name>Lwm2mSerializer_getServerIndex</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <briefdescription>
<para>Get the server index from which the LWM2M request came from. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer that is used to extract the server details</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>server index The index of the server(0 to LWM2M_MAX_NUMBER_SERVERS -1, as it is stored in an array) SERVER_INDEX_NOT_FOUND - if the server index could not be found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="646" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1afb180d945afe44fd2d467dd97ba54223" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Lwm2mSerializer_haveMoreData</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr)</argsstring>
        <name>Lwm2mSerializer_haveMoreData</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <briefdescription>
<para>Indicate that more data needs to be transmitted for the resource to be fully serialized. </para>        </briefdescription>
        <detaileddescription>
<para>NOTE: This is experimental API and subject to change!</para><para>Resources marked as LWM2M_RESOURCE_DYNAMIC_BULK support blockwise transfer. In such a resource, this function can be used to indicate that the resource is larger than what has been serialized, i.e. further blocks are required to be transmitted.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to the serializer that is used to extract the server details</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.8 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="695" column="1"/>
        <referencedby refid="_serval___lwm2m_8h_1a6c9d9c8170f4708db3a0913629512430" compoundref="_serval___lwm2m_8h" startline="738" endline="743">Lwm2mSerializer_checkIfDone</referencedby>
        <referencedby refid="_serval___lwm2m_8h_1a277cf022ab85a978b5c527f37560af56" compoundref="_serval___lwm2m_8h" startline="763" endline="776">Lwm2mSerializer_serializeOpaqueBulk</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a3b14e4a6b1b26a2498d36f92e6d2c70b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mSerializer_serializeBool</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr, bool value)</argsstring>
        <name>Lwm2mSerializer_serializeBool</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Serializes a boolean to an outgoing lwm2m message. The function takes care to handle TLV encoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the bool to be serialized</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_ENTITY_TOO_LARGE if the length is to large to be serialized RC_LWM2M_SERIALIZATION_ERROR if the data could not be serialized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="577" column="1"/>
        <referencedby refid="_l_w_m2_m_object_light_control_8c_1aeb855237778e4128d7e5e17a00c35ef5" compoundref="_l_w_m2_m_object_light_control_8c" startline="143" endline="176">LightControl</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1adfcc9d6fd4b48bc249f56c3503d4e196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mSerializer_serializeFloat</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr, float value)</argsstring>
        <name>Lwm2mSerializer_serializeFloat</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Serializes an integer to an outgoing lwm2m message. The function takes care to handle TLV encoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the float to be serialized</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_ENTITY_TOO_LARGE if the length is to large to be serialized RC_LWM2M_SERIALIZATION_ERROR if the data could not be serialized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a573270bd7e32051037c3b9b65d1ccbbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mSerializer_serializeInt</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr, int32_t value)</argsstring>
        <name>Lwm2mSerializer_serializeInt</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Serializes an integer to an outgoing lwm2m message. The function takes care to handle TLV encoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>of the integer to be serialized</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_ENTITY_TOO_LARGE if the length is to large to be serialized RC_LWM2M_SERIALIZATION_ERROR if the data could not be serialized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="551" column="1"/>
        <referencedby refid="_l_w_m2_m_object_connectivity_monitoring_8c_1a67bb4d82aad96e47818db52b1c650300" compoundref="_l_w_m2_m_object_connectivity_monitoring_8c" startline="84" endline="104">LWM2MGetAvailableNetworkBearer</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a1e01037a069f24775036af956528766a" compoundref="_l_w_m2_m_object_device_8c" startline="281" endline="303">util_serialize_array</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1acc3a338156b69c3aeaeb39b21ee46675" compoundref="_l_w_m2_m_object_device_8c" startline="573" endline="607">availablePowerSourcesfunc</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a3de693371743de156ee2b5b921e9661e" compoundref="_l_w_m2_m_object_device_8c" startline="612" endline="654">powerSourceVoltageFunc</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a59ae782dd048c0d8746877c7e5cf99b4" compoundref="_l_w_m2_m_object_device_8c" startline="659" endline="690">batteryLevelFunc</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1af11fa85968fe590cdeb95ef72218db20" compoundref="_l_w_m2_m_object_device_8c" startline="695" endline="758">batteryStatusFunc</referencedby>
        <referencedby refid="_l_w_m2_m_object_sensor_device_8c_1af887ef922ca578a14913d28a0f9d7f02" compoundref="_l_w_m2_m_object_sensor_device_8c" startline="208" endline="238">Interval</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a1fe9e2cab724ceb01e9696c2412ea8b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mSerializer_serializeOpaque</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr, uint8_t *value, uint32_t length)</argsstring>
        <name>Lwm2mSerializer_serializeOpaque</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Serializes an opaque data pointer to an outgoing lwm2m message. The function takes care to handle TLV encoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the data to be serialized </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_ENTITY_TOO_LARGE if the length is to large to be serialized RC_LWM2M_SERIALIZATION_ERROR if the data could not be serialized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="591" column="1"/>
        <referencedby refid="_serval___lwm2m_8h_1a277cf022ab85a978b5c527f37560af56" compoundref="_serval___lwm2m_8h" startline="763" endline="776">Lwm2mSerializer_serializeOpaqueBulk</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a277cf022ab85a978b5c527f37560af56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>static retcode_t Lwm2mSerializer_serializeOpaqueBulk</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr, uint8_t *data, uint32_t availableSize)</argsstring>
        <name>Lwm2mSerializer_serializeOpaqueBulk</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>availableSize</declname>
        </param>
        <briefdescription>
<para>Serialize a chunk of an opaque resource. </para>        </briefdescription>
        <detaileddescription>
<para>NOTE: This is experimental API and subject to change!</para><para>Resources marked as LWM2M_RESOURCE_DYNAMIC_BULK support blockwise transfer. In such a resource, this function can be used as a convenience function in order to serialize the corret chunk of a larger memory location. No other function should be called after this one.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer that is used to extract the server details </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the memory of the opaque chunk </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">availableSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The total size of the resource available for serialization</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK if serialization suceeded, an error otherwise</para></simplesect>
<simplesect kind="since"><para>1.8 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="763" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" bodystart="763" bodyend="776"/>
        <references refid="_serval___lwm2m_8h_1a1f92229f9706e1535a4227047a1f803e">Lwm2mSerializer_getBlockOffset</references>
        <references refid="_serval___lwm2m_8h_1a1e893ccf7f07d37365b596f2c1fdfcdc">Lwm2mSerializer_getBlockSize</references>
        <references refid="_serval___exceptions_8h_1a63c2b4e52d920a11ad698d49b6a47a80abd04b1efcaa9b42db39ad1d39968def3" compoundref="_serval___exceptions_8h" startline="1194">RC_LWM2M_BAD_REQUEST</references>
        <references refid="_serval___lwm2m_8h_1afb180d945afe44fd2d467dd97ba54223">Lwm2mSerializer_haveMoreData</references>
        <references refid="_serval___lwm2m_8h_1a1fe9e2cab724ceb01e9696c2412ea8b9">Lwm2mSerializer_serializeOpaque</references>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1ab0743a1e27bb9fb2dca95a6520dcb14b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mSerializer_serializeString</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr, StringDescr_T *strDescr)</argsstring>
        <name>Lwm2mSerializer_serializeString</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> *</type>
          <declname>strDescr</declname>
        </param>
        <briefdescription>
<para>Serializes a string to an outgoing lwm2m message. The function takes care to handle TLV encoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">strDescr</parametername>
</parameternamelist>
<parameterdescription>
<para>a descriptor for the string to be serialized</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_ENTITY_TOO_LARGE if the length is to large to be serialized RC_LWM2M_SERIALIZATION_ERROR if the data could not be serialized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="538" column="1"/>
        <referencedby refid="_l_w_m2_m_object_alert_notification_8c_1a01d015f58e522b96fe78da5239ef807e" compoundref="_l_w_m2_m_object_alert_notification_8c" startline="94" endline="109">LWM2MReadAlert</referencedby>
        <referencedby refid="_l_w_m2_m_object_connectivity_monitoring_8c_1ab7290eeb15fa57cfea5ff96548cafa4d" compoundref="_l_w_m2_m_object_connectivity_monitoring_8c" startline="109" endline="135">LWM2MGetIpAddresses</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a4a0d17b387729985f84da89c04b23136" compoundref="_l_w_m2_m_object_device_8c" startline="308" endline="319">serialNumber_RO</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a72f81af0f315534ff20ce377eb3f12fd" compoundref="_l_w_m2_m_object_device_8c" startline="325" endline="342">firmwareVersionNumber_RO</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a4777f35732578da875cf3b6f555a9afa" compoundref="_l_w_m2_m_object_device_8c" startline="471" endline="502">lwm2mDeviceUtcOffset</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a076a4cd33f0468dead1fe212a21da3ae" compoundref="_l_w_m2_m_object_device_8c" startline="507" endline="542">getTimeZone</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a7eaee6ba8222443b9c7ff16120fd8a3d" compoundref="_l_w_m2_m_object_device_8c" startline="547" endline="568">lwm2mDeviceGetBinding</referencedby>
        <referencedby refid="_l_w_m2_m_object_sensor_device_8c_1a08a55806d7f3e9a2bf776aa0939e13a5" compoundref="_l_w_m2_m_object_sensor_device_8c" startline="240" endline="302">PreprocessingMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a18eeaeb94a663eb1651166c9a177b291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mSerializer_serializeTime</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr, uint32_t value)</argsstring>
        <name>Lwm2mSerializer_serializeTime</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Serializes a timestamp (integer) to an outgoing lwm2m message. The function takes care to handle TLV encoding if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer structure (typically obtained in the callback) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the time value to be serialized</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_ENTITY_TOO_LARGE if the length is to large to be serialized RC_LWM2M_SERIALIZATION_ERROR if the data could not be serialized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="604" column="1"/>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a3b7414ca4d8f5ecb90ff96c61f26ce8a" compoundref="_l_w_m2_m_object_device_8c" startline="417" endline="468">getCurrentTime</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1a33ebd39502f85ca7d921c286c0d37727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mSerializer_setResourceInstanceId</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr, uint16_t instanceId)</argsstring>
        <name>Lwm2mSerializer_setResourceInstanceId</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>instanceId</declname>
        </param>
        <briefdescription>
<para>This is used to set the resource instance Id before serializing the corresponding resource instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer structure (typically obtained in the callback)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_SERIALIZATION_ERROR if this is called without calling first  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="625" column="1"/>
        <referencedby refid="_l_w_m2_m_object_connectivity_monitoring_8c_1a67bb4d82aad96e47818db52b1c650300" compoundref="_l_w_m2_m_object_connectivity_monitoring_8c" startline="84" endline="104">LWM2MGetAvailableNetworkBearer</referencedby>
        <referencedby refid="_l_w_m2_m_object_connectivity_monitoring_8c_1ab7290eeb15fa57cfea5ff96548cafa4d" compoundref="_l_w_m2_m_object_connectivity_monitoring_8c" startline="109" endline="135">LWM2MGetIpAddresses</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a1e01037a069f24775036af956528766a" compoundref="_l_w_m2_m_object_device_8c" startline="281" endline="303">util_serialize_array</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1acc3a338156b69c3aeaeb39b21ee46675" compoundref="_l_w_m2_m_object_device_8c" startline="573" endline="607">availablePowerSourcesfunc</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a3de693371743de156ee2b5b921e9661e" compoundref="_l_w_m2_m_object_device_8c" startline="612" endline="654">powerSourceVoltageFunc</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___lwm2m_8h_1adbf514b7ee6f9b49072a425b02fae9e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Lwm2mSerializer_startSerializingResourceArray</definition>
        <argsstring>(Lwm2mSerializer_T *serializer_ptr)</argsstring>
        <name>Lwm2mSerializer_startSerializingResourceArray</name>
        <param>
          <type><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref> *</type>
          <declname>serializer_ptr</declname>
        </param>
        <briefdescription>
<para>This is used to start the serialization of a resource array. This function prepares the serializer_ptr to serialize resource arrays. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serializer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the serializer structure (typically obtained in the callback)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success RC_LWM2M_SERIALIZATION_ERROR if this is used without tlv enabled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h" line="615" column="1"/>
        <referencedby refid="_l_w_m2_m_object_connectivity_monitoring_8c_1a67bb4d82aad96e47818db52b1c650300" compoundref="_l_w_m2_m_object_connectivity_monitoring_8c" startline="84" endline="104">LWM2MGetAvailableNetworkBearer</referencedby>
        <referencedby refid="_l_w_m2_m_object_connectivity_monitoring_8c_1ab7290eeb15fa57cfea5ff96548cafa4d" compoundref="_l_w_m2_m_object_connectivity_monitoring_8c" startline="109" endline="135">LWM2MGetIpAddresses</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a1e01037a069f24775036af956528766a" compoundref="_l_w_m2_m_object_device_8c" startline="281" endline="303">util_serialize_array</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1acc3a338156b69c3aeaeb39b21ee46675" compoundref="_l_w_m2_m_object_device_8c" startline="573" endline="607">availablePowerSourcesfunc</referencedby>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a3de693371743de156ee2b5b921e9661e" compoundref="_l_w_m2_m_object_device_8c" startline="612" endline="654">powerSourceVoltageFunc</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface to experimental lightweight M2M support.</para><para>This module provides the interface to the implementation of the lightweight M2M protocol specified by the Open Mobile Alliance for machine to machine communication. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>Please note that the specification of the lightweight M2M protocol has not been finalized, yet. Therefore, the current implementation should be treated as a technology preview and it is subject to change as required to meet the specification. This may include changes to this API!</para></simplesect>
<simplesect kind="since"><para>1.4 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor">#ifndef<sp/>SERVAL_LWM2M_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_LWM2M_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___policy_8h" kindref="compound">Serval_Policy.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___defines_8h" kindref="compound">Serval_Defines.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_LWM2M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___types_8h" kindref="compound">Serval_Types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___ip_8h" kindref="compound">Serval_Ip.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___msg_8h" kindref="compound">Serval_Msg.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___coap_8h" kindref="compound">Serval_Coap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___security_8h" kindref="compound">Serval_Security.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___url_8h" kindref="compound">Serval_Url.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>SERVAL_ENABLE_COAP_OBSERVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;LWM2M<sp/>requires<sp/>SERVAL_ENABLE_COAP_OBSERVE&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___coap_server_8h" kindref="compound">Serval_CoapServer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor">#ifndef<sp/>LWM2M_MAX_LENGTH_DEVICE_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_MAX_LENGTH_DEVICE_NAME<sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor">#ifndef<sp/>LWM2M_IP_ADDRESS_MAX_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="_serval___lwm2m_8h_1a3f3294152c00e99fd63ac2221d6079a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_IP_ADDRESS_MAX_LENGTH<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor">#ifndef<sp/>LWM2M_MAX_NUMBER_SERVERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="_serval___lwm2m_8h_1ad7846c732476104297d1eb498a49557d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_MAX_NUMBER_SERVERS<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor">#ifndef<sp/>LWM2M_REJECT_ANONYMOUS_DTLS_SERVERS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="_serval___lwm2m_8h_1ad9cdf1aad70a6e32d8f4917bb41fd683" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_REJECT_ANONYMOUS_DTLS_SERVERS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="_serval___lwm2m_8h_1a18f02890e5e24a7cafd18da4a5b5eac4" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_INACTIVE_INSTANCE<sp/><sp/>0xFFFE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="_serval___lwm2m_8h_1aeddfe881e45453d9df8746fe09b28c6f" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_INVISIBLE_INSTANCE<sp/>0xFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="_serval___lwm2m_8h_1abeccf0464dfeb593800d4bf21bf84456" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_SINGLE_INSTANCE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="_serval___lwm2m_8h_1a7690f178e3efc7b7180e0502f67aad5d" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_SINGLE_RESOURCE_INSTANCE<sp/>0xFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="_serval___lwm2m_8h_1a166cb6b29ebf408428ecea0ec56472d0" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_INACTIVE_RESOURCE_INSTANCE<sp/>0xFFFE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="_serval___lwm2m_8h_1a3929a6712c9a04cf0475b5b90a731aaf" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_OBJECT_INSTANCE_COUNT(objectInstances)<sp/>sizeof(objectInstances)<sp/>/<sp/>sizeof(Lwm2mObjectInstance_T)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="_serval___lwm2m_8h_1a2801d625d41c1a7a78c23b1704447ca4" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_RESOURCES(resources)<sp/><sp/>&amp;resources,<sp/>sizeof(resources)/sizeof(Lwm2mResource_T)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="_serval___lwm2m_8h_1a789ff08d1972a37ec3c7d1901a4941d2" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_STRING_RO(string)<sp/><sp/><sp/>{.s<sp/>=<sp/>string},<sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)<sp/>LWM2M_RESOURCE_STRING<sp/>|<sp/>LWM2M_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="_serval___lwm2m_8h_1afa7c252691125c39b4c82d4b34983325" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_INTEGER(integer)<sp/><sp/><sp/><sp/>{.i<sp/>=<sp/>integer},<sp/><sp/><sp/><sp/><sp/>(uint8_t)<sp/>LWM2M_RESOURCE_INTEGER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="_serval___lwm2m_8h_1ab5198d8bd971f4f93ae0c16601681cec" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_FLOAT(floating)<sp/><sp/><sp/><sp/><sp/>{.f<sp/>=<sp/>floating},<sp/><sp/><sp/><sp/>(uint8_t)<sp/>LWM2M_RESOURCE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="_serval___lwm2m_8h_1aac48e6d5363d1d22181226d7055f53d4" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_BOOL(boolean)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{.b<sp/>=<sp/>boolean},<sp/><sp/><sp/><sp/><sp/>(uint8_t)<sp/>LWM2M_RESOURCE_BOOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="_serval___lwm2m_8h_1aca82fd03c4918100b4a89623a43d5eea" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_TIME(time)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{.i<sp/>=<sp/>time},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)<sp/>LWM2M_RESOURCE_TIME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="_serval___lwm2m_8h_1a76c056a7c0ed1924917ade1e6f7d1f92" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_DYNAMIC(dyn)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{.dynamic<sp/>=<sp/>dyn},<sp/><sp/><sp/>(uint8_t)<sp/>LWM2M_RESOURCE_DYNAMIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="_serval___lwm2m_8h_1a51c5a0068d3a0c934dd06cfc966e7b55" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_DYNAMIC_ARRAY(dyn)<sp/><sp/>{.dynamic<sp/>=<sp/>dyn},<sp/><sp/><sp/>(uint8_t)<sp/>LWM2M_RESOURCE_DYNAMIC_ARRAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="_serval___lwm2m_8h_1ac6067e91752fd2d1ba06764c73d2fedf" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_FUNCTION(function)<sp/><sp/>{.func<sp/>=<sp/>function},<sp/>(uint8_t)<sp/>LWM2M_RESOURCE_FUNCTION<sp/>|<sp/>LWM2M_NOT_WRITABLE<sp/>|<sp/>LWM2M_NOT_READABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="_serval___lwm2m_8h_1aecc220543a782a4519a27fa74876c4fc" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_DYNAMIC_BULK(dyn)<sp/><sp/><sp/>{.dynamic<sp/>=<sp/>dyn},<sp/><sp/><sp/>(uint8_t)<sp/>LWM2M_RESOURCE_DYNAMIC_BULK<sp/>|<sp/>LWM2M_READ_ONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="_serval___lwm2m_8h_1adf2df1776fec5647305c375adc33bce1" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_QUEUE_MODE_TIMEOUT<sp/><sp/><sp/>COAP_ACK_TIMEOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="_serval___lwm2m_8h_1ab1dc331e8498dc627716951b25d43644" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_BOOTSTRAP_TIMEOUT<sp/><sp/><sp/>COAP_ACK_TIMEOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="_serval___lwm2m_8h_1af9aa91b26db29071e486e298e3da3fd4" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_ACCESS_CONTROL_OWNER<sp/>0x3F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="_serval___lwm2m_8h_1a2360bfb699a099a1d1eab8e5e7cc14d0" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_READ_ALLOWED<sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="_serval___lwm2m_8h_1a0d11440fdbd13801e1df3e5dbdc226a6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_WRITE_ALLOWED<sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="_serval___lwm2m_8h_1a84961f4a89793fbf8a7781552682eea3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_EXECUTE_ALLOWED<sp/><sp/><sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="_serval___lwm2m_8h_1a973a35f2cb2a14339d50bb643e184a41" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_DELETE_ALLOWED<sp/><sp/><sp/><sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="_serval___lwm2m_8h_1a58eba2c61f53f551bec62317ad525275" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_CREATE_ALLOWED<sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="_serval___lwm2m_8h_1a0fb3be08c9e8ea98cd0187768a42fc4a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_FULL_ACCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_POLICY_REMOVE_SPECIALIZED_ACCESSORS_FROM_MSG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Lwm2mMsg_S<sp/><ref refid="_serval___msg___obsolete_8h_1a1c5af4b879992f759cd07f61260790a8" kindref="member">Lwm2mMsg_T</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_POLICY_REMOVE_SPECIALIZED_ACCESSORS_FROM_MSG_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72d" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72d" kindref="member">Lwm2m_Binding_E</ref></highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initial<sp/>state<sp/>indicating<sp/>that<sp/>no<sp/>binding<sp/>has<sp/>been<sp/>expressed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72daed4ee4ba62b6cc15078ee06b4b724461" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72daed4ee4ba62b6cc15078ee06b4b724461" kindref="member">LWM2M_BINDING_UNDEFINED</ref><sp/>=<sp/>0x00,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bit<sp/>to<sp/>indicate<sp/>that<sp/>the<sp/>connection<sp/>is<sp/>queued<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72daa3eb0570e589b7e1b1ab0ac95161a93f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72daa3eb0570e589b7e1b1ab0ac95161a93f" kindref="member">LWM2M_BINDING_QUEUED</ref><sp/><sp/><sp/><sp/>=<sp/>0x04,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dadb542475cf9d0636e4225e216cee9ae6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dadb542475cf9d0636e4225e216cee9ae6" kindref="member">UDP</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="160" refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dafc7e56e9935ee609750e345714386c36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dafc7e56e9935ee609750e345714386c36" kindref="member">SMS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x02,</highlight></codeline>
<codeline lineno="162" refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da44f50d46918767f6b2487db6bd0545df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da44f50d46918767f6b2487db6bd0545df" kindref="member">UDP_QUEUED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dadb542475cf9d0636e4225e216cee9ae6" kindref="member">UDP</ref><sp/>|<sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72daa3eb0570e589b7e1b1ab0ac95161a93f" kindref="member">LWM2M_BINDING_QUEUED</ref>,</highlight></codeline>
<codeline lineno="164" refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da5b9e031496d90bc10909d3eb239db1e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da5b9e031496d90bc10909d3eb239db1e8" kindref="member">SMS_QUEUED</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dafc7e56e9935ee609750e345714386c36" kindref="member">SMS</ref><sp/>|<sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72daa3eb0570e589b7e1b1ab0ac95161a93f" kindref="member">LWM2M_BINDING_QUEUED</ref>,</highlight></codeline>
<codeline lineno="166" refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da14bad80b90bcdae157c1ee88bb07ed14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da14bad80b90bcdae157c1ee88bb07ed14" kindref="member">UDP_AND_SMS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dadb542475cf9d0636e4225e216cee9ae6" kindref="member">UDP</ref><sp/>|<sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dafc7e56e9935ee609750e345714386c36" kindref="member">SMS</ref>,</highlight></codeline>
<codeline lineno="168" refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da02abd098d6871facfb688b95d8085cd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72da02abd098d6871facfb688b95d8085cd9" kindref="member">UDP_QUEUED_AND_SMS</ref><sp/><sp/>=<sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dadb542475cf9d0636e4225e216cee9ae6" kindref="member">UDP</ref><sp/>|<sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72dafc7e56e9935ee609750e345714386c36" kindref="member">SMS</ref><sp/>|<sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72daa3eb0570e589b7e1b1ab0ac95161a93f" kindref="member">LWM2M_BINDING_QUEUED</ref>,</highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="_serval___lwm2m_8h_1a74fda8acf8e1459b47cffeb1ade3be49" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1ac9d9bfbdf4877f187a484d78d35ea72d" kindref="member">Lwm2m_Binding_E</ref><sp/><ref refid="_serval___lwm2m_8h_1a74fda8acf8e1459b47cffeb1ade3be49" kindref="member">Lwm2m_Binding_T</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69" kindref="member">Lwm2m_Resource_Type_E</ref></highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190" refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69aeb759d0eded18623b92c554c517e3bde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69aeb759d0eded18623b92c554c517e3bde" kindref="member">LWM2M_RESOURCE_STRING</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="192" refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a9e7f13a85a2d9e1e3b19e9b2b4fe7b73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a9e7f13a85a2d9e1e3b19e9b2b4fe7b73" kindref="member">LWM2M_RESOURCE_INTEGER</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x02,</highlight></codeline>
<codeline lineno="194" refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69ab538dbb17833dbc19c3a9d77b0b9378c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69ab538dbb17833dbc19c3a9d77b0b9378c" kindref="member">LWM2M_RESOURCE_FLOAT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x03,</highlight></codeline>
<codeline lineno="196" refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a4ae0a266a85d7d8d2af5d92bcc7fe962" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a4ae0a266a85d7d8d2af5d92bcc7fe962" kindref="member">LWM2M_RESOURCE_BOOL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x04,</highlight></codeline>
<codeline lineno="198" refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69abf9389ec139475ce8f5f74932070d1b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69abf9389ec139475ce8f5f74932070d1b4" kindref="member">LWM2M_RESOURCE_TIME</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x05,</highlight></codeline>
<codeline lineno="200" refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a94f37fb4c4193f64124d92aa15144d89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a94f37fb4c4193f64124d92aa15144d89" kindref="member">LWM2M_RESOURCE_DYNAMIC</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x06,</highlight></codeline>
<codeline lineno="202" refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69ae04f18871517612ec09eab4298890b8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69ae04f18871517612ec09eab4298890b8c" kindref="member">LWM2M_RESOURCE_DYNAMIC_ARRAY</ref><sp/>=<sp/>0x07,</highlight></codeline>
<codeline lineno="204" refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69abf1a17b0f564a216eb38efc2b83632cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69abf1a17b0f564a216eb38efc2b83632cf" kindref="member">LWM2M_RESOURCE_FUNCTION</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x08,</highlight></codeline>
<codeline lineno="206" refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a94782e3312710a29301e89778c9a8e49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69a94782e3312710a29301e89778c9a8e49" kindref="member">LWM2M_RESOURCE_DYNAMIC_BULK</ref><sp/><sp/>=<sp/>0x09,</highlight></codeline>
<codeline lineno="207"><highlight class="normal">};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Resource<sp/>Type<sp/>affixes,<sp/>used<sp/>as<sp/>a<sp/>flag<sp/><sp/>*/</highlight></codeline>
<codeline lineno="211" refid="_serval___lwm2m_8h_1afd46a13b9bfc4c7eb8319aab5f728f56" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_NOT_WRITABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="_serval___lwm2m_8h_1a86ef4324cc3d10b0aed5a55e5d258dbd" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_NOT_READABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="_serval___lwm2m_8h_1ab402fc3f8b36eccbd3e35b68f04a11b3" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_CONFIRM_NOTIFY<sp/><sp/><sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="_serval___lwm2m_8h_1a379b2a6273f9c4bd6e8579f3b249565a" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_READ_ONLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LWM2M_NOT_WRITABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="_serval___lwm2m_8h_1a148726b42b87461f20aa51c9dd4f546d" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_WRITE_ONLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LWM2M_NOT_READABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="_serval___lwm2m_8h_1abfe839d21acdc9fe9bbdb48994490273" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_RESOURCE_TYPE_MASK<sp/><sp/>0x0F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="_serval___lwm2m_8h_1a233ad0bbf0ba00095358bf60f106c362" refkind="member"><highlight class="preprocessor">#define<sp/>LWM2M_RESOURCE_AFFIX_MASK<sp/>0xE0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="_serval___lwm2m_8h_1a5ab22070629f98ba54f84a824df507f8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1a86b969cce7176653d91e45eb52b53c69" kindref="member">Lwm2m_Resource_Type_E</ref><sp/><ref refid="_serval___lwm2m_8h_1a5ab22070629f98ba54f84a824df507f8" kindref="member">Lwm2m_Resource_Type_T</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490f" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490f" kindref="member">Lwm2m_Event_Type_E</ref></highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa268a5af790081316afb61055249d6fde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa268a5af790081316afb61055249d6fde" kindref="member">LWM2M_EVENT_TYPE_BOOTSTRAP</ref>,</highlight></codeline>
<codeline lineno="242" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa86530b4f2468efa60a10e4c2ca640e7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa86530b4f2468efa60a10e4c2ca640e7b" kindref="member">LWM2M_EVENT_TYPE_REGISTRATION</ref>,</highlight></codeline>
<codeline lineno="244" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa3e61c279bb4128605c503d4039f294f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa3e61c279bb4128605c503d4039f294f7" kindref="member">LWM2M_EVENT_TYPE_REGISTRATION_UPDATE</ref>,</highlight></codeline>
<codeline lineno="246" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fabb65b80a300b95f57a716cc157a1b584" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fabb65b80a300b95f57a716cc157a1b584" kindref="member">LWM2M_EVENT_TYPE_DEREGISTRATION</ref>,</highlight></codeline>
<codeline lineno="248" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490faaac78704e8ae2f350679ca41217087cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490faaac78704e8ae2f350679ca41217087cd" kindref="member">LWM2M_EVENT_TYPE_WRITE</ref>,</highlight></codeline>
<codeline lineno="250" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa4e4b1db28c002384b125715b85bdf4dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa4e4b1db28c002384b125715b85bdf4dc" kindref="member">LWM2M_EVENT_TYPE_OBJECT_CREATED</ref>,</highlight></codeline>
<codeline lineno="252" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa79ff18f022326714b8522a096b95bac4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa79ff18f022326714b8522a096b95bac4" kindref="member">LWM2M_EVENT_TYPE_OBJECT_DELETED</ref>,</highlight></codeline>
<codeline lineno="254" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa85f2b4f31bc2aba565fda078a8038148" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa85f2b4f31bc2aba565fda078a8038148" kindref="member">LWM2M_EVENT_TYPE_NEW_OBSERVER</ref>,</highlight></codeline>
<codeline lineno="256" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa790f91368763e3a8200d8eddd8d83f03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa790f91368763e3a8200d8eddd8d83f03" kindref="member">LWM2M_EVENT_TYPE_NOTIFICATION</ref>,</highlight></codeline>
<codeline lineno="258" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa540eea79a23aff2b2976ee0b2fd1d905" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490fa540eea79a23aff2b2976ee0b2fd1d905" kindref="member">LWM2M_EVENT_TYPE_OBSERVATION_CANCELED</ref>,</highlight></codeline>
<codeline lineno="260" refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490faabf458e4472b3ec5687f7b741e0e83ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490faabf458e4472b3ec5687f7b741e0e83ad" kindref="member">LWM2M_EVENT_TYPE_NEW_SERVER_ADDED</ref></highlight></codeline>
<codeline lineno="261"><highlight class="normal">};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="_serval___lwm2m_8h_1a0f96255eafbe400b10f94c798b92f37e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1a6a067a8ac87983fe2df9fd93324f490f" kindref="member">Lwm2m_Event_Type_E</ref><sp/><ref refid="_serval___lwm2m_8h_1a0f96255eafbe400b10f94c798b92f37e" kindref="member">Lwm2m_Event_Type_T</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="struct_lwm2m___u_r_i___path___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m___u_r_i___path___s" kindref="compound">Lwm2m_URI_Path_S</ref></highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279" refid="struct_lwm2m___u_r_i___path___s_1a4ad7c81753e6ad1fd47bfc448f3c6e6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_lwm2m___u_r_i___path___s_1a4ad7c81753e6ad1fd47bfc448f3c6e6a" kindref="member">firstObjectInstanceIndex</ref>;</highlight></codeline>
<codeline lineno="281" refid="struct_lwm2m___u_r_i___path___s_1a486ff36d40edf5f98f1851dcce1f4dda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_lwm2m___u_r_i___path___s_1a486ff36d40edf5f98f1851dcce1f4dda" kindref="member">objectInstanceIndex</ref>;</highlight></codeline>
<codeline lineno="283" refid="struct_lwm2m___u_r_i___path___s_1aa1e1b765429abca7ef4b57faeac2a9e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_lwm2m___u_r_i___path___s_1aa1e1b765429abca7ef4b57faeac2a9e4" kindref="member">resourceIndex</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">};</highlight></codeline>
<codeline lineno="288" refid="_serval___lwm2m_8h_1a25e2d343888ace930acb390bf600708a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m___u_r_i___path___s" kindref="compound">Lwm2m_URI_Path_S</ref><sp/><ref refid="struct_lwm2m___u_r_i___path___s" kindref="compound">Lwm2m_URI_Path_T</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Lwm2mSerializer_S<sp/><ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Lwm2mParser_S<sp/><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>Callback<sp/>function<sp/>that<sp/>is<sp/>used<sp/>for<sp/>dynamic<sp/>resource<sp/>function<sp/>calls<sp/>(resources<sp/>of<sp/>type<sp/>DYNAMIC)</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>@see<sp/>Lwm2m_Resource_Type_E</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>is<sp/>used<sp/>for<sp/>both<sp/>reading<sp/>and<sp/>writing<sp/>the<sp/>resource.<sp/>In<sp/>case<sp/>that<sp/>the<sp/>resource</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>is<sp/>queried,<sp/>serializer_ptr<sp/>will<sp/>be<sp/>provided<sp/>and<sp/>parser_ptr<sp/>will<sp/>be<sp/>NULL.<sp/>In<sp/>case<sp/>that<sp/>the<sp/>resource</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>is<sp/>to<sp/>be<sp/>written<sp/>or<sp/>updated,<sp/>serializer_ptr<sp/>will<sp/>be<sp/>NULL<sp/>and<sp/>parser_ptr<sp/>will<sp/>be<sp/>provided.</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>serializer_ptr<sp/>Pointer<sp/>to<sp/>the<sp/>serializer<sp/>that<sp/>must<sp/>be<sp/>used<sp/>to<sp/>serialize<sp/>the<sp/>response</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>parser_ptr<sp/>Pointer<sp/>to<sp/>the<sp/>parser<sp/>that<sp/>can<sp/>be<sp/>used<sp/>to<sp/>parse<sp/>an<sp/>incoming<sp/>payload</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>function<sp/>is<sp/>expected<sp/>to<sp/>return<sp/>the<sp/>return<sp/>value<sp/>of<sp/>the<sp/>serializer<sp/>API,</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RC_LWM2M_METHOD_NOT_ALLOWED<sp/>if<sp/>the<sp/>resource<sp/>is<sp/>read-only<sp/>but<sp/>is<sp/>to<sp/>be<sp/>written</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RC_LWM2M_INTERNAL_ERROR<sp/>if<sp/>a<sp/>generic<sp/>error<sp/>occurred</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="_serval___lwm2m_8h_1a8098c198828bc7a1b33a807072d2cf1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___lwm2m_8h_1a8098c198828bc7a1b33a807072d2cf1d" kindref="member">Lwm2m_Dynamic_Resource_T</ref>)(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr,<sp/><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref>*<sp/>parser_ptr);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/>Callback<sp/>function<sp/>that<sp/>is<sp/>used<sp/>for<sp/>function<sp/>calls<sp/>(resources<sp/>of<sp/>type<sp/>FUNCTION)</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@see<sp/>Lwm2m_Resource_Type_E</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>For<sp/>internal<sp/>reasons,<sp/>the<sp/>payload_ptr<sp/>available<sp/>in<sp/>the<sp/>message<sp/>will<sp/>point<sp/>to<sp/>a<sp/>memory<sp/>area<sp/>that<sp/>is<sp/>likely<sp/>to</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>be<sp/>also<sp/>accessed<sp/>by<sp/>msg_ptr,<sp/>since<sp/>the<sp/>reply<sp/>to<sp/>a<sp/>message<sp/>reuses<sp/>the<sp/>same<sp/>internal<sp/>message<sp/>structure.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*<sp/>Thus<sp/>care<sp/>has<sp/>to<sp/>be<sp/>taken<sp/>to<sp/>parse<sp/>the<sp/>payload<sp/>first<sp/>before<sp/>serializing<sp/>the<sp/>response.</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>msg_ptr<sp/>Pointer<sp/>to<sp/>the<sp/>message<sp/>structure<sp/>used<sp/>for<sp/>the<sp/>response</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>serializer_ptr<sp/>Pointer<sp/>to<sp/>the<sp/>serializer<sp/>that<sp/>must<sp/>be<sp/>used<sp/>to<sp/>serialize<sp/>the<sp/>response</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>function<sp/>is<sp/>expected<sp/>to<sp/>return<sp/>the<sp/>return<sp/>value<sp/>of<sp/>the<sp/>serializer<sp/>API<sp/>or<sp/>RC_LWM2M_INTERNAL_ERROR</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="_serval___lwm2m_8h_1a59eee50bc50ee36d0bb7a0ff72e875d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___lwm2m_8h_1a59eee50bc50ee36d0bb7a0ff72e875d8" kindref="member">Lwm2m_Resource_Function_T</ref>)(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr,<sp/><ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref>*<sp/>parser_ptr);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*<sp/>Structure<sp/>that<sp/>contains<sp/>information<sp/>about<sp/>an<sp/>individual<sp/>resource</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="struct_lwm2m_resource___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_resource___s" kindref="compound">Lwm2mResource_S</ref></highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340" refid="struct_lwm2m_resource___s_1a40283b92b0ba69260571a675b58c5dd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_lwm2m_resource___s_1a40283b92b0ba69260571a675b58c5dd9" kindref="member">resourceId</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344" refid="struct_lwm2m_resource___s_1ab51cd24d34f6509eafb5e059f4c7d10e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_lwm2m_resource___s_1ab51cd24d34f6509eafb5e059f4c7d10e" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="346" refid="struct_lwm2m_resource___s_1ad9484f5522d0e5f033037c369365ec61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_lwm2m_resource___s_1ad9484f5522d0e5f033037c369365ec61" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="348" refid="struct_lwm2m_resource___s_1af900396d7b72ff2a7002e8befe8cf8f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_lwm2m_resource___s_1af900396d7b72ff2a7002e8befe8cf8f1" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="350" refid="struct_lwm2m_resource___s_1a0e1796f93090a23d03395234544109ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_lwm2m_resource___s_1a0e1796f93090a23d03395234544109ae" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="352" refid="struct_lwm2m_resource___s_1a67d89cadb4f3bac25a221f839d8c065b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a8098c198828bc7a1b33a807072d2cf1d" kindref="member">Lwm2m_Dynamic_Resource_T</ref><sp/><ref refid="struct_lwm2m_resource___s_1a67d89cadb4f3bac25a221f839d8c065b" kindref="member">dynamic</ref>;</highlight></codeline>
<codeline lineno="354" refid="struct_lwm2m_resource___s_1a0f11f471c7f38cc7747ea8e56d84dc63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a59eee50bc50ee36d0bb7a0ff72e875d8" kindref="member">Lwm2m_Resource_Function_T</ref><sp/><ref refid="struct_lwm2m_resource___s_1a0f11f471c7f38cc7747ea8e56d84dc63" kindref="member">func</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_lwm2m_resource___s_1a04b7f6cbb03a480706149683c5f17d9b" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="357" refid="struct_lwm2m_resource___s_1a1d127017fb298b889f4ba24752d08b8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_lwm2m_resource___s_1a1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">};</highlight></codeline>
<codeline lineno="359" refid="_serval___lwm2m_8h_1a7aa17765bff5d9f2e3bd4449b319bb47" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_resource___s" kindref="compound">Lwm2mResource_S</ref><sp/><ref refid="struct_lwm2m_resource___s" kindref="compound">Lwm2mResource_T</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="struct_lwm2m_object_instance___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_object_instance___s" kindref="compound">Lwm2mObjectInstance_S</ref></highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367" refid="struct_lwm2m_object_instance___s_1a27456b94638b433741a32a27ef3cf6a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_lwm2m_object_instance___s_1a27456b94638b433741a32a27ef3cf6a3" kindref="member">objectId</ref>;</highlight></codeline>
<codeline lineno="369" refid="struct_lwm2m_object_instance___s_1ad4514651efdcf5783c862c917284b068" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_lwm2m_object_instance___s_1ad4514651efdcf5783c862c917284b068" kindref="member">objectInstanceId</ref>;</highlight></codeline>
<codeline lineno="371" refid="struct_lwm2m_object_instance___s_1a3aca13b2e4e225336ea3c7673f8112ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_lwm2m_object_instance___s_1a3aca13b2e4e225336ea3c7673f8112ab" kindref="member">resources</ref>;</highlight></codeline>
<codeline lineno="373" refid="struct_lwm2m_object_instance___s_1a7b80fcac80290194432c1d34f2f2948c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_lwm2m_object_instance___s_1a7b80fcac80290194432c1d34f2f2948c" kindref="member">maxNumberOfResources</ref>;</highlight></codeline>
<codeline lineno="377" refid="struct_lwm2m_object_instance___s_1ac0e302370f02ab761267efce70330c56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_lwm2m_object_instance___s_1ac0e302370f02ab761267efce70330c56" kindref="member">permissions</ref>[<ref refid="_serval___lwm2m_8h_1ad7846c732476104297d1eb498a49557d" kindref="member">LWM2M_MAX_NUMBER_SERVERS</ref>];</highlight></codeline>
<codeline lineno="378"><highlight class="normal">};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="_serval___lwm2m_8h_1a8a1b63ecea8f026be591584bd2e33646" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_object_instance___s" kindref="compound">Lwm2mObjectInstance_S</ref><sp/><ref refid="struct_lwm2m_object_instance___s" kindref="compound">Lwm2mObjectInstance_T</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor">#ifndef<sp/>SERVAL_LWM2M_SECURITY_INFO_MAX_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="_serval___lwm2m_8h_1a6be143e219d2f88e654779b2312e849f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_LWM2M_SECURITY_INFO_MAX_LENGTH<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="struct_lwm2m_security_info___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_security_info___s" kindref="compound">Lwm2mSecurityInfo_S</ref></highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398" refid="struct_lwm2m_security_info___s_1af261a7656258af6dfab1ebf7af9b18f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_lwm2m_security_info___s_1af261a7656258af6dfab1ebf7af9b18f8" kindref="member">peer_identity</ref>[<ref refid="_serval___lwm2m_8h_1a6be143e219d2f88e654779b2312e849f" kindref="member">SERVAL_LWM2M_SECURITY_INFO_MAX_LENGTH</ref>];</highlight></codeline>
<codeline lineno="399" refid="struct_lwm2m_security_info___s_1a1dd8226cc9b11d3a653bbc5ac8f6d44b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_lwm2m_security_info___s_1a1dd8226cc9b11d3a653bbc5ac8f6d44b" kindref="member">my_identity</ref>[<ref refid="_serval___lwm2m_8h_1a6be143e219d2f88e654779b2312e849f" kindref="member">SERVAL_LWM2M_SECURITY_INFO_MAX_LENGTH</ref>];</highlight></codeline>
<codeline lineno="400" refid="struct_lwm2m_security_info___s_1aa8d08565e31f5f2f07c7e52edd04610b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_lwm2m_security_info___s_1aa8d08565e31f5f2f07c7e52edd04610b" kindref="member">secret_key</ref>[<ref refid="_serval___lwm2m_8h_1a6be143e219d2f88e654779b2312e849f" kindref="member">SERVAL_LWM2M_SECURITY_INFO_MAX_LENGTH</ref>];</highlight></codeline>
<codeline lineno="401" refid="struct_lwm2m_security_info___s_1a765558964c75d5933569e8e1f7880c02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_lwm2m_security_info___s_1a765558964c75d5933569e8e1f7880c02" kindref="member">secret_key_length</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">};</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="_serval___lwm2m_8h_1ac3ec1b8e55c4e2f07af64c5e2846a46e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_security_info___s" kindref="compound">Lwm2mSecurityInfo_S</ref><sp/><ref refid="struct_lwm2m_security_info___s" kindref="compound">Lwm2mSecurityInfo_T</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="struct_lwm2m_bootstrap_server___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_bootstrap_server___s" kindref="compound">Lwm2mBootstrapServer_S</ref></highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417" refid="struct_lwm2m_bootstrap_server___s_1a8ecdebf4b9486a51eeac0cbc3e642890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_lwm2m_bootstrap_server___s_1a8ecdebf4b9486a51eeac0cbc3e642890" kindref="member">serverAddress</ref>[<ref refid="_serval___lwm2m_8h_1a3f3294152c00e99fd63ac2221d6079a3" kindref="member">LWM2M_IP_ADDRESS_MAX_LENGTH</ref>];</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="struct_lwm2m_bootstrap_server___s_1a2b052f08fc09555d73034ff5d8c44195" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lwm2m_security_info___s" kindref="compound">Lwm2mSecurityInfo_T</ref><sp/><ref refid="struct_lwm2m_bootstrap_server___s_1a2b052f08fc09555d73034ff5d8c44195" kindref="member">securityInfo</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="struct_lwm2m_bootstrap_server___s_1a15a8a5e971ddeb753aac4a0457464739" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_lwm2m_bootstrap_server___s_1a15a8a5e971ddeb753aac4a0457464739" kindref="member">serverInitiated</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">};</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="_serval___lwm2m_8h_1a6a1a67be925b13daa826a5dfba083235" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_bootstrap_server___s" kindref="compound">Lwm2mBootstrapServer_S</ref><sp/><ref refid="struct_lwm2m_bootstrap_server___s" kindref="compound">Lwm2mBootstrapServer_T</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="struct_lwm2m_server___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_server___s" kindref="compound">Lwm2mServer_S</ref></highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438" refid="struct_lwm2m_server___s_1a8ecdebf4b9486a51eeac0cbc3e642890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_lwm2m_server___s_1a8ecdebf4b9486a51eeac0cbc3e642890" kindref="member">serverAddress</ref>[<ref refid="_serval___lwm2m_8h_1a3f3294152c00e99fd63ac2221d6079a3" kindref="member">LWM2M_IP_ADDRESS_MAX_LENGTH</ref>];</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="struct_lwm2m_server___s_1a2b052f08fc09555d73034ff5d8c44195" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lwm2m_security_info___s" kindref="compound">Lwm2mSecurityInfo_T</ref><sp/><ref refid="struct_lwm2m_server___s_1a2b052f08fc09555d73034ff5d8c44195" kindref="member">securityInfo</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="struct_lwm2m_server___s_1a569e06e92ec3d06c5ebf7f40d7f9a84e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_lwm2m_server___s_1a569e06e92ec3d06c5ebf7f40d7f9a84e" kindref="member">lifetime</ref>;</highlight></codeline>
<codeline lineno="450" refid="struct_lwm2m_server___s_1ac0e302370f02ab761267efce70330c56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_lwm2m_server___s_1ac0e302370f02ab761267efce70330c56" kindref="member">permissions</ref>[<ref refid="_serval___lwm2m_8h_1ad7846c732476104297d1eb498a49557d" kindref="member">LWM2M_MAX_NUMBER_SERVERS</ref>];</highlight></codeline>
<codeline lineno="451"><highlight class="normal">};</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="_serval___lwm2m_8h_1ad98e7139c5abe44495ad1388ad264a67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_server___s" kindref="compound">Lwm2mServer_S</ref><sp/><ref refid="struct_lwm2m_server___s" kindref="compound">Lwm2mServer_T</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="struct_lwm2m_device___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_device___s" kindref="compound">Lwm2mDevice_S</ref></highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462" refid="struct_lwm2m_device___s_1a8f8f80d37794cde9472343e4487ba3eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_lwm2m_device___s_1a8f8f80d37794cde9472343e4487ba3eb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="464" refid="struct_lwm2m_device___s_1af7f8fcd6c147f3569bfe58f1bb645ba0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_lwm2m_device___s_1af7f8fcd6c147f3569bfe58f1bb645ba0" kindref="member">sms</ref>;</highlight></codeline>
<codeline lineno="466" refid="struct_lwm2m_device___s_1ab9e8e3ea9a423bc74893ced71f3ca820" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1a74fda8acf8e1459b47cffeb1ade3be49" kindref="member">Lwm2m_Binding_T</ref><sp/><ref refid="struct_lwm2m_device___s_1ab9e8e3ea9a423bc74893ced71f3ca820" kindref="member">binding</ref>:3;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_POLICY_LWM2M_MULTIPLE_SERVICES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_lwm2m_device___s_1af3138032961911b5742b4344e37f43d4" kindref="member">unused</ref>:5;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="struct_lwm2m_device___s_1ae5b9c4f4dc3296ef6e0ba61c71d09fc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_lwm2m_device___s_1ae5b9c4f4dc3296ef6e0ba61c71d09fc1" kindref="member">secure</ref>:1;</highlight></codeline>
<codeline lineno="473" refid="struct_lwm2m_device___s_1af3138032961911b5742b4344e37f43d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_lwm2m_device___s_1af3138032961911b5742b4344e37f43d4" kindref="member">unused</ref>:4;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="struct_lwm2m_device___s_1ab87c9445322550aaa0bba1c696c42cc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_lwm2m_device___s_1ab87c9445322550aaa0bba1c696c42cc9" kindref="member">numberOfObjectInstances</ref>;</highlight></codeline>
<codeline lineno="479" refid="struct_lwm2m_device___s_1a30372947bf5dbe41878b35d3c4c119c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lwm2m_object_instance___s" kindref="compound">Lwm2mObjectInstance_T</ref>*<sp/><ref refid="struct_lwm2m_device___s_1a30372947bf5dbe41878b35d3c4c119c5" kindref="member">objectInstances</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">};</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="_serval___lwm2m_8h_1ad9ad0ac783de38f6a5e137f7b1565425" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_lwm2m_device___s" kindref="compound">Lwm2mDevice_S</ref><sp/><ref refid="struct_lwm2m_device___s" kindref="compound">Lwm2mDevice_T</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_POLICY_LWM2M_INCLUDE_SERVER_IN_CALLBACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_serval___lwm2m_8h_1a6b8425f07996250f560d2f124d3460de" kindref="member">Lwm2m_ApplicationCallback_T</ref>)<sp/>(<ref refid="_serval___lwm2m_8h_1a0f96255eafbe400b10f94c798b92f37e" kindref="member">Lwm2m_Event_Type_T</ref><sp/>eventType,<sp/>Lwm2m_Server_T*<sp/>server,<sp/><ref refid="struct_lwm2m___u_r_i___path___s" kindref="compound">Lwm2m_URI_Path_T</ref>*<sp/>path,<sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>status);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="_serval___lwm2m_8h_1a6b8425f07996250f560d2f124d3460de" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_serval___lwm2m_8h_1a6b8425f07996250f560d2f124d3460de" kindref="member">Lwm2m_ApplicationCallback_T</ref>)<sp/>(<ref refid="_serval___lwm2m_8h_1a0f96255eafbe400b10f94c798b92f37e" kindref="member">Lwm2m_Event_Type_T</ref><sp/>eventType,<sp/><ref refid="struct_lwm2m___u_r_i___path___s" kindref="compound">Lwm2m_URI_Path_T</ref>*<sp/>path,<sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>status);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//SERVAL_POLICY_LWM2M_INCLUDE_SERVER_IN_CALLBACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_POLICY_REMOVE_SPECIALIZED_ACCESSORS_FROM_MSG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><ref refid="_serval___msg___obsolete_8h_1a1c5af4b879992f759cd07f61260790a8" kindref="member">Lwm2mMsg_T</ref>*<sp/><ref refid="_serval___msg___obsolete_8h_1a6ef9afed3d60b53a6c90b2dd6d28c79b" kindref="member">Msg_getLwm2mMsg</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref>*<sp/>msg_ptr);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_POLICY_REMOVE_SPECIALIZED_ACCESSORS_FROM_MSG_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1ab0743a1e27bb9fb2dca95a6520dcb14b" kindref="member">Lwm2mSerializer_serializeString</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr,<sp/><ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/>*strDescr);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a573270bd7e32051037c3b9b65d1ccbbf" kindref="member">Lwm2mSerializer_serializeInt</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr,<sp/>int32_t<sp/><ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1adfcc9d6fd4b48bc249f56c3503d4e196" kindref="member">Lwm2mSerializer_serializeFloat</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a3b14e4a6b1b26a2498d36f92e6d2c70b" kindref="member">Lwm2mSerializer_serializeBool</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a1fe9e2cab724ceb01e9696c2412ea8b9" kindref="member">Lwm2mSerializer_serializeOpaque</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr,<sp/>uint8_t<sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>,<sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a18eeaeb94a663eb1651166c9a177b291" kindref="member">Lwm2mSerializer_serializeTime</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr,<sp/>uint32_t<sp/><ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1adbf514b7ee6f9b49072a425b02fae9e0" kindref="member">Lwm2mSerializer_startSerializingResourceArray</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref><sp/>*serializer_ptr);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a33ebd39502f85ca7d921c286c0d37727" kindref="member">Lwm2mSerializer_setResourceInstanceId</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref><sp/>*serializer_ptr,<sp/>uint16_t<sp/>instanceId);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1ab4920d10548534fbc9497389db96e130" kindref="member">Lwm2mSerializer_endSerializingResourceArray</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref><sp/>*serializer_ptr);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal">uint8_t<sp/><ref refid="_serval___lwm2m_8h_1af0b925f8aafc51702d159a94a633890f" kindref="member">Lwm2mSerializer_getServerIndex</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal">uint32_t<sp/><ref refid="_serval___lwm2m_8h_1a1f92229f9706e1535a4227047a1f803e" kindref="member">Lwm2mSerializer_getBlockOffset</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal">uint16_t<sp/><ref refid="_serval___lwm2m_8h_1a1e893ccf7f07d37365b596f2c1fdfcdc" kindref="member">Lwm2mSerializer_getBlockSize</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1afb180d945afe44fd2d467dd97ba54223" kindref="member">Lwm2mSerializer_haveMoreData</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="_serval___lwm2m_8h_1aec0170a284fa0ba8c7631c99c540d3b1" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="_serval___lwm2m_8h_1aec0170a284fa0ba8c7631c99c540d3b1" kindref="member">Lwm2mSerializer_getSerializableSize</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr,<sp/>uint32_t<sp/>availableSize)</highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>offset<sp/><sp/><sp/><sp/>=<sp/><ref refid="_serval___lwm2m_8h_1a1f92229f9706e1535a4227047a1f803e" kindref="member">Lwm2mSerializer_getBlockOffset</ref>(serializer_ptr);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>blockSize<sp/>=<sp/><ref refid="_serval___lwm2m_8h_1a1e893ccf7f07d37365b596f2c1fdfcdc" kindref="member">Lwm2mSerializer_getBlockSize</ref>(serializer_ptr);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(offset<sp/>&gt;<sp/>availableSize)<sp/>?<sp/>0<sp/>:<sp/>(offset<sp/>+<sp/>blockSize<sp/>&gt;<sp/>availableSize)<sp/>?<sp/>availableSize<sp/>-<sp/>offset<sp/>:<sp/>blockSize;</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="_serval___lwm2m_8h_1a6c9d9c8170f4708db3a0913629512430" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1a6c9d9c8170f4708db3a0913629512430" kindref="member">Lwm2mSerializer_checkIfDone</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr,<sp/>uint32_t<sp/>availableSize)</highlight></codeline>
<codeline lineno="739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>offset<sp/><sp/><sp/><sp/>=<sp/><ref refid="_serval___lwm2m_8h_1a1f92229f9706e1535a4227047a1f803e" kindref="member">Lwm2mSerializer_getBlockOffset</ref>(serializer_ptr);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>blockSize<sp/>=<sp/><ref refid="_serval___lwm2m_8h_1a1e893ccf7f07d37365b596f2c1fdfcdc" kindref="member">Lwm2mSerializer_getBlockSize</ref>(serializer_ptr);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>offset<sp/>+<sp/>blockSize<sp/>&lt;<sp/>availableSize<sp/>)<sp/><ref refid="_serval___lwm2m_8h_1afb180d945afe44fd2d467dd97ba54223" kindref="member">Lwm2mSerializer_haveMoreData</ref>(serializer_ptr);</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="763" refid="_serval___lwm2m_8h_1a277cf022ab85a978b5c527f37560af56" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a277cf022ab85a978b5c527f37560af56" kindref="member">Lwm2mSerializer_serializeOpaqueBulk</ref>(<ref refid="_serval___lwm2m_8h_1a0091953baee537959c00d97a217b6513" kindref="member">Lwm2mSerializer_T</ref>*<sp/>serializer_ptr,<sp/>uint8_t*<sp/>data,<sp/>uint32_t<sp/>availableSize)</highlight></codeline>
<codeline lineno="764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>offset<sp/><sp/><sp/><sp/>=<sp/><ref refid="_serval___lwm2m_8h_1a1f92229f9706e1535a4227047a1f803e" kindref="member">Lwm2mSerializer_getBlockOffset</ref>(serializer_ptr);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>blockSize<sp/>=<sp/><ref refid="_serval___lwm2m_8h_1a1e893ccf7f07d37365b596f2c1fdfcdc" kindref="member">Lwm2mSerializer_getBlockSize</ref>(serializer_ptr);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>offset<sp/>&gt;=<sp/>availableSize)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_serval___exceptions_8h_1a63c2b4e52d920a11ad698d49b6a47a80abd04b1efcaa9b42db39ad1d39968def3" kindref="member">RC_LWM2M_BAD_REQUEST</ref>;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>offset<sp/>+<sp/>blockSize<sp/>&gt;=<sp/>availableSize<sp/>)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockSize<sp/>=<sp/>availableSize<sp/>-<sp/>offset;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1afb180d945afe44fd2d467dd97ba54223" kindref="member">Lwm2mSerializer_haveMoreData</ref>(serializer_ptr);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1a1fe9e2cab724ceb01e9696c2412ea8b9" kindref="member">Lwm2mSerializer_serializeOpaque</ref>(serializer_ptr,<sp/>&amp;data[offset],<sp/>blockSize);</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1aadd0160a0f800e890fd6209652258883" kindref="member">Lwm2mParser_getString</ref>(<ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref><sp/>*parser_ptr,<sp/><ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/>*strDescr);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a3712e05e52f9835276c848d2dfaf594c" kindref="member">Lwm2mParser_getInt</ref>(<ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref>*<sp/>parser_ptr,<sp/>int32_t<sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a8fe3c9d5763fa8b6cb7b22601622ea19" kindref="member">Lwm2mParser_getFloat</ref>(<ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref>*<sp/>parser_ptr,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a617c5a1991863ec615c7cd0829177f5b" kindref="member">Lwm2mParser_getBool</ref>(<ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref>*<sp/>parser_ptr,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1ab5ab3aec18fea28ddf604fa9feb61185" kindref="member">Lwm2mParser_getOpaque</ref>(<ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref>*<sp/>parser_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>**<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>,<sp/>uint32_t<sp/>*length);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1af24f5f8c9ee03f04aeb3360057ebad6f" kindref="member">Lwm2mParser_getTime</ref>(<ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref>*<sp/>parser_ptr,<sp/>int32_t<sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a9c60c984aeb51618ca4ee923e3c27581" kindref="member">Lwm2mParser_startParsingResourceArray</ref>(<ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref><sp/>*parser_ptr);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a2634dcb95df594476458d5e749f83e5d" kindref="member">Lwm2mParser_parseNextResourceInstance</ref>(<ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref><sp/>*parser_ptr);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a78f94f06a09f20583175150e87609bb2" kindref="member">Lwm2mParser_getResourceInstanceId</ref>(<ref refid="_serval___lwm2m_8h_1ac7b87d2b5c6ff0ea8311e2d7fe55d125" kindref="member">Lwm2mParser_T</ref><sp/>*parser_ptr,<sp/>uint16_t*<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1ad9f2c8ad1d0c321237ecc983b7885800" kindref="member">Lwm2mParser_convertStringToInt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>length,<sp/>int32_t<sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1ac720b45765a4a95ce7a07f2f94dcd83a" kindref="member">Lwm2mBootstrap_request</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a11d749b362cfad3a7d436b16187d532d" kindref="member">Lwm2mRegistration_register</ref>(uint8_t<sp/>serverIndex);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a2996e65dfc37c6a77490fb1924f56c4c" kindref="member">Lwm2mRegistration_registerToAllServers</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1aab641164d466b0f46b7c126fa08c80b5" kindref="member">Lwm2mRegistration_update</ref>(uint8_t<sp/>serverIndex);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a8331d7ff42886de9560bc37eac52f2b3" kindref="member">Lwm2mRegistration_updateToAllServers</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a2b6401deb272b3121cbc92cf91bf4719" kindref="member">Lwm2mRegistration_deRegister</ref>(uint8_t<sp/>serverIndex);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1adfbb8d075f6143ab7d99b5acf53b43c1" kindref="member">Lwm2mRegistration_deRegisterFromAllServers</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS_CLIENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a099b0ad01af6515c7d1c1b20c1bfb2ca" kindref="member">Lwm2mRegistration_closeSecureConn</ref>(uint8_t<sp/>serverIndex);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a1417b89dbde7c6ae4af794ac7261b313" kindref="member">Lwm2mReporting_resourceChanged</ref>(<ref refid="struct_lwm2m___u_r_i___path___s" kindref="compound">Lwm2m_URI_Path_T</ref><sp/>*uripath);</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1ac4322b6bce3d9abbe86e8b7ece716e7f" kindref="member">Lwm2mReporting_multipleResourcesChanged</ref>(<ref refid="struct_lwm2m___u_r_i___path___s" kindref="compound">Lwm2m_URI_Path_T</ref><sp/>*objectInstanceUripath,<sp/>uint8_t<sp/>count,<sp/>...);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1ab93c6b2682a838067be6532536812f4e" kindref="member">Lwm2mReporting_suspendNotifications</ref>(uint8_t<sp/>serverIndex);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041" refid="_serval___lwm2m_8h_1ae9064caa4d861808633acbe662c37b0a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1ae9064caa4d861808633acbe662c37b0a" kindref="member">Lwm2m_Notification_Resumption_e</ref></highlight></codeline>
<codeline lineno="1042"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1043" refid="_serval___lwm2m_8h_1ae9064caa4d861808633acbe662c37b0aa69f2e39e4cacf3ebcbfc6933d50b0af6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1ae9064caa4d861808633acbe662c37b0aa69f2e39e4cacf3ebcbfc6933d50b0af6" kindref="member">LWM2M_DROP_NOTIFICATIONS</ref>,</highlight></codeline>
<codeline lineno="1044" refid="_serval___lwm2m_8h_1ae9064caa4d861808633acbe662c37b0aa956447988677e985effd7e12ea8fe430" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___lwm2m_8h_1ae9064caa4d861808633acbe662c37b0aa956447988677e985effd7e12ea8fe430" kindref="member">LWM2M_SEND_NOTIFICATIONS</ref></highlight></codeline>
<codeline lineno="1045"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1046" refid="_serval___lwm2m_8h_1ae2e7392662b3fa670121d7ae8cdb316d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1ae9064caa4d861808633acbe662c37b0a" kindref="member">Lwm2m_Notification_Resumption_e</ref><sp/><ref refid="_serval___lwm2m_8h_1ae2e7392662b3fa670121d7ae8cdb316d" kindref="member">Lwm2m_Notification_Resumption_t</ref>;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1a591bb6d61476adf0bc696ac4c7dc8acb" kindref="member">Lwm2mReporting_resumeNotifications</ref>(uint8_t<sp/>serverIndex,<sp/><ref refid="_serval___lwm2m_8h_1ae2e7392662b3fa670121d7ae8cdb316d" kindref="member">Lwm2m_Notification_Resumption_t</ref><sp/>mode);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><ref refid="struct_lwm2m_bootstrap_server___s" kindref="compound">Lwm2mBootstrapServer_T</ref>*<sp/><ref refid="_serval___lwm2m_8h_1a6c009cac7ac32569f8825bbd38d51ed2" kindref="member">Lwm2mBootstrap_getBootstrapServer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><ref refid="struct_lwm2m_server___s" kindref="compound">Lwm2mServer_T</ref>*<sp/><ref refid="_serval___lwm2m_8h_1ac965f7bc69d62f296dc90b079d2e757c" kindref="member">Lwm2m_getServer</ref>(uint8_t<sp/>serverIndex);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___lwm2m_8h_1ae3396779705da89ec66f5fa3c5d0db47" kindref="member">Lwm2m_setNumberOfServers</ref>(uint8_t<sp/>numberOfServers);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1ae2f63ec2f648b938e68e2ab885cfedff" kindref="member">Lwm2m_initialize</ref>(<ref refid="struct_lwm2m_device___s" kindref="compound">Lwm2mDevice_T</ref>*<sp/>device);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_POLICY_LWM2M_MULTIPLE_SERVICES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>Lwm2m_startService(<ref refid="_serval___url_8h_1a7d7150a05eea99b61055eecd55a988f6" kindref="member">Serval_Supported_Schemes_t</ref><sp/>scheme,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>port,<sp/><ref refid="_serval___lwm2m_8h_1a6b8425f07996250f560d2f124d3460de" kindref="member">Lwm2m_ApplicationCallback_T</ref><sp/>applicationCallback);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_POLICY_LWM2M_MULTIPLE_SERVICES<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a9e9c0190a6b28b2cdd477bb49795ee3c" kindref="member">Lwm2m_start</ref>(<ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>port,<sp/><ref refid="_serval___lwm2m_8h_1a6b8425f07996250f560d2f124d3460de" kindref="member">Lwm2m_ApplicationCallback_T</ref><sp/>applicationCallback);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_POLICY_LWM2M_MULTIPLE_SERVICES<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_SECURITY_API_VERSION<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___lwm2m_8h_1a02cd270c79d10c3e1036a0522d45cd45" kindref="member">Lwm2mSecurity_defaultCallback</ref>(<ref refid="struct_security_token___s" kindref="compound">SecurityToken_T</ref><sp/>token,<sp/><ref refid="union_security_data___u" kindref="compound">SecurityData_T</ref>*<sp/>tokenData);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_SECURITY_API_VERSION<sp/>==<sp/>2<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal">uint32_t<sp/>Lwm2mSecurity_PskCallback(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ipAddr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>port,</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>peer_identity,</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>my_identiy,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_SECURITY_API_VERSION<sp/>==<sp/>2<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//SERVAL_ENABLE_DTLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//SERVAL_ENABLE_LWM2M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//SERVAL_LWM2M_H_</highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h"/>
  </compounddef>
</doxygen>
