<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_b_c_d_s___t_l_v_8h" kind="file">
    <compoundname>BCDS_TLV.h</compoundname>
    <includes refid="_b_c_d_s___utils_8h" local="yes">BCDS_Utils.h</includes>
    <includes refid="_b_c_d_s___basics_8h" local="yes">BCDS_Basics.h</includes>
    <incdepgraph>
      <node id="39570">
        <label>stdbool.h</label>
      </node>
      <node id="39569">
        <label>stdint.h</label>
      </node>
      <node id="39567">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="39568" relation="include">
        </childnode>
      </node>
      <node id="39572">
        <label>stdlib.h</label>
      </node>
      <node id="39564">
        <label>SDK/xdk110/Platform/Utils/include/BCDS_TLV.h</label>
        <link refid="BCDS_TLV.h"/>
        <childnode refid="39565" relation="include">
        </childnode>
        <childnode refid="39568" relation="include">
        </childnode>
      </node>
      <node id="39566">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="39571">
        <label>string.h</label>
      </node>
      <node id="39565">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="39566" relation="include">
        </childnode>
        <childnode refid="39567" relation="include">
        </childnode>
      </node>
      <node id="39568">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="39569" relation="include">
        </childnode>
        <childnode refid="39570" relation="include">
        </childnode>
        <childnode refid="39571" relation="include">
        </childnode>
        <childnode refid="39572" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_t_l_v___element___s" prot="public">TLV_Element_S</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___t_l_v_1gab2cf9fd2006bd0a18ec1f0e4dc23852b" prot="public" static="no">
        <type>struct <ref refid="struct_t_l_v___element___s" kindref="compound">TLV_Element_S</ref></type>
        <definition>typedef struct TLV_Element_S TLV_Element_T</definition>
        <argsstring></argsstring>
        <name>TLV_Element_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_TLV.h" line="129" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_TLV.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" prot="public" static="no">
        <type>struct TLV_Group_S *</type>
        <definition>typedef struct TLV_Group_S* TLV_GroupHandle_TP</definition>
        <argsstring></argsstring>
        <name>TLV_GroupHandle_TP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_TLV.h" line="74" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_TLV.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___t_l_v_1ga7a7f5e9047694d7b8ba4cc96174935ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___t_l_v_1gab2cf9fd2006bd0a18ec1f0e4dc23852b" kindref="member">TLV_Element_T</ref> *</type>
        <definition>TLV_Element_T* TLV_AddElement</definition>
        <argsstring>(TLV_GroupHandle_TP const Handle, const uint16_t Type, const uint16_t Length, const void *const Value)</argsstring>
        <name>TLV_AddElement</name>
        <param>
          <type><ref refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" kindref="member">TLV_GroupHandle_TP</ref> const</type>
          <declname>Handle</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>Type</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>Length</declname>
        </param>
        <param>
          <type>const void *const</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_TLV.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___t_l_v_1ga7fc2159d119a620d94d4d7491a35d41d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" kindref="member">TLV_GroupHandle_TP</ref></type>
        <definition>TLV_GroupHandle_TP TLV_AddGroup</definition>
        <argsstring>(void *const Buffer, const uint16_t Size)</argsstring>
        <name>TLV_AddGroup</name>
        <param>
          <type>void *const</type>
          <declname>Buffer</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>Size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_TLV.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___t_l_v_1ga332f761b89f436ea72e0a3bde3a70228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___t_l_v_1gab2cf9fd2006bd0a18ec1f0e4dc23852b" kindref="member">TLV_Element_T</ref> *</type>
        <definition>TLV_Element_T* TLV_GetElement</definition>
        <argsstring>(TLV_GroupHandle_TP const Handle, const uint16_t Type)</argsstring>
        <name>TLV_GetElement</name>
        <param>
          <type><ref refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" kindref="member">TLV_GroupHandle_TP</ref> const</type>
          <declname>Handle</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_TLV.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___t_l_v_1ga05afb065bd9003d4703e378851010036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TLV_RemoveElement</definition>
        <argsstring>(TLV_GroupHandle_TP const Handle, const uint16_t Type)</argsstring>
        <name>TLV_RemoveElement</name>
        <param>
          <type><ref refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" kindref="member">TLV_GroupHandle_TP</ref> const</type>
          <declname>Handle</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_TLV.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___t_l_v_1ga4c4a7bf1baad0f772891a538388a8ebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TLV_RemoveGroup</definition>
        <argsstring>(TLV_GroupHandle_TP Handle)</argsstring>
        <name>TLV_RemoveGroup</name>
        <param>
          <type><ref refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" kindref="member">TLV_GroupHandle_TP</ref></type>
          <declname>Handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_TLV.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="comment">/*<sp/>header<sp/>definition<sp/>********************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BCDS_TLV_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCDS_TLV_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>interface<sp/>declaration<sp/>*********************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___utils_8h" kindref="compound">BCDS_Utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BCDS_FEATURE_TLV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___basics_8h" kindref="compound">BCDS_Basics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>Type<sp/>and<sp/>macro<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="struct_t_l_v___element___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_l_v___element___s" kindref="compound">TLV_Element_S</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67" refid="struct_t_l_v___element___s_1a03272faedee7074942640966ddf3dd45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/><ref refid="struct_t_l_v___element___s_1a03272faedee7074942640966ddf3dd45" kindref="member">DataBuffer</ref>;</highlight></codeline>
<codeline lineno="68" refid="struct_t_l_v___element___s_1acf8dade9fb0132dca2fa3d9e62c7e521" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_t_l_v___element___s_1acf8dade9fb0132dca2fa3d9e62c7e521" kindref="member">DataType</ref>;</highlight></codeline>
<codeline lineno="69" refid="struct_t_l_v___element___s_1a6236ab9719c7ba873cb61361347e3563" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_t_l_v___element___s_1a6236ab9719c7ba873cb61361347e3563" kindref="member">DataLength</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group___t_l_v_1gab2cf9fd2006bd0a18ec1f0e4dc23852b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_l_v___element___s" kindref="compound">TLV_Element_S</ref><sp/><ref refid="struct_t_l_v___element___s" kindref="compound">TLV_Element_T</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TLV_Group_S<sp/>*<sp/><ref refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" kindref="member">TLV_GroupHandle_TP</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>function<sp/>prototype<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" kindref="member">TLV_GroupHandle_TP</ref><sp/><ref refid="group___t_l_v_1ga7fc2159d119a620d94d4d7491a35d41d" kindref="member">TLV_AddGroup</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>Size);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___t_l_v_1ga4c4a7bf1baad0f772891a538388a8ebf" kindref="member">TLV_RemoveGroup</ref>(<ref refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" kindref="member">TLV_GroupHandle_TP</ref><sp/>Handle);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="struct_t_l_v___element___s" kindref="compound">TLV_Element_T</ref>*<sp/><ref refid="group___t_l_v_1ga7a7f5e9047694d7b8ba4cc96174935ad" kindref="member">TLV_AddElement</ref>(<ref refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" kindref="member">TLV_GroupHandle_TP</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>Type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>Length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="struct_t_l_v___element___s" kindref="compound">TLV_Element_T</ref>*<sp/><ref refid="group___t_l_v_1ga332f761b89f436ea72e0a3bde3a70228" kindref="member">TLV_GetElement</ref>(<ref refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" kindref="member">TLV_GroupHandle_TP</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>Type);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___t_l_v_1ga05afb065bd9003d4703e378851010036" kindref="member">TLV_RemoveElement</ref>(<ref refid="group___t_l_v_1gad414f78cd76bae49e21d47121202ca93" kindref="member">TLV_GroupHandle_TP</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>Type);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>global<sp/>variable<sp/>declarations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inline<sp/>function<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>BCDS_FEATURE_TLV<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BCDS_TLV_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_TLV.h"/>
  </compounddef>
</doxygen>
