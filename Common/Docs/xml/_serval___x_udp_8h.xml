<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___x_udp_8h" kind="file">
    <compoundname>Serval_XUdp.h</compoundname>
    <includes refid="_serval___defines_8h" local="no">Serval_Defines.h</includes>
    <includes refid="_serval___types_8h" local="no">Serval_Types.h</includes>
    <includes refid="_p_ip_8h" local="no">PIp.h</includes>
    <includes refid="_serval___msg_8h" local="no">Serval_Msg.h</includes>
    <incdepgraph>
      <node id="32337">
        <label>stdbool.h</label>
      </node>
      <node id="32330">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="32331" relation="include">
        </childnode>
        <childnode refid="32371" relation="include">
        </childnode>
      </node>
      <node id="32341">
        <label>stdarg.h</label>
      </node>
      <node id="32368">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="32359" relation="include">
        </childnode>
      </node>
      <node id="32353">
        <label>list.h</label>
      </node>
      <node id="32355">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="32356" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32334" relation="include">
        </childnode>
      </node>
      <node id="32374">
        <label>Serval_StringDescr.h</label>
        <link refid="_serval___string_descr_8h"/>
        <childnode refid="32330" relation="include">
        </childnode>
      </node>
      <node id="32333">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="32334" relation="include">
        </childnode>
      </node>
      <node id="32336">
        <label>stdint.h</label>
      </node>
      <node id="32334">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="32335" relation="include">
        </childnode>
      </node>
      <node id="32339">
        <label>stdlib.h</label>
      </node>
      <node id="32371">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="32380">
        <label>Serval_Policy.h</label>
        <link refid="_serval___policy_8h"/>
      </node>
      <node id="32347">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="32350">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="32351" relation="include">
        </childnode>
      </node>
      <node id="32358">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="32360">
        <label>user.h</label>
      </node>
      <node id="32354">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="32334" relation="include">
        </childnode>
        <childnode refid="32355" relation="include">
        </childnode>
        <childnode refid="32358" relation="include">
        </childnode>
      </node>
      <node id="32361">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="32359" relation="include">
        </childnode>
      </node>
      <node id="32377">
        <label>Serval_Callable.h</label>
        <link refid="_serval___callable_8h"/>
        <childnode refid="32330" relation="include">
        </childnode>
        <childnode refid="32378" relation="include">
        </childnode>
      </node>
      <node id="32345">
        <label>stddef.h</label>
      </node>
      <node id="32363">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="32359" relation="include">
        </childnode>
      </node>
      <node id="32343">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="32344" relation="include">
        </childnode>
        <childnode refid="32346" relation="include">
        </childnode>
        <childnode refid="32350" relation="include">
        </childnode>
        <childnode refid="32352" relation="include">
        </childnode>
      </node>
      <node id="32332">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32340" relation="include">
        </childnode>
        <childnode refid="32341" relation="include">
        </childnode>
        <childnode refid="32342" relation="include">
        </childnode>
        <childnode refid="32339" relation="include">
        </childnode>
        <childnode refid="32330" relation="include">
        </childnode>
        <childnode refid="32343" relation="include">
        </childnode>
        <childnode refid="32354" relation="include">
        </childnode>
        <childnode refid="32359" relation="include">
        </childnode>
      </node>
      <node id="32340">
        <label>limits.h</label>
      </node>
      <node id="32373">
        <label>Serval_Msg.h</label>
        <link refid="_serval___msg_8h"/>
        <childnode refid="32329" relation="include">
        </childnode>
        <childnode refid="32330" relation="include">
        </childnode>
        <childnode refid="32374" relation="include">
        </childnode>
        <childnode refid="32375" relation="include">
        </childnode>
        <childnode refid="32376" relation="include">
        </childnode>
        <childnode refid="32377" relation="include">
        </childnode>
        <childnode refid="32379" relation="include">
        </childnode>
        <childnode refid="32380" relation="include">
        </childnode>
        <childnode refid="32381" relation="include">
        </childnode>
      </node>
      <node id="32349">
        <label>portable.h</label>
      </node>
      <node id="32357">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="32338">
        <label>string.h</label>
      </node>
      <node id="32356">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="32357" relation="include">
        </childnode>
        <childnode refid="32334" relation="include">
        </childnode>
      </node>
      <node id="32378">
        <label>Serval_StructCtx.h</label>
        <link refid="_serval___struct_ctx_8h"/>
        <childnode refid="32345" relation="include">
        </childnode>
      </node>
      <node id="32335">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="32336" relation="include">
        </childnode>
        <childnode refid="32337" relation="include">
        </childnode>
        <childnode refid="32338" relation="include">
        </childnode>
        <childnode refid="32339" relation="include">
        </childnode>
      </node>
      <node id="32381">
        <label>Serval_Msg_Obsolete.h</label>
        <link refid="_serval___msg___obsolete_8h"/>
        <childnode refid="32330" relation="include">
        </childnode>
        <childnode refid="32380" relation="include">
        </childnode>
        <childnode refid="32373" relation="include">
        </childnode>
      </node>
      <node id="32379">
        <label>Serval_Ip.h</label>
        <link refid="_serval___ip_8h"/>
        <childnode refid="32372" relation="include">
        </childnode>
        <childnode refid="32330" relation="include">
        </childnode>
      </node>
      <node id="32348">
        <label>projdefs.h</label>
      </node>
      <node id="32370">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="32328">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h</label>
        <link refid="Serval_XUdp.h"/>
        <childnode refid="32329" relation="include">
        </childnode>
        <childnode refid="32330" relation="include">
        </childnode>
        <childnode refid="32372" relation="include">
        </childnode>
        <childnode refid="32373" relation="include">
        </childnode>
      </node>
      <node id="32372">
        <label>PIp.h</label>
        <link refid="_p_ip_8h"/>
        <childnode refid="32334" relation="include">
        </childnode>
      </node>
      <node id="32369">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="32359" relation="include">
        </childnode>
      </node>
      <node id="32376">
        <label>Serval_Filesystem.h</label>
        <link refid="_serval___filesystem_8h"/>
        <childnode refid="32330" relation="include">
        </childnode>
      </node>
      <node id="32329">
        <label>Serval_Defines.h</label>
        <link refid="_serval___defines_8h"/>
      </node>
      <node id="32365">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="32359" relation="include">
        </childnode>
      </node>
      <node id="32351">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="32366">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="32359" relation="include">
        </childnode>
      </node>
      <node id="32375">
        <label>Serval_XmlParser.h</label>
        <link refid="_serval___xml_parser_8h"/>
        <childnode refid="32374" relation="include">
        </childnode>
      </node>
      <node id="32364">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="32359" relation="include">
        </childnode>
      </node>
      <node id="32352">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="32353" relation="include">
        </childnode>
      </node>
      <node id="32367">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="32359" relation="include">
        </childnode>
      </node>
      <node id="32346">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="32336" relation="include">
        </childnode>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32347" relation="include">
        </childnode>
      </node>
      <node id="32331">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="32332" relation="include">
        </childnode>
      </node>
      <node id="32344">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="32345" relation="include">
        </childnode>
        <childnode refid="32336" relation="include">
        </childnode>
        <childnode refid="32346" relation="include">
        </childnode>
        <childnode refid="32348" relation="include">
        </childnode>
        <childnode refid="32349" relation="include">
        </childnode>
      </node>
      <node id="32342">
        <label>stdio.h</label>
      </node>
      <node id="32362">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="32359" relation="include">
        </childnode>
      </node>
      <node id="32359">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="32360" relation="include">
        </childnode>
        <childnode refid="32361" relation="include">
        </childnode>
        <childnode refid="32362" relation="include">
        </childnode>
        <childnode refid="32363" relation="include">
        </childnode>
        <childnode refid="32364" relation="include">
        </childnode>
        <childnode refid="32365" relation="include">
        </childnode>
        <childnode refid="32366" relation="include">
        </childnode>
        <childnode refid="32367" relation="include">
        </childnode>
        <childnode refid="32368" relation="include">
        </childnode>
        <childnode refid="32369" relation="include">
        </childnode>
        <childnode refid="32370" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_serval___x_udp_8h_1a6380f8cb8e35e4cb656dbf3cdf8f16f6" prot="public" static="no">
        <name>SERVAL_XUDP_MAX_LEN_APP_PAYLOAD</name>
        <initializer>256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is the length of the payload buffer of a XUDP message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h" line="49" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_serval___x_udp_8h_1a2d64ced3605ff4055199c05239046900" prot="public" static="no">
        <type>struct XUdpMsg_S</type>
        <definition>typedef struct XUdpMsg_S XUdpMsg_T</definition>
        <argsstring></argsstring>
        <name>XUdpMsg_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The data structure for messages of the generic proprietary UDP based application protocol XUDP.</para><para><simplesect kind="see"><para>struct XUdpMsg_S </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h" line="156" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___x_udp_8h_1affb8d1d89fda6a7387a05dd55c259373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___msg___obsolete_8h_1a2d64ced3605ff4055199c05239046900" kindref="member">XUdpMsg_T</ref> *</type>
        <definition>XUdpMsg_T* Msg_getXUdpMsg</definition>
        <argsstring>(Msg_T *msg_ptr)</argsstring>
        <name>Msg_getXUdpMsg</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function provides a pointer to the structure holding XUDP message in the given Msg_T object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a Msg_T object. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer of type XUdpMsg_T to the required web message structure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___x_udp_8h_1a24ace4a6526ea29a32164473b2bab307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XUdp_getXUdpPayload</definition>
        <argsstring>(Msg_T *msg_ptr, uint8_t **payload_pptr, unsigned int *payloadLen_ptr)</argsstring>
        <name>XUdp_getXUdpPayload</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>payload_pptr</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>payloadLen_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>It returns the reference to the payload and the payload length of a XUDP message within a message.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a message which contains a XUDP message. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">payload_pptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference to the payload of the XUDP message.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">payloadLen_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the payload length of the XUDP message. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___x_udp_8h_1a1676963335ef348135756a1f8d11c834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XUdp_getXUdpPeer</definition>
        <argsstring>(Msg_T *msg_ptr, Ip_Address_T *ipAddress_ptr, uint16_t *port_ptr)</argsstring>
        <name>XUdp_getXUdpPeer</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>ipAddress_ptr</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>port_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>It returns the IP address and the port of a XUDP message within a message.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a message which contains a XUDP message. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ipAddress_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference to the IP address of a XUDP message within a message.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">port_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The port of the XUDP message within a message. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___x_udp_8h_1a439790c5572b427b270cf5f54999a363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t XUdp_initialize</definition>
        <argsstring>(void)</argsstring>
        <name>XUdp_initialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>It initializes the XUDP protocol including all needed modules.</para><para><simplesect kind="return"><para>RC_OK on success or <linebreak/>
 RC_XUDP_INIT_ERROR on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___x_udp_8h_1a053de6e93d868295acd0b915f49f02ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t XUdp_push</definition>
        <argsstring>(Ip_Address_T *destIp_ptr, uint16_t destPort, uint8_t const *payload_ptr, unsigned int len, AppCallback_T appCallback, Msg_T **msg_pptr)</argsstring>
        <name>XUdp_push</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>destIp_ptr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>destPort</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>payload_ptr</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="_serval___msg_8h_1ab0a54c0b450f8d11fca98eb4bfbbbb8a" kindref="member">AppCallback_T</ref></type>
          <declname>appCallback</declname>
        </param>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> **</type>
          <declname>msg_pptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>It pushes the application data via UDP to the assigned destination IP address and port.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destIp_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference of the destination IP address.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">destPort</parametername>
</parameternamelist>
<parameterdescription>
<para>The port of the destination.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">payload_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the buffer which contains the payload of a XUDP message.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the payload. The payload must not be longer than SERVAL_XUDP_MAX_LEN_APP_PAYLOAD.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>The application callback which will be invoked after finishing the sending in order to notify the application about success or failure of the sending.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">msg_pptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference to the message which was sent. The reference must not be used after the application callback (which is invoked after finishing sending) has finished its task.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success <linebreak/>
 RC_XUDP_PAYLOAD_TOO_LARGE if the length of the payload is larger than SERVAL_XUDP_MAX_LEN_APP_PAYLOAD RC_XUDP_ASLEEP if the stack, and consequently XUDP, is not active. RC_XUDP_OVERLOADED if no free message struct is available to accept the new sending job RC_XUDP_MSG_FACTORY_OVERFLOW if there is a problem to construct the message payload to be sent RC_XUDP_SENDING_ERROR if an error occurs while trying to send the message</para></simplesect>
<simplesect kind="see"><para>OperationControl_isActive() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___x_udp_8h_1aca5239944979ff454249fe1f75fffebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t XUdp_start</definition>
        <argsstring>(Ip_Port_T serverPort, AppCallback_T appRecCallback)</argsstring>
        <name>XUdp_start</name>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>serverPort</declname>
        </param>
        <param>
          <type><ref refid="_serval___msg_8h_1ab0a54c0b450f8d11fca98eb4bfbbbb8a" kindref="member">AppCallback_T</ref></type>
          <declname>appRecCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>It starts listening on the specified port number for UDP packets.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">serverPort</parametername>
</parameternamelist>
<parameterdescription>
<para>The port which is used to send and receive messages. It has to be a valid port number (!=0).</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appRecCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>The application callback function which should be called when a message is received. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success or <linebreak/>
 RC_XUDP_SOCKET_ACTIVE if listening was already started before. RC_XUDP_SOCKET_ERROR if opening the UDP socket fails. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___x_udp_8h_1a9a454d9ff12c771c34c444245dbbfc25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XUdpMsg_setAppCallback</definition>
        <argsstring>(Msg_T *msg_ptr, AppCallback_T appCallback)</argsstring>
        <name>XUdpMsg_setAppCallback</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___msg_8h_1ab0a54c0b450f8d11fca98eb4bfbbbb8a" kindref="member">AppCallback_T</ref></type>
          <declname>appCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to initialize application callback defined by application to inform it of some event.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a Msg_T object which holds the current message. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">appCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a AppCallback_T object, this holds the application callback to be called to inform application about the success or failure of response.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="since"><para>1.3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h" line="87" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The interface description of an proprietary UDP based application protocol.</para><para>This UDP based application protocol enabled the application to push application specific data over UDP to some target receiver. The application data is assigned as raw message as well as the payload which is sent to the application by a communication partner. The length of the payload has to be provided by the application. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">#ifndef<sp/>SERVAL_XUDP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_XUDP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___defines_8h" kindref="compound">Serval_Defines.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_XUDP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___types_8h" kindref="compound">Serval_Types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_p_ip_8h" kindref="compound">PIp.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___msg_8h" kindref="compound">Serval_Msg.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Parameters<sp/>for<sp/>XUDP<sp/>application<sp/>layer<sp/>protocol</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor">#ifndef<sp/>SERVAL_XUDP_MAX_LEN_APP_PAYLOAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="_serval___x_udp_8h_1a6380f8cb8e35e4cb656dbf3cdf8f16f6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_XUDP_MAX_LEN_APP_PAYLOAD<sp/><sp/><sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_POLICY_REMOVE_SPECIALIZED_ACCESSORS_FROM_MSG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="_serval___x_udp_8h_1a2d64ced3605ff4055199c05239046900" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">XUdpMsg_S<sp/><ref refid="_serval___msg___obsolete_8h_1a2d64ced3605ff4055199c05239046900" kindref="member">XUdpMsg_T</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="_serval___msg___obsolete_8h_1a2d64ced3605ff4055199c05239046900" kindref="member">XUdpMsg_T</ref>*<sp/><ref refid="_serval___x_udp_8h_1affb8d1d89fda6a7387a05dd55c259373" kindref="member">Msg_getXUdpMsg</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref>*<sp/>msg_ptr);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_POLICY_REMOVE_SPECIALIZED_ACCESSORS_FROM_MSG_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___x_udp_8h_1a9a454d9ff12c771c34c444245dbbfc25" kindref="member">XUdpMsg_setAppCallback</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/><ref refid="_serval___msg_8h_1ab0a54c0b450f8d11fca98eb4bfbbbb8a" kindref="member">AppCallback_T</ref><sp/>appCallback);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___x_udp_8h_1a439790c5572b427b270cf5f54999a363" kindref="member">XUdp_initialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___x_udp_8h_1aca5239944979ff454249fe1f75fffebe" kindref="member">XUdp_start</ref>(<ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>serverPort,<sp/><ref refid="_serval___msg_8h_1ab0a54c0b450f8d11fca98eb4bfbbbb8a" kindref="member">AppCallback_T</ref><sp/>appRecCallback);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___x_udp_8h_1a053de6e93d868295acd0b915f49f02ac" kindref="member">XUdp_push</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*destIp_ptr,<sp/>uint16_t<sp/>destPort,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*payload_ptr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/><ref refid="_serval___msg_8h_1ab0a54c0b450f8d11fca98eb4bfbbbb8a" kindref="member">AppCallback_T</ref><sp/>appCallback,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>**msg_pptr);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___x_udp_8h_1a24ace4a6526ea29a32164473b2bab307" kindref="member">XUdp_getXUdpPayload</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/>uint8_t<sp/>**payload_pptr,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*payloadLen_ptr);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___x_udp_8h_1a1676963335ef348135756a1f8d11c834" kindref="member">XUdp_getXUdpPeer</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*ipAddress_ptr,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>*port_ptr);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_XUDP_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h"/>
  </compounddef>
</doxygen>
