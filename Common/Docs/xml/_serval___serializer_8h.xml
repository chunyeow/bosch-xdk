<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___serializer_8h" kind="file">
    <compoundname>Serval_Serializer.h</compoundname>
    <includes refid="_serval___defines_8h" local="no">Serval_Defines.h</includes>
    <includes refid="_serval___types_8h" local="no">Serval_Types.h</includes>
    <includes refid="_serval___string_descr_8h" local="no">Serval_StringDescr.h</includes>
    <incdepgraph>
      <node id="31530">
        <label>stdbool.h</label>
      </node>
      <node id="31523">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="31524" relation="include">
        </childnode>
        <childnode refid="31564" relation="include">
        </childnode>
      </node>
      <node id="31534">
        <label>stdarg.h</label>
      </node>
      <node id="31561">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="31552" relation="include">
        </childnode>
      </node>
      <node id="31546">
        <label>list.h</label>
      </node>
      <node id="31548">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="31549" relation="include">
        </childnode>
        <childnode refid="31528" relation="include">
        </childnode>
        <childnode refid="31527" relation="include">
        </childnode>
      </node>
      <node id="31565">
        <label>Serval_StringDescr.h</label>
        <link refid="_serval___string_descr_8h"/>
        <childnode refid="31523" relation="include">
        </childnode>
      </node>
      <node id="31526">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="31527" relation="include">
        </childnode>
      </node>
      <node id="31529">
        <label>stdint.h</label>
      </node>
      <node id="31527">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="31528" relation="include">
        </childnode>
      </node>
      <node id="31532">
        <label>stdlib.h</label>
      </node>
      <node id="31564">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="31540">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="31521">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h</label>
        <link refid="Serval_Serializer.h"/>
        <childnode refid="31522" relation="include">
        </childnode>
        <childnode refid="31523" relation="include">
        </childnode>
        <childnode refid="31565" relation="include">
        </childnode>
      </node>
      <node id="31543">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="31544" relation="include">
        </childnode>
      </node>
      <node id="31551">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="31553">
        <label>user.h</label>
      </node>
      <node id="31547">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="31527" relation="include">
        </childnode>
        <childnode refid="31548" relation="include">
        </childnode>
        <childnode refid="31551" relation="include">
        </childnode>
      </node>
      <node id="31554">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="31552" relation="include">
        </childnode>
      </node>
      <node id="31538">
        <label>stddef.h</label>
      </node>
      <node id="31556">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="31552" relation="include">
        </childnode>
      </node>
      <node id="31536">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="31537" relation="include">
        </childnode>
        <childnode refid="31539" relation="include">
        </childnode>
        <childnode refid="31543" relation="include">
        </childnode>
        <childnode refid="31545" relation="include">
        </childnode>
      </node>
      <node id="31525">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="31526" relation="include">
        </childnode>
        <childnode refid="31528" relation="include">
        </childnode>
        <childnode refid="31533" relation="include">
        </childnode>
        <childnode refid="31534" relation="include">
        </childnode>
        <childnode refid="31535" relation="include">
        </childnode>
        <childnode refid="31532" relation="include">
        </childnode>
        <childnode refid="31523" relation="include">
        </childnode>
        <childnode refid="31536" relation="include">
        </childnode>
        <childnode refid="31547" relation="include">
        </childnode>
        <childnode refid="31552" relation="include">
        </childnode>
      </node>
      <node id="31533">
        <label>limits.h</label>
      </node>
      <node id="31542">
        <label>portable.h</label>
      </node>
      <node id="31550">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="31531">
        <label>string.h</label>
      </node>
      <node id="31549">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="31550" relation="include">
        </childnode>
        <childnode refid="31527" relation="include">
        </childnode>
      </node>
      <node id="31528">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="31529" relation="include">
        </childnode>
        <childnode refid="31530" relation="include">
        </childnode>
        <childnode refid="31531" relation="include">
        </childnode>
        <childnode refid="31532" relation="include">
        </childnode>
      </node>
      <node id="31541">
        <label>projdefs.h</label>
      </node>
      <node id="31563">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="31562">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="31552" relation="include">
        </childnode>
      </node>
      <node id="31522">
        <label>Serval_Defines.h</label>
        <link refid="_serval___defines_8h"/>
      </node>
      <node id="31558">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="31552" relation="include">
        </childnode>
      </node>
      <node id="31544">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="31559">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="31552" relation="include">
        </childnode>
      </node>
      <node id="31557">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="31552" relation="include">
        </childnode>
      </node>
      <node id="31545">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="31546" relation="include">
        </childnode>
      </node>
      <node id="31560">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="31552" relation="include">
        </childnode>
      </node>
      <node id="31539">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="31529" relation="include">
        </childnode>
        <childnode refid="31526" relation="include">
        </childnode>
        <childnode refid="31540" relation="include">
        </childnode>
      </node>
      <node id="31524">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="31525" relation="include">
        </childnode>
      </node>
      <node id="31537">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="31538" relation="include">
        </childnode>
        <childnode refid="31529" relation="include">
        </childnode>
        <childnode refid="31539" relation="include">
        </childnode>
        <childnode refid="31541" relation="include">
        </childnode>
        <childnode refid="31542" relation="include">
        </childnode>
      </node>
      <node id="31535">
        <label>stdio.h</label>
      </node>
      <node id="31555">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="31552" relation="include">
        </childnode>
      </node>
      <node id="31552">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="31553" relation="include">
        </childnode>
        <childnode refid="31554" relation="include">
        </childnode>
        <childnode refid="31555" relation="include">
        </childnode>
        <childnode refid="31556" relation="include">
        </childnode>
        <childnode refid="31557" relation="include">
        </childnode>
        <childnode refid="31558" relation="include">
        </childnode>
        <childnode refid="31559" relation="include">
        </childnode>
        <childnode refid="31560" relation="include">
        </childnode>
        <childnode refid="31561" relation="include">
        </childnode>
        <childnode refid="31562" relation="include">
        </childnode>
        <childnode refid="31563" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___serializer_8h_1a2ad093a5727e3b9e67717e858d7ffdbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeBool</definition>
        <argsstring>(StringDescr_T const *str_ptr, bool *value_ptr)</argsstring>
        <name>Serializer_deserializeBool</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function converts a string into the bool data type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The String Descriptor object that has the value desired</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to variable where the resulting value will be stored</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_DESERIALIZE_ERROR given string does not match &quot;1&quot;, &quot;0&quot;, &quot;true&quot;, &quot;false&quot; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1a0471428f6efc9515fe3a99a50461d8fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeDouble</definition>
        <argsstring>(StringDescr_T const *str_ptr, double *value_ptr)</argsstring>
        <name>Serializer_deserializeDouble</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function converts a string into the double data type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The String Descriptor object that has the value desired</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to variable where the resulting value will be stored</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_DESERIALIZE_ERROR given string too long<linebreak/>
 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1a037d6d350abeb8bea227a403f3025a9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeFloat</definition>
        <argsstring>(StringDescr_T const *str_ptr, float *value_ptr)</argsstring>
        <name>Serializer_deserializeFloat</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function converts a string into the float data type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The String Descriptor object that has the value desired</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to variable where the resulting value will be stored</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_DESERIALIZE_ERROR given string too long<linebreak/>
 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1aab55f1c25b0f17ec6dfdd9a61ae426d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeInt16</definition>
        <argsstring>(StringDescr_T const *str_ptr, int16_t *value_ptr)</argsstring>
        <name>Serializer_deserializeInt16</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1a14034f56f3449723dbebbd071672d63b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeInt32</definition>
        <argsstring>(StringDescr_T const *str_ptr, int32_t *value_ptr)</argsstring>
        <name>Serializer_deserializeInt32</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1a4b5550dbd38341e680ab3ca01efa5554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeInt64</definition>
        <argsstring>(StringDescr_T const *str_ptr, int64_t *value_ptr)</argsstring>
        <name>Serializer_deserializeInt64</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function converts a string into integer data type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The String Descriptor object that has the value desired</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to variable where the resulting value will be stored</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_DESERIALIZE_ERROR given string too long<linebreak/>
 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1ac26da869b0ef9e364fae2070bb07234e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeInt8</definition>
        <argsstring>(StringDescr_T const *str_ptr, int8_t *value_ptr)</argsstring>
        <name>Serializer_deserializeInt8</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1a47ab93388281142a34c8c24cf57576c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeString</definition>
        <argsstring>(StringDescr_T const *str_ptr, char buf[], uint32_t bufSize)</argsstring>
        <name>Serializer_deserializeString</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>char</type>
          <declname>buf</declname>
          <array>[]</array>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bufSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function copies a string into the given buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The String Descriptor object that has the value desired</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer where the resulting value will be stored</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_DESERIALIZE_ERROR given string too long<linebreak/>
 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1afaaefe355f7087a6aab017574113e287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeUint16</definition>
        <argsstring>(StringDescr_T const *str_ptr, uint16_t *value_ptr)</argsstring>
        <name>Serializer_deserializeUint16</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1ada67eb910088b529e0bc1ecf6756f5e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeUint32</definition>
        <argsstring>(StringDescr_T const *str_ptr, uint32_t *value_ptr)</argsstring>
        <name>Serializer_deserializeUint32</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1acb81ff41dd0ba3b48246e003978b889d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeUint64</definition>
        <argsstring>(StringDescr_T const *str_ptr, uint64_t *value_ptr)</argsstring>
        <name>Serializer_deserializeUint64</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1a6233fb3a27949218c4c764c88c3dea97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_deserializeUint8</definition>
        <argsstring>(StringDescr_T const *str_ptr, uint8_t *value_ptr)</argsstring>
        <name>Serializer_deserializeUint8</name>
        <param>
          <type><ref refid="_serval___string_descr_8h_1ad82afa1f45d8b5df018f5f1f7707c3bd" kindref="member">StringDescr_T</ref> const *</type>
          <declname>str_ptr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>value_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_serialize</definition>
        <argsstring>(char *buf_ptr, int bufSize, int *len_ptr, const char *format,...)</argsstring>
        <name>Serializer_serialize</name>
        <param>
          <type>char *</type>
          <declname>buf_ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufSize</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len_ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function writes data to a buffer in a printf-like fashion.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to which given value should be written</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">len_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes written</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>The format of the data (specified like for printf()) and followed by the data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success<linebreak/>
 RC_MSG_FACTORY_INCOMPLETE given buffer is too small<linebreak/>
 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="77" column="1"/>
        <referencedby refid="_serval___serializer_8h_1ae1e232875cafa757fe422b4066418cca" compoundref="_serval___serializer_8h" startline="99" endline="103">Serializer_serializeBool</referencedby>
        <referencedby refid="_serval___serializer_8h_1a7d5c81698f73feb1f124fe37a4c5d748" compoundref="_serval___serializer_8h" startline="124" endline="128">Serializer_serializeInt</referencedby>
        <referencedby refid="_serval___serializer_8h_1ae34ed487b9b24617fb5d2ca3c4623a39" compoundref="_serval___serializer_8h" startline="151" endline="155">Serializer_serializeLong</referencedby>
        <referencedby refid="_serval___serializer_8h_1ad0f050496e80c53014c250f723defc08" compoundref="_serval___serializer_8h" startline="177" endline="181">Serializer_serializeFloat</referencedby>
        <referencedby refid="_serval___serializer_8h_1ae751166633d63e1051b53cdf5afdf3c1" compoundref="_serval___serializer_8h" startline="203" endline="207">Serializer_serializeString</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1ae1e232875cafa757fe422b4066418cca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>static retcode_t Serializer_serializeBool</definition>
        <argsstring>(bool value, char *buf_ptr, int bufSize, int *len_ptr)</argsstring>
        <name>Serializer_serializeBool</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf_ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufSize</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function writes a bool, a primitive data type, into a given buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to write to buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to which given value should be written</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">len_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes written</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success<linebreak/>
 RC_MSG_FACTORY_INCOMPLETE given buffer is too small<linebreak/>
 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="99" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" bodystart="99" bodyend="103"/>
        <references refid="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8">Serializer_serialize</references>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1ad0f050496e80c53014c250f723defc08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>static retcode_t Serializer_serializeFloat</definition>
        <argsstring>(float value, char *buf_ptr, int bufSize, int *len_ptr)</argsstring>
        <name>Serializer_serializeFloat</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf_ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufSize</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function writes a float, a primitive data type, into a given buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to write to buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to which given value should be written</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">len_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes written</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_MSG_FACTORY_INCOMPLETE given buffer is too small<linebreak/>
 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="177" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" bodystart="177" bodyend="181"/>
        <references refid="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8">Serializer_serialize</references>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1a7d5c81698f73feb1f124fe37a4c5d748" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>static retcode_t Serializer_serializeInt</definition>
        <argsstring>(int value, char *buf_ptr, int bufSize, int *len_ptr)</argsstring>
        <name>Serializer_serializeInt</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf_ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufSize</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function writes a integer, a primitive data type, into a given buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to write to buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to which given value should be written</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">len_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes written</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_MSG_FACTORY_INCOMPLETE given buffer is too small<linebreak/>
 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="124" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" bodystart="124" bodyend="128"/>
        <references refid="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8">Serializer_serialize</references>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1ae34ed487b9b24617fb5d2ca3c4623a39" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>static retcode_t Serializer_serializeLong</definition>
        <argsstring>(int64_t value, char *buf_ptr, int bufSize, int *len_ptr)</argsstring>
        <name>Serializer_serializeLong</name>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf_ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufSize</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function writes a long integer, a primitive data type, into a given buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to write to buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to which given value should be written</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">len_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes written</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_MSG_FACTORY_INCOMPLETE buffer was too small<linebreak/>
 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="151" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" bodystart="151" bodyend="155"/>
        <references refid="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8">Serializer_serialize</references>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1ae751166633d63e1051b53cdf5afdf3c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>static retcode_t Serializer_serializeString</definition>
        <argsstring>(char const *value, char *buf_ptr, int bufSize, int *len_ptr)</argsstring>
        <name>Serializer_serializeString</name>
        <param>
          <type>char const *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf_ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufSize</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function writes a string into a given buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to write to buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buf_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to which given value should be written</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">len_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes written</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_MSG_FACTORY_INCOMPLETE given buffer is too small<linebreak/>
 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="203" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" bodystart="203" bodyend="207"/>
        <references refid="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8">Serializer_serialize</references>
      </memberdef>
      <memberdef kind="function" id="_serval___serializer_8h_1a8ea82b2e7ed535fb0913b36eb524ca92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Serializer_vserialize</definition>
        <argsstring>(char *buf_ptr, int bufSize, int *len_ptr, const char *format, va_list args)</argsstring>
        <name>Serializer_vserialize</name>
        <param>
          <type>char *</type>
          <declname>buf_ptr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufSize</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>len_ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="group___l_o_g_g_i_n_g_1gaf53f622e3b6c080daeb167c1955d7ec1" kindref="member">va_list</ref></type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function writes data to a buffer in a printf-like fashion.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buf_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to which given value should be written</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bufSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">len_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes written</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">format</parametername>
</parameternamelist>
<parameterdescription>
<para>The format of the data (specified like for printf()) and followed by the data</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of data parameters for the given format.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success<linebreak/>
 RC_MSG_FACTORY_INCOMPLETE given buffer is too small<linebreak/>
 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h" line="54" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Serializer Module</para><para>This interface provides functions for the serialization and de-serialization of various data type. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor">#ifndef<sp/>SERVAL_SERIALIZER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_SERIALIZER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___defines_8h" kindref="compound">Serval_Defines.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_SERIALIZER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___types_8h" kindref="compound">Serval_Types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___string_descr_8h" kindref="compound">Serval_StringDescr.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1a8ea82b2e7ed535fb0913b36eb524ca92" kindref="member">Serializer_vserialize</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf_ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufSize,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/><ref refid="group___l_o_g_g_i_n_g_1gaf53f622e3b6c080daeb167c1955d7ec1" kindref="member">va_list</ref><sp/>args);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8" kindref="member">Serializer_serialize</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf_ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufSize,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>...);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="_serval___serializer_8h_1ae1e232875cafa757fe422b4066418cca" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1ae1e232875cafa757fe422b4066418cca" kindref="member">Serializer_serializeBool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf_ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufSize,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len_ptr)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8" kindref="member">Serializer_serialize</ref>(buf_ptr,<sp/>bufSize,<sp/>len_ptr,<sp/>value<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="_serval___serializer_8h_1a7d5c81698f73feb1f124fe37a4c5d748" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1a7d5c81698f73feb1f124fe37a4c5d748" kindref="member">Serializer_serializeInt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf_ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufSize,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len_ptr)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8" kindref="member">Serializer_serialize</ref>(buf_ptr,<sp/>bufSize,<sp/>len_ptr,<sp/></highlight><highlight class="stringliteral">&quot;%i&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="_serval___serializer_8h_1ae34ed487b9b24617fb5d2ca3c4623a39" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1ae34ed487b9b24617fb5d2ca3c4623a39" kindref="member">Serializer_serializeLong</ref>(int64_t<sp/><ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf_ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufSize,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len_ptr)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8" kindref="member">Serializer_serialize</ref>(buf_ptr,<sp/>bufSize,<sp/>len_ptr,<sp/></highlight><highlight class="stringliteral">&quot;%lli&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="_serval___serializer_8h_1ad0f050496e80c53014c250f723defc08" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1ad0f050496e80c53014c250f723defc08" kindref="member">Serializer_serializeFloat</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf_ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufSize,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len_ptr)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8" kindref="member">Serializer_serialize</ref>(buf_ptr,<sp/>bufSize,<sp/>len_ptr,<sp/></highlight><highlight class="stringliteral">&quot;%g&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>value);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="_serval___serializer_8h_1ae751166633d63e1051b53cdf5afdf3c1" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1ae751166633d63e1051b53cdf5afdf3c1" kindref="member">Serializer_serializeString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="_b_l_e_s_w___cycling_power_01_release_notes_8txt_1a5cad1470ef119e32b6400227eeaa8b18" kindref="member">value</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf_ptr,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*len_ptr)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_serval___serializer_8h_1ac694df59ae4647a0cc0b081c9903d5f8" kindref="member">Serializer_serialize</ref>(buf_ptr,<sp/>bufSize,<sp/>len_ptr,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1a4b5550dbd38341e680ab3ca01efa5554" kindref="member">Serializer_deserializeInt64</ref>(<ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>*value_ptr);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1acb81ff41dd0ba3b48246e003978b889d" kindref="member">Serializer_deserializeUint64</ref>(<ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>*value_ptr);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1a14034f56f3449723dbebbd071672d63b" kindref="member">Serializer_deserializeInt32</ref>(</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,<sp/>int32_t<sp/>*value_ptr);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1ada67eb910088b529e0bc1ecf6756f5e4" kindref="member">Serializer_deserializeUint32</ref>(</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,<sp/>uint32_t<sp/>*value_ptr);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1aab55f1c25b0f17ec6dfdd9a61ae426d3" kindref="member">Serializer_deserializeInt16</ref>(</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,<sp/>int16_t<sp/>*value_ptr);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1afaaefe355f7087a6aab017574113e287" kindref="member">Serializer_deserializeUint16</ref>(</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,<sp/>uint16_t<sp/>*value_ptr);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1ac26da869b0ef9e364fae2070bb07234e" kindref="member">Serializer_deserializeInt8</ref>(</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,<sp/>int8_t<sp/>*value_ptr);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1a6233fb3a27949218c4c764c88c3dea97" kindref="member">Serializer_deserializeUint8</ref>(</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,<sp/>uint8_t<sp/>*value_ptr);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1a2ad093a5727e3b9e67717e858d7ffdbd" kindref="member">Serializer_deserializeBool</ref>(<ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*value_ptr);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1a037d6d350abeb8bea227a403f3025a9d" kindref="member">Serializer_deserializeFloat</ref>(<ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*value_ptr);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1a0471428f6efc9515fe3a99a50461d8fe" kindref="member">Serializer_deserializeDouble</ref>(<ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*value_ptr);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___serializer_8h_1a47ab93388281142a34c8c24cf57576c5" kindref="member">Serializer_deserializeString</ref>(<ref refid="struct_string_descr___s" kindref="compound">StringDescr_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*str_ptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[],</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>bufSize);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_SERIALIZER<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_SERIALIZER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Serializer.h"/>
  </compounddef>
</doxygen>
