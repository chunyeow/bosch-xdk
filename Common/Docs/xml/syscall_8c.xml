<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="syscall_8c" kind="file">
    <compoundname>syscall.c</compoundname>
    <includes refid="ff_8h" local="yes">../ff.h</includes>
    <incdepgraph>
      <node id="29232">
        <label>stdbool.h</label>
      </node>
      <node id="29229">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="29230" relation="include">
        </childnode>
      </node>
      <node id="29223">
        <label>ffconf.h</label>
        <link refid="ffconf_8h"/>
        <childnode refid="29224" relation="include">
        </childnode>
        <childnode refid="29225" relation="include">
        </childnode>
        <childnode refid="29238" relation="include">
        </childnode>
        <childnode refid="29240" relation="include">
        </childnode>
      </node>
      <node id="29230">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="29231" relation="include">
        </childnode>
      </node>
      <node id="29227">
        <label>stdint.h</label>
      </node>
      <node id="29234">
        <label>stdlib.h</label>
      </node>
      <node id="29235">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="29238">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="29239" relation="include">
        </childnode>
      </node>
      <node id="29222">
        <label>integer.h</label>
        <link refid="integer_8h"/>
      </node>
      <node id="29224">
        <label>diskio.h</label>
        <link refid="diskio_8h"/>
        <childnode refid="29222" relation="include">
        </childnode>
      </node>
      <node id="29226">
        <label>stddef.h</label>
      </node>
      <node id="29240">
        <label>BCDS_SDCard_Interface.h</label>
        <link refid="_b_c_d_s___s_d_card___interface_8h"/>
        <childnode refid="29227" relation="include">
        </childnode>
        <childnode refid="29241" relation="include">
        </childnode>
      </node>
      <node id="29237">
        <label>portable.h</label>
      </node>
      <node id="29233">
        <label>string.h</label>
      </node>
      <node id="29231">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="29227" relation="include">
        </childnode>
        <childnode refid="29232" relation="include">
        </childnode>
        <childnode refid="29233" relation="include">
        </childnode>
        <childnode refid="29234" relation="include">
        </childnode>
      </node>
      <node id="29236">
        <label>projdefs.h</label>
      </node>
      <node id="29239">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="29221">
        <label>../ff.h</label>
        <link refid="ff_8h"/>
        <childnode refid="29222" relation="include">
        </childnode>
        <childnode refid="29223" relation="include">
        </childnode>
      </node>
      <node id="29228">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="29227" relation="include">
        </childnode>
        <childnode refid="29229" relation="include">
        </childnode>
        <childnode refid="29235" relation="include">
        </childnode>
      </node>
      <node id="29220">
        <label>SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c</label>
        <link refid="syscall.c"/>
        <childnode refid="29221" relation="include">
        </childnode>
      </node>
      <node id="29241">
        <label>BCDS_SDCard_Driver.h</label>
        <link refid="_b_c_d_s___s_d_card___driver_8h"/>
        <childnode refid="29230" relation="include">
        </childnode>
      </node>
      <node id="29225">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="29226" relation="include">
        </childnode>
        <childnode refid="29227" relation="include">
        </childnode>
        <childnode refid="29228" relation="include">
        </childnode>
        <childnode refid="29236" relation="include">
        </childnode>
        <childnode refid="29237" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="syscall_8c_1a2593b7acfe680686184f9ecb1be50323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ff_cre_syncobj</definition>
        <argsstring>(BYTE vol, _SYNC_t *sobj)</argsstring>
        <name>ff_cre_syncobj</name>
        <param>
          <type><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref></type>
          <declname>vol</declname>
        </param>
        <param>
          <type><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref> *</type>
          <declname>sobj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" line="19" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" bodystart="19" bodyend="40"/>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_a_s_i_c_s_1gaa93f0eb578d23995850d61f7d61c55c1" compoundref="_b_c_d_s___basics_8h" startline="76">FALSE</references>
        <referencedby refid="group__filesystem_1ga16a934c2bbfa2160295810adc49d5509" compoundref="ff_8c" startline="2402" endline="2440">f_mount</referencedby>
      </memberdef>
      <memberdef kind="function" id="syscall_8c_1a9184443f4d0a50b0f9a7fdb241613119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ff_del_syncobj</definition>
        <argsstring>(_SYNC_t sobj)</argsstring>
        <name>ff_del_syncobj</name>
        <param>
          <type><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref></type>
          <declname>sobj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" line="52" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" bodystart="52" bodyend="70"/>
        <referencedby refid="group__filesystem_1ga16a934c2bbfa2160295810adc49d5509" compoundref="ff_8c" startline="2402" endline="2440">f_mount</referencedby>
      </memberdef>
      <memberdef kind="function" id="syscall_8c_1a5bb37b1d2ec72388812e11003f2b508a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ff_rel_grant</definition>
        <argsstring>(_SYNC_t sobj)</argsstring>
        <name>ff_rel_grant</name>
        <param>
          <type><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref></type>
          <declname>sobj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" line="107" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" bodystart="107" bodyend="118"/>
        <referencedby refid="ff_8c_1a58c93c453ba943336cd24aa185cd72cf" compoundref="ff_8c" startline="565" endline="577">unlock_fs</referencedby>
      </memberdef>
      <memberdef kind="function" id="syscall_8c_1aa0dd2bf38b270e6b39ff395f2d25a0ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ff_req_grant</definition>
        <argsstring>(_SYNC_t sobj)</argsstring>
        <name>ff_req_grant</name>
        <param>
          <type><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref></type>
          <declname>sobj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" line="81" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" bodystart="81" bodyend="97"/>
        <references refid="group___f_f_c_o_n_f_i_g_1ga526e3cac667f53cc9a48507873348e60" compoundref="ffconf_8h" startline="249">_FS_TIMEOUT</references>
        <referencedby refid="ff_8c_1af35d759ac2dbde3cef605901cab3a776" compoundref="ff_8c" startline="556" endline="561">lock_fs</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Sample<sp/>code<sp/>of<sp/>OS<sp/>dependent<sp/>controls<sp/>for<sp/>FatFs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>(C)ChaN,<sp/>2014<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ff.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_FS_REENTRANT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>Synchronization<sp/>Object</highlight></codeline>
<codeline lineno="13"><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>in<sp/>f_mount()<sp/>function<sp/>to<sp/>create<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="15"><highlight class="comment">/<sp/><sp/>synchronization<sp/>object,<sp/>such<sp/>as<sp/>semaphore<sp/>and<sp/>mutex.<sp/>When<sp/>a<sp/>0<sp/>is<sp/>returned,</highlight></codeline>
<codeline lineno="16"><highlight class="comment">/<sp/><sp/>the<sp/>f_mount()<sp/>function<sp/>fails<sp/>with<sp/>FR_INT_ERR.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="syscall_8c_1a2593b7acfe680686184f9ecb1be50323" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscall_8c_1a2593b7acfe680686184f9ecb1be50323" kindref="member">ff_cre_syncobj</ref><sp/>(<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>!=0:Function<sp/>succeeded,<sp/>==0:Could<sp/>not<sp/>create<sp/>due<sp/>to<sp/>any<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>vol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Corresponding<sp/>logical<sp/>drive<sp/>being<sp/>processed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref><sp/>*sobj<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>return<sp/>the<sp/>created<sp/>sync<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>*sobj<sp/>=<sp/>CreateMutex(<ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group___b_a_s_i_c_s_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Win32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>(int)(*sobj<sp/>!=<sp/>INVALID_HANDLE_VALUE);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*sobj<sp/>=<sp/>SyncObjects[vol];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>uITRON<sp/>(give<sp/>a<sp/>static<sp/>created<sp/>sync<sp/>object)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ret<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>The<sp/>initial<sp/>value<sp/>of<sp/>the<sp/>semaphore<sp/>must<sp/>be<sp/>1.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*sobj<sp/>=<sp/>OSMutexCreate(0,<sp/>&amp;err);<sp/><sp/><sp/><sp/><sp/>/*<sp/>uC/OS-II<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ret<sp/>=<sp/>(int)(err<sp/>==<sp/>OS_NO_ERR);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>*sobj<sp/>=<sp/>xSemaphoreCreateMutex();<sp/><sp/><sp/><sp/>/*<sp/>FreeRTOS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ret<sp/>=<sp/>(int)(*sobj<sp/>!=<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Delete<sp/>a<sp/>Synchronization<sp/>Object<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>in<sp/>f_mount()<sp/>function<sp/>to<sp/>delete<sp/>a<sp/>synchronization</highlight></codeline>
<codeline lineno="48"><highlight class="comment">/<sp/><sp/>object<sp/>that<sp/>created<sp/>with<sp/>ff_cre_syncobj<sp/>function.<sp/>When<sp/>a<sp/>0<sp/>is<sp/>returned,</highlight></codeline>
<codeline lineno="49"><highlight class="comment">/<sp/><sp/>the<sp/>f_mount()<sp/>function<sp/>fails<sp/>with<sp/>FR_INT_ERR.</highlight></codeline>
<codeline lineno="50"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="syscall_8c_1a9184443f4d0a50b0f9a7fdb241613119" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscall_8c_1a9184443f4d0a50b0f9a7fdb241613119" kindref="member">ff_del_syncobj</ref><sp/>(<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>!=0:Function<sp/>succeeded,<sp/>==0:Could<sp/>not<sp/>delete<sp/>due<sp/>to<sp/>any<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref><sp/>sobj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>object<sp/>tied<sp/>to<sp/>the<sp/>logical<sp/>drive<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>CloseHandle(sobj);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Win32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ret<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>uITRON<sp/>(nothing<sp/>to<sp/>do)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>OSMutexDel(sobj,<sp/>OS_DEL_ALWAYS,<sp/>&amp;err);<sp/><sp/>/*<sp/>uC/OS-II<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ret<sp/>=<sp/>(int)(err<sp/>==<sp/>OS_NO_ERR);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>vSemaphoreDelete(sobj);<sp/><sp/><sp/><sp/><sp/>/*<sp/>FreeRTOS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ret<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Request<sp/>Grant<sp/>to<sp/>Access<sp/>the<sp/>Volume<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>on<sp/>entering<sp/>file<sp/>functions<sp/>to<sp/>lock<sp/>the<sp/>volume.</highlight></codeline>
<codeline lineno="78"><highlight class="comment">/<sp/><sp/>When<sp/>a<sp/>0<sp/>is<sp/>returned,<sp/>the<sp/>file<sp/>function<sp/>fails<sp/>with<sp/>FR_TIMEOUT.</highlight></codeline>
<codeline lineno="79"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="syscall_8c_1aa0dd2bf38b270e6b39ff395f2d25a0ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="syscall_8c_1aa0dd2bf38b270e6b39ff395f2d25a0ed" kindref="member">ff_req_grant</ref><sp/>(<sp/><sp/></highlight><highlight class="comment">/*<sp/>1:Got<sp/>a<sp/>grant<sp/>to<sp/>access<sp/>the<sp/>volume,<sp/>0:Could<sp/>not<sp/>get<sp/>a<sp/>grant<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref><sp/>sobj<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>object<sp/>to<sp/>wait<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>(int)(WaitForSingleObject(sobj,<sp/><ref refid="group___f_f_c_o_n_f_i_g_1ga526e3cac667f53cc9a48507873348e60" kindref="member">_FS_TIMEOUT</ref>)<sp/>==<sp/>WAIT_OBJECT_0);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Win32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ret<sp/>=<sp/>(int)(wai_sem(sobj)<sp/>==<sp/>E_OK);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>uITRON<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>OSMutexPend(sobj,<sp/>_FS_TIMEOUT,<sp/>&amp;err));<sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>uC/OS-II<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ret<sp/>=<sp/>(int)(err<sp/>==<sp/>OS_NO_ERR);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ret<sp/>=<sp/>(int)(xSemaphoreTake(sobj,<sp/>_FS_TIMEOUT)<sp/>==<sp/>pdTRUE);<sp/><sp/><sp/>/*<sp/>FreeRTOS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Release<sp/>Grant<sp/>to<sp/>Access<sp/>the<sp/>Volume<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>on<sp/>leaving<sp/>file<sp/>functions<sp/>to<sp/>unlock<sp/>the<sp/>volume.</highlight></codeline>
<codeline lineno="105"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="syscall_8c_1a5bb37b1d2ec72388812e11003f2b508a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="syscall_8c_1a5bb37b1d2ec72388812e11003f2b508a" kindref="member">ff_rel_grant</ref><sp/>(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref><sp/>sobj<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sync<sp/>object<sp/>to<sp/>be<sp/>signaled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ReleaseMutex(sobj);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Win32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>sig_sem(sobj);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>uITRON<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>OSMutexPost(sobj);<sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>uC/OS-II<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>xSemaphoreGive(sobj);<sp/><sp/><sp/>/*<sp/>FreeRTOS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_USE_LFN<sp/>==<sp/>3<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LFN<sp/>with<sp/>a<sp/>working<sp/>buffer<sp/>on<sp/>the<sp/>heap<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Allocate<sp/>a<sp/>memory<sp/>block<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>If<sp/>a<sp/>NULL<sp/>is<sp/>returned,<sp/>the<sp/>file<sp/>function<sp/>fails<sp/>with<sp/>FR_NOT_ENOUGH_CORE.</highlight></codeline>
<codeline lineno="130"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ff_memalloc<sp/>(<sp/></highlight><highlight class="comment">/*<sp/>Returns<sp/>pointer<sp/>to<sp/>the<sp/>allocated<sp/>memory<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>msize<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>bytes<sp/>to<sp/>allocate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>malloc(msize);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>a<sp/>new<sp/>memory<sp/>block<sp/>with<sp/>POSIX<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Free<sp/>a<sp/>memory<sp/>block<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ff_memfree<sp/>(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mblock<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>memory<sp/>block<sp/>to<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>free(mblock);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Discard<sp/>the<sp/>memory<sp/>block<sp/>with<sp/>POSIX<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c"/>
  </compounddef>
</doxygen>
