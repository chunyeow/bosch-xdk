<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___rest_server_8h" kind="file">
    <compoundname>Serval_RestServer.h</compoundname>
    <includes refid="_serval___defines_8h" local="no">Serval_Defines.h</includes>
    <includes refid="_serval___rest_8h" local="no">Serval_Rest.h</includes>
    <includes refid="_serval___http_8h" local="no">Serval_Http.h</includes>
    <includes refid="_serval___security_8h" local="no">Serval_Security.h</includes>
    <incdepgraph>
      <node id="31373">
        <label>stdbool.h</label>
      </node>
      <node id="31366">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="31367" relation="include">
        </childnode>
        <childnode refid="31407" relation="include">
        </childnode>
      </node>
      <node id="31377">
        <label>stdarg.h</label>
      </node>
      <node id="31404">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="31395" relation="include">
        </childnode>
      </node>
      <node id="31389">
        <label>list.h</label>
      </node>
      <node id="31391">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="31392" relation="include">
        </childnode>
        <childnode refid="31371" relation="include">
        </childnode>
        <childnode refid="31370" relation="include">
        </childnode>
      </node>
      <node id="31410">
        <label>Serval_StringDescr.h</label>
        <link refid="_serval___string_descr_8h"/>
        <childnode refid="31366" relation="include">
        </childnode>
      </node>
      <node id="31369">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="31370" relation="include">
        </childnode>
      </node>
      <node id="31372">
        <label>stdint.h</label>
      </node>
      <node id="31370">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="31371" relation="include">
        </childnode>
      </node>
      <node id="31375">
        <label>stdlib.h</label>
      </node>
      <node id="31407">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="31409">
        <label>Serval_Policy.h</label>
        <link refid="_serval___policy_8h"/>
      </node>
      <node id="31383">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="31386">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="31387" relation="include">
        </childnode>
      </node>
      <node id="31394">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="31396">
        <label>user.h</label>
      </node>
      <node id="31390">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="31370" relation="include">
        </childnode>
        <childnode refid="31391" relation="include">
        </childnode>
        <childnode refid="31394" relation="include">
        </childnode>
      </node>
      <node id="31365">
        <label>Serval_Rest.h</label>
        <link refid="_serval___rest_8h"/>
        <childnode refid="31364" relation="include">
        </childnode>
        <childnode refid="31366" relation="include">
        </childnode>
        <childnode refid="31408" relation="include">
        </childnode>
        <childnode refid="31419" relation="include">
        </childnode>
        <childnode refid="31411" relation="include">
        </childnode>
      </node>
      <node id="31363">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h</label>
        <link refid="Serval_RestServer.h"/>
        <childnode refid="31364" relation="include">
        </childnode>
        <childnode refid="31365" relation="include">
        </childnode>
        <childnode refid="31408" relation="include">
        </childnode>
        <childnode refid="31420" relation="include">
        </childnode>
      </node>
      <node id="31397">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="31395" relation="include">
        </childnode>
      </node>
      <node id="31414">
        <label>Serval_Callable.h</label>
        <link refid="_serval___callable_8h"/>
        <childnode refid="31366" relation="include">
        </childnode>
        <childnode refid="31415" relation="include">
        </childnode>
      </node>
      <node id="31420">
        <label>Serval_Security.h</label>
        <link refid="_serval___security_8h"/>
        <childnode refid="31364" relation="include">
        </childnode>
        <childnode refid="31411" relation="include">
        </childnode>
        <childnode refid="31367" relation="include">
        </childnode>
        <childnode refid="31421" relation="include">
        </childnode>
      </node>
      <node id="31421">
        <label>Serval_MsgSendingCtx.h</label>
        <link refid="_serval___msg_sending_ctx_8h"/>
        <childnode refid="31409" relation="include">
        </childnode>
      </node>
      <node id="31381">
        <label>stddef.h</label>
      </node>
      <node id="31399">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="31395" relation="include">
        </childnode>
      </node>
      <node id="31379">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="31380" relation="include">
        </childnode>
        <childnode refid="31382" relation="include">
        </childnode>
        <childnode refid="31386" relation="include">
        </childnode>
        <childnode refid="31388" relation="include">
        </childnode>
      </node>
      <node id="31368">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="31369" relation="include">
        </childnode>
        <childnode refid="31371" relation="include">
        </childnode>
        <childnode refid="31376" relation="include">
        </childnode>
        <childnode refid="31377" relation="include">
        </childnode>
        <childnode refid="31378" relation="include">
        </childnode>
        <childnode refid="31375" relation="include">
        </childnode>
        <childnode refid="31366" relation="include">
        </childnode>
        <childnode refid="31379" relation="include">
        </childnode>
        <childnode refid="31390" relation="include">
        </childnode>
        <childnode refid="31395" relation="include">
        </childnode>
      </node>
      <node id="31376">
        <label>limits.h</label>
      </node>
      <node id="31411">
        <label>Serval_Msg.h</label>
        <link refid="_serval___msg_8h"/>
        <childnode refid="31364" relation="include">
        </childnode>
        <childnode refid="31366" relation="include">
        </childnode>
        <childnode refid="31410" relation="include">
        </childnode>
        <childnode refid="31412" relation="include">
        </childnode>
        <childnode refid="31413" relation="include">
        </childnode>
        <childnode refid="31414" relation="include">
        </childnode>
        <childnode refid="31416" relation="include">
        </childnode>
        <childnode refid="31409" relation="include">
        </childnode>
        <childnode refid="31418" relation="include">
        </childnode>
      </node>
      <node id="31408">
        <label>Serval_Http.h</label>
        <link refid="_serval___http_8h"/>
        <childnode refid="31364" relation="include">
        </childnode>
        <childnode refid="31409" relation="include">
        </childnode>
        <childnode refid="31366" relation="include">
        </childnode>
        <childnode refid="31410" relation="include">
        </childnode>
        <childnode refid="31411" relation="include">
        </childnode>
      </node>
      <node id="31385">
        <label>portable.h</label>
      </node>
      <node id="31393">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="31374">
        <label>string.h</label>
      </node>
      <node id="31392">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="31393" relation="include">
        </childnode>
        <childnode refid="31370" relation="include">
        </childnode>
      </node>
      <node id="31415">
        <label>Serval_StructCtx.h</label>
        <link refid="_serval___struct_ctx_8h"/>
        <childnode refid="31381" relation="include">
        </childnode>
      </node>
      <node id="31371">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="31372" relation="include">
        </childnode>
        <childnode refid="31373" relation="include">
        </childnode>
        <childnode refid="31374" relation="include">
        </childnode>
        <childnode refid="31375" relation="include">
        </childnode>
      </node>
      <node id="31418">
        <label>Serval_Msg_Obsolete.h</label>
        <link refid="_serval___msg___obsolete_8h"/>
        <childnode refid="31366" relation="include">
        </childnode>
        <childnode refid="31409" relation="include">
        </childnode>
        <childnode refid="31411" relation="include">
        </childnode>
      </node>
      <node id="31416">
        <label>Serval_Ip.h</label>
        <link refid="_serval___ip_8h"/>
        <childnode refid="31417" relation="include">
        </childnode>
        <childnode refid="31366" relation="include">
        </childnode>
      </node>
      <node id="31384">
        <label>projdefs.h</label>
      </node>
      <node id="31406">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="31417">
        <label>PIp.h</label>
        <link refid="_p_ip_8h"/>
        <childnode refid="31370" relation="include">
        </childnode>
      </node>
      <node id="31405">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="31395" relation="include">
        </childnode>
      </node>
      <node id="31413">
        <label>Serval_Filesystem.h</label>
        <link refid="_serval___filesystem_8h"/>
        <childnode refid="31366" relation="include">
        </childnode>
      </node>
      <node id="31364">
        <label>Serval_Defines.h</label>
        <link refid="_serval___defines_8h"/>
      </node>
      <node id="31419">
        <label>Serval_Coap.h</label>
        <link refid="_serval___coap_8h"/>
        <childnode refid="31364" relation="include">
        </childnode>
        <childnode refid="31409" relation="include">
        </childnode>
      </node>
      <node id="31401">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="31395" relation="include">
        </childnode>
      </node>
      <node id="31387">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="31402">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="31395" relation="include">
        </childnode>
      </node>
      <node id="31412">
        <label>Serval_XmlParser.h</label>
        <link refid="_serval___xml_parser_8h"/>
        <childnode refid="31410" relation="include">
        </childnode>
      </node>
      <node id="31400">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="31395" relation="include">
        </childnode>
      </node>
      <node id="31388">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="31389" relation="include">
        </childnode>
      </node>
      <node id="31403">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="31395" relation="include">
        </childnode>
      </node>
      <node id="31382">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="31372" relation="include">
        </childnode>
        <childnode refid="31369" relation="include">
        </childnode>
        <childnode refid="31383" relation="include">
        </childnode>
      </node>
      <node id="31367">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="31368" relation="include">
        </childnode>
      </node>
      <node id="31380">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="31381" relation="include">
        </childnode>
        <childnode refid="31372" relation="include">
        </childnode>
        <childnode refid="31382" relation="include">
        </childnode>
        <childnode refid="31384" relation="include">
        </childnode>
        <childnode refid="31385" relation="include">
        </childnode>
      </node>
      <node id="31378">
        <label>stdio.h</label>
      </node>
      <node id="31398">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="31395" relation="include">
        </childnode>
      </node>
      <node id="31395">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="31396" relation="include">
        </childnode>
        <childnode refid="31397" relation="include">
        </childnode>
        <childnode refid="31398" relation="include">
        </childnode>
        <childnode refid="31399" relation="include">
        </childnode>
        <childnode refid="31400" relation="include">
        </childnode>
        <childnode refid="31401" relation="include">
        </childnode>
        <childnode refid="31402" relation="include">
        </childnode>
        <childnode refid="31403" relation="include">
        </childnode>
        <childnode refid="31404" relation="include">
        </childnode>
        <childnode refid="31405" relation="include">
        </childnode>
        <childnode refid="31406" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_rest_resource___s" prot="public">RestResource_S</innerclass>
    <innerclass refid="struct_rest_server___resp_info___s" prot="public">RestServer_RespInfo_S</innerclass>
    <innerclass refid="struct_rest_settings___s" prot="public">RestSettings_S</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_serval___rest_server_8h_1a363fd03247fa8fc5f10107ee5c88b1bc" prot="public" static="no">
        <name>SERVAL_ENABLE_REST_SECURE_SERVER</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines if the secure REST server instance should be enabled. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="35" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_serval___rest_server_8h_1a50bed526972f3892e99a48942206f378" prot="public" static="no">
        <type>struct <ref refid="struct_rest_resource___s" kindref="compound">RestResource_S</ref></type>
        <definition>typedef struct RestResource_S RestResource_T</definition>
        <argsstring></argsstring>
        <name>RestResource_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type for a resource meta data. <simplesect kind="see"><para>struct <ref refid="struct_rest_resource___s" kindref="compound">RestResource_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="91" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___rest_server_8h_1a2f7059bce77659122ed20f9d5eaa1eff" prot="public" static="no">
        <type>struct <ref refid="struct_rest_server___resp_info___s" kindref="compound">RestServer_RespInfo_S</ref></type>
        <definition>typedef struct RestServer_RespInfo_S  RestServer_RespInfo_T</definition>
        <argsstring></argsstring>
        <name>RestServer_RespInfo_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This data structure holds the data of a REST response. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___rest_server_8h_1a87af1ceb9641a974a5a53a555896317a" prot="public" static="no">
        <type><ref refid="_serval___rest_server_8h_1a50bed526972f3892e99a48942206f378" kindref="member">RestResource_T</ref> const *(*</type>
        <definition>typedef RestResource_T const*(* RestServer_TraversalFunc_T)(RestSettings_T const *, RestServer_VisitorFunc_T, void *)</definition>
        <argsstring>)(RestSettings_T const *, RestServer_VisitorFunc_T, void *)</argsstring>
        <name>RestServer_TraversalFunc_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is a function pointer data type for traversal function of the RESTful resources. It traverses the resources and applies the given visitor function to each resource. The traversal terminates when the visitor function returns true. In this case, the corresponding resource is returned. Otherwise, NULL is returned. Notice that a void pointer might be given as a parameter to be passed to the visitor function. This pointer maybe used to reference to any structure needed by the visitor function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="126" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___rest_server_8h_1afec91b42c5a377eea22829f774f6be5b" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* RestServer_VisitorFunc_T)(RestResource_T const *, void *)</definition>
        <argsstring>)(RestResource_T const *, void *)</argsstring>
        <name>RestServer_VisitorFunc_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is function pointer data type for visitor functions, which are used along with the traversal function of the RESTful resources. <simplesect kind="see"><para><ref refid="_serval___rest_server_8h_1a87af1ceb9641a974a5a53a555896317a" kindref="member">RestServer_TraversalFunc_T</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="114" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___rest_server_8h_1a7d18a4a1d25fca791d0b6d5d9ca66330" prot="public" static="no">
        <type>struct <ref refid="struct_rest_settings___s" kindref="compound">RestSettings_S</ref></type>
        <definition>typedef struct RestSettings_S RestSettings_T</definition>
        <argsstring></argsstring>
        <name>RestSettings_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This data type represents a REST service.</para><para><simplesect kind="see"><para>struct <ref refid="struct_rest_settings___s" kindref="compound">RestSettings_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="91" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___rest_server_8h_1acb78b29382fc5a0c6eb9a23911f2272e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t RestServer_closeSecureConn</definition>
        <argsstring>(Ip_Address_T *peerAddr_ptr, Ip_Port_T peerPort)</argsstring>
        <name>RestServer_closeSecureConn</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>peerAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>peerPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function close and disconnect an existing secure COAP connection.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ip address of the remote server socket</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peerPort</parametername>
</parameternamelist>
<parameterdescription>
<para>port number of the remote server socket</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>when error code available On success, RC_OK is returned. <linebreak/>
 RC_REST_SECURE_CONNECTION_ERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___rest_server_8h_1a6600758b018b5dee06645194dbb0c7c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t RestServer_fillRespMsg</definition>
        <argsstring>(Msg_T *msg_ptr, RestServer_RespInfo_T const *responseInfo_ptr)</argsstring>
        <name>RestServer_fillRespMsg</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___rest_server_8h_1a2f7059bce77659122ed20f9d5eaa1eff" kindref="member">RestServer_RespInfo_T</ref> const *</type>
          <declname>responseInfo_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes the response into the given message using the given response info.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the message to be used for the response.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">responseInfo_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the response infos to be used for the response</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success <linebreak/>
 RC_REST_CREATE_RESPONSE_ERROR if an error occurs creating the response.</para></simplesect>
<simplesect kind="see"><para><ref refid="_serval___rest_server_8h_1a2f7059bce77659122ed20f9d5eaa1eff" kindref="member">RestServer_RespInfo_T</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___rest_server_8h_1ae847f91c80031c9b570854a5f7ee5047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t RestServer_getSecureConnError</definition>
        <argsstring>(Ip_Address_T *peerAddr_ptr, Ip_Port_T peerPort, retcode_t *rc_ptr)</argsstring>
        <name>RestServer_getSecureConnError</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>peerAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>peerPort</declname>
        </param>
        <param>
          <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref> *</type>
          <declname>rc_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function reports the errors of a secure connection</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned ip address of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peerPort</parametername>
</parameternamelist>
<parameterdescription>
<para>returned port number of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rc_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>status of this connection</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>On success, RC_OK is returned.<linebreak/>
 RC_REST_SECURE_CONNECTION_ERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___rest_server_8h_1ae07c6316b1c3e6f23dee90472c7b875a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t RestServer_getSecureConnState</definition>
        <argsstring>(Ip_Address_T *peerAddr_ptr, Ip_Port_T peerPort, SecureConnectionState_T *state_ptr)</argsstring>
        <name>RestServer_getSecureConnState</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>peerAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>peerPort</declname>
        </param>
        <param>
          <type><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305" kindref="member">SecureConnectionState_T</ref> *</type>
          <declname>state_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function reports the status of a secure connection</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned ip address of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peerPort</parametername>
</parameternamelist>
<parameterdescription>
<para>returned port number of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">state_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>status of this connection</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>On success, RC_OK is returned.<linebreak/>
 RC_REST_SECURE_CONNECTION_ERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___rest_server_8h_1a73a3bd0321945d2b4d5469b9d40c759b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t RestServer_initialize</definition>
        <argsstring>(void)</argsstring>
        <name>RestServer_initialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes the REST server including all needed used modules.</para><para><simplesect kind="return"><para>RC_OK if successful<linebreak/>
 RC_REST_SERVER_INIT_ERROR if the initialization of the REST server module fails. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___rest_server_8h_1aa6489004d6b869a05c2b0aa9ac79dacb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RestServer_iterateSecureConnections</definition>
        <argsstring>(int16_t *iterator_ptr, bool onlyWithError, Ip_Address_T *ipAddr_ptr, Ip_Port_T *port_ptr)</argsstring>
        <name>RestServer_iterateSecureConnections</name>
        <param>
          <type>int16_t *</type>
          <declname>iterator_ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlyWithError</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>ipAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref> *</type>
          <declname>port_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function reports the secure connections.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">iterator_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator for this function. Initialized to -1 it reports the first connection. The next returned values will report the next connections. if -1 returns, no more connections are assigned to this socket. Example: int16_t iter = -1; while(1) { rc = _getSecureConnection(&amp;iter,...); if(iter &lt; 0) break; do_some_thing(...); }</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">onlyWithError</parametername>
</parameternamelist>
<parameterdescription>
<para>true -&gt; report only connections with failures. false -&gt; report all connections</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ipAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned ip address of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">port_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned port number of the connection endpoint </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___rest_server_8h_1a57b6906a48f5a8d36471532660f2162e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t RestServer_respond</definition>
        <argsstring>(Msg_T *msg_ptr)</argsstring>
        <name>RestServer_respond</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends the response</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A reference to the response message to be sent.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK on success <linebreak/>
 RC_REST_SERVER_SEND_ERROR if an error occurs. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___rest_server_8h_1a4b68d25bd2f05a0ada92b9a9bd35c019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t RestServer_startInstance</definition>
        <argsstring>(RestSettings_T *restService_ptr)</argsstring>
        <name>RestServer_startInstance</name>
        <param>
          <type><ref refid="_serval___rest_server_8h_1a7d18a4a1d25fca791d0b6d5d9ca66330" kindref="member">RestSettings_T</ref> *</type>
          <declname>restService_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to start the default REST server</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">restService_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the connection and port to be handled</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK if successful<linebreak/>
 RC_REST_SERVER_LISTEN_ERROR if the listening for the server fails. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___rest_server_8h_1addbba22824e760108e3e3651ac3a4100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t RestServer_startSecureInstance</definition>
        <argsstring>(RestSettings_T *restService_ptr)</argsstring>
        <name>RestServer_startSecureInstance</name>
        <param>
          <type><ref refid="_serval___rest_server_8h_1a7d18a4a1d25fca791d0b6d5d9ca66330" kindref="member">RestSettings_T</ref> *</type>
          <declname>restService_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to start the secure REST server</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">restService_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the connection and port to be handled</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK if successful<linebreak/>
 RC_REST_SERVER_LISTEN_ERROR if the listening for the server fails. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h" line="263" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>REST Server Module</para><para>The interface description of the REST Server. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#ifndef<sp/>SERVAL_RESTSERVER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_RESTSERVER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___defines_8h" kindref="compound">Serval_Defines.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_REST_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___rest_8h" kindref="compound">Serval_Rest.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_REST_HTTP_BINDING<sp/>&amp;&amp;<sp/>SERVAL_ENABLE_HTTP_AUTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___http_8h" kindref="compound">Serval_Http.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor">#if<sp/>(SERVAL_ENABLE_REST_COAP_BINDING<sp/>&amp;&amp;<sp/>SERVAL_ENABLE_DTLS_SERVER)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(SERVAL_ENABLE_REST_HTTP_BINDING<sp/>&amp;&amp;<sp/>SERVAL_ENABLE_TLS_SERVER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="_serval___rest_server_8h_1a363fd03247fa8fc5f10107ee5c88b1bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_ENABLE_REST_SECURE_SERVER<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_ENABLE_REST_SECURE_SERVER<sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_REST_HTTP_BINDING<sp/>&amp;&amp;<sp/>SERVAL_ENABLE_TLS_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//#error<sp/>HTTP<sp/>Server<sp/>with<sp/>TLS<sp/>is<sp/>currently<sp/>not<sp/>supported</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_REST_SECURE_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___security_8h" kindref="compound">Serval_Security.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_REST_SERVER_OBSERVATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(!SERVAL_ENABLE_REST_COAP_BINDING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#warning<sp/>SERVAL_ENABLE_REST_SERVER_OBSERVATION<sp/>defined<sp/>without<sp/>CoAP<sp/>binding<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___coap_8h" kindref="compound">Serval_Coap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(!SERVAL_ENABLE_COAP_OBSERVE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>SERVAL_ENABLE_COAP_OBSERVE<sp/>must<sp/>be<sp/>enabled<sp/>for<sp/>REST<sp/>Observations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="_serval___rest_server_8h_1a7d18a4a1d25fca791d0b6d5d9ca66330" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_rest_settings___s" kindref="compound">RestSettings_S</ref><sp/><ref refid="struct_rest_settings___s" kindref="compound">RestSettings_T</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="struct_rest_resource___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_rest_resource___s" kindref="compound">RestResource_S</ref></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70" refid="struct_rest_resource___s_1a11e1f3d7a4f0e971371413110fc799fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_rest_resource___s_1a11e1f3d7a4f0e971371413110fc799fd" kindref="member">url</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="struct_rest_resource___s_1a5e561c8d4f1e93eb2f1c389308d7edc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_rest_resource___s_1a5e561c8d4f1e93eb2f1c389308d7edc0" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="struct_rest_resource___s_1a10d054ffd362faa39fcc60442d81f148" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_rest_resource___s_1a10d054ffd362faa39fcc60442d81f148" kindref="member">interface</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="struct_rest_resource___s_1ae0e04a2718c865cc4902c235c2e9edb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="struct_rest_resource___s_1ae0e04a2718c865cc4902c235c2e9edb0" kindref="member">handle</ref>)(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_REST_SERVER_OBSERVATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>observer;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>A<sp/>callback<sp/>pointer<sp/>to<sp/>CoAP<sp/>notification<sp/>function.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@since<sp/>1.4</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_callable___s" kindref="compound">Callable_T</ref><sp/>notificationCallback;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="_serval___rest_server_8h_1a50bed526972f3892e99a48942206f378" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_rest_resource___s" kindref="compound">RestResource_S</ref><sp/><ref refid="struct_rest_resource___s" kindref="compound">RestResource_T</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="_serval___rest_server_8h_1afec91b42c5a377eea22829f774f6be5b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*<ref refid="_serval___rest_server_8h_1afec91b42c5a377eea22829f774f6be5b" kindref="member">RestServer_VisitorFunc_T</ref>)(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_rest_resource___s" kindref="compound">RestResource_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="_serval___rest_server_8h_1a87af1ceb9641a974a5a53a555896317a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><ref refid="struct_rest_resource___s" kindref="compound">RestResource_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*(*RestServer_TraversalFunc_T)(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_rest_settings___s" kindref="compound">RestSettings_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*,<sp/><ref refid="_serval___rest_server_8h_1afec91b42c5a377eea22829f774f6be5b" kindref="member">RestServer_VisitorFunc_T</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="struct_rest_settings___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_rest_settings___s" kindref="compound">RestSettings_S</ref></highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136" refid="struct_rest_settings___s_1a2c984d24a339e6346e31828d5aa97eed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_rest_settings___s_1a2c984d24a339e6346e31828d5aa97eed" kindref="member">coapServiceEnabled</ref>:1;</highlight></codeline>
<codeline lineno="138" refid="struct_rest_settings___s_1a6f982df0429c57f52682d0c4da6150e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_rest_settings___s_1a6f982df0429c57f52682d0c4da6150e4" kindref="member">httpServiceEnabled</ref>:1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pad<sp/>to<sp/>align<sp/>on<sp/>8<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="struct_rest_settings___s_1a8b4eebe79ded0459acec2f4950102ba3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t:6;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_REST_COAP_BINDING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="struct_rest_settings___s_1a242e7dada11b4f397ce6e8ec792611b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/><ref refid="struct_rest_settings___s_1a242e7dada11b4f397ce6e8ec792611b1" kindref="member">coapPort</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_REST_HTTP_BINDING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="struct_rest_settings___s_1ac3ab181e3cd4eea6ad4141838ec07a8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/><ref refid="struct_rest_settings___s_1ac3ab181e3cd4eea6ad4141838ec07a8e" kindref="member">httpPort</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_HTTP_AUTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="struct_rest_settings___s_1a0ff847d20d6e33452b145cc9b2138761" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_http_realm___s" kindref="compound">HttpRealm_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>**<sp/><ref refid="struct_rest_settings___s_1a0ff847d20d6e33452b145cc9b2138761" kindref="member">authTable</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="struct_rest_settings___s_1a3dce5e20e550c8626a5f703076dc2559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___rest_server_8h_1a87af1ceb9641a974a5a53a555896317a" kindref="member">RestServer_TraversalFunc_T</ref><sp/><ref refid="struct_rest_settings___s_1a3dce5e20e550c8626a5f703076dc2559" kindref="member">traverse</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="struct_rest_server___resp_info___s" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_rest_server___resp_info___s" kindref="compound">RestServer_RespInfo_S</ref></highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169" refid="struct_rest_server___resp_info___s_1aff9fb174aa8fcc298ae9983db1e8cd3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_rest_server___resp_info___s_1aff9fb174aa8fcc298ae9983db1e8cd3c" kindref="member">payload_ptr</ref>;</highlight></codeline>
<codeline lineno="171" refid="struct_rest_server___resp_info___s_1a1e4ca5601f9d3ac4063684a1638f0b57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___rest_8h_1af8aa3c2c3b1f2cd28f40b3f66c1db3f7" kindref="member">RestPayloadLength_t</ref><sp/><sp/><ref refid="struct_rest_server___resp_info___s_1a1e4ca5601f9d3ac4063684a1638f0b57" kindref="member">payloadLen</ref>;</highlight></codeline>
<codeline lineno="173" refid="struct_rest_server___resp_info___s_1a237d9f915e64202a8c45a34b820b56e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___rest_8h_1a4357f451decb439bd02d758c1b0e0b8b" kindref="member">Rest_ContentFormat_T</ref><sp/><ref refid="struct_rest_server___resp_info___s_1a237d9f915e64202a8c45a34b820b56e2" kindref="member">contentFormat</ref>;</highlight></codeline>
<codeline lineno="175" refid="struct_rest_server___resp_info___s_1ae27c47dd4e9afd5c5551812e022ea0c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_rest_server___resp_info___s_1ae27c47dd4e9afd5c5551812e022ea0c3" kindref="member">locationPath</ref>;</highlight></codeline>
<codeline lineno="177" refid="struct_rest_server___resp_info___s_1a700b1ea4b91528d2a75d0d8f128aafe1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_rest_server___resp_info___s_1a700b1ea4b91528d2a75d0d8f128aafe1" kindref="member">locationQuery</ref>;</highlight></codeline>
<codeline lineno="179" refid="struct_rest_server___resp_info___s_1a2e95a09741c121241790b66f8296870c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___rest_8h_1a0e15d7b65ce3bccdce46bf1d1201ac8a" kindref="member">Rest_Code_T</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_rest_server___resp_info___s_1a2e95a09741c121241790b66f8296870c" kindref="member">responseCode</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}<sp/><ref refid="_serval___rest_server_8h_1a2f7059bce77659122ed20f9d5eaa1eff" kindref="member">RestServer_RespInfo_T</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___rest_server_8h_1a73a3bd0321945d2b4d5469b9d40c759b" kindref="member">RestServer_initialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___rest_server_8h_1a4b68d25bd2f05a0ada92b9a9bd35c019" kindref="member">RestServer_startInstance</ref>(<ref refid="struct_rest_settings___s" kindref="compound">RestSettings_T</ref><sp/>*restService_ptr);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___rest_server_8h_1a6600758b018b5dee06645194dbb0c7c2" kindref="member">RestServer_fillRespMsg</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref>*<sp/>msg_ptr,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_rest_server___resp_info___s" kindref="compound">RestServer_RespInfo_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*responseInfo_ptr);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___rest_server_8h_1a57b6906a48f5a8d36471532660f2162e" kindref="member">RestServer_respond</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref>*<sp/>msg_ptr);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_REST_SERVER_OBSERVATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>RestServer_resourceChanged(<ref refid="struct_rest_resource___s" kindref="compound">RestResource_T</ref>*<sp/>resource_ptr);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_REST_SECURE_SERVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___rest_server_8h_1addbba22824e760108e3e3651ac3a4100" kindref="member">RestServer_startSecureInstance</ref>(<ref refid="struct_rest_settings___s" kindref="compound">RestSettings_T</ref><sp/>*restService_ptr);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___rest_server_8h_1acb78b29382fc5a0c6eb9a23911f2272e" kindref="member">RestServer_closeSecureConn</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*peerAddr_ptr,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>peerPort);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___rest_server_8h_1aa6489004d6b869a05c2b0aa9ac79dacb" kindref="member">RestServer_iterateSecureConnections</ref>(int16_t<sp/>*iterator_ptr,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyWithError,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*ipAddr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>*port_ptr);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___rest_server_8h_1ae847f91c80031c9b570854a5f7ee5047" kindref="member">RestServer_getSecureConnError</ref>(</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*peerAddr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>peerPort,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>*rc_ptr);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___rest_server_8h_1ae07c6316b1c3e6f23dee90472c7b875a" kindref="member">RestServer_getSecureConnState</ref>(</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*peerAddr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>peerPort,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305" kindref="member">SecureConnectionState_T</ref><sp/>*state_ptr);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_REST_SECURE_SERVER<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_REST_SERVER<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_RESTSERVER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h"/>
  </compounddef>
</doxygen>
