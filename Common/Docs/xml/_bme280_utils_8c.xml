<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_bme280_utils_8c" kind="file">
    <compoundname>Bme280Utils.c</compoundname>
    <includes refid="_b_c_d_s___sensor_utils_8h" local="yes">BCDS_SensorUtils.h</includes>
    <includes refid="_b_c_d_s___bme280_utils_8h" local="yes">BCDS_Bme280Utils.h</includes>
    <includes refid="_b_c_d_s___i2_c_transceiver_8h" local="yes">BCDS_I2CTransceiver.h</includes>
    <includes refid="_b_c_d_s___b_s_p___board_8h" local="yes">BCDS_BSP_Board.h</includes>
    <includes refid="_sensor_node_mapping_8h" local="yes">SensorNodeMapping.h</includes>
    <includes refid="bme280_8h" local="no">bme280.h</includes>
    <incdepgraph>
      <node id="38505">
        <label>stdbool.h</label>
      </node>
      <node id="38511">
        <label>BCDS_HALConfig.h</label>
        <link refid="_b_c_d_s___h_a_l_config_8h"/>
      </node>
      <node id="38509">
        <label>BCDS_BSP_SensorNode.h</label>
        <link refid="_b_c_d_s___b_s_p___sensor_node_8h"/>
        <childnode refid="38510" relation="include">
        </childnode>
      </node>
      <node id="38504">
        <label>stdint.h</label>
      </node>
      <node id="38502">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="38503" relation="include">
        </childnode>
      </node>
      <node id="38507">
        <label>stdlib.h</label>
      </node>
      <node id="38512">
        <label>BCDS_I2CTransceiver.h</label>
        <link refid="_b_c_d_s___i2_c_transceiver_8h"/>
        <childnode refid="38513" relation="include">
        </childnode>
        <childnode refid="38502" relation="include">
        </childnode>
        <childnode refid="38510" relation="include">
        </childnode>
      </node>
      <node id="38508">
        <label>BCDS_Bme280Utils.h</label>
        <link refid="_b_c_d_s___bme280_utils_8h"/>
        <childnode refid="38509" relation="include">
        </childnode>
      </node>
      <node id="38500">
        <label>SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c</label>
        <link refid="Bme280Utils.c"/>
        <childnode refid="38501" relation="include">
        </childnode>
        <childnode refid="38508" relation="include">
        </childnode>
        <childnode refid="38512" relation="include">
        </childnode>
        <childnode refid="38515" relation="include">
        </childnode>
        <childnode refid="38516" relation="include">
        </childnode>
        <childnode refid="38517" relation="include">
        </childnode>
      </node>
      <node id="38514">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="38506">
        <label>string.h</label>
      </node>
      <node id="38513">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="38514" relation="include">
        </childnode>
        <childnode refid="38502" relation="include">
        </childnode>
      </node>
      <node id="38516">
        <label>SensorNodeMapping.h</label>
        <link refid="_sensor_node_mapping_8h"/>
        <childnode refid="38503" relation="include">
        </childnode>
      </node>
      <node id="38503">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="38504" relation="include">
        </childnode>
        <childnode refid="38505" relation="include">
        </childnode>
        <childnode refid="38506" relation="include">
        </childnode>
        <childnode refid="38507" relation="include">
        </childnode>
      </node>
      <node id="38501">
        <label>BCDS_SensorUtils.h</label>
        <link refid="_b_c_d_s___sensor_utils_8h"/>
        <childnode refid="38502" relation="include">
        </childnode>
      </node>
      <node id="38510">
        <label>BCDS_HAL.h</label>
        <link refid="_b_c_d_s___h_a_l_8h"/>
        <childnode refid="38502" relation="include">
        </childnode>
        <childnode refid="38511" relation="include">
        </childnode>
      </node>
      <node id="38515">
        <label>BCDS_BSP_Board.h</label>
        <link refid="_b_c_d_s___b_s_p___board_8h"/>
        <childnode refid="38510" relation="include">
        </childnode>
      </node>
      <node id="38517">
        <label>bme280.h</label>
        <link refid="bme280_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_bme280_utils_8c_1abff8f3a204e79671b98fabaa652198c3" prot="public" static="no">
        <name>BCDS_MODULE_ID</name>
        <initializer><ref refid="group___s_e_n_s_o_r___u_t_i_l_s_1ggaba1885b5f54a444c5604d7c229527edbadf4578f0f5faff426135d694525b1117" kindref="member">BCDS_SENSORUTILS_ID_BME280</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" line="42" column="10" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_bme280_utils_8c_1aadd982b9290bd0dfa1865f72efb00910" prot="public" static="no">
        <name>DELAY_100MS</name>
        <initializer>UINT32_C(100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>macro used to represent 100ms delay variable to check initialization status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" line="54" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" bodystart="54" bodyend="-1"/>
        <referencedby refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" compoundref="_bme280_utils_8c" startline="104" endline="175">Bme280Utils_initialize</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_bme280_utils_8c_1a5baf7abdbad3564c580729e88a785002" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structbme280__t" kindref="compound">bme280_t</ref></type>
        <definition>struct bme280_t bme280Initialization</definition>
        <argsstring></argsstring>
        <name>bme280Initialization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" line="57" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" bodystart="60" bodyend="-1"/>
        <referencedby refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" compoundref="_bme280_utils_8c" startline="104" endline="175">Bme280Utils_initialize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_bme280_utils_8c_1af2cc74878676abb62a86f1ac7db56447" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool initializationStatus</definition>
        <argsstring></argsstring>
        <name>initializationStatus</name>
        <initializer>= <ref refid="_serval___types_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BME280 initialization structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" line="57" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" bodystart="57" bodyend="-1"/>
        <referencedby refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" compoundref="_bme280_utils_8c" startline="104" endline="175">Bme280Utils_initialize</referencedby>
        <referencedby refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1ga73ff7abf2a4ec0d356224fcb44160e58" compoundref="_bme280_utils_8c" startline="178" endline="205">Bme280Utils_uninitialize</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_bme280_utils_8c_1a1f802e8836f61a3b09cd7645b72a8f57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Bme280Utils_DelayMS</definition>
        <argsstring>(BME280_MDELAY_DATA_TYPE delayMS)</argsstring>
        <name>Bme280Utils_DelayMS</name>
        <param>
          <type><ref refid="bme280_8h_1a1262876575ecf7113503040b22890d8d" kindref="member">BME280_MDELAY_DATA_TYPE</ref></type>
          <declname>delayMS</declname>
        </param>
        <briefdescription>
<para>Function to provide a delay. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delayMS</parametername>
</parameternamelist>
<parameterdescription>
<para>Delay in milliseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" line="96" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" bodystart="96" bodyend="99"/>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___board_1ga3c12de2d1d4a59f5a1c9794e88ff6608" compoundref="_b_s_p___board_8c" startline="412" endline="419">BSP_Board_Delay</references>
        <referencedby refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" compoundref="_bme280_utils_8c" startline="104" endline="175">Bme280Utils_initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Bme280Utils_initialize</definition>
        <argsstring>(Bme280Utils_InfoPtr_T bme280Info)</argsstring>
        <name>Bme280Utils_initialize</name>
        <param>
          <type><ref refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gabeeef2ae41ad0b1fe1c9c2e9f5f9f418" kindref="member">Bme280Utils_InfoPtr_T</ref></type>
          <declname>bme280Info</declname>
        </param>
        <briefdescription>
<para>Function to initialize Environmental.This needs to be called before calling any other API. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bme280Info</parametername>
</parameternamelist>
<parameterdescription>
<para>:structure holding the bme280 specific configurations</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>BME280 initialized successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when bma280Info is NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___s_e_n_s_o_r___u_t_i_l_s_1ggadb78aed5ac68b65e2fec1ca81ba8f13ea6e58ef167cfeaa21fe57f2a05380aab7" kindref="member">RETCODE_LIB_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when any of the input parameter for BST library API is NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___s_e_n_s_o_r___u_t_i_l_s_1ggadb78aed5ac68b65e2fec1ca81ba8f13ea98d0f0b8627babc28ceed653138241a0" kindref="member">RETCODE_BST_BME280_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when error is returned from BST library API. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gabed20789ada55c303bb4ef8e0669a4ac" kindref="member">RETCODE_DOPPLE_INITIALIZATION</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>When initialization is already done.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>In case of other failures refer <ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga311d37af892ea5672b90ddac5d658440" kindref="member">BSP_SensorNode_Enable</ref> or #I2CSensorTransceiver_Init API&apos;s.</para></simplesect>
<simplesect kind="note"><para>1) The return value consist of (First MSB Byte represents Package ID,Next Byte represents Severity and Last 2LSB Bytes represents error code). </para></simplesect>
<simplesect kind="note"><para>2) The support of multiple instances is not possible due to the limitation in the BST library. </para></simplesect>
<simplesect kind="note"><para>3) Calling Bme280 initialization API present in sensorUtils (Bme280Utils_initialize) and BST library (bme280_init) concurrently will lead to unexpected behaviour. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" line="104" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" bodystart="104" bodyend="175"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" compoundref="_b_c_d_s___retcode_8h" startline="106">RETCODE_FAILURE</references>
        <references refid="bme280_8h_1aff6cb592895879d1a30dfd2bc5cc9bfa" compoundref="bme280_8h" startline="439">BME280_RETURN_FUNCTION_TYPE</references>
        <references refid="bme280_8h_1ac426fcb3224851f81a5567f3535a0127" compoundref="bme280_8h" startline="482">E_BME280_OUT_OF_RANGE</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6acec8ccdc2bb7d9c1e4806729ea2acb76" compoundref="_b_c_d_s___retcode_8h" startline="130">RETCODE_SEVERITY_FATAL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" compoundref="_b_c_d_s___retcode_8h" startline="112">RETCODE_NULL_POINTER</references>
        <references refid="_bme280_utils_8c_1af2cc74878676abb62a86f1ac7db56447" compoundref="_bme280_utils_8c" startline="57">initializationStatus</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6ae50e23ac22de65b64de1424dd9663a3f" compoundref="_b_c_d_s___retcode_8h" startline="132">RETCODE_SEVERITY_WARNING</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gabed20789ada55c303bb4ef8e0669a4ac" compoundref="_b_c_d_s___retcode_8h" startline="93">RETCODE_DOPPLE_INITIALIZATION</references>
        <references refid="_sensor_node_mapping_8c_1a76bdc1fd6f340a0a598dadddb9ab278a" compoundref="_sensor_node_mapping_8c" startline="62" endline="88">SensorNodeMapping_Init</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga311d37af892ea5672b90ddac5d658440" compoundref="_b_s_p___sensor_node_8c" startline="206" endline="519">BSP_SensorNode_Enable</references>
        <references refid="struct_bme280_utils___info___s_1afb8d35b33d31d052c1ff16de62ba1014" compoundref="_b_c_d_s___bme280_utils_8h" startline="61">Bme280Utils_Info_S::BspSensorId</references>
        <references refid="_bme280_utils_8c_1a5baf7abdbad3564c580729e88a785002" compoundref="_bme280_utils_8c" startline="60">bme280Initialization</references>
        <references refid="_sensor_node_mapping_8c_1a77b5d6036b31e0f795e5167c9435db6c" compoundref="_sensor_node_mapping_8c" startline="102" endline="110">SensorNodeMapping_Read</references>
        <references refid="_sensor_node_mapping_8c_1ac656d2e1648f159bb70e26e1666a94c3" compoundref="_sensor_node_mapping_8c" startline="91" endline="100">SensorNodeMapping_Write</references>
        <references refid="structbme280__t_1a15edad4d7490bca77abbee44bd881f07" compoundref="bme280_8h" startline="842">bme280_t::delay_msec</references>
        <references refid="_bme280_utils_8c_1a1f802e8836f61a3b09cd7645b72a8f57" compoundref="_bme280_utils_8c" startline="96" endline="99">Bme280Utils_DelayMS</references>
        <references refid="structbme280__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bme280_8h" startline="831">bme280_t::dev_addr</references>
        <references refid="struct_bme280_utils___info___s_1a1997a5306d6d04a9ce867303d1a6d9e1" compoundref="_b_c_d_s___bme280_utils_8h" startline="62">Bme280Utils_Info_S::dev_addr</references>
        <references refid="bme280_8c_1afe1efe4d59845dc99d34d0a863263968" compoundref="bme280_8c" startline="82" endline="117">bme280_init</references>
        <references refid="bma2x2_8h_1aa90cac659d18e8ef6294c7ae337f6b58" compoundref="bma2x2_8h" startline="458">SUCCESS</references>
        <references refid="bme280_8c_1ae75ab9162b5954c32a1c76341f42f9ab" compoundref="bme280_8c" startline="829" endline="895">bme280_set_oversamp_temperature</references>
        <references refid="bme280_8h_1a05967ed78460d980bda3ab61596cf44a" compoundref="bme280_8h" startline="520">BME280_OVERSAMP_1X</references>
        <references refid="bme280_8c_1a2c12aba4c68f08f6bba65f5e7c1811bc" compoundref="bme280_8c" startline="968" endline="1034">bme280_set_oversamp_pressure</references>
        <references refid="bme280_8h_1a976874b3e3db2acf54f50b655dc57154" compoundref="bme280_8h" startline="522">BME280_OVERSAMP_4X</references>
        <references refid="bme280_8c_1a5ea582184696b23e4a8e46fd2c5880c4" compoundref="bme280_8c" startline="1121" endline="1193">bme280_set_oversamp_humidity</references>
        <references refid="bme280_8h_1ac22e6bb8c580a32fbbb5cb2d58018f55" compoundref="bme280_8h" startline="521">BME280_OVERSAMP_2X</references>
        <references refid="bme280_8c_1a5380f107ca4f174e3fe74076a3572c14" compoundref="bme280_8c" startline="1681" endline="1744">bme280_set_standby_durn</references>
        <references refid="bme280_8h_1abda2854c877d0ab552b0d3a5e92ce06a" compoundref="bme280_8h" startline="510">BME280_STANDBY_TIME_125_MS</references>
        <references refid="bme280_8c_1a910a9800cc9b3d7b50e7aac6ded2666e" compoundref="bme280_8c" startline="1250" endline="1324">bme280_set_power_mode</references>
        <references refid="bme280_8h_1a8a9c2aa9289d646803badb7d7fdbd5cb" compoundref="bme280_8h" startline="503">BME280_NORMAL_MODE</references>
        <references refid="_bme280_utils_8c_1a6f79016de257c5e6301e4b227de01ea8" compoundref="_bme280_utils_8c" startline="72" endline="90">libErrorMapping</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___board_1ga3c12de2d1d4a59f5a1c9794e88ff6608" compoundref="_b_s_p___board_8c" startline="412" endline="419">BSP_Board_Delay</references>
        <references refid="_bme280_utils_8c_1aadd982b9290bd0dfa1865f72efb00910" compoundref="_bme280_utils_8c" startline="54">DELAY_100MS</references>
        <referencedby refid="group___e_n_v_i_r_o_n_m_e_n_t_a_l_1ga9081d552aa95071cee5d1924c5cfa8aa" compoundref="_environmental_8c" startline="257" endline="295">Environmental_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1ga73ff7abf2a4ec0d356224fcb44160e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Bme280Utils_uninitialize</definition>
        <argsstring>(Bme280Utils_InfoPtr_T bme280Info)</argsstring>
        <name>Bme280Utils_uninitialize</name>
        <param>
          <type><ref refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gabeeef2ae41ad0b1fe1c9c2e9f5f9f418" kindref="member">Bme280Utils_InfoPtr_T</ref></type>
          <declname>bme280Info</declname>
        </param>
        <briefdescription>
<para>Function to uninitialize Environmental.After calling this API sensor is no more usable without initializing it again by calling <ref refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" kindref="member">Bme280Utils_initialize()</ref> API. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bme280Info</parametername>
</parameternamelist>
<parameterdescription>
<para>:structure holding the bme280 specific configurations</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>BME280 un-initialization success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when bme280Info is NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbaea901b927978b56cbfae3fa93c3ddfa4" kindref="member">RETCODE_UNINITIALIZED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when this api is called before initializing Bme280 sensor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>In case of other failures refer <ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga5af05449409434d39749e474f3c1096c" kindref="member">BSP_SensorNode_Disable</ref> or <ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga0d143eb863c1549f0433cfe3e852bd77" kindref="member">BSP_SensorNode_IsAllNodesDisabled</ref> or #I2CSensorTransceiver_Deinit API.</para></simplesect>
<simplesect kind="note"><para>The return value consist of (First MSB Byte represents Package ID,Next Byte represents Severity and Last 2LSB Bytes represents error code). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" line="178" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" bodystart="178" bodyend="205"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" compoundref="_b_c_d_s___retcode_8h" startline="106">RETCODE_FAILURE</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6acec8ccdc2bb7d9c1e4806729ea2acb76" compoundref="_b_c_d_s___retcode_8h" startline="130">RETCODE_SEVERITY_FATAL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" compoundref="_b_c_d_s___retcode_8h" startline="112">RETCODE_NULL_POINTER</references>
        <references refid="_bme280_utils_8c_1af2cc74878676abb62a86f1ac7db56447" compoundref="_bme280_utils_8c" startline="57">initializationStatus</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbaea901b927978b56cbfae3fa93c3ddfa4" compoundref="_b_c_d_s___retcode_8h" startline="111">RETCODE_UNINITIALIZED</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga5af05449409434d39749e474f3c1096c" compoundref="_b_s_p___sensor_node_8c" startline="523" endline="684">BSP_SensorNode_Disable</references>
        <references refid="struct_bme280_utils___info___s_1afb8d35b33d31d052c1ff16de62ba1014" compoundref="_b_c_d_s___bme280_utils_8h" startline="61">Bme280Utils_Info_S::BspSensorId</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="_sensor_node_mapping_8c_1ac03bdbce5f464b417b6341db3e1e999d" compoundref="_sensor_node_mapping_8c" startline="124" endline="140">SensorNodeMapping_DeInit</references>
        <referencedby refid="group___e_n_v_i_r_o_n_m_e_n_t_a_l_1ga3bcc760a8a3052c6dc0ce2ca866e95d3" compoundref="_environmental_8c" startline="809" endline="841">Environmental_deInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="_bme280_utils_8c_1a6f79016de257c5e6301e4b227de01ea8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>static Retcode_T libErrorMapping</definition>
        <argsstring>(BME280_RETURN_FUNCTION_TYPE BME280_libReturn)</argsstring>
        <name>libErrorMapping</name>
        <param>
          <type><ref refid="bme280_8h_1aff6cb592895879d1a30dfd2bc5cc9bfa" kindref="member">BME280_RETURN_FUNCTION_TYPE</ref></type>
          <declname>BME280_libReturn</declname>
        </param>
        <briefdescription>
<para>This function maps error codes returned from BME280 library to retcode values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">BME280_RETURN_FUNCTION_TYPE</parametername>
</parameternamelist>
<parameterdescription>
<para>Return value from BME280 library</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>BME280 sensor API call success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>BME280 sensor API call failed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_INVALID_PARAM</parametername>
</parameternamelist>
<parameterdescription>
<para>BME280 sensor API call failed because of invalid input parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" line="72" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c" bodystart="72" bodyend="90"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" compoundref="_b_c_d_s___retcode_8h" startline="106">RETCODE_FAILURE</references>
        <references refid="bma2x2_8h_1aa90cac659d18e8ef6294c7ae337f6b58" compoundref="bma2x2_8h" startline="458">SUCCESS</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="bme280_8h_1a27f3acc6b4df82e11b8fbb3005f7d67a" compoundref="bme280_8h" startline="480">E_BME280_NULL_PTR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___s_e_n_s_o_r___u_t_i_l_s_1ggadb78aed5ac68b65e2fec1ca81ba8f13ea6e58ef167cfeaa21fe57f2a05380aab7" compoundref="_b_c_d_s___sensor_utils_8h" startline="79">RETCODE_LIB_NULL_POINTER</references>
        <references refid="group___s_e_n_s_o_r___u_t_i_l_s_1ggadb78aed5ac68b65e2fec1ca81ba8f13ea98d0f0b8627babc28ceed653138241a0" compoundref="_b_c_d_s___sensor_utils_8h" startline="81">RETCODE_BST_BME280_ERROR</references>
        <referencedby refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" compoundref="_bme280_utils_8c" startline="104" endline="175">Bme280Utils_initialize</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>system<sp/>header<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___sensor_utils_8h" kindref="compound">BCDS_SensorUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BCDS_MODULE_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="_bme280_utils_8c_1abff8f3a204e79671b98fabaa652198c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCDS_MODULE_ID<sp/>BCDS_SENSORUTILS_ID_BME280</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>own<sp/>header<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___bme280_utils_8h" kindref="compound">BCDS_Bme280Utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___i2_c_transceiver_8h" kindref="compound">BCDS_I2CTransceiver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___b_s_p___board_8h" kindref="compound">BCDS_BSP_Board.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sensor_node_mapping_8h" kindref="compound">SensorNodeMapping.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>additional<sp/>interface<sp/>header<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bme280_8h" kindref="compound">bme280.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>constant<sp/>and<sp/>variable<sp/>definitions<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="_bme280_utils_8c_1aadd982b9290bd0dfa1865f72efb00910" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DELAY_100MS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT32_C(100)<sp/></highlight></codeline>
<codeline lineno="57" refid="_bme280_utils_8c_1af2cc74878676abb62a86f1ac7db56447" refkind="member"><highlight class="preprocessor">static<sp/>bool<sp/>initializationStatus<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="_bme280_utils_8c_1a5baf7abdbad3564c580729e88a785002" refkind="member"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbme280__t" kindref="compound">bme280_t</ref><sp/><ref refid="_bme280_utils_8c_1a5baf7abdbad3564c580729e88a785002" kindref="member">bme280Initialization</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>private<sp/>function<sp/>declarations<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="_bme280_utils_8c_1a6f79016de257c5e6301e4b227de01ea8" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="_bme280_utils_8c_1a6f79016de257c5e6301e4b227de01ea8" kindref="member">libErrorMapping</ref>(<ref refid="bme280_8h_1aff6cb592895879d1a30dfd2bc5cc9bfa" kindref="member">BME280_RETURN_FUNCTION_TYPE</ref><sp/>BME280_libReturn)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>returnValue<sp/>=<sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref>)<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" kindref="member">RETCODE_FAILURE</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BME280_libReturn<sp/>==<sp/><ref refid="bma2x2_8h_1aa90cac659d18e8ef6294c7ae337f6b58" kindref="member">SUCCESS</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref>)<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BME280_libReturn<sp/>==<sp/><ref refid="bme280_8h_1a27f3acc6b4df82e11b8fbb3005f7d67a" kindref="member">E_BME280_NULL_PTR</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" kindref="member">RETCODE</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" kindref="member">RETCODE_SEVERITY_ERROR</ref>,<sp/><ref refid="group___s_e_n_s_o_r___u_t_i_l_s_1ggadb78aed5ac68b65e2fec1ca81ba8f13ea6e58ef167cfeaa21fe57f2a05380aab7" kindref="member">RETCODE_LIB_NULL_POINTER</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" kindref="member">RETCODE</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" kindref="member">RETCODE_SEVERITY_ERROR</ref>,<sp/><ref refid="group___s_e_n_s_o_r___u_t_i_l_s_1ggadb78aed5ac68b65e2fec1ca81ba8f13ea98d0f0b8627babc28ceed653138241a0" kindref="member">RETCODE_BST_BME280_ERROR</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(returnValue);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="_bme280_utils_8c_1a1f802e8836f61a3b09cd7645b72a8f57" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_bme280_utils_8c_1a1f802e8836f61a3b09cd7645b72a8f57" kindref="member">Bme280Utils_DelayMS</ref>(<ref refid="bme280_8h_1a1262876575ecf7113503040b22890d8d" kindref="member">BME280_MDELAY_DATA_TYPE</ref><sp/>delayMS)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___h_a_l___b_s_p___board_1ga3c12de2d1d4a59f5a1c9794e88ff6608" kindref="member">BSP_Board_Delay</ref>((uint32_t)<sp/>delayMS);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Public<sp/>Functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>API<sp/>documentation<sp/>is<sp/>in<sp/>the<sp/>interface<sp/>header<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" refkind="member"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" kindref="member">Bme280Utils_initialize</ref>(<ref refid="struct_bme280_utils___info___s" kindref="compound">Bme280Utils_InfoPtr_T</ref><sp/>bme280Info)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>returnValue<sp/>=<sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref>)<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" kindref="member">RETCODE_FAILURE</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bme280_8h_1aff6cb592895879d1a30dfd2bc5cc9bfa" kindref="member">BME280_RETURN_FUNCTION_TYPE</ref><sp/>bmeLibReturn<sp/>=<sp/><ref refid="bme280_8h_1ac426fcb3224851f81a5567f3535a0127" kindref="member">E_BME280_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>==<sp/>bme280Info)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" kindref="member">RETCODE</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6acec8ccdc2bb7d9c1e4806729ea2acb76" kindref="member">RETCODE_SEVERITY_FATAL</ref>,<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="_bme280_utils_8c_1af2cc74878676abb62a86f1ac7db56447" kindref="member">initializationStatus</ref>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" kindref="member">RETCODE</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6ae50e23ac22de65b64de1424dd9663a3f" kindref="member">RETCODE_SEVERITY_WARNING</ref>,<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gabed20789ada55c303bb4ef8e0669a4ac" kindref="member">RETCODE_DOPPLE_INITIALIZATION</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/><ref refid="_sensor_node_mapping_8c_1a76bdc1fd6f340a0a598dadddb9ab278a" kindref="member">SensorNodeMapping_Init</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>==<sp/>returnValue)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>callback<sp/>is<sp/>used<sp/>for<sp/>BME280<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/><ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga311d37af892ea5672b90ddac5d658440" kindref="member">BSP_SensorNode_Enable</ref>(bme280Info-&gt;<ref refid="struct_bme280_utils___info___s_1afb8d35b33d31d052c1ff16de62ba1014" kindref="member">BspSensorId</ref>,<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>!=<sp/>returnValue)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnValue;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_bme280_utils_8c_1a5baf7abdbad3564c580729e88a785002" kindref="member">bme280Initialization</ref>.bus_read<sp/>=<sp/><ref refid="_sensor_node_mapping_8c_1a77b5d6036b31e0f795e5167c9435db6c" kindref="member">SensorNodeMapping_Read</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_bme280_utils_8c_1a5baf7abdbad3564c580729e88a785002" kindref="member">bme280Initialization</ref>.bus_write<sp/>=<sp/><ref refid="_sensor_node_mapping_8c_1ac656d2e1648f159bb70e26e1666a94c3" kindref="member">SensorNodeMapping_Write</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_bme280_utils_8c_1a5baf7abdbad3564c580729e88a785002" kindref="member">bme280Initialization</ref>.<ref refid="structbme280__t_1a15edad4d7490bca77abbee44bd881f07" kindref="member">delay_msec</ref><sp/>=<sp/><ref refid="_bme280_utils_8c_1a1f802e8836f61a3b09cd7645b72a8f57" kindref="member">Bme280Utils_DelayMS</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_bme280_utils_8c_1a5baf7abdbad3564c580729e88a785002" kindref="member">bme280Initialization</ref>.<ref refid="structbme280__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref><sp/>=<sp/>bme280Info-&gt;<ref refid="struct_bme280_utils___info___s_1a1997a5306d6d04a9ce867303d1a6d9e1" kindref="member">dev_addr</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*initialize<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>bmeLibReturn<sp/>=<sp/><ref refid="bme280_8c_1afe1efe4d59845dc99d34d0a863263968" kindref="member">bme280_init</ref>(&amp;<ref refid="_bme280_utils_8c_1a5baf7abdbad3564c580729e88a785002" kindref="member">bme280Initialization</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/><sp/>BME280<sp/>default<sp/>settings<sp/>only<sp/>if<sp/>initialization<sp/>success<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bma2x2_8h_1aa90cac659d18e8ef6294c7ae337f6b58" kindref="member">SUCCESS</ref><sp/>==<sp/>bmeLibReturn)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmeLibReturn<sp/>=<sp/><ref refid="bme280_8c_1ae75ab9162b5954c32a1c76341f42f9ab" kindref="member">bme280_set_oversamp_temperature</ref>(<ref refid="bme280_8h_1a05967ed78460d980bda3ab61596cf44a" kindref="member">BME280_OVERSAMP_1X</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bma2x2_8h_1aa90cac659d18e8ef6294c7ae337f6b58" kindref="member">SUCCESS</ref><sp/>==<sp/>bmeLibReturn)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmeLibReturn<sp/>=<sp/><ref refid="bme280_8c_1a2c12aba4c68f08f6bba65f5e7c1811bc" kindref="member">bme280_set_oversamp_pressure</ref>(<ref refid="bme280_8h_1a976874b3e3db2acf54f50b655dc57154" kindref="member">BME280_OVERSAMP_4X</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bma2x2_8h_1aa90cac659d18e8ef6294c7ae337f6b58" kindref="member">SUCCESS</ref><sp/>==<sp/>bmeLibReturn)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmeLibReturn<sp/>=<sp/><ref refid="bme280_8c_1a5ea582184696b23e4a8e46fd2c5880c4" kindref="member">bme280_set_oversamp_humidity</ref>(<ref refid="bme280_8h_1ac22e6bb8c580a32fbbb5cb2d58018f55" kindref="member">BME280_OVERSAMP_2X</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bma2x2_8h_1aa90cac659d18e8ef6294c7ae337f6b58" kindref="member">SUCCESS</ref><sp/>==<sp/>bmeLibReturn)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmeLibReturn<sp/>=<sp/><ref refid="bme280_8c_1a5380f107ca4f174e3fe74076a3572c14" kindref="member">bme280_set_standby_durn</ref>(<ref refid="bme280_8h_1abda2854c877d0ab552b0d3a5e92ce06a" kindref="member">BME280_STANDBY_TIME_125_MS</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bma2x2_8h_1aa90cac659d18e8ef6294c7ae337f6b58" kindref="member">SUCCESS</ref><sp/>==<sp/>bmeLibReturn)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bmeLibReturn<sp/>=<sp/><ref refid="bme280_8c_1a910a9800cc9b3d7b50e7aac6ded2666e" kindref="member">bme280_set_power_mode</ref>(<ref refid="bme280_8h_1a8a9c2aa9289d646803badb7d7fdbd5cb" kindref="member">BME280_NORMAL_MODE</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/><ref refid="_bme280_utils_8c_1a6f79016de257c5e6301e4b227de01ea8" kindref="member">libErrorMapping</ref>(bmeLibReturn);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>==<sp/>returnValue)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___h_a_l___b_s_p___board_1ga3c12de2d1d4a59f5a1c9794e88ff6608" kindref="member">BSP_Board_Delay</ref>(<ref refid="_bme280_utils_8c_1aadd982b9290bd0dfa1865f72efb00910" kindref="member">DELAY_100MS</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_bme280_utils_8c_1af2cc74878676abb62a86f1ac7db56447" kindref="member">initializationStatus</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(returnValue);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>API<sp/>documentation<sp/>is<sp/>in<sp/>the<sp/>interface<sp/>header<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1ga73ff7abf2a4ec0d356224fcb44160e58" refkind="member"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1ga73ff7abf2a4ec0d356224fcb44160e58" kindref="member">Bme280Utils_uninitialize</ref>(<ref refid="struct_bme280_utils___info___s" kindref="compound">Bme280Utils_InfoPtr_T</ref><sp/>bme280Info)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>returnValue<sp/>=<sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref>)<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" kindref="member">RETCODE_FAILURE</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>==<sp/>bme280Info)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" kindref="member">RETCODE</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6acec8ccdc2bb7d9c1e4806729ea2acb76" kindref="member">RETCODE_SEVERITY_FATAL</ref>,<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref>));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>==<sp/><ref refid="_bme280_utils_8c_1af2cc74878676abb62a86f1ac7db56447" kindref="member">initializationStatus</ref>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" kindref="member">RETCODE</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" kindref="member">RETCODE_SEVERITY_ERROR</ref>,<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbaea901b927978b56cbfae3fa93c3ddfa4" kindref="member">RETCODE_UNINITIALIZED</ref>));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/><ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga5af05449409434d39749e474f3c1096c" kindref="member">BSP_SensorNode_Disable</ref>(bme280Info-&gt;<ref refid="struct_bme280_utils___info___s_1afb8d35b33d31d052c1ff16de62ba1014" kindref="member">BspSensorId</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>==<sp/>returnValue)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/><ref refid="_sensor_node_mapping_8c_1ac03bdbce5f464b417b6341db3e1e999d" kindref="member">SensorNodeMapping_DeInit</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>==<sp/>returnValue)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_bme280_utils_8c_1af2cc74878676abb62a86f1ac7db56447" kindref="member">initializationStatus</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(returnValue);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/Bme280Utils/Bme280Utils.c"/>
  </compounddef>
</doxygen>
