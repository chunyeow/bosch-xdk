<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="bmg160_8c" kind="file">
    <compoundname>bmg160.c</compoundname>
    <includes refid="bmg160_8h" local="yes">bmg160.h</includes>
    <incdepgraph>
      <node id="28958">
        <label>SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c</label>
        <link refid="bmg160.c"/>
        <childnode refid="28959" relation="include">
        </childnode>
      </node>
      <node id="28959">
        <label>bmg160.h</label>
        <link refid="bmg160_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="bmg160_8c_1ab9003f5ddc1205f893ede611d8cf3ba1" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structbmg160__t" kindref="compound">bmg160_t</ref> *</type>
        <definition>struct bmg160_t* p_bmg160</definition>
        <argsstring></argsstring>
        <name>p_bmg160</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>file <ref refid="bmg160_8c" kindref="compound">bmg160.c</ref> brief Driver for BMG160 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="55" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bmg160_8c_1a12ed87fb943479f53868fd5f88055cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_burst_read</definition>
        <argsstring>(u8 v_addr_u8, u8 *v_data_u8, u32 v_len_u32)</argsstring>
        <name>bmg160_burst_read</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_addr_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_data_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref></type>
          <declname>v_len_u32</declname>
        </param>
        <briefdescription>
<para>This API reads the data from the given register. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_addr_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Address of the register </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; The data from the register </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_len_u32</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; no of bytes to read</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="443" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="443" bodyend="456"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1af11623673e1d06266715b7cb09d80cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_enable_fast_offset</definition>
        <argsstring>(void)</argsstring>
        <name>bmg160_enable_fast_offset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This API is used to enable fast offset in the register 0x32 bit 3 it is a write only register. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4549" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4549" bodyend="4569"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a4bd3f8bff7429e54f2be9abf62f210b4" compoundref="bmg160_8h" startline="1180">BMG160_FAST_OFFSET_ENABLE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a41ee1c9c15663b5f2dc3a67e46bdd2e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_any_motion_durn_sample</definition>
        <argsstring>(u8 *v_durn_sample_u8)</argsstring>
        <name>bmg160_get_any_motion_durn_sample</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_durn_sample_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the any motion Duration samples in the register 0x1C bit 4 and 5. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_durn_sample_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of any motion duration samples <table rows="5" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Samples  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>4 samples </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>8 samples </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>12 samples </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>16 samples </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2935" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2935" bodyend="2953"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a62305a240a9921de5ec5ef3a26f52337" compoundref="bmg160_8h" startline="1012">BMG160_INTR_TWO_ADDR_ANY_MOTION_DURN_SAMPLE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a797c51b2fdd99942ffde900a40caad73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_any_motion_enable_axis</definition>
        <argsstring>(u8 v_channel_u8, u8 *v_any_motion_axis_u8)</argsstring>
        <name>bmg160_get_any_motion_enable_axis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_any_motion_axis_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of Any motion interrupt axis(X,Y,Z) enable channel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>BMG160_X_AXIS -&gt; bit 0 </para></simplesect>
<simplesect kind="note"><para>BMG160_Y_AXIS -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>BMG160_Z_AXIS -&gt; bit 2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of Any Enable channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>axis  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_X_AXIS </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_Y_AXIS </para></entry></row>
<row>
<entry thead="no"><para>2 </para></entry><entry thead="no"><para>BMG160_Z_AXIS </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of Any motion axis enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3024" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3024" bodyend="3066"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a3cdc1178c40e194258379e108de4e76b" compoundref="bmg160_8h" startline="1035">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1a968306db05957811a280554957d475e6" compoundref="bmg160_8h" startline="1028">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a9123ea6d95e094af9bf993e697d0d262" compoundref="bmg160_8h" startline="1021">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a10eaa1f5b2cfb82eeff46abf38fd542d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_any_motion_thres</definition>
        <argsstring>(u8 *v_any_motion_thres_u8)</argsstring>
        <name>bmg160_get_any_motion_thres</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_any_motion_thres_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get Any motion Threshold in the register 0x1B bit from 0 to 6. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_any_motion_thres_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of any_motion Threshold</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Any motion threshold can be calculate using </para></simplesect>
<simplesect kind="note"><para>((1+ v_any_motion_thres_u8)*16LSB)</para></simplesect>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2778" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2778" bodyend="2796"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a5ab5fa11565c2d5fbf7fb738b8fd02dc" compoundref="bmg160_8h" startline="995">BMG160_INTR_ONE_ADDR_ANY_MOTION_THRES__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1adbd7ad9c85c5c673c4b0d59707b4aff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_auto_offset_enable</definition>
        <argsstring>(u8 *v_offset_enable_u8)</argsstring>
        <name>bmg160_get_auto_offset_enable</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_offset_enable_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the auto offset(auto_offset_enable) interrupt enable bits of the sensor in the registers 0x15 bit 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_offset_enable_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of offset enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1325" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1325" bodyend="1343"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ab70cd20e26074ae52cc2d249c6263596" compoundref="bmg160_8h" startline="811">BMG160_INTR_ENABLE0_AUTO_OFFSET__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aab37401584dd42451df6593d46d41cf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_auto_sleep_durn</definition>
        <argsstring>(u8 *v_durn_u8)</argsstring>
        <name>bmg160_get_auto_sleep_durn</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_durn_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the auto sleep duration in the register 0x12 bit 0 to 2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_durn_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of gyro auto sleep duration <table rows="9" cols="2"><row>
<entry thead="yes"><para>sleep duration </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>not allowed </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>4ms </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>5ms </para></entry><entry thead="no"><para>2 </para></entry></row>
<row>
<entry thead="no"><para>8ms </para></entry><entry thead="no"><para>3 </para></entry></row>
<row>
<entry thead="no"><para>10ms </para></entry><entry thead="no"><para>4 </para></entry></row>
<row>
<entry thead="no"><para>15ms </para></entry><entry thead="no"><para>5 </para></entry></row>
<row>
<entry thead="no"><para>20ms </para></entry><entry thead="no"><para>6 </para></entry></row>
<row>
<entry thead="no"><para>40ms </para></entry><entry thead="no"><para>7 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="6284" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="6284" bodyend="6301"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a41041d36c9c1dcdbd9ac0710b88c4e0f" compoundref="bmg160_8h" startline="772">BMG160_MODE_LPM2_ADDR_AUTO_SLEEP_DURN__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <referencedby refid="bmg160_8h_1a0716624896dab461c52893f81266d8bc" compoundref="bmg160_8c" startline="814" endline="851">bmg160_set_bw</referencedby>
        <referencedby refid="bmg160_8h_1abf51786ce119de88e2899c261753d5e3" compoundref="bmg160_8c" startline="6058" endline="6206">bmg160_set_power_mode</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a86ebc72419d137db4b354e9e5abfddde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_awake_durn</definition>
        <argsstring>(u8 *v_awake_durn_u8)</argsstring>
        <name>bmg160_get_awake_durn</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_awake_durn_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the awake Duration in the register 0x1C bit 6 and 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_awake_durn_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of awake Duration <table rows="5" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Duration  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>8 samples </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>16 samples </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>32 samples </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>64 samples </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2856" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2856" bodyend="2873"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a5ccbe01eb1d9de21cb96ea8f9bc1a618" compoundref="bmg160_8h" startline="1004">BMG160_INTR_TWO_ADDR_AWAKE_DURN__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a6b7cf7f05c2cece99d8c466c628bf15c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_bw</definition>
        <argsstring>(u8 *v_bw_u8)</argsstring>
        <name>bmg160_get_bw</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_bw_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the gyro bandwidth in the register 0x10 bits from 0 to 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_bw_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of gyro bandwidth <table rows="9" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>bandwidth  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>BMG160_BW_500_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>BMG160_BW_230_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>BMG160_BW_116_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>BMG160_BW_47_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x04 </para></entry><entry thead="no"><para>BMG160_BW_23_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x05 </para></entry><entry thead="no"><para>BMG160_BW_12_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x06 </para></entry><entry thead="no"><para>BMG160_BW_64_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x07 </para></entry><entry thead="no"><para>BMG160_BW_32_HZ </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="769" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="769" bodyend="786"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a09cacf9cd371a10164b81c54189f9b43" compoundref="bmg160_8h" startline="728">BMG160_BW_ADDR__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1abb047833bd14de9cc69ad1d87b87d74a" compoundref="bmg160_8h" startline="449">BMG160_BW_ADDR</references>
        <referencedby refid="bmg160_8h_1abf51786ce119de88e2899c261753d5e3" compoundref="bmg160_8c" startline="6058" endline="6206">bmg160_set_power_mode</referencedby>
        <referencedby refid="group___g_y_r_o_s_c_o_p_e_1ga04ffd09c3a4e659b70b556683d8d75a1" compoundref="_gyroscope_8c" startline="518" endline="584">Gyroscope_getBandwidth</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a9e36b191e62ee68e4049c9f24a3d3dbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_data_enable</definition>
        <argsstring>(u8 *v_data_enable_u8)</argsstring>
        <name>bmg160_get_data_enable</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_data_enable_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the data(data_enable) interrupt enable bits of the sensor in the registers 0x15 bit 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_data_enable_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of data enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1159" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1159" bodyend="1176"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1abf9517713f412b75df0d26c04793ce9b" compoundref="bmg160_8h" startline="794">BMG160_INTR_ENABLE0_DATA__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a92e97ae9be61bd4e79651e585da7f587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_data_X</definition>
        <argsstring>(s16 *v_data_x_s16)</argsstring>
        <name>bmg160_get_data_X</name>
        <param>
          <type><ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref> *</type>
          <declname>v_data_x_s16</declname>
        </param>
        <briefdescription>
<para>Reads Rate data X in the registers 0x02 to 0x03. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_data_x_s16</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of gyro x axis data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="108" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="108" bodyend="135"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1a50ee28e67b291dd02ad9491844449f75" compoundref="bmg160_8h" startline="1402">BMG160_X_DATA_SIZE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a1069495b82df752923f79db51c1388cb" compoundref="bmg160_8h" startline="556">BMG160_RATE_X_LSB_BIT__REG</references>
        <references refid="bmg160_8h_1a45bcdae1f085a38bf57849ada8e65783" compoundref="bmg160_8h" startline="1578">BMG160_X_DATA_LENGTH</references>
        <references refid="bmg160_8h_1ac3852302c5c8fc2dbec479009fd79387" compoundref="bmg160_8h" startline="1408">BMG160_X_LSB_DATA</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a7b079dbbd08c59775df5425d22ade1dd" compoundref="bmg160_8h" startline="1409">BMG160_X_MSB_DATA</references>
        <references refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" compoundref="bmg160_8h" startline="1571">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a6e94e4d9ae00c270950b19f32ee0a0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_data_XYZ</definition>
        <argsstring>(struct bmg160_data_t *data)</argsstring>
        <name>bmg160_get_data_XYZ</name>
        <param>
          <type>struct <ref refid="structbmg160__data__t" kindref="compound">bmg160_data_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Reads data X,Y and Z from register location 0x02 to 0x07. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of gyro xyz axis data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="232" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="232" bodyend="281"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1a125fa4ab81ebf25e5f4f4afb80df69a5" compoundref="bmg160_8h" startline="1405">BMG160_XYZ_DATA_SIZE</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a1069495b82df752923f79db51c1388cb" compoundref="bmg160_8h" startline="556">BMG160_RATE_X_LSB_BIT__REG</references>
        <references refid="bmg160_8h_1a666c6900ed60cd3f540d35efac3854cb" compoundref="bmg160_8h" startline="1581">BMG160_ALL_DATA_FRAME_LENGTH</references>
        <references refid="bmg160_8h_1a68b80ec8e0f3bb992a52e1fce96aaf35" compoundref="bmg160_8h" startline="1420">BMG160_DATA_FRAME_X_LSB_BYTE</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="structbmg160__data__t_1a41878a616c846d7576a1ed2191d0d328" compoundref="bmg160_8h" startline="1688">bmg160_data_t::datax</references>
        <references refid="bmg160_8h_1ac78a6d54146687b5aca35402034dfad8" compoundref="bmg160_8h" startline="1421">BMG160_DATA_FRAME_X_MSB_BYTE</references>
        <references refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" compoundref="bmg160_8h" startline="1571">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</references>
        <references refid="bmg160_8h_1aa9f88bbde7f8393c57ecee6a924c9544" compoundref="bmg160_8h" startline="1422">BMG160_DATA_FRAME_Y_LSB_BYTE</references>
        <references refid="structbmg160__data__t_1a2cc0ae4a652a569acce0593f2fe1d62b" compoundref="bmg160_8h" startline="1689">bmg160_data_t::datay</references>
        <references refid="bmg160_8h_1a31e6f339fcff2f25480b2fefe2f96924" compoundref="bmg160_8h" startline="1423">BMG160_DATA_FRAME_Y_MSB_BYTE</references>
        <references refid="bmg160_8h_1a27bd080089049ca0e35dbd7c973f94f4" compoundref="bmg160_8h" startline="1424">BMG160_DATA_FRAME_Z_LSB_BYTE</references>
        <references refid="structbmg160__data__t_1ace1110ab117cbdcd93de4b6fc6fae21c" compoundref="bmg160_8h" startline="1690">bmg160_data_t::dataz</references>
        <references refid="bmg160_8h_1a567896e883531b6266901747cb548597" compoundref="bmg160_8h" startline="1425">BMG160_DATA_FRAME_Z_MSB_BYTE</references>
        <referencedby refid="group___g_y_r_o_s_c_o_p_e_1ga1af96bdf44f4c9b72af3a9c83c49d234" compoundref="_gyroscope_8c" startline="713" endline="782">Gyroscope_readXyzValue</referencedby>
        <referencedby refid="group___g_y_r_o_s_c_o_p_e_1ga2f39d95a90398b2998b26dba51665c7d" compoundref="_gyroscope_8c" startline="785" endline="864">Gyroscope_readXyzDegreeValue</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ac2678441ff8499137e6235e7783ee797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_data_XYZI</definition>
        <argsstring>(struct bmg160_data_t *data)</argsstring>
        <name>bmg160_get_data_XYZI</name>
        <param>
          <type>struct <ref refid="structbmg160__data__t" kindref="compound">bmg160_data_t</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Reads data X,Y,Z and Interrupts from register location 0x02 to 0x07. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of gyro xyz axis data and interrupt status</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="295" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="295" bodyend="364"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1ab5e6315a9817389db70a80ebd0105245" compoundref="bmg160_8h" startline="1406">BMG160_XYZ_INTR_DATA_SIZE</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a1069495b82df752923f79db51c1388cb" compoundref="bmg160_8h" startline="556">BMG160_RATE_X_LSB_BIT__REG</references>
        <references refid="bmg160_8h_1a4dd73bf45d6173b696767cd1df84b14a" compoundref="bmg160_8h" startline="1594">BMG160_XYZ_AND_INTR_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a68b80ec8e0f3bb992a52e1fce96aaf35" compoundref="bmg160_8h" startline="1420">BMG160_DATA_FRAME_X_LSB_BYTE</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="structbmg160__data__t_1a41878a616c846d7576a1ed2191d0d328" compoundref="bmg160_8h" startline="1688">bmg160_data_t::datax</references>
        <references refid="bmg160_8h_1ac78a6d54146687b5aca35402034dfad8" compoundref="bmg160_8h" startline="1421">BMG160_DATA_FRAME_X_MSB_BYTE</references>
        <references refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" compoundref="bmg160_8h" startline="1571">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</references>
        <references refid="bmg160_8h_1aa9f88bbde7f8393c57ecee6a924c9544" compoundref="bmg160_8h" startline="1422">BMG160_DATA_FRAME_Y_LSB_BYTE</references>
        <references refid="structbmg160__data__t_1a2cc0ae4a652a569acce0593f2fe1d62b" compoundref="bmg160_8h" startline="1689">bmg160_data_t::datay</references>
        <references refid="bmg160_8h_1a31e6f339fcff2f25480b2fefe2f96924" compoundref="bmg160_8h" startline="1423">BMG160_DATA_FRAME_Y_MSB_BYTE</references>
        <references refid="bmg160_8h_1a27bd080089049ca0e35dbd7c973f94f4" compoundref="bmg160_8h" startline="1424">BMG160_DATA_FRAME_Z_LSB_BYTE</references>
        <references refid="structbmg160__data__t_1ace1110ab117cbdcd93de4b6fc6fae21c" compoundref="bmg160_8h" startline="1690">bmg160_data_t::dataz</references>
        <references refid="bmg160_8h_1a567896e883531b6266901747cb548597" compoundref="bmg160_8h" startline="1425">BMG160_DATA_FRAME_Z_MSB_BYTE</references>
        <references refid="structbmg160__data__t_1ac4e83581b8188df8ec9967afea397c4f" compoundref="bmg160_8h" startline="1691">bmg160_data_t::intstatus</references>
        <references refid="bmg160_8h_1a1d845cafb1cfd097d9599197733aaf6f" compoundref="bmg160_8h" startline="1414">BMG160_INTR0_STAT</references>
        <references refid="bmg160_8h_1ae7d63d59609f408db4ff7795d245a798" compoundref="bmg160_8h" startline="1426">BMG160_DATA_FRAME_INTR0_BYTE</references>
        <references refid="bmg160_8h_1a68c58f4b08116dad336f961cc11d743f" compoundref="bmg160_8h" startline="1415">BMG160_INTR1_STAT</references>
        <references refid="bmg160_8h_1a08efcf82b039ab742395583f55f73941" compoundref="bmg160_8h" startline="1427">BMG160_DATA_FRAME_INTR1_BYTE</references>
        <references refid="bmg160_8h_1a649f6416b3feb0f12e8446d69e88adf7" compoundref="bmg160_8h" startline="1416">BMG160_INTR2_STAT</references>
        <references refid="bmg160_8h_1abc7a64c7c7ece74b6e7f0f18a8144d2a" compoundref="bmg160_8h" startline="1428">BMG160_DATA_FRAME_INTR2_BYTE</references>
        <references refid="bmg160_8h_1a966e3be12e8876c77c7e1b68322e67b3" compoundref="bmg160_8h" startline="1417">BMG160_INTR3_STAT</references>
        <references refid="bmg160_8h_1afb17661f8975773d54812a7921b5ad31" compoundref="bmg160_8h" startline="1429">BMG160_DATA_FRAME_INTR3_BYTE</references>
        <references refid="bmg160_8h_1ad0ba8bd165c8bf5cc8a1d07143f1314a" compoundref="bmg160_8h" startline="1418">BMG160_INTR4_STAT</references>
        <references refid="bmg160_8h_1abf46e7e98c71ba3da50b0be7376a0494" compoundref="bmg160_8h" startline="1430">BMG160_DATA_FRAME_INTR4_BYTE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a65ef3ee00aa7fa92f623abd7cbd99275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_data_Y</definition>
        <argsstring>(s16 *v_data_y_s16)</argsstring>
        <name>bmg160_get_data_Y</name>
        <param>
          <type><ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref> *</type>
          <declname>v_data_y_s16</declname>
        </param>
        <briefdescription>
<para>Reads Rate data Y in the registers 0x04 to 0x05. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_data_y_s16</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of gyro y axis data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="150" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="150" bodyend="178"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1a76eabc363f559e3de571280351bc87a8" compoundref="bmg160_8h" startline="1403">BMG160_Y_DATA_SIZE</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ac882f7cf6717978bbbd49d027f2eca09" compoundref="bmg160_8h" startline="563">BMG160_RATE_Y_LSB_BIT__REG</references>
        <references refid="bmg160_8h_1a703321b7be23e2095e2d9c5811203e80" compoundref="bmg160_8h" startline="1579">BMG160_Y_DATA_LENGTH</references>
        <references refid="bmg160_8h_1abca2a3b962f33c378bf088d6ac07c538" compoundref="bmg160_8h" startline="1410">BMG160_Y_LSB_DATA</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a748fb765a53d670f0c1f8649be783b74" compoundref="bmg160_8h" startline="1411">BMG160_Y_MSB_DATA</references>
        <references refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" compoundref="bmg160_8h" startline="1571">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a91d5b00af44afaa3dc19c5a57a3fbdd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_data_Z</definition>
        <argsstring>(s16 *v_data_z_s16)</argsstring>
        <name>bmg160_get_data_Z</name>
        <param>
          <type><ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref> *</type>
          <declname>v_data_z_s16</declname>
        </param>
        <briefdescription>
<para>Reads Rate data Z in the registers 0x06 to 0x07. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_data_z_s16</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of gyro z axis data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="191" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="191" bodyend="217"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aff1a7c260e685a20634969183ce67f45" compoundref="bmg160_8h" startline="1404">BMG160_Z_DATA_SIZE</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a2dc4114ab6ebf0cf81f6aba61086e93e" compoundref="bmg160_8h" startline="570">BMG160_RATE_Z_LSB_BIT__REG</references>
        <references refid="bmg160_8h_1ae99fb56c8d227b84992945cec31f56ce" compoundref="bmg160_8h" startline="1580">BMG160_Z_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a438021644f599fa20e82c94b8f70c997" compoundref="bmg160_8h" startline="1412">BMG160_Z_LSB_DATA</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a418908789cc8ed7a55c1ddd94acfd3db" compoundref="bmg160_8h" startline="1413">BMG160_Z_MSB_DATA</references>
        <references refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" compoundref="bmg160_8h" startline="1571">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a6abfe8fd451fa5ec91110ba6e0621382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_fast_offset_enable_axis</definition>
        <argsstring>(u8 *v_fast_offset_u8)</argsstring>
        <name>bmg160_get_fast_offset_enable_axis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_fast_offset_u8</declname>
        </param>
        <briefdescription>
<para>This API read the Fast offset enable v_axis_u8(X,Y and Z) in the register 0x32. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS -&gt; bit 0 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS -&gt; bit 2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fast_offset_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast offset enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4593" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4593" bodyend="4612"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1aff1722c5f4f5cc667ec16429b165f0ca" compoundref="bmg160_8h" startline="1204">BMG160_FAST_OFFSET_ENABLE_XYZ__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aecd3ec4eb3c089164ae3223d8a6a2cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_FIFO_data_reg</definition>
        <argsstring>(u8 *v_fifo_data_u8)</argsstring>
        <name>bmg160_get_FIFO_data_reg</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_fifo_data_u8</declname>
        </param>
        <briefdescription>
<para>Reads FIFO data from location 0x3F. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The data of fifo</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error result of communication routines </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5672" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5672" bodyend="5688"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a42493cb936fdadab521f518f5f4dcf71" compoundref="bmg160_8h" startline="543">BMG160_FIFO_DATA_ADDR</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a0811ba9f50c24d46b1805e1b48f7ca3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_fifo_data_select</definition>
        <argsstring>(u8 *v_fifo_data_select_u8)</argsstring>
        <name>bmg160_get_fifo_data_select</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_fifo_data_select_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of fifo data select in the register 0x3E bit 0 and 1. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_data_select_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo data selection <table rows="5" cols="2"><row>
<entry thead="yes"><para>data selection </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>X,Y and Z (DEFAULT) </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>X only </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>Y only </para></entry><entry thead="no"><para>2 </para></entry></row>
<row>
<entry thead="no"><para>Z only </para></entry><entry thead="no"><para>3 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5897" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5897" bodyend="5915"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1abad814bf57b1c929c9b502dcc4737daa" compoundref="bmg160_8h" startline="1320">BMG160_FIFO_CGF0_ADDR_DATA_SELECT__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1acc0794f668f39bb2dd258f723cb3df79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_fifo_enable</definition>
        <argsstring>(u8 *v_fifo_enable_u8)</argsstring>
        <name>bmg160_get_fifo_enable</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_fifo_enable_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the fifo(fifo_enable) interrupt enable bits of the sensor in the registers 0x15 bit 6. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_enable_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1240" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1240" bodyend="1257"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ab972c1211306f90229547cf66c6dee83" compoundref="bmg160_8h" startline="802">BMG160_INTR_ENABLE0_FIFO__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ae2c9ca18200c9b74d387a46096796ec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_fifo_frame_count</definition>
        <argsstring>(u8 *v_fifo_frame_count_u8)</argsstring>
        <name>bmg160_get_fifo_frame_count</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_fifo_frame_count_u8</declname>
        </param>
        <briefdescription>
<para>this API is used to get the fifo frame counter in the register 0x0E bit 0 to 6 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_frame_count_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fifo frame counter</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5737" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5737" bodyend="5755"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ab10417cceeb9cd0270066c3bde26d8e8" compoundref="bmg160_8h" startline="712">BMG160_FIFO_STAT_FRAME_COUNTER__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a39877aae1eafa1f0c2ae62a0ddc79e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_fifo_mode</definition>
        <argsstring>(u8 *v_fifo_mode_u8)</argsstring>
        <name>bmg160_get_fifo_mode</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_fifo_mode_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of fifo mode in the register 0x3E bit 6 and 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_mode_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo mode <table rows="5" cols="2"><row>
<entry thead="yes"><para>mode </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BYPASS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>FIFO </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>STREAM </para></entry><entry thead="no"><para>2 </para></entry></row>
<row>
<entry thead="no"><para>RESERVED </para></entry><entry thead="no"><para>3 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5810" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5810" bodyend="5827"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a78cc799f6263221b60d276dd9c8ba255" compoundref="bmg160_8h" startline="1314">BMG160_FIFO_CGF0_ADDR_MODE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a1965e4035c621f019b1c0149ace192c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_fifo_overrun</definition>
        <argsstring>(u8 *v_fifo_overrun_u8)</argsstring>
        <name>bmg160_get_fifo_overrun</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_fifo_overrun_u8</declname>
        </param>
        <briefdescription>
<para>this API is used to get the fifo over run in the register 0x0E bit 7 </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_overrun_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fifo over run</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5770" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5770" bodyend="5788"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a315173a18837d57de7873cf05b8e0c36" compoundref="bmg160_8h" startline="704">BMG160_FIFO_STAT_OVERRUN__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a69c6d5c8eb26e34cb2cda5feb4f137c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_fifo_stat_reg</definition>
        <argsstring>(u8 *v_fifo_stat_u8)</argsstring>
        <name>bmg160_get_fifo_stat_reg</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_fifo_stat_u8</declname>
        </param>
        <briefdescription>
<para>this api is used to read the fifo status of frame_counter and overrun in the register 0x0E </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>frame_counter &gt; bit from 0 to 6 </para></simplesect>
<simplesect kind="note"><para>overrun -&gt; bit 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_stat_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo overrun and fifo counter</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5705" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5705" bodyend="5722"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a32371b2bf74cc5057430271b979a4229" compoundref="bmg160_8h" startline="442">BMG160_FIFO_STAT_ADDR</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1af9f79f3abf6b53213c621917f277f4d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_fifo_tag</definition>
        <argsstring>(u8 *v_fifo_tag_u8)</argsstring>
        <name>bmg160_get_fifo_tag</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_fifo_tag_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of FIFO tag in the register 0x3D bit 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_tag_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo tag enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5138" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5138" bodyend="5155"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a4667b47c3e9cf15bc7379e495f47d463" compoundref="bmg160_8h" startline="1302">BMG160_FIFO_CGF1_ADDR_TAG__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ab9a046c348ebcfc3355dcb50c8088767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_fifo_wm_enable</definition>
        <argsstring>(u8 *v_fifo_wm_enable_u8)</argsstring>
        <name>bmg160_get_fifo_wm_enable</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_fifo_wm_enable_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of fifo water mark in the register 0x1E bit 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_wm_enable_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo water mark enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3169" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3169" bodyend="3187"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ae8ddce1b80cae8408d72595a372ad115" compoundref="bmg160_8h" startline="1044">BMG160_INTR_4_FIFO_WM_ENABLE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a3e732529c274de7de952131c7599b30c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_fifo_wm_level</definition>
        <argsstring>(u8 *v_fifo_wm_level_u8)</argsstring>
        <name>bmg160_get_fifo_wm_level</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_fifo_wm_level_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get Water Mark Level in the register 0x3D bit from 0 to 6. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_wm_level_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo water mark level</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5217" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5217" bodyend="5234"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1adf3349bb913d44cc0298dd576a573f44" compoundref="bmg160_8h" startline="1308">BMG160_FIFO_CGF1_ADDR_WML__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a602353883185db6d87a6d60c6b457d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_gp</definition>
        <argsstring>(u8 v_param_u8, u8 *v_gp_u8)</argsstring>
        <name>bmg160_get_gp</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_param_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_gp_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of general purpose register in the register 0x3A and 0x3B. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_param_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of general purpose register select <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_param_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_GP0 </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_GP1 </para></entry><entry thead="no"><para>1 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_gp_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of general purpose register</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5562" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5562" bodyend="5595"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a5a2ac7eb411b88673592acacd5a642e0" compoundref="bmg160_8h" startline="1516">BMG160_GP0</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a9f4f9ab844a768ebd257a3fcdd52cba6" compoundref="bmg160_8h" startline="1346">BMG160_TRIM_GP0_ADDR_GP0__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1ad37261c668579cf9539d67b7f8f33972" compoundref="bmg160_8h" startline="1518">BMG160_GP1</references>
        <references refid="bmg160_8h_1a00fb3f5a73ee17fac11d508d56595e07" compoundref="bmg160_8h" startline="526">BMG160_TRIM_GP1_ADDR</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a7ec555111515efab4bf7f6302f9ca6ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_high_bw</definition>
        <argsstring>(u8 *v_high_bw_u8)</argsstring>
        <name>bmg160_get_high_bw</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_high_bw_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get data high bandwidth in the register 0x13 bit 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_high_bw_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of high bandwidth <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>unfiltered </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>filtered </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="957" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="957" bodyend="974"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a0d02c790c5ee3bb3b77197a254955eb3" compoundref="bmg160_8h" startline="780">BMG160_HIGH_BW__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aba2340289f482eebd137735edca129ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_highrate_durn_axis</definition>
        <argsstring>(u8 v_channel_u8, u8 *v_highrate_durn_axis_u8)</argsstring>
        <name>bmg160_get_highrate_durn_axis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_highrate_durn_axis_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of High duration of X,Y,Z axis in the registers 0x23, 0x25 and 0x27. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS - 0x23 bit form 0 to 7 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS - 0x25 bit form 0 to 7 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS - 0x27 bit form 0 to 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of High Duration channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_highrate_durn_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of high duration</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>High rate duration can be calculated by using the formula </para></simplesect>
<simplesect kind="note"><para>High_durn = ((1+v_highrate_durn_axis_u8)*2.5ms)</para></simplesect>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3971" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3971" bodyend="4010"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1af53ac9387998c0b217ce519d78ba20f3" compoundref="bmg160_8h" startline="487">BMG160_HIGHRATE_DURN_X_ADDR</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1aa29d0fa9bfe12bc13dadbdab15cced71" compoundref="bmg160_8h" startline="489">BMG160_HIGHRATE_THRES_Y_ADDR</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a3f1aed9608ccc546d480c1e64c9f59ac" compoundref="bmg160_8h" startline="493">BMG160_HIGHRATE_THRES_Z_ADDR</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a381e611f4f96b75d6e3f42ccf7efbee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_highrate_enable_axis</definition>
        <argsstring>(u8 v_channel_u8, u8 *v_enable_u8)</argsstring>
        <name>bmg160_get_highrate_enable_axis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_enable_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of High Enable Channel X,Y,Z in the registers 0x22, 0x24 and 0x26. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS - 0x22 bit 0 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS - 0x24 bit 0 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS - 0x26 bit 0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of high enable channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_enable_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of high axis enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3819" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3819" bodyend="3861"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a3864d7bac0368f2574812f81cc98fa7e" compoundref="bmg160_8h" startline="1090">BMG160_HIGHRATE_ENABLE_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1a4d34810aa71a3e979eb7e1ee2a5b7a50" compoundref="bmg160_8h" startline="1108">BMG160_HIGHRATE_ENABLE_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a90bbe7a12ffecada57294397587656df" compoundref="bmg160_8h" startline="1126">BMG160_HIGHRATE_ENABLE_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a0a149f1dd66a876ea33b437f36e78d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_highrate_hyst</definition>
        <argsstring>(u8 v_channel_u8, u8 *v_highrate_hyst_u8)</argsstring>
        <name>bmg160_get_highrate_hyst</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_highrate_hyst_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of High Hysteresis of X,Y,Z axis in the registers 0x22,0x24 and 0x26. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS - 0x22 bit 6 and 7 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS - 0x24 bit 6 and 7 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS - 0x26 bit 6 and 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of high Hysteresis channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_highrate_hyst_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of high Hysteresis</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>High hysteresis can be calculated by </para></simplesect>
<simplesect kind="note"><para>High_hyst = ((255+256 *v_highrate_hyst_u8) * 4LSB)</para></simplesect>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3522" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3522" bodyend="3564"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a1fd5190a504c0f4b38e2ba64b5649cfc" compoundref="bmg160_8h" startline="1078">BMG160_HIGHRATE_HYST_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1ad9da5437dcbc32575e428ca5242364c5" compoundref="bmg160_8h" startline="1096">BMG160_HIGHRATE_HYST_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a86e39b5a8f6c3dd73e0821e6cd38bc66" compoundref="bmg160_8h" startline="1114">BMG160_HIGHRATE_HYST_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aea4199768949105faae319a665158331" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_highrate_thres</definition>
        <argsstring>(u8 v_channel_u8, u8 *v_highrate_thres_u8)</argsstring>
        <name>bmg160_get_highrate_thres</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_highrate_thres_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the value of High rate Threshold of X,Y,Z axis in the registers 0x22, 0x24 and 0x26. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS - 0x22 bit from 1 to 5 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS - 0x24 bit from 1 to 5 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS - 0x26 bit from 1 to 5</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of high threshold channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_highrate_thres_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>the high threshold value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>High Threshold can be calculated by </para></simplesect>
<simplesect kind="note"><para>High_thres = ((255+256 *v_highrate_thres_u8) * 4LSB)</para></simplesect>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3670" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3670" bodyend="3712"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a6f8612292fcaaca8f7102638b801b00d" compoundref="bmg160_8h" startline="1084">BMG160_HIGHRATE_THRES_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1a163b894f95c67814e3ae13d2b87a7893" compoundref="bmg160_8h" startline="1102">BMG160_HIGHRATE_THRES_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a34ffc9a17ebfc73a883ca95c55ae24e2" compoundref="bmg160_8h" startline="1120">BMG160_HIGHRATE_THRES_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a7088e756233577a7e328bfb052044cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_i2c_wdt</definition>
        <argsstring>(u8 v_channel_u8, u8 *v_i2c_wdt_u8)</argsstring>
        <name>bmg160_get_i2c_wdt</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_i2c_wdt_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of i2c wdt select and enable in the register 0x34. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>i2c_wdt_select -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>i2c_wdt_enable -&gt; bit 2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of i2c wdt channel number <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_I2C_WDT_ENABLE </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_I2C_WDT_SELECT </para></entry><entry thead="no"><para>0 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_i2c_wdt_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of I2C enable and WDT select <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4939" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4939" bodyend="4973"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a4d20ab13852159053dce73735cdd43c5" compoundref="bmg160_8h" startline="1492">BMG160_I2C_WDT_ENABLE</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1af97640bc8dde3bf6119320c2a23a5db6" compoundref="bmg160_8h" startline="1249">BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_ENABLE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a7fc5515db577be81bd09a04ea2a97734" compoundref="bmg160_8h" startline="1494">BMG160_I2C_WDT_SELECT</references>
        <references refid="bmg160_8h_1a76df1ab5bb2d943c220294547169baad" compoundref="bmg160_8h" startline="1256">BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_SELECT__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a597623160bd22dd527de8b250f97482b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr1_any_motion</definition>
        <argsstring>(u8 *v_int1r_any_motion_u8)</argsstring>
        <name>bmg160_get_intr1_any_motion</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_int1r_any_motion_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the any motion(int1_any) interrupt1 enable bits of the sensor in the registers 0x17 bit 1. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_int1r_any_motion_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of any motion interrupt1 <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1747" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1747" bodyend="1765"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a68722977da9ea507d53d83309a0d738b" compoundref="bmg160_8h" startline="864">BMG160_INTR_MAP_ZERO_INTR1_ANY_MOTION__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a8c4f36316a75fd07e863e6fac2aa76ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr1_fifo</definition>
        <argsstring>(u8 *v_intr_fifo_u8)</argsstring>
        <name>bmg160_get_intr1_fifo</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_intr_fifo_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the fifo(int1_fifo) interrupt1 enable bits of the sensor in the registers 0x18 bit 5. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_intr_fifo_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The interrupt1 fifo value <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2249" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2249" bodyend="2266"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a74a20d661abf6ef16dcf8d7fb76591fe" compoundref="bmg160_8h" startline="914">BMG160_MAP_ONE_INTR1_FIFO__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ac8e13dfe270b70fca8906498458c126e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr1_highrate</definition>
        <argsstring>(u8 *v_intr1_u8)</argsstring>
        <name>bmg160_get_intr1_highrate</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_intr1_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the high rate(int1_high) interrupt1 enable bits of the sensor in the registers 0x17 bit 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_intr1_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of interrupt1 high_rate enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1667" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1667" bodyend="1684"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ae9cbca35973a2336cedf17021eac418f" compoundref="bmg160_8h" startline="855">BMG160_INTR_MAP_ZERO_INTR1_HIGHRATE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ad5a81978ca1bf2f2010d01d7d88d0db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr2_any_motion</definition>
        <argsstring>(u8 *v_intr2_any_motion_u8)</argsstring>
        <name>bmg160_get_intr2_any_motion</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_intr2_any_motion_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the any motion(int2_any_motion) interrupt2 enable bits of the sensor in the registers 0x19 bit 1. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_intr2_any_motion_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of interrupt2 any_motion <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2438" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2438" bodyend="2456"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1af07e60e9189440e2f7d38f3a4439f869" compoundref="bmg160_8h" startline="950">BMG160_INTR_MAP_TWO_INTR2_ANY_MOTION__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ad6e71b8debacb9ee0a73c9055b62ae11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr2_fifo</definition>
        <argsstring>(u8 *v_intr_fifo_u8)</argsstring>
        <name>bmg160_get_intr2_fifo</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_intr_fifo_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the fifo(int2_fifo) interrupt2 enable bits of the sensor in the registers 0x18 bit 5. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_intr_fifo_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The interrupt2 fifo value <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2212" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2212" bodyend="2228"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a0701e0e7502ddfbec76175069dae97c4" compoundref="bmg160_8h" startline="889">BMG160_MAP_ONE_INTR2_FIFO__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a561687e4c0f3f1188c6975ca669fe604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr2_highrate</definition>
        <argsstring>(u8 *v_intr2_highrate_u8)</argsstring>
        <name>bmg160_get_intr2_highrate</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_intr2_highrate_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the high rate(int2_high_rate) interrupt2 enable bits of the sensor in the registers 0x19 bit 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_intr2_highrate_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The interrupt2 high_rate value <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2356" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2356" bodyend="2374"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a265bf22fcf4647002652befd2cb8dbea" compoundref="bmg160_8h" startline="941">BMG160_INTR_MAP_TWO_INTR2_HIGHRATE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a815dec8cf0f14fd8f04e4174d7b29bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr2_offset</definition>
        <argsstring>(u8 v_axis_u8, u8 *v_intr2_offset_u8)</argsstring>
        <name>bmg160_get_intr2_offset</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_axis_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_intr2_offset_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the fast offset(intr2_fast_offset) and auto offset(intr2_auto_offset) of interrupt2 in the register 0x18. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>int2_fast_offset -&gt; bit 6 </para></simplesect>
<simplesect kind="note"><para>int2_auto_offset -&gt; bit 4</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/auto offset interrupts selection <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_axis_u8 </para></entry><entry thead="yes"><para>Data interrupt  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_FAST_OFFSET </para></entry></row>
<row>
<entry thead="no"><para>2 </para></entry><entry thead="no"><para>BMG160_AUTO_OFFSET </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_intr2_offset_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/auto offset enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1961" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1961" bodyend="1995"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" compoundref="bmg160_8h" startline="1458">BMG160_FAST_OFFSET</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1af521d3616e6932191a0166059a632d18" compoundref="bmg160_8h" startline="880">BMG160_MAP_ONE_INTR2_FAST_OFFSET__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1abbb3061d31b88fc9b8e03a18a83d30e8" compoundref="bmg160_8h" startline="1456">BMG160_AUTO_OFFSET</references>
        <references refid="bmg160_8h_1a9f43051f52393ffcd432c50ed5f4bd0e" compoundref="bmg160_8h" startline="898">BMG160_MAP_ONE_INTR2_AUTO_OFFSET__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a2ff4a29ccae93baed6630994443d8412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr_data</definition>
        <argsstring>(u8 v_axis_u8, u8 *v_intr_data_u8)</argsstring>
        <name>bmg160_get_intr_data</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_axis_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_intr_data_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the data interrupt1 and interrupt2(int1_data and int2_data) in the register 0x18. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>INT1 -&gt; bit 0 </para></simplesect>
<simplesect kind="note"><para>INT2 -&gt; bit 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>data interrupt selection <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_axis_u8 </para></entry><entry thead="yes"><para>Data interrupt  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_INTR1_DATA </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_INTR2_DATA </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_intr_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of data interrupt1 or interrupt2 <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1833" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1833" bodyend="1867"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a28acc96571bb343a73b619b83a54748f" compoundref="bmg160_8h" startline="1467">BMG160_INTR1_DATA</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a5ee7a98b2ff2d7b1c2f731a9c59184de" compoundref="bmg160_8h" startline="932">BMG160_MAP_ONE_INTR1_DATA__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1ad97df96eeba3b68f5645924ca1419fc9" compoundref="bmg160_8h" startline="1469">BMG160_INTR2_DATA</references>
        <references refid="bmg160_8h_1a65ea6fee988070fb100026dd6b51f187" compoundref="bmg160_8h" startline="871">BMG160_MAP_ONE_INTR2_DATA__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a1c7f1642a907a0f2afe726a63f066a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr_level</definition>
        <argsstring>(u8 v_param_u8, u8 *v_intr_level_u8)</argsstring>
        <name>bmg160_get_intr_level</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_param_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_intr_level_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get Active Level status in the register 0x16. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>INT1 -&gt; bit 0 </para></simplesect>
<simplesect kind="note"><para>INT2 -&gt; bit 2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_param_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of Active Level selection number <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_param_u8</para></entry><entry thead="yes"><para>Active Level  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_INTR1 </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_INTR2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_intr_level_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of Active Level status value <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Active Level  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>Active HIGH </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>Active LOW </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1543" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1543" bodyend="1577"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a41c050ab7a84ab60aec18ec6c21d5f23" compoundref="bmg160_8h" startline="1447">BMG160_INTR1</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ad5228c6c1e66ab9de65471121f7dd895" compoundref="bmg160_8h" startline="846">BMG160_INTR_ENABLE1_IT1_LEVEL__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1acc90266d0c8071a1399645f3feeff843" compoundref="bmg160_8h" startline="1449">BMG160_INTR2</references>
        <references refid="bmg160_8h_1a27f462ea893a429fbb5f0d0ad0250277" compoundref="bmg160_8h" startline="828">BMG160_INTR_ENABLE1_IT2_LEVEL__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1af0e21e0c41757107b61fc40faf9c1b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr_offset</definition>
        <argsstring>(u8 v_axis_u8, u8 *v_intr1_offset_u8)</argsstring>
        <name>bmg160_get_intr_offset</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_axis_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_intr1_offset_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the fast offset(int1_fast_offset) and auto offset(int1_auto_offset) of interrupt1 in the register 0x18. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>int1_fast_offset -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>int1_auto_offset -&gt; bit 3</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/auto offset interrupts selection <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_axis_u8 </para></entry><entry thead="yes"><para>Data interrupt  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_FAST_OFFSET </para></entry></row>
<row>
<entry thead="no"><para>2 </para></entry><entry thead="no"><para>BMG160_AUTO_OFFSET </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_intr1_offset_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/auto offset <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2089" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2089" bodyend="2123"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" compoundref="bmg160_8h" startline="1458">BMG160_FAST_OFFSET</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a39a65266a0d6fd986ed07b1fecc633db" compoundref="bmg160_8h" startline="923">BMG160_MAP_ONE_INTR1_FAST_OFFSET__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1abbb3061d31b88fc9b8e03a18a83d30e8" compoundref="bmg160_8h" startline="1456">BMG160_AUTO_OFFSET</references>
        <references refid="bmg160_8h_1a4dcc66f511bd903419670b6779a0e82e" compoundref="bmg160_8h" startline="905">BMG160_MAP_ONE_INTR1_AUTO_OFFSET__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a3ea86f33ecabea49b788c3503037c9ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr_output_type</definition>
        <argsstring>(u8 v_param_u8, u8 *v_intr_output_type_u8)</argsstring>
        <name>bmg160_get_intr_output_type</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_param_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_intr_output_type_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the output type status in the register 0x16. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>INT1 -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>INT2 -&gt; bit 3</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_param_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of output type selection number <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_param_u8</para></entry><entry thead="yes"><para>output type  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_INTR1 </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_INTR2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_intr_output_type_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of output type <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>output  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>open drain </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>push pull </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1411" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1411" bodyend="1445"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a41c050ab7a84ab60aec18ec6c21d5f23" compoundref="bmg160_8h" startline="1447">BMG160_INTR1</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a84ecc408c16f09054f7114ee038ab729" compoundref="bmg160_8h" startline="837">BMG160_INTR_ENABLE1_IT1_OUTPUT_TYPE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1acc90266d0c8071a1399645f3feeff843" compoundref="bmg160_8h" startline="1449">BMG160_INTR2</references>
        <references refid="bmg160_8h_1afdeff592cabb7e5bda6da291b0e42d77" compoundref="bmg160_8h" startline="819">BMG160_INTR_ENABLE1_IT2_OUTPUT_TYPE__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a407f295df9e009a21e62e35d4ba04db1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr_stat_reg_one</definition>
        <argsstring>(u8 *v_stat1_data_u8)</argsstring>
        <name>bmg160_get_intr_stat_reg_one</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_stat1_data_u8</declname>
        </param>
        <briefdescription>
<para>This api used to reads the interrupt status of data, auto_offset, fast_offset and fifo_int in the register 0x0A. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>data bit -&gt; 7 </para></simplesect>
<simplesect kind="note"><para>auto_offset bit -&gt; 6 </para></simplesect>
<simplesect kind="note"><para>fast_offset bit -&gt; 5 </para></simplesect>
<simplesect kind="note"><para>fifo_int bit -&gt; 4</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_stat1_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The interrupt status of data, auto_offset, fast_offset and fifo_int</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="545" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="545" bodyend="563"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a5e6787887539037a9eb4fbd2b1f95c20" compoundref="bmg160_8h" startline="627">BMG160_INTR_STAT_ONE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a91eedffac192e0a94b210a19b6fb4965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr_stat_reg_three</definition>
        <argsstring>(u8 *v_stat3_data_u8)</argsstring>
        <name>bmg160_get_intr_stat_reg_three</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_stat3_data_u8</declname>
        </param>
        <briefdescription>
<para>This api used to reads the interrupt status of high_rate sign, high_rate first_z, high_rate first_x and high_rate first_y in the register 0x0C. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>high_rate sign bit -&gt; 3 </para></simplesect>
<simplesect kind="note"><para>high_rate first_z bit -&gt; 2 </para></simplesect>
<simplesect kind="note"><para>high_rate first_x bit -&gt; 1 </para></simplesect>
<simplesect kind="note"><para>high_rate first_y bit -&gt; 0 </para></simplesect>
<simplesect kind="note"><para>high_rate first_y bit -&gt; 0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_stat3_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The interrupt status of high_rate sign, high_rate first_z, high_rate first_x and high_rate first_y</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="629" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="629" bodyend="648"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ae9c1979419aac776353d2c89017cc253" compoundref="bmg160_8h" startline="695">BMG160_INTR_STAT_THREE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a362d7b6b0fd6f56e34d8c4d4daf5f76d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr_stat_reg_two</definition>
        <argsstring>(u8 *v_stat2_data_u8)</argsstring>
        <name>bmg160_get_intr_stat_reg_two</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_stat2_data_u8</declname>
        </param>
        <briefdescription>
<para>This api used to reads the interrupt status of. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>any motion sign, any motion first_z, any motion first_x and any motion first_y in the register 0x0B </para></simplesect>
<simplesect kind="note"><para>any motion sign bit -&gt; 3 </para></simplesect>
<simplesect kind="note"><para>any motion first_z bit -&gt; 2 </para></simplesect>
<simplesect kind="note"><para>any motion first_x bit -&gt; 1 </para></simplesect>
<simplesect kind="note"><para>any motion first_y bit -&gt; 0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_stat2_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: Pointer holding the the interrupt status of any motion sign, any motion first_z, any motion first_x and any motion first_y</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="586" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="586" bodyend="605"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a28872923ba765282b22aa8ec5634da00" compoundref="bmg160_8h" startline="661">BMG160_INTR_STAT_TWO__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ab4e8a56d2938a46900804309f71e7a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_intr_stat_reg_zero</definition>
        <argsstring>(u8 *v_stat0_data_u8)</argsstring>
        <name>bmg160_get_intr_stat_reg_zero</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_stat0_data_u8</declname>
        </param>
        <briefdescription>
<para>This api used to reads interrupt status of any motion and high rate in the register 0x09. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>any motion bit -&gt; 2 </para></simplesect>
<simplesect kind="note"><para>high rate bit -&gt; 1</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_stat0_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The interrupt status of any motion and high rate</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="505" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="505" bodyend="524"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ad43833b94b5bebff954a103a44b77d97" compoundref="bmg160_8h" startline="592">BMG160_INTR_STAT_ZERO__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ac5eda7aba7f83224d3574b767c0bd4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_latch_intr</definition>
        <argsstring>(u8 *v_latch_intr_u8)</argsstring>
        <name>bmg160_get_latch_intr</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_latch_intr_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the Latch interrupt in the register 0x21 bit from 0 to 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_latch_intr_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of latch interrupt <table rows="17" cols="2"><row>
<entry thead="yes"><para>Latch Interrupt </para></entry><entry thead="yes"><para>Value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_NON_LATCH </para></entry><entry thead="no"><para>0x00 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_250_MS </para></entry><entry thead="no"><para>0x01 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_500_MS </para></entry><entry thead="no"><para>0x02 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_1_SEC </para></entry><entry thead="no"><para>0x03 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_2_SEC </para></entry><entry thead="no"><para>0x04 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_4_SEC </para></entry><entry thead="no"><para>0x05 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_8_SEC </para></entry><entry thead="no"><para>0x06 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_LATCHED </para></entry><entry thead="no"><para>0x07 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_NON_LATCHED </para></entry><entry thead="no"><para>0x08 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_250_MICRO_SEC </para></entry><entry thead="no"><para>0x09 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_500_MICRO_SEC </para></entry><entry thead="no"><para>0x0A </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_1_MILLI_SEC </para></entry><entry thead="no"><para>0x0B </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_12.5_MILLI_SEC </para></entry><entry thead="no"><para>0x0C </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_25_MILLI_SEC </para></entry><entry thead="no"><para>0x0D </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_50_MILLI_SEC </para></entry><entry thead="no"><para>0x0E </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_LATCHED </para></entry><entry thead="no"><para>0x0F </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3425" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3425" bodyend="3442"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1aa37a4a2a69310d5d9e7c5c6765628b5a" compoundref="bmg160_8h" startline="1070">BMG160_RST_LATCH_ADDR_LATCH_INTR__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aea300b1b3351f9a11443ec87dbc00c5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_latch_stat</definition>
        <argsstring>(u8 *v_latch_stat_u8)</argsstring>
        <name>bmg160_get_latch_stat</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_latch_stat_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the Latch Status in the register 0x21 bit 4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_latch_stat_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of latch status <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3331" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3331" bodyend="3349"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1aa8a12733e1570f33a12477479317aac4" compoundref="bmg160_8h" startline="1064">BMG160_RST_LATCH_ADDR_LATCH_STAT__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a82b840d80ec869b7a0c6362b8de561be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_nvm_prog_mode</definition>
        <argsstring>(u8 *nvm_prog_mode)</argsstring>
        <name>bmg160_get_nvm_prog_mode</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>nvm_prog_mode</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of nvm program mode in the register 0x33 bit 0. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nvm_prog_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of nvm program mode <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>Unlock </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>Lock nvm write </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4859" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4859" bodyend="4875"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a0aee98ec3adef93b3713e0394849745a" compoundref="bmg160_8h" startline="1240">BMG160_TRIM_NVM_CTRL_ADDR_NVM_PROG_MODE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ab4929ed39454925d53824e69d1c81198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_nvm_rdy</definition>
        <argsstring>(u8 *v_nvm_rdy_u8)</argsstring>
        <name>bmg160_get_nvm_rdy</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_nvm_rdy_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of nvm program in the register 0x33 bit 2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_nvm_rdy_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of nvm program <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>NVM write is in progress </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>NVM is ready to accept a new write </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4787" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4787" bodyend="4803"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1aedb70154488747435ef92bcb00788766" compoundref="bmg160_8h" startline="1226">BMG160_TRIM_NVM_CTRL_ADDR_NVM_RDY__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ae8b18b4eece8a3d280e2f035259829a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_nvm_remain</definition>
        <argsstring>(u8 *v_nvm_remain_u8)</argsstring>
        <name>bmg160_get_nvm_remain</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_nvm_remain_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of nvm program remain in the register 0x33 bit from 4 to 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_nvm_remain_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of nvm program <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>Do not trigger </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>Trigger </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4714" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4714" bodyend="4731"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a9a96a574861a1714044dc31fd68c4e44" compoundref="bmg160_8h" startline="1212">BMG160_TRIM_NVM_CTRL_ADDR_NVM_REMAIN__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a57e58acf8555a13e43f4d2798f3b52b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_offset</definition>
        <argsstring>(u8 v_axis_u8, s16 *v_offset_s16)</argsstring>
        <name>bmg160_get_offset</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_axis_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref> *</type>
          <declname>v_offset_s16</declname>
        </param>
        <briefdescription>
<para>This API is used to get the value of offset X, Y and Z in the registers 0x36, 0x37, 0x38, 0x39 and 0x3A the offset is a 12bit value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS -&gt; </para></simplesect>
<simplesect kind="note"><para>bit 0 and 1 is available in the register 0x3A bit 2 and 3 </para></simplesect>
<simplesect kind="note"><para>bit 2 and 3 is available in the register 0x36 bit 6 and 7 </para></simplesect>
<simplesect kind="note"><para>bit 4 to 11 is available in the register 0x37 bit 0 to 7 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS -&gt; </para></simplesect>
<simplesect kind="note"><para>bit 0 is available in the register 0x3A bit 1 </para></simplesect>
<simplesect kind="note"><para>bit 1,2 and 3 is available in the register 0x36 bit 3,4 and 5 </para></simplesect>
<simplesect kind="note"><para>bit 4 to 11 is available in the register 0x38 bit 0 to 7 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS -&gt; </para></simplesect>
<simplesect kind="note"><para>bit 0 is available in the register 0x3A bit 0 </para></simplesect>
<simplesect kind="note"><para>bit 1,2 and 3 is available in the register 0x36 bit 0,1 and 3 </para></simplesect>
<simplesect kind="note"><para>bit 4 to 11 is available in the register 0x39 bit 0 to 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of offset axis selection <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_axis_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_offset_s16</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of offset</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5312" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5312" bodyend="5405"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ac0cc96caf9d8a6fc30aebb4646ae69fe" compoundref="bmg160_8h" startline="1352">BMG160_TRIM_GP0_ADDR_OFFSET_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a75f56eebc8aba517a690e71358fb34f8" compoundref="bmg160_8h" startline="1328">BMG160_OFC1_ADDR_OFFSET_X__REG</references>
        <references refid="bmg160_8h_1a218a5ce25f11adb5d881c5e26acb8aec" compoundref="bmg160_8h" startline="1567">BMG160_SHIFT_BIT_POSITION_BY_02_BITS</references>
        <references refid="bmg160_8h_1a3b93c1ece8fd6cf15b0769d35c6dba79" compoundref="bmg160_8h" startline="518">BMG160_OFC2_ADDR</references>
        <references refid="bmg160_8h_1a81fa5a8cc60a059a5633d36aa5b038f9" compoundref="bmg160_8h" startline="1569">BMG160_SHIFT_BIT_POSITION_BY_04_BITS</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1a3951db9a873cf84ac9d92d757507b805" compoundref="bmg160_8h" startline="1358">BMG160_TRIM_GP0_ADDR_OFFSET_Y__REG</references>
        <references refid="bmg160_8h_1a5be5e51a86cfbba575b3dd7a8a3b022f" compoundref="bmg160_8h" startline="1334">BMG160_OFC1_ADDR_OFFSET_Y__REG</references>
        <references refid="bmg160_8h_1af93bb18ad840fcb7dc249f7cc21aca4d" compoundref="bmg160_8h" startline="1565">BMG160_SHIFT_BIT_POSITION_BY_01_BIT</references>
        <references refid="bmg160_8h_1aedb3634ca4911263f49afeaa4ba615bd" compoundref="bmg160_8h" startline="520">BMG160_OFC3_ADDR</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1ab58c0f136e0d553bc2352aa2d1988f36" compoundref="bmg160_8h" startline="1364">BMG160_TRIM_GP0_ADDR_OFFSET_Z__REG</references>
        <references refid="bmg160_8h_1a98131771a0b01536ab82e9a434326f74" compoundref="bmg160_8h" startline="1340">BMG160_OFC1_ADDR_OFFSET_Z__REG</references>
        <references refid="bmg160_8h_1acc523678ba2ff554bda90ef3f55e668c" compoundref="bmg160_8h" startline="522">BMG160_OFC4_ADDR</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a2afcdad76e506735468a3d520c9adef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_offset_unfilt</definition>
        <argsstring>(u8 v_param_u8, u8 *v_offset_unfilt_u8)</argsstring>
        <name>bmg160_get_offset_unfilt</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_param_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_offset_unfilt_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the slow offset and fast offset unfilt data in the register 0x1A and 1B. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>slow_offset_unfilt -&gt; 0x1A bit 5 </para></simplesect>
<simplesect kind="note"><para>fast_offset_unfilt -&gt; 0x1B bit 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_param_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/slow offset unfilt data selection <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_param_u8 </para></entry><entry thead="yes"><para>offset selection  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_SLOW_OFFSET </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_FAST_OFFSET </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_offset_unfilt_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/slow offset unfilt data <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2525" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2525" bodyend="2559"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a691b1bf393a69e9f6f018f5310ed434d" compoundref="bmg160_8h" startline="1454">BMG160_SLOW_OFFSET</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ada9090f2dc0a137b389772f0624cbdb5" compoundref="bmg160_8h" startline="959">BMG160_INTR_ZERO_ADDR_SLOW_OFFSET_UNFILT__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" compoundref="bmg160_8h" startline="1458">BMG160_FAST_OFFSET</references>
        <references refid="bmg160_8h_1a26d8f5cf120f16e46eedaa1f56f80b6a" compoundref="bmg160_8h" startline="986">BMG160_INTR_ONE_ADDR_FAST_OFFSET_UNFILT__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a9f07f8845fbfc48ea9d00c494ef5db63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_offset_word_length</definition>
        <argsstring>(u8 v_channel_u8, u8 *v_offset_word_length_u8)</argsstring>
        <name>bmg160_get_offset_word_length</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_offset_word_length_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get Fast Offset WordLength and Auto Offset WordLength in the register 0x32. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>fast_offset_wordlength -&gt; bit 4 and 5 </para></simplesect>
<simplesect kind="note"><para>auto_offset_wordlength -&gt; bit 6 and 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of WordLengthchannel number <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_AUTO_OFFSET_WL </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_FAST_OFFSET_WL </para></entry><entry thead="no"><para>1 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_offset_word_length_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of offset word length <table rows="5" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>word length  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>32 samples </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>64 samples </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>128 samples </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>256 samples </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4430" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4430" bodyend="4465"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1ae59b810fffa8bf82dd6642db5646315a" compoundref="bmg160_8h" startline="1485">BMG160_AUTO_OFFSET_WORD_LENGHTH</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a0565f26e0cdcc2770b61275e713047af" compoundref="bmg160_8h" startline="1166">BMG160_AUTO_OFFSET_WORD_LENGHTH__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a1ba3c5180b6d742c6d77a6b1f144d120" compoundref="bmg160_8h" startline="1487">BMG160_FAST_OFFSET_WORD_LENGHTH</references>
        <references refid="bmg160_8h_1aa38ba6212521a8e6ae0ce9bef598f684" compoundref="bmg160_8h" startline="1174">BMG160_FAST_OFFSET_WORD_LENGHTH__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a62d69de73ee7897830ec16a2f9cdb71b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_pmu_ext_tri_select</definition>
        <argsstring>(u8 *v_pwu_ext_tri_select_u8)</argsstring>
        <name>bmg160_get_pmu_ext_tri_select</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_pwu_ext_tri_select_u8</declname>
        </param>
        <briefdescription>
<para>This API used to get the status of External Trigger selection in the register 0x12h bits from 4 to 5. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_pwu_ext_tri_select_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of External Trigger selection <table rows="5" cols="2"><row>
<entry thead="yes"><para>v_pwu_ext_tri_select_u8 </para></entry><entry thead="yes"><para>Trigger source  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>INT1 pin </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>INT2 pin </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>SDO pin(SPI3 mode) </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="874" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="874" bodyend="892"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a502992cf090c78e6415214cd0d0af78e" compoundref="bmg160_8h" startline="763">BMG160_MODE_LPM2_ADDR_EXT_TRI_SELECT__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1afcc0f09c2d4a8513855fa59df11f7bda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_power_mode</definition>
        <argsstring>(u8 *v_power_mode_u8)</argsstring>
        <name>bmg160_get_power_mode</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_power_mode_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the operating modes of the sensor in the registers 0x11 and 0x12. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_power_mode_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>:The value of power mode <table rows="6" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>power mode  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_MODE_NORMAL </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_MODE_SUSPEND </para></entry></row>
<row>
<entry thead="no"><para>2 </para></entry><entry thead="no"><para>BMG160_MODE_DEEPSUSPEND </para></entry></row>
<row>
<entry thead="no"><para>3 </para></entry><entry thead="no"><para>BMG160_MODE_FASTPOWERUP </para></entry></row>
<row>
<entry thead="no"><para>4 </para></entry><entry thead="no"><para>BMG160_MODE_ADVANCEDPOWERSAVING </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5989" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5989" bodyend="6035"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1aa5d561178cb6bb0098a11c769dbeb0ec" compoundref="bmg160_8h" startline="451">BMG160_MODE_LPM1_ADDR</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1afdc9567eb3f2bb53650a3e00c05cd3fa" compoundref="bmg160_8h" startline="453">BMG160_MODE_LPM2_ADDR</references>
        <references refid="bmg160_8h_1a14fcc7dcbe5c908a10d88b566998918f" compoundref="bmg160_8h" startline="1387">BMG160_MODE_ADVANCEDPOWERSAVING</references>
        <references refid="bmg160_8h_1af4f93113ae71218829bb734d47977956" compoundref="bmg160_8h" startline="1383">BMG160_MODE_NORMAL</references>
        <references refid="bmg160_8h_1ad0b0465ebeb1b9f9c3c01c916e145ad3" compoundref="bmg160_8h" startline="1384">BMG160_MODE_DEEPSUSPEND</references>
        <references refid="bmg160_8h_1a0180ea68292082c93d6524c7f6ff59b3" compoundref="bmg160_8h" startline="1385">BMG160_MODE_SUSPEND</references>
        <references refid="bmg160_8h_1a7896aae82f44fd15b340a2030bc1681c" compoundref="bmg160_8h" startline="1386">BMG160_MODE_FASTPOWERUP</references>
        <referencedby refid="bmg160_8h_1a0716624896dab461c52893f81266d8bc" compoundref="bmg160_8c" startline="814" endline="851">bmg160_set_bw</referencedby>
        <referencedby refid="group___g_y_r_o_s_c_o_p_e_1gaabe4b32dc48fd5cf62c265be7112dd07" compoundref="_gyroscope_8c" startline="644" endline="710">Gyroscope_getMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ae451018f517ed6c219ea15809c2a76b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_range_reg</definition>
        <argsstring>(u8 *v_range_u8)</argsstring>
        <name>bmg160_get_range_reg</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_range_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the range in the register 0x0F bits from 0 to 2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_range_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of gyro range <table rows="6" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>range  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>BMG160_RANGE_2000 </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>BMG160_RANGE_1000 </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>BMG160_RANGE_500 </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>BMG160_RANGE_250 </para></entry></row>
<row>
<entry thead="no"><para>0x04 </para></entry><entry thead="no"><para>BMG160_RANGE_125 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="672" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="672" bodyend="690"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1aff64f27bf38d4eae9341bc8809ec1041" compoundref="bmg160_8h" startline="720">BMG160_RANGE_ADDR_RANGE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <referencedby refid="group___g_y_r_o_s_c_o_p_e_1ga47c812193cc91cfd76b46ebf70a6f389" compoundref="_gyroscope_8c" startline="450" endline="515">Gyroscope_getRange</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1af527bfc91c3411ab5af82fd9d2b76a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_shadow_dis</definition>
        <argsstring>(u8 *v_shadow_dis_u8)</argsstring>
        <name>bmg160_get_shadow_dis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_shadow_dis_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the shadow dis in the register 0x13 bit 6. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_shadow_dis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of shadow dis <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1042" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1042" bodyend="1059"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a4de953bfb9b86d4ec14f14553fa2da61" compoundref="bmg160_8h" startline="786">BMG160_SHADOW_DIS__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a337c37c23734adae2dc3ab1f6a3e729d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_sleep_durn</definition>
        <argsstring>(u8 *v_durn_u8)</argsstring>
        <name>bmg160_get_sleep_durn</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_durn_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the sleep duration in the register 0x11 bit 1 to 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_durn_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of sleep duration <table rows="9" cols="2"><row>
<entry thead="yes"><para>sleep duration </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>2ms </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>4ms </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>5ms </para></entry><entry thead="no"><para>2 </para></entry></row>
<row>
<entry thead="no"><para>8ms </para></entry><entry thead="no"><para>3 </para></entry></row>
<row>
<entry thead="no"><para>10ms </para></entry><entry thead="no"><para>4 </para></entry></row>
<row>
<entry thead="no"><para>15ms </para></entry><entry thead="no"><para>5 </para></entry></row>
<row>
<entry thead="no"><para>18ms </para></entry><entry thead="no"><para>6 </para></entry></row>
<row>
<entry thead="no"><para>20ms </para></entry><entry thead="no"><para>7 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="6478" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="6478" bodyend="6495"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a60aba448a09589a8f6d1fd832d187336" compoundref="bmg160_8h" startline="742">BMG160_MODELPM1_ADDR_SLEEP_DURN__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a8ca14e510feb10f66cecca186d4badb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_slow_offset_durn</definition>
        <argsstring>(u8 *v_offset_durn_u8)</argsstring>
        <name>bmg160_get_slow_offset_durn</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_offset_durn_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get Slow Offset duration status in the register 0x31 bit 4,5 and 6. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_offset_durn_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of Slow Offset duration <table rows="9" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Duration  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>40ms </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>80ms </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>160ms </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>320ms </para></entry></row>
<row>
<entry thead="no"><para>0x04 </para></entry><entry thead="no"><para>640ms </para></entry></row>
<row>
<entry thead="no"><para>0x05 </para></entry><entry thead="no"><para>1280ms </para></entry></row>
<row>
<entry thead="no"><para>0x06 </para></entry><entry thead="no"><para>unused </para></entry></row>
<row>
<entry thead="no"><para>0x07 </para></entry><entry thead="no"><para>unused </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4185" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4185" bodyend="4203"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ac26de88165389df846701c3c6c718939" compoundref="bmg160_8h" startline="1140">BMG160_SLOW_OFFSET_DURN__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1abefbe4ccf81fa4b00cbd28d961b1d8b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_slow_offset_enable_axis</definition>
        <argsstring>(u8 v_channel_u8, u8 *v_slow_offset_u8)</argsstring>
        <name>bmg160_get_slow_offset_enable_axis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_slow_offset_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get Slow Offset Enable channel X,Y,Z in the register 0x31. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS -&gt; bit 0 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS -&gt; bit 2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of slow offset channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_slow_offset_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The slow offset value <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4277" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4277" bodyend="4319"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a8224c600e2c4039405467dec8856c266" compoundref="bmg160_8h" startline="1158">BMG160_SLOW_OFFSET_ENABLE_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1a80f5f9fd91f8566dbaa254ae6bd5b8cc" compoundref="bmg160_8h" startline="1152">BMG160_SLOW_OFFSET_ENABLE_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a56f6f76720361f50da2ae052f7a8ad7d" compoundref="bmg160_8h" startline="1146">BMG160_SLOW_OFFSET_ENABLE_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a9b840c740e9efba007ed860cf4ae349b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_slow_offset_thres</definition>
        <argsstring>(u8 *v_offset_thres_u8)</argsstring>
        <name>bmg160_get_slow_offset_thres</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_offset_thres_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get Slow Offset Threshold status in the register 0x31 bit 6 and 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_offset_thres_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of slow offset Threshold <table rows="5" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>threshold  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>0.1 degree/sec </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>0.2 degree/sec </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>0.5 degree/sec </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>1 degree/sec </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4100" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4100" bodyend="4118"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a379c8fb8177c486730000dc08358113b" compoundref="bmg160_8h" startline="1134">BMG160_SLOW_OFFSET_THRES__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a024fad333036f317474b87eedc217a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_spi3</definition>
        <argsstring>(u8 *v_spi3_u8)</argsstring>
        <name>bmg160_get_spi3</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_spi3_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the status of spi3 in the register 0x34 bit 0. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_spi3_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of spi3 enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5062" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5062" bodyend="5079"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a272309bd015d97397092b26d643e88a8" compoundref="bmg160_8h" startline="1263">BMG160_BGW_SPI3_WDT_ADDR_SPI3__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a9fc5a82ec26dc1d33380040cda5d142c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_temp</definition>
        <argsstring>(s8 *v_temp_s8)</argsstring>
        <name>bmg160_get_temp</name>
        <param>
          <type><ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref> *</type>
          <declname>v_temp_s8</declname>
        </param>
        <briefdescription>
<para>Reads Temperature from register location 0x08. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_temp_s8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of temperature</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="378" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="378" bodyend="394"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a2826f2d58bf6f90236958110c1e8053b" compoundref="bmg160_8h" startline="429">BMG160_TEMP_ADDR</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a6ac00aabacc4ffdd50bb65db4e2fa78d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_get_unfilt_data</definition>
        <argsstring>(u8 v_param_u8, u8 *v_unfilt_data_u8)</argsstring>
        <name>bmg160_get_unfilt_data</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_param_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_unfilt_data_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to get the any motion and high rate unfilt data in the register 0x1A. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>any_unfilt_data -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>high_unfilt_data -&gt; bit 3</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_param_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of any/high offset unfilt data selection <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_param_u8 </para></entry><entry thead="yes"><para>offset selection  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_HIGHRATE_UNFILT_DATA </para></entry></row>
<row>
<entry thead="no"><para>3 </para></entry><entry thead="no"><para>BMG160_ANY_MOTION_UNFILT_DATA </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_unfilt_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of any/high unfilt data <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2656" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2656" bodyend="2690"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1adbcb8ca77325a28cfc3fb6e326cd78b2" compoundref="bmg160_8h" startline="1473">BMG160_HIGHRATE_UNFILT_DATA</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1adcc70452b9bd3e4c66a14542cbc48251" compoundref="bmg160_8h" startline="968">BMG160_INTR_ZERO_ADDR_HIGHRATE_UNFILT_DATA__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a740818babe01b8d4b584c6a56a5a8e45" compoundref="bmg160_8h" startline="1477">BMG160_ANY_MOTION_UNFILT_DATA</references>
        <references refid="bmg160_8h_1a1862d46e0a6c5b7c0bb45d7f2729f0ca" compoundref="bmg160_8h" startline="977">BMG160_INTR_ZERO_ADDR_ANY_MOTION_UNFILT_DATA__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aa797a8723476d7b6a33261c883839608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_init</definition>
        <argsstring>(struct bmg160_t *bmg160)</argsstring>
        <name>bmg160_init</name>
        <param>
          <type>struct <ref refid="structbmg160__t" kindref="compound">bmg160_t</ref> *</type>
          <declname>bmg160</declname>
        </param>
        <briefdescription>
<para>This function is used for initialize the bus read and bus write functions and assign the chip id and I2C address of the gyro chip id is read in the register 0x00 bit from 0 to 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bmg160</parametername>
</parameternamelist>
<parameterdescription>
<para>structure pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>While changing the parameter of the <ref refid="structbmg160__t" kindref="compound">bmg160_t</ref> consider the following point: </para></simplesect>
<simplesect kind="note"><para>Changing the reference value of the parameter will changes the local copy or local reference make sure your changes will not affect the reference value of the parameter (Better case don&apos;t change the reference value of the parameter)</para></simplesect>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="81" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="81" bodyend="93"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a32579fb8372ca1a2804129719f6c231d" compoundref="bmg160_8h" startline="412">BMG160_CHIP_ID_ADDR</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="structbmg160__t_1a6200a09866f5d4f2e2b1a1fda5b5af88" compoundref="bmg160_8h" startline="1707">bmg160_t::chip_id</references>
        <referencedby refid="group___b_m_g160___s_e_n_s_o_r_u_t_i_l_s_1gaf1fb45718693a026e8d7c7acea433493" compoundref="_bmg160_utils_8c" startline="104" endline="145">Bmg160Utils_initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a72a2e84c087cf8810d27ef17db8da32d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_read_register</definition>
        <argsstring>(u8 v_addr_u8, u8 *v_data_u8, u8 v_len_u8)</argsstring>
        <name>bmg160_read_register</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_addr_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_data_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_len_u8</declname>
        </param>
        <briefdescription>
<para>This API reads the data from the given register. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_addr_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Address of the register </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; The data from the register </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_len_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; no of bytes to read</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="412" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="412" bodyend="425"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ac7a5095b6d98784f0046bdded98c41be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_selftest</definition>
        <argsstring>(u8 *v_result_u8)</argsstring>
        <name>bmg160_selftest</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_result_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to to do selftest to sensor sensor in the register 0x3C. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_result_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of self test</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="6225" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="6225" bodyend="6259"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a2ef240fb09011b709dcafce9551ccc9a" compoundref="bmg160_8h" startline="531">BMG160_SELFTEST_ADDR</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" compoundref="bmg160_8h" startline="1392">BMG160_GET_BITSLICE</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a3f3b65c0cd51380368ac48639efbc52d" compoundref="bmg160_8h" startline="1293">BMG160_SELFTEST_ADDR_TRIGBIST__REG</references>
        <references refid="structbmg160__t_1aa3983462993d936f9ce82c065d47bb18" compoundref="bmg160_8h" startline="1713">bmg160_t::delay_msec</references>
        <references refid="bmg160_8h_1ae8284950d92d320a12174165c765d90c" compoundref="bmg160_8h" startline="1597">BMG160_SELFTEST_DELAY</references>
        <references refid="bmg160_8h_1a907ae62983f3faab73c135e4bb1cbaf4" compoundref="bmg160_8h" startline="1279">BMG160_SELFTEST_ADDR_BISTFAIL__REG</references>
        <references refid="bmg160_8h_1abcacee18aa2779355ace11212dfa985d" compoundref="bmg160_8h" startline="1598">BMG160_SELFTEST_BISTFAIL</references>
        <references refid="bmg160_8h_1a1adcd14df41493cf6d79dbe287e99850" compoundref="bmg160_8h" startline="1599">BMG160_SELFTEST_RATEOK</references>
        <references refid="bmg160_8h_1ab0b8739c1d63460bcbc78adea3e14fc6" compoundref="bmg160_8h" startline="1548">C_BMG160_SUCCESS</references>
        <references refid="bmg160_8h_1a54109a61543ed1e3e6f23a6829da0b10" compoundref="bmg160_8h" startline="1550">C_BMG160_FAILURE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a7fb21a7bfb9450ff0ced53d05fdd7f2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_any_motion_durn_sample</definition>
        <argsstring>(u8 v_durn_sample_u8)</argsstring>
        <name>bmg160_set_any_motion_durn_sample</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_durn_sample_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the any motion Duration samples in the register 0x1C bit 4 and 5. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_durn_sample_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of any motion duration samples <table rows="5" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Samples  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>4 samples </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>8 samples </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>12 samples </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>16 samples </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2974" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2974" bodyend="2997"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a62305a240a9921de5ec5ef3a26f52337" compoundref="bmg160_8h" startline="1012">BMG160_INTR_TWO_ADDR_ANY_MOTION_DURN_SAMPLE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a429070a72df5bb404f4a10223b79a605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_any_motion_enable_axis</definition>
        <argsstring>(u8 v_channel_u8, u8 v_any_motion_axis_u8)</argsstring>
        <name>bmg160_set_any_motion_enable_axis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_any_motion_axis_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of Any motion interrupt axis(X,Y,Z) enable channel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>BMG160_X_AXIS -&gt; bit 0 </para></simplesect>
<simplesect kind="note"><para>BMG160_Y_AXIS -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>BMG160_Z_AXIS -&gt; bit 2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of Any Enable channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>axis  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_X_AXIS </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_Y_AXIS </para></entry></row>
<row>
<entry thead="no"><para>2 </para></entry><entry thead="no"><para>BMG160_Z_AXIS </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_any_motion_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of Any motion axis enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3093" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3093" bodyend="3150"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a3cdc1178c40e194258379e108de4e76b" compoundref="bmg160_8h" startline="1035">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1a968306db05957811a280554957d475e6" compoundref="bmg160_8h" startline="1028">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a9123ea6d95e094af9bf993e697d0d262" compoundref="bmg160_8h" startline="1021">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aa7a0c84e32779b158880b014441b02b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_any_motion_thres</definition>
        <argsstring>(u8 v_any_motion_thres_u8)</argsstring>
        <name>bmg160_set_any_motion_thres</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_any_motion_thres_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set Any motion Threshold in the register 0x1B bit from 0 to 6. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_any_motion_thres_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of any_motion Threshold</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Any motion threshold can be calculate using </para></simplesect>
<simplesect kind="note"><para>((1+ v_any_motion_thres_u8)*16LSB)</para></simplesect>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2814" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2814" bodyend="2835"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a5ab5fa11565c2d5fbf7fb738b8fd02dc" compoundref="bmg160_8h" startline="995">BMG160_INTR_ONE_ADDR_ANY_MOTION_THRES__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a17110d33e219df812f5ad1aa319a1c88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_auto_offset_enable</definition>
        <argsstring>(u8 v_offset_enable_u8)</argsstring>
        <name>bmg160_set_auto_offset_enable</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_offset_enable_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the auto offset(auto_offset_enable) interrupt enable bits of the sensor in the registers 0x15 bit 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_offset_enable_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of offset enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1364" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1364" bodyend="1384"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ab70cd20e26074ae52cc2d249c6263596" compoundref="bmg160_8h" startline="811">BMG160_INTR_ENABLE0_AUTO_OFFSET__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aec5db851421c46ace7593ba4c092be98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_auto_sleep_durn</definition>
        <argsstring>(u8 v_durn_u8, u8 v_bw_u8)</argsstring>
        <name>bmg160_set_auto_sleep_durn</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_durn_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_bw_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the auto sleep duration in the register 0x12 bit 0 to 2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_durn_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of gyro auto sleep duration <table rows="9" cols="2"><row>
<entry thead="yes"><para>sleep duration </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>not allowed </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>4ms </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>5ms </para></entry><entry thead="no"><para>2 </para></entry></row>
<row>
<entry thead="no"><para>8ms </para></entry><entry thead="no"><para>3 </para></entry></row>
<row>
<entry thead="no"><para>10ms </para></entry><entry thead="no"><para>4 </para></entry></row>
<row>
<entry thead="no"><para>15ms </para></entry><entry thead="no"><para>5 </para></entry></row>
<row>
<entry thead="no"><para>20ms </para></entry><entry thead="no"><para>6 </para></entry></row>
<row>
<entry thead="no"><para>40ms </para></entry><entry thead="no"><para>7 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_bw_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of selected bandwidth <table rows="9" cols="2"><row>
<entry thead="yes"><para>v_bw_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>C_BMG160_NO_FILTER_U8X </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>C_BMG160_BW_230HZ_U8X </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>C_BMG160_BW_116HZ_u8X </para></entry><entry thead="no"><para>2 </para></entry></row>
<row>
<entry thead="no"><para>C_BMG160_BW_47HZ_u8X </para></entry><entry thead="no"><para>3 </para></entry></row>
<row>
<entry thead="no"><para>C_BMG160_BW_23HZ_u8X </para></entry><entry thead="no"><para>4 </para></entry></row>
<row>
<entry thead="no"><para>C_BMG160_BW_12HZ_u8X </para></entry><entry thead="no"><para>5 </para></entry></row>
<row>
<entry thead="no"><para>C_BMG160_BW_64HZ_u8X </para></entry><entry thead="no"><para>6 </para></entry></row>
<row>
<entry thead="no"><para>C_BMG160_BW_32HZ_u8X </para></entry><entry thead="no"><para>7 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>: sleep duration depends on selected power mode and bandwidth</para></simplesect>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="6340" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="6340" bodyend="6452"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a41041d36c9c1dcdbd9ac0710b88c4e0f" compoundref="bmg160_8h" startline="772">BMG160_MODE_LPM2_ADDR_AUTO_SLEEP_DURN__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1afef9d7341b490080c35c4692025e4d3e" compoundref="bmg160_8h" startline="1592">BMG160_BIT_LENGTH_DURN</references>
        <references refid="bmg160_8h_1abea701b8f818a4a4ba5d827940f0be16" compoundref="bmg160_8h" startline="1603">C_BMG160_NO_FILTER_U8X</references>
        <references refid="bmg160_8h_1a51e96aaa1c17d464665c4be3fe9faa13" compoundref="bmg160_8h" startline="1625">C_BMG160_4MS_AUTO_SLEEP_DURN_U8X</references>
        <references refid="bmg160_8h_1ab654ed63ada662cbe6e3b8f0aa32d41d" compoundref="bmg160_8h" startline="1604">C_BMG160_BW_230HZ_U8X</references>
        <references refid="bmg160_8h_1aacf0f86a3f83597fdc40d80bf6811ff5" compoundref="bmg160_8h" startline="1605">C_BMG160_BW_116HZ_U8X</references>
        <references refid="bmg160_8h_1a2868354d5671a52b7fe2100de385305c" compoundref="bmg160_8h" startline="1606">C_BMG160_BW_47HZ_U8X</references>
        <references refid="bmg160_8h_1a0c13ac5149461789783817762cec5ba4" compoundref="bmg160_8h" startline="1626">C_BMG160_5MS_AUTO_SLEEP_DURN_U8X</references>
        <references refid="bmg160_8h_1a5c289272b0b371656aa89f8813bbfdfb" compoundref="bmg160_8h" startline="1607">C_BMG160_BW_23HZ_U8X</references>
        <references refid="bmg160_8h_1ad89d95e86514a0a63698d9e44f8a0024" compoundref="bmg160_8h" startline="1628">C_BMG160_10MS_AUTO_SLEEP_DURN_U8X</references>
        <references refid="bmg160_8h_1aeef9bb56a816ba94ed4af6de5d37b945" compoundref="bmg160_8h" startline="1608">C_BMG160_BW_12HZ_U8X</references>
        <references refid="bmg160_8h_1ac284ad02d87461fcbeb8f58e389151d7" compoundref="bmg160_8h" startline="1630">C_BMG160_20MS_AUTO_SLEEP_DURN_U8X</references>
        <references refid="bmg160_8h_1a05e7018c2898ae64168b738485e750ad" compoundref="bmg160_8h" startline="1609">C_BMG160_BW_64HZ_U8X</references>
        <references refid="bmg160_8h_1a580e78cc6b1a556c983886b170e9be29" compoundref="bmg160_8h" startline="1610">C_BMG160_BW_32HZ_U8X</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
        <referencedby refid="bmg160_8h_1a0716624896dab461c52893f81266d8bc" compoundref="bmg160_8c" startline="814" endline="851">bmg160_set_bw</referencedby>
        <referencedby refid="bmg160_8h_1abf51786ce119de88e2899c261753d5e3" compoundref="bmg160_8c" startline="6058" endline="6206">bmg160_set_power_mode</referencedby>
        <referencedby refid="group___g_y_r_o_s_c_o_p_e_1ga1cfe684ee693e24616fbe9a3d898f550" compoundref="_gyroscope_8c" startline="911" endline="957">Gyroscope_setAutoSleepDuration</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a1136521430ab95fa9945189127f0e93a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_awake_durn</definition>
        <argsstring>(u8 v_awake_durn_u8)</argsstring>
        <name>bmg160_set_awake_durn</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_awake_durn_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the awake Duration in the register 0x1C bit 6 and 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_awake_durn_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of awake Duration <table rows="5" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Duration  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>8 samples </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>16 samples </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>32 samples </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>64 samples </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2894" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2894" bodyend="2914"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a5ccbe01eb1d9de21cb96ea8f9bc1a618" compoundref="bmg160_8h" startline="1004">BMG160_INTR_TWO_ADDR_AWAKE_DURN__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a0716624896dab461c52893f81266d8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_bw</definition>
        <argsstring>(u8 v_bw_u8)</argsstring>
        <name>bmg160_set_bw</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_bw_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the gyro bandwidth in the register 0x10 bits from 0 to 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_bw_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of gyro bandwidth <table rows="9" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>bandwidth  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>BMG160_BW_500_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>BMG160_BW_230_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>BMG160_BW_116_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>BMG160_BW_47_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x04 </para></entry><entry thead="no"><para>BMG160_BW_23_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x05 </para></entry><entry thead="no"><para>BMG160_BW_12_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x06 </para></entry><entry thead="no"><para>BMG160_BW_64_HZ </para></entry></row>
<row>
<entry thead="no"><para>0x07 </para></entry><entry thead="no"><para>BMG160_BW_32_HZ </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="814" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="814" bodyend="851"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a7472ca7ca20600ce33c6464ddc0c6597" compoundref="bmg160_8h" startline="1591">BMG160_BIT_LENGTH_BW</references>
        <references refid="bmg160_8c_1afcc0f09c2d4a8513855fa59df11f7bda" compoundref="bmg160_8c" startline="5989" endline="6035">bmg160_get_power_mode</references>
        <references refid="bmg160_8h_1a14fcc7dcbe5c908a10d88b566998918f" compoundref="bmg160_8h" startline="1387">BMG160_MODE_ADVANCEDPOWERSAVING</references>
        <references refid="bmg160_8c_1aab37401584dd42451df6593d46d41cf0" compoundref="bmg160_8c" startline="6284" endline="6301">bmg160_get_auto_sleep_durn</references>
        <references refid="bmg160_8c_1aec5db851421c46ace7593ba4c092be98" compoundref="bmg160_8c" startline="6340" endline="6452">bmg160_set_auto_sleep_durn</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a09cacf9cd371a10164b81c54189f9b43" compoundref="bmg160_8h" startline="728">BMG160_BW_ADDR__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1abb047833bd14de9cc69ad1d87b87d74a" compoundref="bmg160_8h" startline="449">BMG160_BW_ADDR</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
        <referencedby refid="group___g_y_r_o_s_c_o_p_e_1ga8947182f14af1e1606d0442aa1d46fe0" compoundref="_gyroscope_8c" startline="314" endline="379">Gyroscope_setBandwidth</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a0172cca9a225291705d8e6f06bd117bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_data_enable</definition>
        <argsstring>(u8 v_data_enable_u8)</argsstring>
        <name>bmg160_set_data_enable</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_data_enable_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the data(data_enable) interrupt enable bits of the sensor in the registers 0x15 bit 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_data_enable_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of data enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1197" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1197" bodyend="1219"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1abf9517713f412b75df0d26c04793ce9b" compoundref="bmg160_8h" startline="794">BMG160_INTR_ENABLE0_DATA__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a7e67e0c5e75495b8d3b6fb13a5462f6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_fast_offset_enable_axis</definition>
        <argsstring>(u8 v_channel_u8, u8 v_fast_offset_u8)</argsstring>
        <name>bmg160_set_fast_offset_enable_axis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_fast_offset_u8</declname>
        </param>
        <briefdescription>
<para>This API set the Fast offset enable v_axis_u8(X,Y and Z) in the register 0x32. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS -&gt; bit 0 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS -&gt; bit 2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast offset channel select <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_fast_offset_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast offset enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4642" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4642" bodyend="4696"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a4c7ef2bc3687039512cf330beb239c1f" compoundref="bmg160_8h" startline="1198">BMG160_FAST_OFFSET_ENABLE_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1ae871cdd2f2f4781f4617ca2c5ac8ec26" compoundref="bmg160_8h" startline="1192">BMG160_FAST_OFFSET_ENABLE_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a94a47b5dbb80f488637fbe548f665703" compoundref="bmg160_8h" startline="1186">BMG160_FAST_OFFSET_ENABLE_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aa5189b535625f41636985bb4ebcd8000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_fifo_data_select</definition>
        <argsstring>(u8 v_fifo_data_select_u8)</argsstring>
        <name>bmg160_set_fifo_data_select</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_fifo_data_select_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of fifo data select in the register 0x3E bit 0 and 1. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_data_select_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo data selection <table rows="5" cols="2"><row>
<entry thead="yes"><para>data selection </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>X,Y and Z (DEFAULT) </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>X only </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>Y only </para></entry><entry thead="no"><para>2 </para></entry></row>
<row>
<entry thead="no"><para>Z only </para></entry><entry thead="no"><para>3 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5937" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5937" bodyend="5966"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a06df81dcfdec2f7ac6995b19ec2cbf04" compoundref="bmg160_8h" startline="1588">BMG160_BIT_LENGTH_FIFO_DATA_SELECT</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1abad814bf57b1c929c9b502dcc4737daa" compoundref="bmg160_8h" startline="1320">BMG160_FIFO_CGF0_ADDR_DATA_SELECT__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a718f8a7324f6f6ee1807fb645fbc8509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_fifo_enable</definition>
        <argsstring>(u8 v_fifo_enable_u8)</argsstring>
        <name>bmg160_set_fifo_enable</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_fifo_enable_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the fifo(fifo_enable) interrupt enable bits of the sensor in the registers 0x15 bit 6. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_enable_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1278" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1278" bodyend="1304"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a62cc49aea82668082acc57d9ecdad720" compoundref="bmg160_8h" startline="1584">BMG160_BIT_LENGTH_FIFO</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ab972c1211306f90229547cf66c6dee83" compoundref="bmg160_8h" startline="802">BMG160_INTR_ENABLE0_FIFO__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a8d3cdb4a8d0fcac11da426f0feb3b7af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_fifo_mode</definition>
        <argsstring>(u8 v_fifo_mode_u8)</argsstring>
        <name>bmg160_set_fifo_mode</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_fifo_mode_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of fifo mode in the register 0x3E bit 6 and 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_mode_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo mode <table rows="5" cols="2"><row>
<entry thead="yes"><para>mode </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BYPASS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>FIFO </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>STREAM </para></entry><entry thead="no"><para>2 </para></entry></row>
<row>
<entry thead="no"><para>RESERVED </para></entry><entry thead="no"><para>3 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5849" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5849" bodyend="5875"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a9d772942275fdd6039371f0f7b83538b" compoundref="bmg160_8h" startline="1587">BMG160_BIT_LENGTH_FIFO_MODE</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a78cc799f6263221b60d276dd9c8ba255" compoundref="bmg160_8h" startline="1314">BMG160_FIFO_CGF0_ADDR_MODE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1acac872f4c4d9c8461220218870887d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_fifo_tag</definition>
        <argsstring>(u8 v_fifo_tag_u8)</argsstring>
        <name>bmg160_set_fifo_tag</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_fifo_tag_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of FIFO tag in the register 0x3D bit 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_tag_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo tag enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5174" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5174" bodyend="5200"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a0a3160aaf6dd938b4b5afc71cdbfb210" compoundref="bmg160_8h" startline="1586">BMG160_BIT_LENGTH_FIFO_TAG</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a4667b47c3e9cf15bc7379e495f47d463" compoundref="bmg160_8h" startline="1302">BMG160_FIFO_CGF1_ADDR_TAG__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aacefafcbff146f89f5a2ccee2234c98e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_fifo_wm_enable</definition>
        <argsstring>(u8 v_fifo_wm_enable_u8)</argsstring>
        <name>bmg160_set_fifo_wm_enable</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_fifo_wm_enable_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of fifo water mark in the register 0x1E bit 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_wm_enable_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo water mark enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3206" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3206" bodyend="3233"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a772b902bba11b597437b950df81c846e" compoundref="bmg160_8h" startline="1585">BMG160_BIT_LENGTH_FIFO_WM</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ae8ddce1b80cae8408d72595a372ad115" compoundref="bmg160_8h" startline="1044">BMG160_INTR_4_FIFO_WM_ENABLE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a9fc23e5fd9d5ff94801eaaeb8fe08e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_fifo_wm_level</definition>
        <argsstring>(u8 v_fifo_wm_level_u8)</argsstring>
        <name>bmg160_set_fifo_wm_level</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_fifo_wm_level_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set Water Mark Level in the register 0x3D bit from 0 to 6. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_fifo_wm_level_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of fifo water mark level</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5251" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5251" bodyend="5277"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1aa5e8a3c3868fd5587a4ea816cc039b85" compoundref="bmg160_8h" startline="1595">BMG160_FIFO_WM_LENGTH</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1adf3349bb913d44cc0298dd576a573f44" compoundref="bmg160_8h" startline="1308">BMG160_FIFO_CGF1_ADDR_WML__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a82cb4639d6e330fa007a3e24839cffdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_gp</definition>
        <argsstring>(u8 v_param_u8, u8 v_gp_u8)</argsstring>
        <name>bmg160_set_gp</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_param_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_gp_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of general purpose register in the register 0x3A and 0x3B. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_param_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of general purpose register select <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_param_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_GP0 </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_GP1 </para></entry><entry thead="no"><para>1 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_gp_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of general purpose register</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5617" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5617" bodyend="5654"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a5a2ac7eb411b88673592acacd5a642e0" compoundref="bmg160_8h" startline="1516">BMG160_GP0</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a9f4f9ab844a768ebd257a3fcdd52cba6" compoundref="bmg160_8h" startline="1346">BMG160_TRIM_GP0_ADDR_GP0__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1ad37261c668579cf9539d67b7f8f33972" compoundref="bmg160_8h" startline="1518">BMG160_GP1</references>
        <references refid="bmg160_8h_1a00fb3f5a73ee17fac11d508d56595e07" compoundref="bmg160_8h" startline="526">BMG160_TRIM_GP1_ADDR</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a748a5b498b33663f2a983d2000fd8d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_high_bw</definition>
        <argsstring>(u8 v_high_bw_u8)</argsstring>
        <name>bmg160_set_high_bw</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_high_bw_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set data high bandwidth in the register 0x13 bit 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_high_bw_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of high bandwidth <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>unfiltered </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>filtered </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="995" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="995" bodyend="1021"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1ac090d75d65ac879f39e66c8498041fed" compoundref="bmg160_8h" startline="1582">BMG160_BIT_LENGTH_HIGH_BW</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a0d02c790c5ee3bb3b77197a254955eb3" compoundref="bmg160_8h" startline="780">BMG160_HIGH_BW__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
        <referencedby refid="group___g_y_r_o_s_c_o_p_e_1ga8947182f14af1e1606d0442aa1d46fe0" compoundref="_gyroscope_8c" startline="314" endline="379">Gyroscope_setBandwidth</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ab34049faf158840c438f1fc394338d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_highrate_durn_axis</definition>
        <argsstring>(u8 v_channel_u8, u8 v_highrate_durn_axis_u8)</argsstring>
        <name>bmg160_set_highrate_durn_axis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_highrate_durn_axis_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the value of High duration of X,Y,Z axis in the registers 0x23, 0x25 and 0x27. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS - 0x23 bit form 0 to 7 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS - 0x25 bit form 0 to 7 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS - 0x27 bit form 0 to 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of High Duration channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_highrate_durn_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of high duration</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>High rate duration can be calculated by using the formula </para></simplesect>
<simplesect kind="note"><para>High_durn = ((1+v_highrate_durn_axis_u8)*2.5ms)</para></simplesect>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4039" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4039" bodyend="4078"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a3f83ac6c105076876e86aea75ad5cc54" compoundref="bmg160_8h" startline="485">BMG160_HIGHRATE_THRES_X_ADDR</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1aa29d0fa9bfe12bc13dadbdab15cced71" compoundref="bmg160_8h" startline="489">BMG160_HIGHRATE_THRES_Y_ADDR</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a3f1aed9608ccc546d480c1e64c9f59ac" compoundref="bmg160_8h" startline="493">BMG160_HIGHRATE_THRES_Z_ADDR</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aca25699ec8be33af85262cf428164304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_highrate_enable_axis</definition>
        <argsstring>(u8 v_channel_u8, u8 v_enable_u8)</argsstring>
        <name>bmg160_set_highrate_enable_axis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_enable_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of High Enable Channel X,Y,Z in the registers 0x22, 0x24 and 0x26. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS - 0x22 bit 0 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS - 0x24 bit 0 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS - 0x26 bit 0</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of high enable channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_enable_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of high axis enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3888" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3888" bodyend="3942"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a3864d7bac0368f2574812f81cc98fa7e" compoundref="bmg160_8h" startline="1090">BMG160_HIGHRATE_ENABLE_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1a4d34810aa71a3e979eb7e1ee2a5b7a50" compoundref="bmg160_8h" startline="1108">BMG160_HIGHRATE_ENABLE_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a90bbe7a12ffecada57294397587656df" compoundref="bmg160_8h" startline="1126">BMG160_HIGHRATE_ENABLE_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a255e4964c2cd0d47f8b57e300c60f4fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_highrate_hyst</definition>
        <argsstring>(u8 v_channel_u8, u8 v_highrate_hyst_u8)</argsstring>
        <name>bmg160_set_highrate_hyst</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_highrate_hyst_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of High Hysteresis of X,Y,Z axis in the registers 0x22,0x24 and 0x26. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS - 0x22 bit 6 and 7 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS - 0x24 bit 6 and 7 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS - 0x26 bit 6 and 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of high Hysteresis channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_highrate_hyst_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of high Hysteresis</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>High hysteresis can be calculated by </para></simplesect>
<simplesect kind="note"><para>High_hyst = ((255+256 *v_highrate_hyst_u8) * 4LSB)</para></simplesect>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3590" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3590" bodyend="3644"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a1fd5190a504c0f4b38e2ba64b5649cfc" compoundref="bmg160_8h" startline="1078">BMG160_HIGHRATE_HYST_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1ad9da5437dcbc32575e428ca5242364c5" compoundref="bmg160_8h" startline="1096">BMG160_HIGHRATE_HYST_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a86e39b5a8f6c3dd73e0821e6cd38bc66" compoundref="bmg160_8h" startline="1114">BMG160_HIGHRATE_HYST_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a5902bec25dbc7e69ede387d74d3c6d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_highrate_thres</definition>
        <argsstring>(u8 v_channel_u8, u8 v_highrate_thres_u8)</argsstring>
        <name>bmg160_set_highrate_thres</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_highrate_thres_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the value of High rate Threshold of X,Y,Z axis in the registers 0x22, 0x24 and 0x26. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS - 0x22 bit from 1 to 5 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS - 0x24 bit from 1 to 5 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS - 0x26 bit from 1 to 5</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of high threshold channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_highrate_thres_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>the high threshold value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>High Threshold can be calculated by </para></simplesect>
<simplesect kind="note"><para>High_thres = ((255+256 *v_highrate_thres_u8) * 4LSB)</para></simplesect>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3738" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3738" bodyend="3792"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a6f8612292fcaaca8f7102638b801b00d" compoundref="bmg160_8h" startline="1084">BMG160_HIGHRATE_THRES_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1a163b894f95c67814e3ae13d2b87a7893" compoundref="bmg160_8h" startline="1102">BMG160_HIGHRATE_THRES_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a34ffc9a17ebfc73a883ca95c55ae24e2" compoundref="bmg160_8h" startline="1120">BMG160_HIGHRATE_THRES_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a692a1dafaff3f29b5b623127542def7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_i2c_wdt</definition>
        <argsstring>(u8 v_channel_u8, u8 v_i2c_wdt_u8)</argsstring>
        <name>bmg160_set_i2c_wdt</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_i2c_wdt_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of i2c wdt select and enable in the register 0x34. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>i2c_wdt_select -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>i2c_wdt_enable -&gt; bit 2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of i2c wdt channel number <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_I2C_WDT_ENABLE </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_I2C_WDT_SELECT </para></entry><entry thead="no"><para>0 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_i2c_wdt_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of I2C enable and WDT select <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4999" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4999" bodyend="5041"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a4d20ab13852159053dce73735cdd43c5" compoundref="bmg160_8h" startline="1492">BMG160_I2C_WDT_ENABLE</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1af97640bc8dde3bf6119320c2a23a5db6" compoundref="bmg160_8h" startline="1249">BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_ENABLE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a7fc5515db577be81bd09a04ea2a97734" compoundref="bmg160_8h" startline="1494">BMG160_I2C_WDT_SELECT</references>
        <references refid="bmg160_8h_1a76df1ab5bb2d943c220294547169baad" compoundref="bmg160_8h" startline="1256">BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_SELECT__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a7fdcdc158859f8beb218e859fd89c26d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_intr1_any_motion</definition>
        <argsstring>(u8 v_int1r_any_motion_u8)</argsstring>
        <name>bmg160_set_intr1_any_motion</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_int1r_any_motion_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the any motion(int1_any) interrupt1 enable bits of the sensor in the registers 0x17 bit 1. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_int1r_any_motion_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of any motion interrupt1 <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1786" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1786" bodyend="1807"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a68722977da9ea507d53d83309a0d738b" compoundref="bmg160_8h" startline="864">BMG160_INTR_MAP_ZERO_INTR1_ANY_MOTION__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ae5bfa10c20609bdc01668efe25d6f3ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_intr1_highrate</definition>
        <argsstring>(u8 v_intr1_u8)</argsstring>
        <name>bmg160_set_intr1_highrate</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_intr1_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the high rate(int1_high) interrupt1 enable bits of the sensor in the registers 0x17 bit 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_intr1_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of interrupt1 high_rate enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1705" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1705" bodyend="1726"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ae9cbca35973a2336cedf17021eac418f" compoundref="bmg160_8h" startline="855">BMG160_INTR_MAP_ZERO_INTR1_HIGHRATE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a8549eb4c10d8cd9304b860c30b76bb9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_intr1_offset</definition>
        <argsstring>(u8 v_axis_u8, u8 v_intr1_offset_u8)</argsstring>
        <name>bmg160_set_intr1_offset</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_axis_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_intr1_offset_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the fast offset(int1_fast_offset) and auto offset(int1_auto_offset) of interrupt1 in the register 0x18. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>int1_fast_offset -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>int1_auto_offset -&gt; bit 3</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/auto offset interrupts selection <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_axis_u8 </para></entry><entry thead="yes"><para>Data interrupt  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_FAST_OFFSET </para></entry></row>
<row>
<entry thead="no"><para>2 </para></entry><entry thead="no"><para>BMG160_AUTO_OFFSET </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_intr1_offset_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/auto offset <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2149" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2149" bodyend="2191"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" compoundref="bmg160_8h" startline="1458">BMG160_FAST_OFFSET</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a39a65266a0d6fd986ed07b1fecc633db" compoundref="bmg160_8h" startline="923">BMG160_MAP_ONE_INTR1_FAST_OFFSET__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1abbb3061d31b88fc9b8e03a18a83d30e8" compoundref="bmg160_8h" startline="1456">BMG160_AUTO_OFFSET</references>
        <references refid="bmg160_8h_1a4dcc66f511bd903419670b6779a0e82e" compoundref="bmg160_8h" startline="905">BMG160_MAP_ONE_INTR1_AUTO_OFFSET__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ae28d877e2ff38117996e646f6aa0926a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_intr2_any_motion</definition>
        <argsstring>(u8 v_intr2_any_motion_u8)</argsstring>
        <name>bmg160_set_intr2_any_motion</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_intr2_any_motion_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the any motion(int2_any_motion) interrupt2 enable bits of the sensor in the registers 0x19 bit 1. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_intr2_any_motion_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of interrupt2 any_motion <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2477" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2477" bodyend="2498"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1af07e60e9189440e2f7d38f3a4439f869" compoundref="bmg160_8h" startline="950">BMG160_INTR_MAP_TWO_INTR2_ANY_MOTION__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ab9e10f14c5ee1e5d4d41d672c9f45aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_intr2_highrate</definition>
        <argsstring>(u8 v_intr2_highrate_u8)</argsstring>
        <name>bmg160_set_intr2_highrate</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_intr2_highrate_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the high rate(int2_high_rate) interrupt2 enable bits of the sensor in the registers 0x19 bit 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_intr2_highrate_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The interrupt2 high_rate value <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2395" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2395" bodyend="2417"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a265bf22fcf4647002652befd2cb8dbea" compoundref="bmg160_8h" startline="941">BMG160_INTR_MAP_TWO_INTR2_HIGHRATE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a190b41529a02cd7503c8a3f0cf47cc51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_intr2_offset</definition>
        <argsstring>(u8 v_axis_u8, u8 v_intr2_offset_u8)</argsstring>
        <name>bmg160_set_intr2_offset</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_axis_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_intr2_offset_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the fast offset(intr2_fast_offset) and auto offset(intr2_auto_offset) of interrupt2 in the register 0x18. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>int2_fast_offset -&gt; bit 6 </para></simplesect>
<simplesect kind="note"><para>int2_auto_offset -&gt; bit 4</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/auto offset interrupts selection <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_axis_u8 </para></entry><entry thead="yes"><para>Data interrupt  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_FAST_OFFSET </para></entry></row>
<row>
<entry thead="no"><para>2 </para></entry><entry thead="no"><para>BMG160_AUTO_OFFSET </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_intr2_offset_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/auto offset enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2021" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2021" bodyend="2063"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" compoundref="bmg160_8h" startline="1458">BMG160_FAST_OFFSET</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1af521d3616e6932191a0166059a632d18" compoundref="bmg160_8h" startline="880">BMG160_MAP_ONE_INTR2_FAST_OFFSET__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1abbb3061d31b88fc9b8e03a18a83d30e8" compoundref="bmg160_8h" startline="1456">BMG160_AUTO_OFFSET</references>
        <references refid="bmg160_8h_1a9f43051f52393ffcd432c50ed5f4bd0e" compoundref="bmg160_8h" startline="898">BMG160_MAP_ONE_INTR2_AUTO_OFFSET__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a6cedfaf745cd8772f6b7d8b3738e0357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_intr_data</definition>
        <argsstring>(u8 v_axis_u8, u8 v_intr_data_u8)</argsstring>
        <name>bmg160_set_intr_data</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_axis_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_intr_data_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the data interrupt1 and interrupt2(int1_data and int2_data) in the register 0x18. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>INT1 -&gt; bit 0 </para></simplesect>
<simplesect kind="note"><para>INT2 -&gt; bit 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>data interrupt selection <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_axis_u8 </para></entry><entry thead="yes"><para>Data interrupt  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_INTR1_DATA </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_INTR2_DATA </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_intr_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of data interrupt1 or interrupt2 <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1893" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1893" bodyend="1935"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a28acc96571bb343a73b619b83a54748f" compoundref="bmg160_8h" startline="1467">BMG160_INTR1_DATA</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a5ee7a98b2ff2d7b1c2f731a9c59184de" compoundref="bmg160_8h" startline="932">BMG160_MAP_ONE_INTR1_DATA__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1ad97df96eeba3b68f5645924ca1419fc9" compoundref="bmg160_8h" startline="1469">BMG160_INTR2_DATA</references>
        <references refid="bmg160_8h_1a65ea6fee988070fb100026dd6b51f187" compoundref="bmg160_8h" startline="871">BMG160_MAP_ONE_INTR2_DATA__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a94abf253de02c1a2adb011c09f98a0a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_intr_fifo</definition>
        <argsstring>(u8 v_axis_u8, u8 v_intr_fifo_u8)</argsstring>
        <name>bmg160_set_intr_fifo</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_axis_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_intr_fifo_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the value of the fifo interrupt1 and interrupt2(int1_fifo and int2_fifo) in the register 0x18. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>int1_fifo -&gt; bit 2 </para></simplesect>
<simplesect kind="note"><para>int2_fifo -&gt; bit 5</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fifo interrupts selection <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_axis_u8 </para></entry><entry thead="yes"><para>fifo interrupt  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_INTR1 </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_INTR2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_intr_fifo_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of int1_fifo/int2_fifo enable/disable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2293" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2293" bodyend="2335"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a41c050ab7a84ab60aec18ec6c21d5f23" compoundref="bmg160_8h" startline="1447">BMG160_INTR1</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a74a20d661abf6ef16dcf8d7fb76591fe" compoundref="bmg160_8h" startline="914">BMG160_MAP_ONE_INTR1_FIFO__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1acc90266d0c8071a1399645f3feeff843" compoundref="bmg160_8h" startline="1449">BMG160_INTR2</references>
        <references refid="bmg160_8h_1a0701e0e7502ddfbec76175069dae97c4" compoundref="bmg160_8h" startline="889">BMG160_MAP_ONE_INTR2_FIFO__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a67c128d17022c3bf07e007fcca0ab681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_intr_level</definition>
        <argsstring>(u8 v_param_u8, u8 v_intr_level_u8)</argsstring>
        <name>bmg160_set_intr_level</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_param_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_intr_level_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set Active Level status in the register 0x16. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>INT1 -&gt; bit 0 </para></simplesect>
<simplesect kind="note"><para>INT2 -&gt; bit 2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_param_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of Active Level selection number <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_param_u8</para></entry><entry thead="yes"><para>Active Level  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_INTR1 </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_INTR2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_intr_level_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of Active Level status value <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Active Level  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>Active HIGH </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>Active LOW </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1604" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1604" bodyend="1646"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a41c050ab7a84ab60aec18ec6c21d5f23" compoundref="bmg160_8h" startline="1447">BMG160_INTR1</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ad5228c6c1e66ab9de65471121f7dd895" compoundref="bmg160_8h" startline="846">BMG160_INTR_ENABLE1_IT1_LEVEL__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1acc90266d0c8071a1399645f3feeff843" compoundref="bmg160_8h" startline="1449">BMG160_INTR2</references>
        <references refid="bmg160_8h_1a27f462ea893a429fbb5f0d0ad0250277" compoundref="bmg160_8h" startline="828">BMG160_INTR_ENABLE1_IT2_LEVEL__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ad1ec013b07af850a9e6811a8790d9ac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_intr_output_type</definition>
        <argsstring>(u8 v_param_u8, u8 v_intr_output_type_u8)</argsstring>
        <name>bmg160_set_intr_output_type</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_param_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_intr_output_type_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the output type status in the register 0x16. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>INT1 -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>INT2 -&gt; bit 3</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_param_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of output type selection number <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_param_u8</para></entry><entry thead="yes"><para>output type  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_INTR1 </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_INTR2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_intr_output_type_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of output type <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>output  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>open drain </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>push pull </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1472" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1472" bodyend="1516"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a41c050ab7a84ab60aec18ec6c21d5f23" compoundref="bmg160_8h" startline="1447">BMG160_INTR1</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a84ecc408c16f09054f7114ee038ab729" compoundref="bmg160_8h" startline="837">BMG160_INTR_ENABLE1_IT1_OUTPUT_TYPE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1acc90266d0c8071a1399645f3feeff843" compoundref="bmg160_8h" startline="1449">BMG160_INTR2</references>
        <references refid="bmg160_8h_1afdeff592cabb7e5bda6da291b0e42d77" compoundref="bmg160_8h" startline="819">BMG160_INTR_ENABLE1_IT2_OUTPUT_TYPE__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a779035909f85a363930fb90ed7a5abea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_latch_intr</definition>
        <argsstring>(u8 v_latch_intr_u8)</argsstring>
        <name>bmg160_set_latch_intr</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_latch_intr_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the Latch interrupt in the register 0x21 bit from 0 to 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_latch_intr_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of latch interrupt <table rows="17" cols="2"><row>
<entry thead="yes"><para>Latch Interrupt </para></entry><entry thead="yes"><para>Value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_NON_LATCH </para></entry><entry thead="no"><para>0x00 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_250_MS </para></entry><entry thead="no"><para>0x01 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_500_MS </para></entry><entry thead="no"><para>0x02 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_1_SEC </para></entry><entry thead="no"><para>0x03 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_2_SEC </para></entry><entry thead="no"><para>0x04 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_4_SEC </para></entry><entry thead="no"><para>0x05 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_8_SEC </para></entry><entry thead="no"><para>0x06 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_LATCHED </para></entry><entry thead="no"><para>0x07 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_NON_LATCHED </para></entry><entry thead="no"><para>0x08 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_250_MICRO_SEC </para></entry><entry thead="no"><para>0x09 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_500_MICRO_SEC </para></entry><entry thead="no"><para>0x0A </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_1_MILLI_SEC </para></entry><entry thead="no"><para>0x0B </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_12.5_MILLI_SEC </para></entry><entry thead="no"><para>0x0C </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_25_MILLI_SEC </para></entry><entry thead="no"><para>0x0D </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_50_MILLI_SEC </para></entry><entry thead="no"><para>0x0E </para></entry></row>
<row>
<entry thead="no"><para>BMG160_LATCH_LATCHED </para></entry><entry thead="no"><para>0x0F </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3476" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3476" bodyend="3496"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1aa37a4a2a69310d5d9e7c5c6765628b5a" compoundref="bmg160_8h" startline="1070">BMG160_RST_LATCH_ADDR_LATCH_INTR__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a66062d8417c858aff3e7b16ddc633ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_latch_stat</definition>
        <argsstring>(u8 v_latch_stat_u8)</argsstring>
        <name>bmg160_set_latch_stat</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_latch_stat_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the Latch Status in the register 0x21 bit 4. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_latch_stat_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of latch status <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3370" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3370" bodyend="3391"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1aa8a12733e1570f33a12477479317aac4" compoundref="bmg160_8h" startline="1064">BMG160_RST_LATCH_ADDR_LATCH_STAT__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aa10a17bd980259cd5464b0ced5b835d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_nvm_load</definition>
        <argsstring>(u8 v_nvm_load_u8)</argsstring>
        <name>bmg160_set_nvm_load</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_nvm_load_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of nvm program remain in the register 0x33 bit from 4 to 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_nvm_load_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of nvm program <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>Do not trigger </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>Trigger </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4749" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4749" bodyend="4769"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a1fb7e826c646db690d358820140eefd3" compoundref="bmg160_8h" startline="1219">BMG160_TRIM_NVM_CTRL_ADDR_NVM_LOAD__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a970cd3b06e65cbfe246b5db91be04f1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_nvm_prog_mode</definition>
        <argsstring>(u8 nvm_prog_mode)</argsstring>
        <name>bmg160_set_nvm_prog_mode</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>nvm_prog_mode</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of nvm program mode in the register 0x33 bit 0. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nvm_prog_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of nvm program mode <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>Unlock </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>Lock nvm write </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4894" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4894" bodyend="4913"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a0aee98ec3adef93b3713e0394849745a" compoundref="bmg160_8h" startline="1240">BMG160_TRIM_NVM_CTRL_ADDR_NVM_PROG_MODE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ab7529a9d746f6746afde15281153933a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_nvm_prog_trig</definition>
        <argsstring>(u8 nvm_prog_trig)</argsstring>
        <name>bmg160_set_nvm_prog_trig</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>nvm_prog_trig</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of nvm ready in the register 0x33 bit 1. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nvm_prog_trig</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of nvm program <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>program seq in progress </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>program seq finished </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4821" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4821" bodyend="4840"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1aad2e789a89fb6460b617ac0cab840f36" compoundref="bmg160_8h" startline="1233">BMG160_TRIM_NVM_CTRL_ADDR_NVM_PROG_TRIG__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ae144a613115d1033dc35f946a01aa118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_offset</definition>
        <argsstring>(u8 v_axis_u8, s16 v_offset_s16)</argsstring>
        <name>bmg160_set_offset</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_axis_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref></type>
          <declname>v_offset_s16</declname>
        </param>
        <briefdescription>
<para>This API is used to set the value of offset X, Y and Z in the registers 0x36, 0x37, 0x38, 0x39 and 0x3A the offset is a 12bit value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS -&gt; </para></simplesect>
<simplesect kind="note"><para>bit 0 and 1 is available in the register 0x3A bit 2 and 3 </para></simplesect>
<simplesect kind="note"><para>bit 2 and 3 is available in the register 0x36 bit 6 and 7 </para></simplesect>
<simplesect kind="note"><para>bit 4 to 11 is available in the register 0x37 bit 0 to 7 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS -&gt; </para></simplesect>
<simplesect kind="note"><para>bit 0 is available in the register 0x3A bit 1 </para></simplesect>
<simplesect kind="note"><para>bit 1,2 and 3 is available in the register 0x36 bit 3,4 and 5 </para></simplesect>
<simplesect kind="note"><para>bit 4 to 11 is available in the register 0x38 bit 0 to 7 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS -&gt; </para></simplesect>
<simplesect kind="note"><para>bit 0 is available in the register 0x3A bit 0 </para></simplesect>
<simplesect kind="note"><para>bit 1,2 and 3 is available in the register 0x36 bit 0,1 and 3 </para></simplesect>
<simplesect kind="note"><para>bit 4 to 11 is available in the register 0x39 bit 0 to 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_axis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of offset axis selection <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_axis_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_offset_s16</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of offset</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5440" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5440" bodyend="5540"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="bmg160_8h_1af0e5bf5194b9ce36214635491b7c8c1f" compoundref="bmg160_8h" startline="1666">BMG160_OFFSET_MASK_BYTE_OF_DATA</references>
        <references refid="bmg160_8h_1a81fa5a8cc60a059a5633d36aa5b038f9" compoundref="bmg160_8h" startline="1569">BMG160_SHIFT_BIT_POSITION_BY_04_BITS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a3b93c1ece8fd6cf15b0769d35c6dba79" compoundref="bmg160_8h" startline="518">BMG160_OFC2_ADDR</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1ad1d8a3bec407263084dd25a242b54757" compoundref="bmg160_8h" startline="1667">BMG160_OFFSET_X_BIT_MASK1</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a75f56eebc8aba517a690e71358fb34f8" compoundref="bmg160_8h" startline="1328">BMG160_OFC1_ADDR_OFFSET_X__REG</references>
        <references refid="bmg160_8h_1afb69a96ccc62045a2cac96c954d506a0" compoundref="bmg160_8h" startline="1668">BMG160_OFFSET_X_BIT_MASK2</references>
        <references refid="bmg160_8h_1ac0cc96caf9d8a6fc30aebb4646ae69fe" compoundref="bmg160_8h" startline="1352">BMG160_TRIM_GP0_ADDR_OFFSET_X__REG</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1aedb3634ca4911263f49afeaa4ba615bd" compoundref="bmg160_8h" startline="520">BMG160_OFC3_ADDR</references>
        <references refid="bmg160_8h_1a7742e2a96b1973b70aee0b1241622faa" compoundref="bmg160_8h" startline="1670">BMG160_OFFSET_Y_Z_BIT_MASK2</references>
        <references refid="bmg160_8h_1a5be5e51a86cfbba575b3dd7a8a3b022f" compoundref="bmg160_8h" startline="1334">BMG160_OFC1_ADDR_OFFSET_Y__REG</references>
        <references refid="bmg160_8h_1adbce3c96287d9e033f1521d1f4312314" compoundref="bmg160_8h" startline="1669">BMG160_OFFSET_Y_Z_BIT_MASK1</references>
        <references refid="bmg160_8h_1a3951db9a873cf84ac9d92d757507b805" compoundref="bmg160_8h" startline="1358">BMG160_TRIM_GP0_ADDR_OFFSET_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1acc523678ba2ff554bda90ef3f55e668c" compoundref="bmg160_8h" startline="522">BMG160_OFC4_ADDR</references>
        <references refid="bmg160_8h_1a98131771a0b01536ab82e9a434326f74" compoundref="bmg160_8h" startline="1340">BMG160_OFC1_ADDR_OFFSET_Z__REG</references>
        <references refid="bmg160_8h_1ab58c0f136e0d553bc2352aa2d1988f36" compoundref="bmg160_8h" startline="1364">BMG160_TRIM_GP0_ADDR_OFFSET_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a5b6cbba7c8e811474f6ef9083c53cda0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_offset_rst</definition>
        <argsstring>(u8 v_offset_rst_u8)</argsstring>
        <name>bmg160_set_offset_rst</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_offset_rst_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the offset Reset in the register 0x21 bit 6. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_offset_rst_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of reset offset</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3289" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3289" bodyend="3310"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a2f600cdfee26157ad5e89f341c48fda1" compoundref="bmg160_8h" startline="1058">BMG160_RST_LATCH_ADDR_OFFSET_RST__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aa83b8fe302e96bddf16add8c7f86652e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_offset_unfilt</definition>
        <argsstring>(u8 v_param_u8, u8 v_offset_unfilt_u8)</argsstring>
        <name>bmg160_set_offset_unfilt</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_param_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_offset_unfilt_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the slow offset and fast offset unfilt data in the register 0x1A and 1B. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>slow_offset_unfilt -&gt; 0x1A bit 5 </para></simplesect>
<simplesect kind="note"><para>fast_offset_unfilt -&gt; 0x1B bit 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_param_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/slow offset unfilt data selection <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_param_u8 </para></entry><entry thead="yes"><para>offset selection  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_SLOW_OFFSET </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_FAST_OFFSET </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_offset_unfilt_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of fast/slow offset unfilt data <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2586" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2586" bodyend="2630"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a691b1bf393a69e9f6f018f5310ed434d" compoundref="bmg160_8h" startline="1454">BMG160_SLOW_OFFSET</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ada9090f2dc0a137b389772f0624cbdb5" compoundref="bmg160_8h" startline="959">BMG160_INTR_ZERO_ADDR_SLOW_OFFSET_UNFILT__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" compoundref="bmg160_8h" startline="1458">BMG160_FAST_OFFSET</references>
        <references refid="bmg160_8h_1a26d8f5cf120f16e46eedaa1f56f80b6a" compoundref="bmg160_8h" startline="986">BMG160_INTR_ONE_ADDR_FAST_OFFSET_UNFILT__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a3d045fa4071eb0f1be7daca424424407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_offset_word_length</definition>
        <argsstring>(u8 v_channel_u8, u8 v_offset_word_length_u8)</argsstring>
        <name>bmg160_set_offset_word_length</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_offset_word_length_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set Fast Offset WordLength and Auto Offset WordLength in the register 0x32. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>fast_offset_wordlength -&gt; bit 4 and 5 </para></simplesect>
<simplesect kind="note"><para>auto_offset_wordlength -&gt; bit 6 and 7</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of WordLengthchannel number <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_AUTO_OFFSET_WL </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_FAST_OFFSET_WL </para></entry><entry thead="no"><para>1 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_offset_word_length_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of offset word length <table rows="5" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>word length  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>32 samples </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>64 samples </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>128 samples </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>256 samples </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4493" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4493" bodyend="4536"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1ae59b810fffa8bf82dd6642db5646315a" compoundref="bmg160_8h" startline="1485">BMG160_AUTO_OFFSET_WORD_LENGHTH</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a0565f26e0cdcc2770b61275e713047af" compoundref="bmg160_8h" startline="1166">BMG160_AUTO_OFFSET_WORD_LENGHTH__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a1ba3c5180b6d742c6d77a6b1f144d120" compoundref="bmg160_8h" startline="1487">BMG160_FAST_OFFSET_WORD_LENGHTH</references>
        <references refid="bmg160_8h_1aa38ba6212521a8e6ae0ce9bef598f684" compoundref="bmg160_8h" startline="1174">BMG160_FAST_OFFSET_WORD_LENGHTH__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ab953ab33048319018db26a287785c11e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_pmu_ext_tri_select</definition>
        <argsstring>(u8 v_pwu_ext_tri_select_u8)</argsstring>
        <name>bmg160_set_pmu_ext_tri_select</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_pwu_ext_tri_select_u8</declname>
        </param>
        <briefdescription>
<para>This API used to set the status of External Trigger selection in the register 0x12h bits from 4 to 5. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_pwu_ext_tri_select_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of External Trigger selection <table rows="5" cols="2"><row>
<entry thead="yes"><para>v_pwu_ext_tri_select_u8 </para></entry><entry thead="yes"><para>Trigger source  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>No </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>INT1 pin </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>INT2 pin </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>SDO pin(SPI3 mode) </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="915" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="915" bodyend="936"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a502992cf090c78e6415214cd0d0af78e" compoundref="bmg160_8h" startline="763">BMG160_MODE_LPM2_ADDR_EXT_TRI_SELECT__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1abf51786ce119de88e2899c261753d5e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_power_mode</definition>
        <argsstring>(u8 v_power_mode_u8)</argsstring>
        <name>bmg160_set_power_mode</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_power_mode_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the operating modes of the sensor in the registers 0x11 and 0x12. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_power_mode_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>:The value of power mode <table rows="6" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>power mode  </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_MODE_NORMAL </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_MODE_SUSPEND </para></entry></row>
<row>
<entry thead="no"><para>2 </para></entry><entry thead="no"><para>BMG160_MODE_DEEPSUSPEND </para></entry></row>
<row>
<entry thead="no"><para>3 </para></entry><entry thead="no"><para>BMG160_MODE_FASTPOWERUP </para></entry></row>
<row>
<entry thead="no"><para>4 </para></entry><entry thead="no"><para>BMG160_MODE_ADVANCEDPOWERSAVING </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="6058" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="6058" bodyend="6206"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1afb4bab20a50738536167f6f03969a86c" compoundref="bmg160_8h" startline="1593">BMG160_BIT_LENGTH_POWER_MODE</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1aa5d561178cb6bb0098a11c769dbeb0ec" compoundref="bmg160_8h" startline="451">BMG160_MODE_LPM1_ADDR</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1afdc9567eb3f2bb53650a3e00c05cd3fa" compoundref="bmg160_8h" startline="453">BMG160_MODE_LPM2_ADDR</references>
        <references refid="bmg160_8h_1af4f93113ae71218829bb734d47977956" compoundref="bmg160_8h" startline="1383">BMG160_MODE_NORMAL</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="structbmg160__t_1aa3983462993d936f9ce82c065d47bb18" compoundref="bmg160_8h" startline="1713">bmg160_t::delay_msec</references>
        <references refid="bmg160_8h_1a61bfd192aefa949e33b03aa5eec3ef81" compoundref="bmg160_8h" startline="1596">BMG160_POWER_MODE_DELAY</references>
        <references refid="bmg160_8h_1ad0b0465ebeb1b9f9c3c01c916e145ad3" compoundref="bmg160_8h" startline="1384">BMG160_MODE_DEEPSUSPEND</references>
        <references refid="bmg160_8h_1a0180ea68292082c93d6524c7f6ff59b3" compoundref="bmg160_8h" startline="1385">BMG160_MODE_SUSPEND</references>
        <references refid="bmg160_8h_1a4204f65493eff10bae2decafe719a907" compoundref="bmg160_8h" startline="1589">BMG160_BIT_MASK_MODE_LPM1</references>
        <references refid="bmg160_8h_1a7896aae82f44fd15b340a2030bc1681c" compoundref="bmg160_8h" startline="1386">BMG160_MODE_FASTPOWERUP</references>
        <references refid="bmg160_8h_1a14fcc7dcbe5c908a10d88b566998918f" compoundref="bmg160_8h" startline="1387">BMG160_MODE_ADVANCEDPOWERSAVING</references>
        <references refid="bmg160_8c_1a6b7cf7f05c2cece99d8c466c628bf15c" compoundref="bmg160_8c" startline="769" endline="786">bmg160_get_bw</references>
        <references refid="bmg160_8c_1aab37401584dd42451df6593d46d41cf0" compoundref="bmg160_8c" startline="6284" endline="6301">bmg160_get_auto_sleep_durn</references>
        <references refid="bmg160_8c_1aec5db851421c46ace7593ba4c092be98" compoundref="bmg160_8c" startline="6340" endline="6452">bmg160_set_auto_sleep_durn</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
        <referencedby refid="group___g_y_r_o_s_c_o_p_e_1ga639775cb56f0576b49c9153631cc969e" compoundref="_gyroscope_8c" startline="587" endline="641">Gyroscope_setMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1aa0e1646f1e526d648fed218d126d95d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_range_reg</definition>
        <argsstring>(u8 v_range_u8)</argsstring>
        <name>bmg160_set_range_reg</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_range_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the range in the register 0x0F bits from 0 to 2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_range_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of gyro range <table rows="6" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>range  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>BMG160_RANGE_2000 </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>BMG160_RANGE_1000 </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>BMG160_RANGE_500 </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>BMG160_RANGE_250 </para></entry></row>
<row>
<entry thead="no"><para>0x04 </para></entry><entry thead="no"><para>BMG160_RANGE_125 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="714" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="714" bodyend="741"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1aadc29fe819a0fc259b04fd820fd6b4dd" compoundref="bmg160_8h" startline="1590">BMG160_BIT_LENGTH_RANGE</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1aff64f27bf38d4eae9341bc8809ec1041" compoundref="bmg160_8h" startline="720">BMG160_RANGE_ADDR_RANGE__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
        <referencedby refid="group___g_y_r_o_s_c_o_p_e_1ga535fd310efa7ef77418e083c56af125b" compoundref="_gyroscope_8c" startline="382" endline="447">Gyroscope_setRange</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1acd68f0104ea37f143a9d13cb9a35c1f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_rst_intr</definition>
        <argsstring>(u8 v_rst_int_u8)</argsstring>
        <name>bmg160_set_rst_intr</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_rst_int_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the Interrupt Reset in the register 0x21 bit 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_rst_int_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of reset interrupt</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="3251" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="3251" bodyend="3271"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a36f046f5cd3d7f27ccf04e8ef2d72124" compoundref="bmg160_8h" startline="1052">BMG160_RST_LATCH_ADDR_RST_INTR__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a85340285f7b08aba2df8da491aefccac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_shadow_dis</definition>
        <argsstring>(u8 v_shadow_dis_u8)</argsstring>
        <name>bmg160_set_shadow_dis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_shadow_dis_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the shadow dis in the register 0x13 bit 6. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_shadow_dis_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of shadow dis <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1080" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1080" bodyend="1106"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a015e03d51af9a7693d9882f870a57f0c" compoundref="bmg160_8h" startline="1583">BMG160_BIT_LENGTH_SHADOW_DIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a4de953bfb9b86d4ec14f14553fa2da61" compoundref="bmg160_8h" startline="786">BMG160_SHADOW_DIS__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1addf0c78dc627205ccff5044f992af0d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_sleep_durn</definition>
        <argsstring>(u8 v_durn_u8)</argsstring>
        <name>bmg160_set_sleep_durn</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_durn_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the sleep duration in the register 0x11 bit 1 to 3. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_durn_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of sleep duration <table rows="9" cols="2"><row>
<entry thead="yes"><para>sleep duration </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>2ms </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>4ms </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>5ms </para></entry><entry thead="no"><para>2 </para></entry></row>
<row>
<entry thead="no"><para>8ms </para></entry><entry thead="no"><para>3 </para></entry></row>
<row>
<entry thead="no"><para>10ms </para></entry><entry thead="no"><para>4 </para></entry></row>
<row>
<entry thead="no"><para>15ms </para></entry><entry thead="no"><para>5 </para></entry></row>
<row>
<entry thead="no"><para>18ms </para></entry><entry thead="no"><para>6 </para></entry></row>
<row>
<entry thead="no"><para>20ms </para></entry><entry thead="no"><para>7 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="6521" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="6521" bodyend="6547"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1afef9d7341b490080c35c4692025e4d3e" compoundref="bmg160_8h" startline="1592">BMG160_BIT_LENGTH_DURN</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a60aba448a09589a8f6d1fd832d187336" compoundref="bmg160_8h" startline="742">BMG160_MODELPM1_ADDR_SLEEP_DURN__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
        <referencedby refid="group___g_y_r_o_s_c_o_p_e_1ga2fda2f3e9d87e4c45beab3830eab5799" compoundref="_gyroscope_8c" startline="867" endline="908">Gyroscope_setSleepDuration</referencedby>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1ac51fbfc32df639af36dc4b74345a8b7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_slow_offset_durn</definition>
        <argsstring>(u8 v_offset_durn_u8)</argsstring>
        <name>bmg160_set_slow_offset_durn</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_offset_durn_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set Slow Offset duration status in the register 0x31 bit 4,5 and 6. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_offset_durn_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of Slow Offset duration <table rows="9" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Duration  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>40ms </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>80ms </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>160ms </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>320ms </para></entry></row>
<row>
<entry thead="no"><para>0x04 </para></entry><entry thead="no"><para>640ms </para></entry></row>
<row>
<entry thead="no"><para>0x05 </para></entry><entry thead="no"><para>1280ms </para></entry></row>
<row>
<entry thead="no"><para>0x06 </para></entry><entry thead="no"><para>unused </para></entry></row>
<row>
<entry thead="no"><para>0x07 </para></entry><entry thead="no"><para>unused </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4228" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4228" bodyend="4249"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1ac26de88165389df846701c3c6c718939" compoundref="bmg160_8h" startline="1140">BMG160_SLOW_OFFSET_DURN__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a05b52795cb8108fdc18e634714d5bc97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_slow_offset_enable_axis</definition>
        <argsstring>(u8 v_channel_u8, u8 v_slow_offset_u8)</argsstring>
        <name>bmg160_set_slow_offset_enable_axis</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_channel_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_slow_offset_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set Slow Offset Enable channel X,Y,Z in the register 0x31. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>X_AXIS -&gt; bit 0 </para></simplesect>
<simplesect kind="note"><para>Y_AXIS -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>Z_AXIS -&gt; bit 2</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_channel_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of slow offset channel number <table rows="4" cols="2"><row>
<entry thead="yes"><para>v_channel_u8 </para></entry><entry thead="yes"><para>value  </para></entry></row>
<row>
<entry thead="no"><para>BMG160_X_AXIS </para></entry><entry thead="no"><para>0 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Y_AXIS </para></entry><entry thead="no"><para>1 </para></entry></row>
<row>
<entry thead="no"><para>BMG160_Z_AXIS </para></entry><entry thead="no"><para>2 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_slow_offset_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The slow offset value <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4347" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4347" bodyend="4402"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" compoundref="bmg160_8h" startline="1374">BMG160_X_AXIS</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a8224c600e2c4039405467dec8856c266" compoundref="bmg160_8h" startline="1158">BMG160_SLOW_OFFSET_ENABLE_X__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" compoundref="bmg160_8h" startline="1376">BMG160_Y_AXIS</references>
        <references refid="bmg160_8h_1a80f5f9fd91f8566dbaa254ae6bd5b8cc" compoundref="bmg160_8h" startline="1152">BMG160_SLOW_OFFSET_ENABLE_Y__REG</references>
        <references refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" compoundref="bmg160_8h" startline="1378">BMG160_Z_AXIS</references>
        <references refid="bmg160_8h_1a56f6f76720361f50da2ae052f7a8ad7d" compoundref="bmg160_8h" startline="1146">BMG160_SLOW_OFFSET_ENABLE_Z__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1abaf7a9837a4640e271bee3c6277c6c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_slow_offset_thres</definition>
        <argsstring>(u8 v_offset_thres_u8)</argsstring>
        <name>bmg160_set_slow_offset_thres</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_offset_thres_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set Slow Offset Threshold status in the register 0x31 bit 6 and 7. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_offset_thres_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of slow offset Threshold <table rows="5" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>threshold  </para></entry></row>
<row>
<entry thead="no"><para>0x00 </para></entry><entry thead="no"><para>0.1 degree/sec </para></entry></row>
<row>
<entry thead="no"><para>0x01 </para></entry><entry thead="no"><para>0.2 degree/sec </para></entry></row>
<row>
<entry thead="no"><para>0x02 </para></entry><entry thead="no"><para>0.5 degree/sec </para></entry></row>
<row>
<entry thead="no"><para>0x03 </para></entry><entry thead="no"><para>1 degree/sec </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="4140" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="4140" bodyend="4160"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a379c8fb8177c486730000dc08358113b" compoundref="bmg160_8h" startline="1134">BMG160_SLOW_OFFSET_THRES__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a4a661ffd28a1f2f5ce4579d474bb583e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_soft_rst</definition>
        <argsstring>(void)</argsstring>
        <name>bmg160_set_soft_rst</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used for the soft reset The soft reset register will be written with 0xB6 in the register 0x14.</para><para><simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="1121" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="1121" bodyend="1138"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1a93f1d7c8c954add2dc1cb5d2d0a351d5" compoundref="bmg160_8h" startline="1644">BMG160_SOFT_RESET</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1accf371c27f742651549f9c6d592418fa" compoundref="bmg160_8h" startline="457">BMG160_BGW_SOFT_RST_ADDR</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a4e11226846b8ca9a9948a6045714d313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_spi3</definition>
        <argsstring>(u8 v_spi3_u8)</argsstring>
        <name>bmg160_set_spi3</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_spi3_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the status of spi3 in the register 0x34 bit 0. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_spi3_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>: The value of spi3 enable <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="5100" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="5100" bodyend="5119"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1a272309bd015d97397092b26d643e88a8" compoundref="bmg160_8h" startline="1263">BMG160_BGW_SPI3_WDT_ADDR_SPI3__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1a692b581980b6275ab1ae6bbfa4931d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_set_unfilt_data</definition>
        <argsstring>(u8 v_param_u8, u8 v_unfilt_data_u8)</argsstring>
        <name>bmg160_set_unfilt_data</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_param_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_unfilt_data_u8</declname>
        </param>
        <briefdescription>
<para>This API is used to set the any motion and high rate unfilt data in the register 0x1A. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>any_unfilt_data -&gt; bit 1 </para></simplesect>
<simplesect kind="note"><para>high_unfilt_data -&gt; bit 3</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_param_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of any/high offset unfilt data selection <table rows="3" cols="2"><row>
<entry thead="yes"><para>v_param_u8 </para></entry><entry thead="yes"><para>offset selection  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_HIGHRATE_UNFILT_DATA </para></entry></row>
<row>
<entry thead="no"><para>3 </para></entry><entry thead="no"><para>BMG160_ANY_MOTION_UNFILT_DATA </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_unfilt_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of any/high unfilt data <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>1 </para></entry><entry thead="no"><para>BMG160_ENABLE </para></entry></row>
<row>
<entry thead="no"><para>0 </para></entry><entry thead="no"><para>BMG160_DISABLE </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="2716" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="2716" bodyend="2760"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" compoundref="bmg160_8h" startline="1576">BMG160_INIT_VALUE</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="bmg160_8h_1adbcb8ca77325a28cfc3fb6e326cd78b2" compoundref="bmg160_8h" startline="1473">BMG160_HIGHRATE_UNFILT_DATA</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
        <references refid="bmg160_8h_1adcc70452b9bd3e4c66a14542cbc48251" compoundref="bmg160_8h" startline="968">BMG160_INTR_ZERO_ADDR_HIGHRATE_UNFILT_DATA__REG</references>
        <references refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" compoundref="bmg160_8h" startline="1577">BMG160_GEN_READ_WRITE_DATA_LENGTH</references>
        <references refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" compoundref="bmg160_8h" startline="1396">BMG160_SET_BITSLICE</references>
        <references refid="bmg160_8h_1a740818babe01b8d4b584c6a56a5a8e45" compoundref="bmg160_8h" startline="1477">BMG160_ANY_MOTION_UNFILT_DATA</references>
        <references refid="bmg160_8h_1a1862d46e0a6c5b7c0bb45d7f2729f0ca" compoundref="bmg160_8h" startline="977">BMG160_INTR_ZERO_ADDR_ANY_MOTION_UNFILT_DATA__REG</references>
        <references refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" compoundref="bmg160_8h" startline="1553">E_BMG160_OUT_OF_RANGE</references>
      </memberdef>
      <memberdef kind="function" id="bmg160_8c_1adcda878618ee27ff559a481f2031cea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref></type>
        <definition>BMG160_RETURN_FUNCTION_TYPE bmg160_write_register</definition>
        <argsstring>(u8 v_addr_u8, u8 *v_data_u8, u8 v_len_u8)</argsstring>
        <name>bmg160_write_register</name>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_addr_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref> *</type>
          <declname>v_data_u8</declname>
        </param>
        <param>
          <type><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref></type>
          <declname>v_len_u8</declname>
        </param>
        <briefdescription>
<para>This API write the data to the given register. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v_addr_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Address of the register </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_data_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; The data from the register </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v_len_u8</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; no of bytes to read</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>results of bus communication function </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" line="474" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c" bodystart="474" bodyend="487"/>
        <references refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" compoundref="bmg160_8h" startline="397">BMG160_RETURN_FUNCTION_TYPE</references>
        <references refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" compoundref="bma2x2_8h" startline="457">ERROR</references>
        <references refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" compoundref="bmg160_8h" startline="1435">BMG160_NULL</references>
        <references refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" compoundref="bmg160_8h" startline="1552">E_BMG160_NULL_PTR</references>
        <references refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" compoundref="bmg160_8h" startline="1708">bmg160_t::dev_addr</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">****************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Copyright<sp/>(C)<sp/>2010<sp/>-<sp/>2015<sp/>Bosch<sp/>Sensortec<sp/>GmbH</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>bmg160.c</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>Date:<sp/>2015/04/29</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/>Revision:<sp/>2.0.4<sp/>$</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>Usage:<sp/>Sensor<sp/>Driver<sp/>for<sp/>BMG160<sp/>sensor</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*</highlight></codeline>
<codeline lineno="11"><highlight class="comment">****************************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>License:</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>copyright<sp/>holder<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/><sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>COPYRIGHT<sp/>HOLDER</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY</highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="37"><highlight class="comment">*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="38"><highlight class="comment">*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="39"><highlight class="comment">*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="41"><highlight class="comment">*<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE</highlight></codeline>
<codeline lineno="43"><highlight class="comment">*</highlight></codeline>
<codeline lineno="44"><highlight class="comment">*<sp/>The<sp/>information<sp/>provided<sp/>is<sp/>believed<sp/>to<sp/>be<sp/>accurate<sp/>and<sp/>reliable.</highlight></codeline>
<codeline lineno="45"><highlight class="comment">*<sp/>The<sp/>copyright<sp/>holder<sp/>assumes<sp/>no<sp/>responsibility</highlight></codeline>
<codeline lineno="46"><highlight class="comment">*<sp/>for<sp/>the<sp/>consequences<sp/>of<sp/>use</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*<sp/>of<sp/>such<sp/>information<sp/>nor<sp/>for<sp/>any<sp/>infringement<sp/>of<sp/>patents<sp/>or</highlight></codeline>
<codeline lineno="48"><highlight class="comment">*<sp/>other<sp/>rights<sp/>of<sp/>third<sp/>parties<sp/>which<sp/>may<sp/>result<sp/>from<sp/>its<sp/>use.</highlight></codeline>
<codeline lineno="49"><highlight class="comment">*<sp/>No<sp/>license<sp/>is<sp/>granted<sp/>by<sp/>implication<sp/>or<sp/>otherwise<sp/>under<sp/>any<sp/>patent<sp/>or</highlight></codeline>
<codeline lineno="50"><highlight class="comment">*<sp/>patent<sp/>rights<sp/>of<sp/>the<sp/>copyright<sp/>holder.</highlight></codeline>
<codeline lineno="51"><highlight class="comment">**************************************************************************/</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bmg160_8h" kindref="compound">bmg160.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="bmg160_8c_1ab9003f5ddc1205f893ede611d8cf3ba1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbmg160__t" kindref="compound">bmg160_t</ref><sp/>*<ref refid="bmg160_8c_1ab9003f5ddc1205f893ede611d8cf3ba1" kindref="member">p_bmg160</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="bmg160_8h_1aa797a8723476d7b6a33261c883839608" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aa797a8723476d7b6a33261c883839608" kindref="member">bmg160_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbmg160__t" kindref="compound">bmg160_t</ref><sp/>*bmg160)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assign<sp/>the<sp/>initial<sp/>function<sp/>pointers*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>p_bmg160<sp/>=<sp/>bmg160;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Read<sp/>CHIP_ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a32579fb8372ca1a2804129719f6c231d" kindref="member">BMG160_CHIP_ID_ADDR</ref>,<sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>p_bmg160-&gt;<ref refid="structbmg160__t_1a6200a09866f5d4f2e2b1a1fda5b5af88" kindref="member">chip_id</ref><sp/>=<sp/>v_data_u8;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108" refid="bmg160_8h_1a92e97ae9be61bd4e79651e585da7f587" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a92e97ae9be61bd4e79651e585da7f587" kindref="member">bmg160_get_data_X</ref>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref><sp/>*v_data_x_s16)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Array<sp/>holding<sp/>the<sp/>gyro<sp/>data<sp/>x<sp/>LSB<sp/>and<sp/>MSB<sp/>data</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[0]<sp/>-<sp/>X<sp/>LSB</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[1]<sp/>-<sp/>X<sp/>MSB</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8[<ref refid="bmg160_8h_1a50ee28e67b291dd02ad9491844449f75" kindref="member">BMG160_X_DATA_SIZE</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>gyro<sp/>x<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1069495b82df752923f79db51c1388cb" kindref="member">BMG160_RATE_X_LSB_BIT__REG</ref>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8,<sp/><ref refid="bmg160_8h_1a45bcdae1f085a38bf57849ada8e65783" kindref="member">BMG160_X_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1ac3852302c5c8fc2dbec479009fd79387" kindref="member">BMG160_X_LSB_DATA</ref>]<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1ac3852302c5c8fc2dbec479009fd79387" kindref="member">BMG160_X_LSB_DATA</ref>],</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RATE_X_LSB_BIT);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_data_x_s16<sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="bma2x2_8h_1a0ce6887c26c1c49ad3be5710dd42bfd6" kindref="member">s32</ref>)((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data_u8[<ref refid="bmg160_8h_1a7b079dbbd08c59775df5425d22ade1dd" kindref="member">BMG160_X_MSB_DATA</ref>]))<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(v_data_u8[<ref refid="bmg160_8h_1ac3852302c5c8fc2dbec479009fd79387" kindref="member">BMG160_X_LSB_DATA</ref>]));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150" refid="bmg160_8h_1a65ef3ee00aa7fa92f623abd7cbd99275" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a65ef3ee00aa7fa92f623abd7cbd99275" kindref="member">bmg160_get_data_Y</ref>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref><sp/>*v_data_y_s16)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Array<sp/>holding<sp/>the<sp/>gyro<sp/>data<sp/>y<sp/>LSB<sp/>and<sp/>MSB<sp/>data</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[0]<sp/>-<sp/>Y<sp/>LSB</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[1]<sp/>-<sp/>Y<sp/>MSB</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8[<ref refid="bmg160_8h_1a76eabc363f559e3de571280351bc87a8" kindref="member">BMG160_Y_DATA_SIZE</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>gyro<sp/><sp/>y<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ac882f7cf6717978bbbd49d027f2eca09" kindref="member">BMG160_RATE_Y_LSB_BIT__REG</ref>,<sp/>v_data_u8,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a703321b7be23e2095e2d9c5811203e80" kindref="member">BMG160_Y_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1abca2a3b962f33c378bf088d6ac07c538" kindref="member">BMG160_Y_LSB_DATA</ref>]<sp/>=</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8[<ref refid="bmg160_8h_1abca2a3b962f33c378bf088d6ac07c538" kindref="member">BMG160_Y_LSB_DATA</ref>],</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RATE_Y_LSB_BIT);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_data_y_s16<sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="bma2x2_8h_1a0ce6887c26c1c49ad3be5710dd42bfd6" kindref="member">s32</ref>)((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data_u8[<ref refid="bmg160_8h_1a748fb765a53d670f0c1f8649be783b74" kindref="member">BMG160_Y_MSB_DATA</ref>]))</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</ref>)<sp/>|</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v_data_u8[<ref refid="bmg160_8h_1abca2a3b962f33c378bf088d6ac07c538" kindref="member">BMG160_Y_LSB_DATA</ref>]));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191" refid="bmg160_8h_1a91d5b00af44afaa3dc19c5a57a3fbdd4" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a91d5b00af44afaa3dc19c5a57a3fbdd4" kindref="member">bmg160_get_data_Z</ref>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref><sp/>*v_data_z_s16)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Array<sp/>holding<sp/>the<sp/>gyro<sp/>data<sp/>z<sp/>LSB<sp/>and<sp/>MSB<sp/>data</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[0]<sp/>-<sp/>Z<sp/>LSB</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[1]<sp/>-<sp/>Z<sp/>MSB</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8[<ref refid="bmg160_8h_1aff1a7c260e685a20634969183ce67f45" kindref="member">BMG160_Z_DATA_SIZE</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2dc4114ab6ebf0cf81f6aba61086e93e" kindref="member">BMG160_RATE_Z_LSB_BIT__REG</ref>,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8,<sp/><ref refid="bmg160_8h_1ae99fb56c8d227b84992945cec31f56ce" kindref="member">BMG160_Z_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1a438021644f599fa20e82c94b8f70c997" kindref="member">BMG160_Z_LSB_DATA</ref>]<sp/>=</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8[<ref refid="bmg160_8h_1a438021644f599fa20e82c94b8f70c997" kindref="member">BMG160_Z_LSB_DATA</ref>],</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RATE_Z_LSB_BIT);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_data_z_s16<sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="bma2x2_8h_1a0ce6887c26c1c49ad3be5710dd42bfd6" kindref="member">s32</ref>)((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data_u8[<ref refid="bmg160_8h_1a418908789cc8ed7a55c1ddd94acfd3db" kindref="member">BMG160_Z_MSB_DATA</ref>]))</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</ref>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(v_data_u8[<ref refid="bmg160_8h_1a438021644f599fa20e82c94b8f70c997" kindref="member">BMG160_Z_LSB_DATA</ref>]));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232" refid="bmg160_8h_1a6e94e4d9ae00c270950b19f32ee0a0f3" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a6e94e4d9ae00c270950b19f32ee0a0f3" kindref="member">bmg160_get_data_XYZ</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbmg160__data__t" kindref="compound">bmg160_data_t</ref><sp/>*data)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Array<sp/>holding<sp/>the<sp/>gyro<sp/>data<sp/>xyz<sp/>LSB<sp/>and<sp/>MSB<sp/>data</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[0]<sp/>-<sp/>X<sp/>LSB</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[1]<sp/>-<sp/>X<sp/>MSB</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[2]<sp/>-<sp/>Y<sp/>MSB</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[3]<sp/>-<sp/>Y<sp/>MSB</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[4]<sp/>-<sp/>Z<sp/>MSB</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[5]<sp/>-<sp/>Z<sp/>MSB</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8[<ref refid="bmg160_8h_1a125fa4ab81ebf25e5f4f4afb80df69a5" kindref="member">BMG160_XYZ_DATA_SIZE</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/>BMG160_INIT_VALUE};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1069495b82df752923f79db51c1388cb" kindref="member">BMG160_RATE_X_LSB_BIT__REG</ref>,<sp/>v_data_u8,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a666c6900ed60cd3f540d35efac3854cb" kindref="member">BMG160_ALL_DATA_FRAME_LENGTH</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Data<sp/>X<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1a68b80ec8e0f3bb992a52e1fce96aaf35" kindref="member">BMG160_DATA_FRAME_X_LSB_BYTE</ref>]<sp/>=</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8[<ref refid="bmg160_8h_1a68b80ec8e0f3bb992a52e1fce96aaf35" kindref="member">BMG160_DATA_FRAME_X_LSB_BYTE</ref>],</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RATE_X_LSB_BIT);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbmg160__data__t_1a41878a616c846d7576a1ed2191d0d328" kindref="member">datax</ref><sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="bma2x2_8h_1a0ce6887c26c1c49ad3be5710dd42bfd6" kindref="member">s32</ref>)((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data_u8[<ref refid="bmg160_8h_1ac78a6d54146687b5aca35402034dfad8" kindref="member">BMG160_DATA_FRAME_X_MSB_BYTE</ref>]))</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</ref>)<sp/>|</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v_data_u8[<ref refid="bmg160_8h_1a68b80ec8e0f3bb992a52e1fce96aaf35" kindref="member">BMG160_DATA_FRAME_X_LSB_BYTE</ref>]));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Data<sp/>Y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1aa9f88bbde7f8393c57ecee6a924c9544" kindref="member">BMG160_DATA_FRAME_Y_LSB_BYTE</ref>]<sp/>=</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8[<ref refid="bmg160_8h_1aa9f88bbde7f8393c57ecee6a924c9544" kindref="member">BMG160_DATA_FRAME_Y_LSB_BYTE</ref>],</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RATE_Y_LSB_BIT);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbmg160__data__t_1a2cc0ae4a652a569acce0593f2fe1d62b" kindref="member">datay</ref><sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="bma2x2_8h_1a0ce6887c26c1c49ad3be5710dd42bfd6" kindref="member">s32</ref>)((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data_u8[<ref refid="bmg160_8h_1a31e6f339fcff2f25480b2fefe2f96924" kindref="member">BMG160_DATA_FRAME_Y_MSB_BYTE</ref>]))</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</ref>)<sp/>|</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v_data_u8[<ref refid="bmg160_8h_1aa9f88bbde7f8393c57ecee6a924c9544" kindref="member">BMG160_DATA_FRAME_Y_LSB_BYTE</ref>]));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Data<sp/>Z<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1a27bd080089049ca0e35dbd7c973f94f4" kindref="member">BMG160_DATA_FRAME_Z_LSB_BYTE</ref>]<sp/>=</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8[<ref refid="bmg160_8h_1a27bd080089049ca0e35dbd7c973f94f4" kindref="member">BMG160_DATA_FRAME_Z_LSB_BYTE</ref>],</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RATE_Z_LSB_BIT);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbmg160__data__t_1ace1110ab117cbdcd93de4b6fc6fae21c" kindref="member">dataz</ref><sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="bma2x2_8h_1a0ce6887c26c1c49ad3be5710dd42bfd6" kindref="member">s32</ref>)((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data_u8[<ref refid="bmg160_8h_1a567896e883531b6266901747cb548597" kindref="member">BMG160_DATA_FRAME_Z_MSB_BYTE</ref>]))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</ref>)<sp/>|</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v_data_u8[<ref refid="bmg160_8h_1a27bd080089049ca0e35dbd7c973f94f4" kindref="member">BMG160_DATA_FRAME_Z_LSB_BYTE</ref>]));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295" refid="bmg160_8h_1ac2678441ff8499137e6235e7783ee797" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ac2678441ff8499137e6235e7783ee797" kindref="member">bmg160_get_data_XYZI</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbmg160__data__t" kindref="compound">bmg160_data_t</ref><sp/>*data)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Array<sp/>holding<sp/>the<sp/>gyro<sp/>data<sp/>xyz<sp/>LSB<sp/>and<sp/>MSB<sp/>data</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[0]<sp/>-<sp/>X<sp/>LSB</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[1]<sp/>-<sp/>X<sp/>MSB</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[2]<sp/>-<sp/>Y<sp/>MSB</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[3]<sp/>-<sp/>Y<sp/>MSB</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[4]<sp/>-<sp/>Z<sp/>MSB</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[5]<sp/>-<sp/>Z<sp/>MSB</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[6]<sp/>-<sp/>INVALID</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[7]<sp/>-<sp/>INTR<sp/>STATUS1</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[8]<sp/>-<sp/>INTR<sp/>STATUS2</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[9]<sp/>-<sp/>INTR<sp/>STATUS3</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[10]<sp/>-<sp/>INTR<sp/>STATUS4</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/><sp/>v_data_u8[11]<sp/>-<sp/>INTR<sp/>STATUS5</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8[<ref refid="bmg160_8h_1ab5e6315a9817389db70a80ebd0105245" kindref="member">BMG160_XYZ_INTR_DATA_SIZE</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>,<sp/>BMG160_INIT_VALUE};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1069495b82df752923f79db51c1388cb" kindref="member">BMG160_RATE_X_LSB_BIT__REG</ref>,<sp/>v_data_u8,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4dd73bf45d6173b696767cd1df84b14a" kindref="member">BMG160_XYZ_AND_INTR_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Data<sp/>X<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1a68b80ec8e0f3bb992a52e1fce96aaf35" kindref="member">BMG160_DATA_FRAME_X_LSB_BYTE</ref>]<sp/>=</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8[<ref refid="bmg160_8h_1a68b80ec8e0f3bb992a52e1fce96aaf35" kindref="member">BMG160_DATA_FRAME_X_LSB_BYTE</ref>],</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RATE_X_LSB_BIT);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbmg160__data__t_1a41878a616c846d7576a1ed2191d0d328" kindref="member">datax</ref><sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="bma2x2_8h_1a0ce6887c26c1c49ad3be5710dd42bfd6" kindref="member">s32</ref>)((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data_u8[<ref refid="bmg160_8h_1ac78a6d54146687b5aca35402034dfad8" kindref="member">BMG160_DATA_FRAME_X_MSB_BYTE</ref>]))</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</ref>)<sp/>|</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v_data_u8[<ref refid="bmg160_8h_1a68b80ec8e0f3bb992a52e1fce96aaf35" kindref="member">BMG160_DATA_FRAME_X_LSB_BYTE</ref>]));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Data<sp/>Y<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1aa9f88bbde7f8393c57ecee6a924c9544" kindref="member">BMG160_DATA_FRAME_Y_LSB_BYTE</ref>]<sp/>=</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8[<ref refid="bmg160_8h_1aa9f88bbde7f8393c57ecee6a924c9544" kindref="member">BMG160_DATA_FRAME_Y_LSB_BYTE</ref>],</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RATE_Y_LSB_BIT);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbmg160__data__t_1a2cc0ae4a652a569acce0593f2fe1d62b" kindref="member">datay</ref><sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="bma2x2_8h_1a0ce6887c26c1c49ad3be5710dd42bfd6" kindref="member">s32</ref>)((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data_u8[<ref refid="bmg160_8h_1a31e6f339fcff2f25480b2fefe2f96924" kindref="member">BMG160_DATA_FRAME_Y_MSB_BYTE</ref>]))</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</ref>)<sp/>|</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v_data_u8[<ref refid="bmg160_8h_1aa9f88bbde7f8393c57ecee6a924c9544" kindref="member">BMG160_DATA_FRAME_Y_LSB_BYTE</ref>]));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Data<sp/>Z<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1a27bd080089049ca0e35dbd7c973f94f4" kindref="member">BMG160_DATA_FRAME_Z_LSB_BYTE</ref>]<sp/>=</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8[<ref refid="bmg160_8h_1a27bd080089049ca0e35dbd7c973f94f4" kindref="member">BMG160_DATA_FRAME_Z_LSB_BYTE</ref>],</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RATE_Z_LSB_BIT);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbmg160__data__t_1ace1110ab117cbdcd93de4b6fc6fae21c" kindref="member">dataz</ref><sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="bma2x2_8h_1a0ce6887c26c1c49ad3be5710dd42bfd6" kindref="member">s32</ref>)((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data_u8[<ref refid="bmg160_8h_1a567896e883531b6266901747cb548597" kindref="member">BMG160_DATA_FRAME_Z_MSB_BYTE</ref>]))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="bmg160_8h_1ac1136818531012e8d6c52ddf0212db5d" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_08_BITS</ref>)<sp/>|</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v_data_u8[<ref refid="bmg160_8h_1a27bd080089049ca0e35dbd7c973f94f4" kindref="member">BMG160_DATA_FRAME_Z_LSB_BYTE</ref>]));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbmg160__data__t_1ac4e83581b8188df8ec9967afea397c4f" kindref="member">intstatus</ref>[<ref refid="bmg160_8h_1a1d845cafb1cfd097d9599197733aaf6f" kindref="member">BMG160_INTR0_STAT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1ae7d63d59609f408db4ff7795d245a798" kindref="member">BMG160_DATA_FRAME_INTR0_BYTE</ref>];</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbmg160__data__t_1ac4e83581b8188df8ec9967afea397c4f" kindref="member">intstatus</ref>[<ref refid="bmg160_8h_1a68c58f4b08116dad336f961cc11d743f" kindref="member">BMG160_INTR1_STAT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1a08efcf82b039ab742395583f55f73941" kindref="member">BMG160_DATA_FRAME_INTR1_BYTE</ref>];</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbmg160__data__t_1ac4e83581b8188df8ec9967afea397c4f" kindref="member">intstatus</ref>[<ref refid="bmg160_8h_1a649f6416b3feb0f12e8446d69e88adf7" kindref="member">BMG160_INTR2_STAT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1abc7a64c7c7ece74b6e7f0f18a8144d2a" kindref="member">BMG160_DATA_FRAME_INTR2_BYTE</ref>];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbmg160__data__t_1ac4e83581b8188df8ec9967afea397c4f" kindref="member">intstatus</ref>[<ref refid="bmg160_8h_1a966e3be12e8876c77c7e1b68322e67b3" kindref="member">BMG160_INTR3_STAT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1afb17661f8975773d54812a7921b5ad31" kindref="member">BMG160_DATA_FRAME_INTR3_BYTE</ref>];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbmg160__data__t_1ac4e83581b8188df8ec9967afea397c4f" kindref="member">intstatus</ref>[<ref refid="bmg160_8h_1ad0ba8bd165c8bf5cc8a1d07143f1314a" kindref="member">BMG160_INTR4_STAT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8[<ref refid="bmg160_8h_1abf46e7e98c71ba3da50b0be7376a0494" kindref="member">BMG160_DATA_FRAME_INTR4_BYTE</ref>];</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378" refid="bmg160_8h_1a9fc5a82ec26dc1d33380040cda5d142c" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a9fc5a82ec26dc1d33380040cda5d142c" kindref="member">bmg160_get_temp</ref>(<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref><sp/>*v_temp_s8)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>temperature<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2826f2d58bf6f90236958110c1e8053b" kindref="member">BMG160_TEMP_ADDR</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_temp_s8<sp/>=<sp/>v_data_u8;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412" refid="bmg160_8h_1a72a2e84c087cf8810d27ef17db8da32d" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a72a2e84c087cf8810d27ef17db8da32d" kindref="member">bmg160_read_register</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_addr_u8,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_data_u8,<sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_len_u8)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,<sp/>v_addr_u8,<sp/>v_data_u8,<sp/>v_len_u8);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443" refid="bmg160_8h_1a12ed87fb943479f53868fd5f88055cb4" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a12ed87fb943479f53868fd5f88055cb4" kindref="member">bmg160_burst_read</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_addr_u8,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_data_u8,<sp/><ref refid="bma2x2_8h_1a10e94b422ef0c20dcdec20d31a1f5049" kindref="member">u32</ref><sp/>v_len_u32)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BURST_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_addr_u8,<sp/>v_data_u8,<sp/>v_len_u32);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474" refid="bmg160_8h_1adcda878618ee27ff559a481f2031cea8" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1adcda878618ee27ff559a481f2031cea8" kindref="member">bmg160_write_register</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_addr_u8,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_data_u8,<sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_len_u8)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,<sp/>v_addr_u8,<sp/>v_data_u8,<sp/>v_len_u8);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505" refid="bmg160_8h_1ab4e8a56d2938a46900804309f71e7a0f" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ab4e8a56d2938a46900804309f71e7a0f" kindref="member">bmg160_get_intr_stat_reg_zero</ref>(</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_stat0_data_u8)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>interrupt<sp/>status<sp/>any<sp/>motion<sp/>and<sp/>high<sp/>rate*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad43833b94b5bebff954a103a44b77d97" kindref="member">BMG160_INTR_STAT_ZERO__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_stat0_data_u8<sp/>=</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,<sp/>BMG160_INTR_STAT_ZERO);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545" refid="bmg160_8h_1a407f295df9e009a21e62e35d4ba04db1" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a407f295df9e009a21e62e35d4ba04db1" kindref="member">bmg160_get_intr_stat_reg_one</ref>(</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_stat1_data_u8)</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>interrupt<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,<sp/><ref refid="bmg160_8h_1a5e6787887539037a9eb4fbd2b1f95c20" kindref="member">BMG160_INTR_STAT_ONE__REG</ref>,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_stat1_data_u8<sp/>=</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,<sp/>BMG160_INTR_STAT_ONE);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586" refid="bmg160_8h_1a362d7b6b0fd6f56e34d8c4d4daf5f76d" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a362d7b6b0fd6f56e34d8c4d4daf5f76d" kindref="member">bmg160_get_intr_stat_reg_two</ref>(</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_stat2_data_u8)</highlight></codeline>
<codeline lineno="588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>interrupt<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a28872923ba765282b22aa8ec5634da00" kindref="member">BMG160_INTR_STAT_TWO__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_stat2_data_u8<sp/>=</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,<sp/>BMG160_INTR_STAT_TWO);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629" refid="bmg160_8h_1a91eedffac192e0a94b210a19b6fb4965" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a91eedffac192e0a94b210a19b6fb4965" kindref="member">bmg160_get_intr_stat_reg_three</ref>(</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_stat3_data_u8)</highlight></codeline>
<codeline lineno="631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>interrupt<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ae9c1979419aac776353d2c89017cc253" kindref="member">BMG160_INTR_STAT_THREE__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_stat3_data_u8<sp/>=</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,<sp/>BMG160_INTR_STAT_THREE);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672" refid="bmg160_8h_1ae451018f517ed6c219ea15809c2a76b5" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ae451018f517ed6c219ea15809c2a76b5" kindref="member">bmg160_get_range_reg</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_range_u8)</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>gyro<sp/>range<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aff64f27bf38d4eae9341bc8809ec1041" kindref="member">BMG160_RANGE_ADDR_RANGE__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_range_u8<sp/>=</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,<sp/>BMG160_RANGE_ADDR_RANGE);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714" refid="bmg160_8h_1aa0e1646f1e526d648fed218d126d95d2" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aa0e1646f1e526d648fed218d126d95d2" kindref="member">bmg160_set_range_reg</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_range_u8)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_range_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1aadc29fe819a0fc259b04fd820fd6b4dd" kindref="member">BMG160_BIT_LENGTH_RANGE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>range*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aff64f27bf38d4eae9341bc8809ec1041" kindref="member">BMG160_RANGE_ADDR_RANGE__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RANGE_ADDR_RANGE,</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_range_u8);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aff64f27bf38d4eae9341bc8809ec1041" kindref="member">BMG160_RANGE_ADDR_RANGE__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="769" refid="bmg160_8h_1a6b7cf7f05c2cece99d8c466c628bf15c" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a6b7cf7f05c2cece99d8c466c628bf15c" kindref="member">bmg160_get_bw</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_bw_u8)</highlight></codeline>
<codeline lineno="770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>gyro<sp/>bandwidth*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,<sp/><ref refid="bmg160_8h_1a09cacf9cd371a10164b81c54189f9b43" kindref="member">BMG160_BW_ADDR__REG</ref>,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_bw_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1abb047833bd14de9cc69ad1d87b87d74a" kindref="member">BMG160_BW_ADDR</ref>);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814" refid="bmg160_8h_1a0716624896dab461c52893f81266d8bc" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a0716624896dab461c52893f81266d8bc" kindref="member">bmg160_set_bw</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_bw_u8)</highlight></codeline>
<codeline lineno="815"><highlight class="normal">{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_mode_u8r<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_auto_sleep_dur<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_bw_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1a7472ca7ca20600ce33c6464ddc0c6597" kindref="member">BMG160_BIT_LENGTH_BW</ref>)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8c_1afcc0f09c2d4a8513855fa59df11f7bda" kindref="member">bmg160_get_power_mode</ref>(&amp;v_mode_u8r);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_mode_u8r<sp/>==<sp/><ref refid="bmg160_8h_1a14fcc7dcbe5c908a10d88b566998918f" kindref="member">BMG160_MODE_ADVANCEDPOWERSAVING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>advance<sp/>power<sp/>save<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8c_1aab37401584dd42451df6593d46d41cf0" kindref="member">bmg160_get_auto_sleep_durn</ref>(</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_auto_sleep_dur);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8c_1aec5db851421c46ace7593ba4c092be98" kindref="member">bmg160_set_auto_sleep_durn</ref>(</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_dur,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_bw_u8);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>gyro<sp/>bandwidth*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a09cacf9cd371a10164b81c54189f9b43" kindref="member">BMG160_BW_ADDR__REG</ref>,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1abb047833bd14de9cc69ad1d87b87d74a" kindref="member">BMG160_BW_ADDR</ref>,<sp/>v_bw_u8);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a09cacf9cd371a10164b81c54189f9b43" kindref="member">BMG160_BW_ADDR__REG</ref>,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874" refid="bmg160_8h_1a62d69de73ee7897830ec16a2f9cdb71b" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a62d69de73ee7897830ec16a2f9cdb71b" kindref="member">bmg160_get_pmu_ext_tri_select</ref>(</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_pwu_ext_tri_select_u8)</highlight></codeline>
<codeline lineno="876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>READ<sp/>PMU<sp/>TRIGGER*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a502992cf090c78e6415214cd0d0af78e" kindref="member">BMG160_MODE_LPM2_ADDR_EXT_TRI_SELECT__REG</ref>,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_pwu_ext_tri_select_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_EXT_TRI_SELECT);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="892"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915" refid="bmg160_8h_1ab953ab33048319018db26a287785c11e" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ab953ab33048319018db26a287785c11e" kindref="member">bmg160_set_pmu_ext_tri_select</ref>(</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_pwu_ext_tri_select_u8)</highlight></codeline>
<codeline lineno="917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WRITE<sp/>PMU<sp/>TRIGGER*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a502992cf090c78e6415214cd0d0af78e" kindref="member">BMG160_MODE_LPM2_ADDR_EXT_TRI_SELECT__REG</ref>,</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_EXT_TRI_SELECT,<sp/>v_pwu_ext_tri_select_u8);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a502992cf090c78e6415214cd0d0af78e" kindref="member">BMG160_MODE_LPM2_ADDR_EXT_TRI_SELECT__REG</ref>,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="957" refid="bmg160_8h_1a7ec555111515efab4bf7f6302f9ca6ef" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a7ec555111515efab4bf7f6302f9ca6ef" kindref="member">bmg160_get_high_bw</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_high_bw_u8)</highlight></codeline>
<codeline lineno="958"><highlight class="normal">{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>high<sp/>bandwidth*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0d02c790c5ee3bb3b77197a254955eb3" kindref="member">BMG160_HIGH_BW__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_high_bw_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGH_BW);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="995" refid="bmg160_8h_1a748a5b498b33663f2a983d2000fd8d03" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a748a5b498b33663f2a983d2000fd8d03" kindref="member">bmg160_set_high_bw</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_high_bw_u8)</highlight></codeline>
<codeline lineno="996"><highlight class="normal">{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_high_bw_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1ac090d75d65ac879f39e66c8498041fed" kindref="member">BMG160_BIT_LENGTH_HIGH_BW</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>high<sp/>bandwidth*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0d02c790c5ee3bb3b77197a254955eb3" kindref="member">BMG160_HIGH_BW__REG</ref>,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGH_BW,<sp/>v_high_bw_u8);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0d02c790c5ee3bb3b77197a254955eb3" kindref="member">BMG160_HIGH_BW__REG</ref>,</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1042" refid="bmg160_8h_1af527bfc91c3411ab5af82fd9d2b76a00" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1af527bfc91c3411ab5af82fd9d2b76a00" kindref="member">bmg160_get_shadow_dis</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_shadow_dis_u8)</highlight></codeline>
<codeline lineno="1043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>shadow<sp/>dis*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4de953bfb9b86d4ec14f14553fa2da61" kindref="member">BMG160_SHADOW_DIS__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_shadow_dis_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SHADOW_DIS);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1080" refid="bmg160_8h_1a85340285f7b08aba2df8da491aefccac" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a85340285f7b08aba2df8da491aefccac" kindref="member">bmg160_set_shadow_dis</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_shadow_dis_u8)</highlight></codeline>
<codeline lineno="1081"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_shadow_dis_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1a015e03d51af9a7693d9882f870a57f0c" kindref="member">BMG160_BIT_LENGTH_SHADOW_DIS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>shadow<sp/>dis*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4de953bfb9b86d4ec14f14553fa2da61" kindref="member">BMG160_SHADOW_DIS__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SHADOW_DIS,<sp/>v_shadow_dis_u8);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4de953bfb9b86d4ec14f14553fa2da61" kindref="member">BMG160_SHADOW_DIS__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1121" refid="bmg160_8h_1a4a661ffd28a1f2f5ce4579d474bb583e" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a4a661ffd28a1f2f5ce4579d474bb583e" kindref="member">bmg160_set_soft_rst</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_soft_rst_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>v_soft_rst_u8<sp/>=<sp/><ref refid="bmg160_8h_1a93f1d7c8c954add2dc1cb5d2d0a351d5" kindref="member">BMG160_SOFT_RESET</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>soft<sp/>reset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1accf371c27f742651549f9c6d592418fa" kindref="member">BMG160_BGW_SOFT_RST_ADDR</ref>,<sp/>&amp;v_soft_rst_u8,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1159" refid="bmg160_8h_1a9e36b191e62ee68e4049c9f24a3d3dbd" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a9e36b191e62ee68e4049c9f24a3d3dbd" kindref="member">bmg160_get_data_enable</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_data_enable_u8)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>data<sp/>enable<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1abf9517713f412b75df0d26c04793ce9b" kindref="member">BMG160_INTR_ENABLE0_DATA__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_data_enable_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE0_DATA);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1197" refid="bmg160_8h_1a0172cca9a225291705d8e6f06bd117bd" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a0172cca9a225291705d8e6f06bd117bd" kindref="member">bmg160_set_data_enable</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_enable_u8)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>data<sp/>enable<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1abf9517713f412b75df0d26c04793ce9b" kindref="member">BMG160_INTR_ENABLE0_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE0_DATA,<sp/>v_data_enable_u8);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1abf9517713f412b75df0d26c04793ce9b" kindref="member">BMG160_INTR_ENABLE0_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1240" refid="bmg160_8h_1acc0794f668f39bb2dd258f723cb3df79" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1acc0794f668f39bb2dd258f723cb3df79" kindref="member">bmg160_get_fifo_enable</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_fifo_enable_u8)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>fifo<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ab972c1211306f90229547cf66c6dee83" kindref="member">BMG160_INTR_ENABLE0_FIFO__REG</ref>,</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_fifo_enable_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE0_FIFO);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1278" refid="bmg160_8h_1a718f8a7324f6f6ee1807fb645fbc8509" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a718f8a7324f6f6ee1807fb645fbc8509" kindref="member">bmg160_set_fifo_enable</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_fifo_enable_u8)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_fifo_enable_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1a62cc49aea82668082acc57d9ecdad720" kindref="member">BMG160_BIT_LENGTH_FIFO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>fifo<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ab972c1211306f90229547cf66c6dee83" kindref="member">BMG160_INTR_ENABLE0_FIFO__REG</ref>,</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE0_FIFO,<sp/>v_fifo_enable_u8);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ab972c1211306f90229547cf66c6dee83" kindref="member">BMG160_INTR_ENABLE0_FIFO__REG</ref>,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1325" refid="bmg160_8h_1adbd7ad9c85c5c673c4b0d59707b4aff8" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1adbd7ad9c85c5c673c4b0d59707b4aff8" kindref="member">bmg160_get_auto_offset_enable</ref>(</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_offset_enable_u8)</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>auto<sp/>offset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ab70cd20e26074ae52cc2d249c6263596" kindref="member">BMG160_INTR_ENABLE0_AUTO_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_offset_enable_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE0_AUTO_OFFSET);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1364" refid="bmg160_8h_1a17110d33e219df812f5ad1aa319a1c88" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a17110d33e219df812f5ad1aa319a1c88" kindref="member">bmg160_set_auto_offset_enable</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_offset_enable_u8)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>auto<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ab70cd20e26074ae52cc2d249c6263596" kindref="member">BMG160_INTR_ENABLE0_AUTO_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE0_AUTO_OFFSET,<sp/>v_offset_enable_u8);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ab70cd20e26074ae52cc2d249c6263596" kindref="member">BMG160_INTR_ENABLE0_AUTO_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1411" refid="bmg160_8h_1a3ea86f33ecabea49b788c3503037c9ce" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a3ea86f33ecabea49b788c3503037c9ce" kindref="member">bmg160_get_intr_output_type</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_param_u8,</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_intr_output_type_u8)</highlight></codeline>
<codeline lineno="1413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_param_u8)<sp/>{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>output<sp/>type*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a41c050ab7a84ab60aec18ec6c21d5f23" kindref="member">BMG160_INTR1</ref>:</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a84ecc408c16f09054f7114ee038ab729" kindref="member">BMG160_INTR_ENABLE1_IT1_OUTPUT_TYPE__REG</ref>,</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr_output_type_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE1_IT1_OUTPUT_TYPE);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1acc90266d0c8071a1399645f3feeff843" kindref="member">BMG160_INTR2</ref>:</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1afdeff592cabb7e5bda6da291b0e42d77" kindref="member">BMG160_INTR_ENABLE1_IT2_OUTPUT_TYPE__REG</ref>,</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr_output_type_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE1_IT2_OUTPUT_TYPE);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1472" refid="bmg160_8h_1ad1ec013b07af850a9e6811a8790d9ac6" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ad1ec013b07af850a9e6811a8790d9ac6" kindref="member">bmg160_set_intr_output_type</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_param_u8,</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_intr_output_type_u8)</highlight></codeline>
<codeline lineno="1474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_param_u8)<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>output<sp/>type*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a41c050ab7a84ab60aec18ec6c21d5f23" kindref="member">BMG160_INTR1</ref>:</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a84ecc408c16f09054f7114ee038ab729" kindref="member">BMG160_INTR_ENABLE1_IT1_OUTPUT_TYPE__REG</ref>,</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE1_IT1_OUTPUT_TYPE,</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_intr_output_type_u8);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a84ecc408c16f09054f7114ee038ab729" kindref="member">BMG160_INTR_ENABLE1_IT1_OUTPUT_TYPE__REG</ref>,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1acc90266d0c8071a1399645f3feeff843" kindref="member">BMG160_INTR2</ref>:</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1afdeff592cabb7e5bda6da291b0e42d77" kindref="member">BMG160_INTR_ENABLE1_IT2_OUTPUT_TYPE__REG</ref>,</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE1_IT2_OUTPUT_TYPE,</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_intr_output_type_u8);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1afdeff592cabb7e5bda6da291b0e42d77" kindref="member">BMG160_INTR_ENABLE1_IT2_OUTPUT_TYPE__REG</ref>,</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1543" refid="bmg160_8h_1a1c7f1642a907a0f2afe726a63f066a6b" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a1c7f1642a907a0f2afe726a63f066a6b" kindref="member">bmg160_get_intr_level</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_param_u8,</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_intr_level_u8)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_param_u8)<sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>active<sp/>level*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a41c050ab7a84ab60aec18ec6c21d5f23" kindref="member">BMG160_INTR1</ref>:</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad5228c6c1e66ab9de65471121f7dd895" kindref="member">BMG160_INTR_ENABLE1_IT1_LEVEL__REG</ref>,</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr_level_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE1_IT1_LEVEL);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1acc90266d0c8071a1399645f3feeff843" kindref="member">BMG160_INTR2</ref>:</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a27f462ea893a429fbb5f0d0ad0250277" kindref="member">BMG160_INTR_ENABLE1_IT2_LEVEL__REG</ref>,</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr_level_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE1_IT2_LEVEL);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1604" refid="bmg160_8h_1a67c128d17022c3bf07e007fcca0ab681" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a67c128d17022c3bf07e007fcca0ab681" kindref="member">bmg160_set_intr_level</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_param_u8,</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_intr_level_u8)</highlight></codeline>
<codeline lineno="1606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_param_u8)<sp/>{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>active<sp/>level*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a41c050ab7a84ab60aec18ec6c21d5f23" kindref="member">BMG160_INTR1</ref>:</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad5228c6c1e66ab9de65471121f7dd895" kindref="member">BMG160_INTR_ENABLE1_IT1_LEVEL__REG</ref>,</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE1_IT1_LEVEL,<sp/>v_intr_level_u8);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad5228c6c1e66ab9de65471121f7dd895" kindref="member">BMG160_INTR_ENABLE1_IT1_LEVEL__REG</ref>,</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1acc90266d0c8071a1399645f3feeff843" kindref="member">BMG160_INTR2</ref>:</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a27f462ea893a429fbb5f0d0ad0250277" kindref="member">BMG160_INTR_ENABLE1_IT2_LEVEL__REG</ref>,</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ENABLE1_IT2_LEVEL,<sp/>v_intr_level_u8);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a27f462ea893a429fbb5f0d0ad0250277" kindref="member">BMG160_INTR_ENABLE1_IT2_LEVEL__REG</ref>,</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1667" refid="bmg160_8h_1ac8e13dfe270b70fca8906498458c126e" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ac8e13dfe270b70fca8906498458c126e" kindref="member">bmg160_get_intr1_highrate</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_intr1_u8)</highlight></codeline>
<codeline lineno="1668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>high_rate<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ae9cbca35973a2336cedf17021eac418f" kindref="member">BMG160_INTR_MAP_ZERO_INTR1_HIGHRATE__REG</ref>,</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr1_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_MAP_ZERO_INTR1_HIGHRATE);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1705" refid="bmg160_8h_1ae5bfa10c20609bdc01668efe25d6f3ff" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ae5bfa10c20609bdc01668efe25d6f3ff" kindref="member">bmg160_set_intr1_highrate</ref>(</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_intr1_u8)</highlight></codeline>
<codeline lineno="1707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>high_rate<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ae9cbca35973a2336cedf17021eac418f" kindref="member">BMG160_INTR_MAP_ZERO_INTR1_HIGHRATE__REG</ref>,</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_MAP_ZERO_INTR1_HIGHRATE,<sp/>v_intr1_u8);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ae9cbca35973a2336cedf17021eac418f" kindref="member">BMG160_INTR_MAP_ZERO_INTR1_HIGHRATE__REG</ref>,</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1747" refid="bmg160_8h_1a597623160bd22dd527de8b250f97482b" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a597623160bd22dd527de8b250f97482b" kindref="member">bmg160_get_intr1_any_motion</ref>(</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_int1r_any_motion_u8)</highlight></codeline>
<codeline lineno="1749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>any<sp/>motion<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a68722977da9ea507d53d83309a0d738b" kindref="member">BMG160_INTR_MAP_ZERO_INTR1_ANY_MOTION__REG</ref>,</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_int1r_any_motion_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_MAP_ZERO_INTR1_ANY_MOTION);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1786" refid="bmg160_8h_1a7fdcdc158859f8beb218e859fd89c26d" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a7fdcdc158859f8beb218e859fd89c26d" kindref="member">bmg160_set_intr1_any_motion</ref>(</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_int1r_any_motion_u8)</highlight></codeline>
<codeline lineno="1788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>any<sp/>motion<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a68722977da9ea507d53d83309a0d738b" kindref="member">BMG160_INTR_MAP_ZERO_INTR1_ANY_MOTION__REG</ref>,</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_MAP_ZERO_INTR1_ANY_MOTION,<sp/>v_int1r_any_motion_u8);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a68722977da9ea507d53d83309a0d738b" kindref="member">BMG160_INTR_MAP_ZERO_INTR1_ANY_MOTION__REG</ref>,</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1833" refid="bmg160_8h_1a2ff4a29ccae93baed6630994443d8412" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a2ff4a29ccae93baed6630994443d8412" kindref="member">bmg160_get_intr_data</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_axis_u8,</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_intr_data_u8)</highlight></codeline>
<codeline lineno="1835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_axis_u8)<sp/>{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>data<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a28acc96571bb343a73b619b83a54748f" kindref="member">BMG160_INTR1_DATA</ref>:</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a5ee7a98b2ff2d7b1c2f731a9c59184de" kindref="member">BMG160_MAP_ONE_INTR1_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR1_DATA);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1ad97df96eeba3b68f5645924ca1419fc9" kindref="member">BMG160_INTR2_DATA</ref>:</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a65ea6fee988070fb100026dd6b51f187" kindref="member">BMG160_MAP_ONE_INTR2_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR2_DATA);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1893" refid="bmg160_8h_1a6cedfaf745cd8772f6b7d8b3738e0357" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a6cedfaf745cd8772f6b7d8b3738e0357" kindref="member">bmg160_set_intr_data</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_axis_u8,</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_intr_data_u8)</highlight></codeline>
<codeline lineno="1895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_axis_u8)<sp/>{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>data<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a28acc96571bb343a73b619b83a54748f" kindref="member">BMG160_INTR1_DATA</ref>:</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a5ee7a98b2ff2d7b1c2f731a9c59184de" kindref="member">BMG160_MAP_ONE_INTR1_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR1_DATA,<sp/>v_intr_data_u8);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a5ee7a98b2ff2d7b1c2f731a9c59184de" kindref="member">BMG160_MAP_ONE_INTR1_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1ad97df96eeba3b68f5645924ca1419fc9" kindref="member">BMG160_INTR2_DATA</ref>:</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a65ea6fee988070fb100026dd6b51f187" kindref="member">BMG160_MAP_ONE_INTR2_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR2_DATA,<sp/>v_intr_data_u8);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a65ea6fee988070fb100026dd6b51f187" kindref="member">BMG160_MAP_ONE_INTR2_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1961" refid="bmg160_8h_1a815dec8cf0f14fd8f04e4174d7b29bc8" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a815dec8cf0f14fd8f04e4174d7b29bc8" kindref="member">bmg160_get_intr2_offset</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_axis_u8,</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_intr2_offset_u8)</highlight></codeline>
<codeline lineno="1963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_axis_u8)<sp/>{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>offset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" kindref="member">BMG160_FAST_OFFSET</ref>:</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af521d3616e6932191a0166059a632d18" kindref="member">BMG160_MAP_ONE_INTR2_FAST_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr2_offset_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR2_FAST_OFFSET);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1abbb3061d31b88fc9b8e03a18a83d30e8" kindref="member">BMG160_AUTO_OFFSET</ref>:</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9f43051f52393ffcd432c50ed5f4bd0e" kindref="member">BMG160_MAP_ONE_INTR2_AUTO_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr2_offset_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR2_AUTO_OFFSET);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2021" refid="bmg160_8h_1a190b41529a02cd7503c8a3f0cf47cc51" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a190b41529a02cd7503c8a3f0cf47cc51" kindref="member">bmg160_set_intr2_offset</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_axis_u8,</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_intr2_offset_u8)</highlight></codeline>
<codeline lineno="2023"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_axis_u8)<sp/>{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" kindref="member">BMG160_FAST_OFFSET</ref>:</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af521d3616e6932191a0166059a632d18" kindref="member">BMG160_MAP_ONE_INTR2_FAST_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR2_FAST_OFFSET,<sp/>v_intr2_offset_u8);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af521d3616e6932191a0166059a632d18" kindref="member">BMG160_MAP_ONE_INTR2_FAST_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1abbb3061d31b88fc9b8e03a18a83d30e8" kindref="member">BMG160_AUTO_OFFSET</ref>:</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9f43051f52393ffcd432c50ed5f4bd0e" kindref="member">BMG160_MAP_ONE_INTR2_AUTO_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR2_AUTO_OFFSET,<sp/>v_intr2_offset_u8);</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9f43051f52393ffcd432c50ed5f4bd0e" kindref="member">BMG160_MAP_ONE_INTR2_AUTO_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2089" refid="bmg160_8h_1af0e21e0c41757107b61fc40faf9c1b44" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1af0e21e0c41757107b61fc40faf9c1b44" kindref="member">bmg160_get_intr_offset</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_axis_u8,</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_intr1_offset_u8)</highlight></codeline>
<codeline lineno="2091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_axis_u8)<sp/>{</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>offset*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" kindref="member">BMG160_FAST_OFFSET</ref>:</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a39a65266a0d6fd986ed07b1fecc633db" kindref="member">BMG160_MAP_ONE_INTR1_FAST_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr1_offset_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR1_FAST_OFFSET);</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1abbb3061d31b88fc9b8e03a18a83d30e8" kindref="member">BMG160_AUTO_OFFSET</ref>:</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4dcc66f511bd903419670b6779a0e82e" kindref="member">BMG160_MAP_ONE_INTR1_AUTO_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr1_offset_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR1_AUTO_OFFSET);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2149" refid="bmg160_8h_1a8549eb4c10d8cd9304b860c30b76bb9d" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a8549eb4c10d8cd9304b860c30b76bb9d" kindref="member">bmg160_set_intr1_offset</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_axis_u8,</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_intr1_offset_u8)</highlight></codeline>
<codeline lineno="2151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_axis_u8)<sp/>{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" kindref="member">BMG160_FAST_OFFSET</ref>:</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a39a65266a0d6fd986ed07b1fecc633db" kindref="member">BMG160_MAP_ONE_INTR1_FAST_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR1_FAST_OFFSET,<sp/>v_intr1_offset_u8);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a39a65266a0d6fd986ed07b1fecc633db" kindref="member">BMG160_MAP_ONE_INTR1_FAST_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1abbb3061d31b88fc9b8e03a18a83d30e8" kindref="member">BMG160_AUTO_OFFSET</ref>:</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4dcc66f511bd903419670b6779a0e82e" kindref="member">BMG160_MAP_ONE_INTR1_AUTO_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR1_AUTO_OFFSET,<sp/>v_intr1_offset_u8);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4dcc66f511bd903419670b6779a0e82e" kindref="member">BMG160_MAP_ONE_INTR1_AUTO_OFFSET__REG</ref>,</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2212" refid="bmg160_8h_1ad6e71b8debacb9ee0a73c9055b62ae11" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ad6e71b8debacb9ee0a73c9055b62ae11" kindref="member">bmg160_get_intr2_fifo</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_intr_fifo_u8)</highlight></codeline>
<codeline lineno="2213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0701e0e7502ddfbec76175069dae97c4" kindref="member">BMG160_MAP_ONE_INTR2_FIFO__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr_fifo_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR2_FIFO);</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2249" refid="bmg160_8h_1a8c4f36316a75fd07e863e6fac2aa76ee" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a8c4f36316a75fd07e863e6fac2aa76ee" kindref="member">bmg160_get_intr1_fifo</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_intr_fifo_u8)</highlight></codeline>
<codeline lineno="2250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>fifo<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a74a20d661abf6ef16dcf8d7fb76591fe" kindref="member">BMG160_MAP_ONE_INTR1_FIFO__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr_fifo_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR1_FIFO);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2293" refid="bmg160_8h_1a94abf253de02c1a2adb011c09f98a0a2" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a94abf253de02c1a2adb011c09f98a0a2" kindref="member">bmg160_set_intr_fifo</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_axis_u8,</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_intr_fifo_u8)</highlight></codeline>
<codeline lineno="2295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_axis_u8)<sp/>{</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>fifo<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a41c050ab7a84ab60aec18ec6c21d5f23" kindref="member">BMG160_INTR1</ref>:</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a74a20d661abf6ef16dcf8d7fb76591fe" kindref="member">BMG160_MAP_ONE_INTR1_FIFO__REG</ref>,</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR1_FIFO,<sp/>v_intr_fifo_u8);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a74a20d661abf6ef16dcf8d7fb76591fe" kindref="member">BMG160_MAP_ONE_INTR1_FIFO__REG</ref>,</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1acc90266d0c8071a1399645f3feeff843" kindref="member">BMG160_INTR2</ref>:</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0701e0e7502ddfbec76175069dae97c4" kindref="member">BMG160_MAP_ONE_INTR2_FIFO__REG</ref>,</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MAP_ONE_INTR2_FIFO,<sp/>v_intr_fifo_u8);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0701e0e7502ddfbec76175069dae97c4" kindref="member">BMG160_MAP_ONE_INTR2_FIFO__REG</ref>,</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2356" refid="bmg160_8h_1a561687e4c0f3f1188c6975ca669fe604" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a561687e4c0f3f1188c6975ca669fe604" kindref="member">bmg160_get_intr2_highrate</ref>(</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_intr2_highrate_u8)</highlight></codeline>
<codeline lineno="2358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>high<sp/>rate<sp/>interrupt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a265bf22fcf4647002652befd2cb8dbea" kindref="member">BMG160_INTR_MAP_TWO_INTR2_HIGHRATE__REG</ref>,</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr2_highrate_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_MAP_TWO_INTR2_HIGHRATE);</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2395" refid="bmg160_8h_1ab9e10f14c5ee1e5d4d41d672c9f45aaa" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ab9e10f14c5ee1e5d4d41d672c9f45aaa" kindref="member">bmg160_set_intr2_highrate</ref>(</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_intr2_highrate_u8)</highlight></codeline>
<codeline lineno="2397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>high<sp/>rate<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a265bf22fcf4647002652befd2cb8dbea" kindref="member">BMG160_INTR_MAP_TWO_INTR2_HIGHRATE__REG</ref>,</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_MAP_TWO_INTR2_HIGHRATE,<sp/>v_intr2_highrate_u8);</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a265bf22fcf4647002652befd2cb8dbea" kindref="member">BMG160_INTR_MAP_TWO_INTR2_HIGHRATE__REG</ref>,</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2438" refid="bmg160_8h_1ad5a81978ca1bf2f2010d01d7d88d0db4" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ad5a81978ca1bf2f2010d01d7d88d0db4" kindref="member">bmg160_get_intr2_any_motion</ref>(</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_intr2_any_motion_u8)</highlight></codeline>
<codeline lineno="2440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>any<sp/>motion<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af07e60e9189440e2f7d38f3a4439f869" kindref="member">BMG160_INTR_MAP_TWO_INTR2_ANY_MOTION__REG</ref>,</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_intr2_any_motion_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_MAP_TWO_INTR2_ANY_MOTION);</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2477" refid="bmg160_8h_1ae28d877e2ff38117996e646f6aa0926a" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ae28d877e2ff38117996e646f6aa0926a" kindref="member">bmg160_set_intr2_any_motion</ref>(</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_intr2_any_motion_u8)</highlight></codeline>
<codeline lineno="2479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>any<sp/>motion<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af07e60e9189440e2f7d38f3a4439f869" kindref="member">BMG160_INTR_MAP_TWO_INTR2_ANY_MOTION__REG</ref>,</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_MAP_TWO_INTR2_ANY_MOTION,<sp/>v_intr2_any_motion_u8);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af07e60e9189440e2f7d38f3a4439f869" kindref="member">BMG160_INTR_MAP_TWO_INTR2_ANY_MOTION__REG</ref>,</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2525" refid="bmg160_8h_1a2afcdad76e506735468a3d520c9adef8" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a2afcdad76e506735468a3d520c9adef8" kindref="member">bmg160_get_offset_unfilt</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_param_u8,</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_offset_unfilt_u8)</highlight></codeline>
<codeline lineno="2527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_param_u8)<sp/>{</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>offset<sp/>unfilt<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a691b1bf393a69e9f6f018f5310ed434d" kindref="member">BMG160_SLOW_OFFSET</ref>:</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ada9090f2dc0a137b389772f0624cbdb5" kindref="member">BMG160_INTR_ZERO_ADDR_SLOW_OFFSET_UNFILT__REG</ref>,</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_offset_unfilt_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ZERO_ADDR_SLOW_OFFSET_UNFILT);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" kindref="member">BMG160_FAST_OFFSET</ref>:</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a26d8f5cf120f16e46eedaa1f56f80b6a" kindref="member">BMG160_INTR_ONE_ADDR_FAST_OFFSET_UNFILT__REG</ref>,</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_offset_unfilt_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ONE_ADDR_FAST_OFFSET_UNFILT);</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2586" refid="bmg160_8h_1aa83b8fe302e96bddf16add8c7f86652e" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aa83b8fe302e96bddf16add8c7f86652e" kindref="member">bmg160_set_offset_unfilt</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_param_u8,</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_offset_unfilt_u8)</highlight></codeline>
<codeline lineno="2588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_param_u8)<sp/>{</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>offset<sp/>unfilt<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a691b1bf393a69e9f6f018f5310ed434d" kindref="member">BMG160_SLOW_OFFSET</ref>:</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ada9090f2dc0a137b389772f0624cbdb5" kindref="member">BMG160_INTR_ZERO_ADDR_SLOW_OFFSET_UNFILT__REG</ref>,</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ZERO_ADDR_SLOW_OFFSET_UNFILT,</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_offset_unfilt_u8);</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ada9090f2dc0a137b389772f0624cbdb5" kindref="member">BMG160_INTR_ZERO_ADDR_SLOW_OFFSET_UNFILT__REG</ref>,</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1aa4d049a4c431c2ee041672d7e6dddbbc" kindref="member">BMG160_FAST_OFFSET</ref>:</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a26d8f5cf120f16e46eedaa1f56f80b6a" kindref="member">BMG160_INTR_ONE_ADDR_FAST_OFFSET_UNFILT__REG</ref>,</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ONE_ADDR_FAST_OFFSET_UNFILT,</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_offset_unfilt_u8);</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a26d8f5cf120f16e46eedaa1f56f80b6a" kindref="member">BMG160_INTR_ONE_ADDR_FAST_OFFSET_UNFILT__REG</ref>,</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2656" refid="bmg160_8h_1a6ac00aabacc4ffdd50bb65db4e2fa78d" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a6ac00aabacc4ffdd50bb65db4e2fa78d" kindref="member">bmg160_get_unfilt_data</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_param_u8,</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_unfilt_data_u8)</highlight></codeline>
<codeline lineno="2658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_param_u8)<sp/>{</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>unfilt<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1adbcb8ca77325a28cfc3fb6e326cd78b2" kindref="member">BMG160_HIGHRATE_UNFILT_DATA</ref>:</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1adcc70452b9bd3e4c66a14542cbc48251" kindref="member">BMG160_INTR_ZERO_ADDR_HIGHRATE_UNFILT_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_unfilt_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ZERO_ADDR_HIGHRATE_UNFILT_DATA);</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a740818babe01b8d4b584c6a56a5a8e45" kindref="member">BMG160_ANY_MOTION_UNFILT_DATA</ref>:</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1862d46e0a6c5b7c0bb45d7f2729f0ca" kindref="member">BMG160_INTR_ZERO_ADDR_ANY_MOTION_UNFILT_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_unfilt_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ZERO_ADDR_ANY_MOTION_UNFILT_DATA);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2716" refid="bmg160_8h_1a692b581980b6275ab1ae6bbfa4931d18" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a692b581980b6275ab1ae6bbfa4931d18" kindref="member">bmg160_set_unfilt_data</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_param_u8,</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_unfilt_data_u8)</highlight></codeline>
<codeline lineno="2718"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_param_u8)<sp/>{</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>unfilt<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1adbcb8ca77325a28cfc3fb6e326cd78b2" kindref="member">BMG160_HIGHRATE_UNFILT_DATA</ref>:</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1adcc70452b9bd3e4c66a14542cbc48251" kindref="member">BMG160_INTR_ZERO_ADDR_HIGHRATE_UNFILT_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ZERO_ADDR_HIGHRATE_UNFILT_DATA,</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_unfilt_data_u8);</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1adcc70452b9bd3e4c66a14542cbc48251" kindref="member">BMG160_INTR_ZERO_ADDR_HIGHRATE_UNFILT_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a740818babe01b8d4b584c6a56a5a8e45" kindref="member">BMG160_ANY_MOTION_UNFILT_DATA</ref>:</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1862d46e0a6c5b7c0bb45d7f2729f0ca" kindref="member">BMG160_INTR_ZERO_ADDR_ANY_MOTION_UNFILT_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ZERO_ADDR_ANY_MOTION_UNFILT_DATA,</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_unfilt_data_u8);</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1862d46e0a6c5b7c0bb45d7f2729f0ca" kindref="member">BMG160_INTR_ZERO_ADDR_ANY_MOTION_UNFILT_DATA__REG</ref>,</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2778" refid="bmg160_8h_1a10eaa1f5b2cfb82eeff46abf38fd542d" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a10eaa1f5b2cfb82eeff46abf38fd542d" kindref="member">bmg160_get_any_motion_thres</ref>(</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_any_motion_thres_u8)</highlight></codeline>
<codeline lineno="2780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>any<sp/>motion<sp/>threshold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a5ab5fa11565c2d5fbf7fb738b8fd02dc" kindref="member">BMG160_INTR_ONE_ADDR_ANY_MOTION_THRES__REG</ref>,</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_any_motion_thres_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ONE_ADDR_ANY_MOTION_THRES);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2814" refid="bmg160_8h_1aa7a0c84e32779b158880b014441b02b7" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aa7a0c84e32779b158880b014441b02b7" kindref="member">bmg160_set_any_motion_thres</ref>(</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_any_motion_thres_u8)</highlight></codeline>
<codeline lineno="2816"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>any<sp/>motion<sp/>threshold*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a5ab5fa11565c2d5fbf7fb738b8fd02dc" kindref="member">BMG160_INTR_ONE_ADDR_ANY_MOTION_THRES__REG</ref>,</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_ONE_ADDR_ANY_MOTION_THRES,<sp/>v_any_motion_thres_u8);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a5ab5fa11565c2d5fbf7fb738b8fd02dc" kindref="member">BMG160_INTR_ONE_ADDR_ANY_MOTION_THRES__REG</ref>,</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2856" refid="bmg160_8h_1a86ebc72419d137db4b354e9e5abfddde" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a86ebc72419d137db4b354e9e5abfddde" kindref="member">bmg160_get_awake_durn</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_awake_durn_u8)</highlight></codeline>
<codeline lineno="2857"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>awake<sp/>duration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a5ccbe01eb1d9de21cb96ea8f9bc1a618" kindref="member">BMG160_INTR_TWO_ADDR_AWAKE_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_awake_durn_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_TWO_ADDR_AWAKE_DURN);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2894" refid="bmg160_8h_1a1136521430ab95fa9945189127f0e93a" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a1136521430ab95fa9945189127f0e93a" kindref="member">bmg160_set_awake_durn</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_awake_durn_u8)</highlight></codeline>
<codeline lineno="2895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>awake<sp/>duration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a5ccbe01eb1d9de21cb96ea8f9bc1a618" kindref="member">BMG160_INTR_TWO_ADDR_AWAKE_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_TWO_ADDR_AWAKE_DURN,<sp/>v_awake_durn_u8);</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a5ccbe01eb1d9de21cb96ea8f9bc1a618" kindref="member">BMG160_INTR_TWO_ADDR_AWAKE_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2935" refid="bmg160_8h_1a41ee1c9c15663b5f2dc3a67e46bdd2e9" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a41ee1c9c15663b5f2dc3a67e46bdd2e9" kindref="member">bmg160_get_any_motion_durn_sample</ref>(</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_durn_sample_u8)</highlight></codeline>
<codeline lineno="2937"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>any<sp/>motion<sp/>awake<sp/>samples*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a62305a240a9921de5ec5ef3a26f52337" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_DURN_SAMPLE__REG</ref>,</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_durn_sample_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_TWO_ADDR_ANY_MOTION_DURN_SAMPLE);</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2974" refid="bmg160_8h_1a7fb21a7bfb9450ff0ced53d05fdd7f2a" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a7fb21a7bfb9450ff0ced53d05fdd7f2a" kindref="member">bmg160_set_any_motion_durn_sample</ref>(</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_durn_sample_u8)</highlight></codeline>
<codeline lineno="2976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>awake<sp/>duration<sp/>samples*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a62305a240a9921de5ec5ef3a26f52337" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_DURN_SAMPLE__REG</ref>,</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_TWO_ADDR_ANY_MOTION_DURN_SAMPLE,</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_durn_sample_u8);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a62305a240a9921de5ec5ef3a26f52337" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_DURN_SAMPLE__REG</ref>,</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3024" refid="bmg160_8h_1a797c51b2fdd99942ffde900a40caad73" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a797c51b2fdd99942ffde900a40caad73" kindref="member">bmg160_get_any_motion_enable_axis</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_any_motion_axis_u8)</highlight></codeline>
<codeline lineno="3026"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data1_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>any<sp/>motion<sp/>axis<sp/>enable*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3cdc1178c40e194258379e108de4e76b" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_X__REG</ref>,</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data1_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_any_motion_axis_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data1_u8,</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_X);</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a968306db05957811a280554957d475e6" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data1_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_any_motion_axis_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data1_u8,</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Y);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9123ea6d95e094af9bf993e697d0d262" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data1_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_any_motion_axis_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data1_u8,</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Z);</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3093" refid="bmg160_8h_1a429070a72df5bb404f4a10223b79a605" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a429070a72df5bb404f4a10223b79a605" kindref="member">bmg160_set_any_motion_enable_axis</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_any_motion_axis_u8)</highlight></codeline>
<codeline lineno="3095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>any<sp/>motion<sp/>axis<sp/>enable*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3cdc1178c40e194258379e108de4e76b" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_X__REG</ref>,</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_X,</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_any_motion_axis_u8);</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3cdc1178c40e194258379e108de4e76b" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_X__REG</ref>,</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a968306db05957811a280554957d475e6" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Y,</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_any_motion_axis_u8);</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a968306db05957811a280554957d475e6" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9123ea6d95e094af9bf993e697d0d262" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Z,</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_any_motion_axis_u8);</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9123ea6d95e094af9bf993e697d0d262" kindref="member">BMG160_INTR_TWO_ADDR_ANY_MOTION_ENABLE_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3169" refid="bmg160_8h_1ab9a046c348ebcfc3355dcb50c8088767" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ab9a046c348ebcfc3355dcb50c8088767" kindref="member">bmg160_get_fifo_wm_enable</ref>(</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_fifo_wm_enable_u8)</highlight></codeline>
<codeline lineno="3171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>fifo<sp/>water<sp/>mark<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ae8ddce1b80cae8408d72595a372ad115" kindref="member">BMG160_INTR_4_FIFO_WM_ENABLE__REG</ref>,</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_fifo_wm_enable_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_4_FIFO_WM_ENABLE);</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3206" refid="bmg160_8h_1aacefafcbff146f89f5a2ccee2234c98e" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aacefafcbff146f89f5a2ccee2234c98e" kindref="member">bmg160_set_fifo_wm_enable</ref>(</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_fifo_wm_enable_u8)</highlight></codeline>
<codeline lineno="3208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>fifo<sp/>water<sp/>mark<sp/>enable*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_fifo_wm_enable_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1a772b902bba11b597437b950df81c846e" kindref="member">BMG160_BIT_LENGTH_FIFO_WM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ae8ddce1b80cae8408d72595a372ad115" kindref="member">BMG160_INTR_4_FIFO_WM_ENABLE__REG</ref>,</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_INTR_4_FIFO_WM_ENABLE,<sp/>v_fifo_wm_enable_u8);</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ae8ddce1b80cae8408d72595a372ad115" kindref="member">BMG160_INTR_4_FIFO_WM_ENABLE__REG</ref>,</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3251" refid="bmg160_8h_1acd68f0104ea37f143a9d13cb9a35c1f7" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1acd68f0104ea37f143a9d13cb9a35c1f7" kindref="member">bmg160_set_rst_intr</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_rst_int_u8)</highlight></codeline>
<codeline lineno="3252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>reset<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a36f046f5cd3d7f27ccf04e8ef2d72124" kindref="member">BMG160_RST_LATCH_ADDR_RST_INTR__REG</ref>,</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RST_LATCH_ADDR_RST_INTR,<sp/>v_rst_int_u8);</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a36f046f5cd3d7f27ccf04e8ef2d72124" kindref="member">BMG160_RST_LATCH_ADDR_RST_INTR__REG</ref>,</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3289" refid="bmg160_8h_1a5b6cbba7c8e811474f6ef9083c53cda0" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a5b6cbba7c8e811474f6ef9083c53cda0" kindref="member">bmg160_set_offset_rst</ref>(</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_offset_rst_u8)</highlight></codeline>
<codeline lineno="3291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>reset<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f600cdfee26157ad5e89f341c48fda1" kindref="member">BMG160_RST_LATCH_ADDR_OFFSET_RST__REG</ref>,</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RST_LATCH_ADDR_OFFSET_RST,<sp/>v_offset_rst_u8);</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f600cdfee26157ad5e89f341c48fda1" kindref="member">BMG160_RST_LATCH_ADDR_OFFSET_RST__REG</ref>,</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3331" refid="bmg160_8h_1aea300b1b3351f9a11443ec87dbc00c5d" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aea300b1b3351f9a11443ec87dbc00c5d" kindref="member">bmg160_get_latch_stat</ref>(</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_latch_stat_u8)</highlight></codeline>
<codeline lineno="3333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>latch<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa8a12733e1570f33a12477479317aac4" kindref="member">BMG160_RST_LATCH_ADDR_LATCH_STAT__REG</ref>,</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_latch_stat_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RST_LATCH_ADDR_LATCH_STAT);</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3370" refid="bmg160_8h_1a66062d8417c858aff3e7b16ddc633ad8" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a66062d8417c858aff3e7b16ddc633ad8" kindref="member">bmg160_set_latch_stat</ref>(</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_latch_stat_u8)</highlight></codeline>
<codeline lineno="3372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>latch<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa8a12733e1570f33a12477479317aac4" kindref="member">BMG160_RST_LATCH_ADDR_LATCH_STAT__REG</ref>,</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RST_LATCH_ADDR_LATCH_STAT,<sp/>v_latch_stat_u8);</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa8a12733e1570f33a12477479317aac4" kindref="member">BMG160_RST_LATCH_ADDR_LATCH_STAT__REG</ref>,</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3425" refid="bmg160_8h_1ac5eda7aba7f83224d3574b767c0bd4d7" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ac5eda7aba7f83224d3574b767c0bd4d7" kindref="member">bmg160_get_latch_intr</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_latch_intr_u8)</highlight></codeline>
<codeline lineno="3426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>latch<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa37a4a2a69310d5d9e7c5c6765628b5a" kindref="member">BMG160_RST_LATCH_ADDR_LATCH_INTR__REG</ref>,</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_latch_intr_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RST_LATCH_ADDR_LATCH_INTR);</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3476" refid="bmg160_8h_1a779035909f85a363930fb90ed7a5abea" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a779035909f85a363930fb90ed7a5abea" kindref="member">bmg160_set_latch_intr</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_latch_intr_u8)</highlight></codeline>
<codeline lineno="3477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>latch<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa37a4a2a69310d5d9e7c5c6765628b5a" kindref="member">BMG160_RST_LATCH_ADDR_LATCH_INTR__REG</ref>,</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_RST_LATCH_ADDR_LATCH_INTR,<sp/>v_latch_intr_u8);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa37a4a2a69310d5d9e7c5c6765628b5a" kindref="member">BMG160_RST_LATCH_ADDR_LATCH_INTR__REG</ref>,</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3522" refid="bmg160_8h_1a0a149f1dd66a876ea33b437f36e78d78" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a0a149f1dd66a876ea33b437f36e78d78" kindref="member">bmg160_get_highrate_hyst</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_highrate_hyst_u8)</highlight></codeline>
<codeline lineno="3524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>high<sp/>hysteresis*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1fd5190a504c0f4b38e2ba64b5649cfc" kindref="member">BMG160_HIGHRATE_HYST_X__REG</ref>,</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_highrate_hyst_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_HYST_X);</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad9da5437dcbc32575e428ca5242364c5" kindref="member">BMG160_HIGHRATE_HYST_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_highrate_hyst_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_HYST_Y);</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a86e39b5a8f6c3dd73e0821e6cd38bc66" kindref="member">BMG160_HIGHRATE_HYST_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_highrate_hyst_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_HYST_Z);</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3590" refid="bmg160_8h_1a255e4964c2cd0d47f8b57e300c60f4fc" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a255e4964c2cd0d47f8b57e300c60f4fc" kindref="member">bmg160_set_highrate_hyst</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_highrate_hyst_u8)</highlight></codeline>
<codeline lineno="3592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>high<sp/>hysteresis*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1fd5190a504c0f4b38e2ba64b5649cfc" kindref="member">BMG160_HIGHRATE_HYST_X__REG</ref>,</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_HYST_X,<sp/>v_highrate_hyst_u8);</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1fd5190a504c0f4b38e2ba64b5649cfc" kindref="member">BMG160_HIGHRATE_HYST_X__REG</ref>,</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad9da5437dcbc32575e428ca5242364c5" kindref="member">BMG160_HIGHRATE_HYST_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_HYST_Y,<sp/>v_highrate_hyst_u8);</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad9da5437dcbc32575e428ca5242364c5" kindref="member">BMG160_HIGHRATE_HYST_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a86e39b5a8f6c3dd73e0821e6cd38bc66" kindref="member">BMG160_HIGHRATE_HYST_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_HYST_Z,<sp/>v_highrate_hyst_u8);</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a86e39b5a8f6c3dd73e0821e6cd38bc66" kindref="member">BMG160_HIGHRATE_HYST_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3670" refid="bmg160_8h_1aea4199768949105faae319a665158331" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aea4199768949105faae319a665158331" kindref="member">bmg160_get_highrate_thres</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_highrate_thres_u8)</highlight></codeline>
<codeline lineno="3672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>high<sp/>rate<sp/>threshold*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a6f8612292fcaaca8f7102638b801b00d" kindref="member">BMG160_HIGHRATE_THRES_X__REG</ref>,</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_highrate_thres_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_THRES_X);</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a163b894f95c67814e3ae13d2b87a7893" kindref="member">BMG160_HIGHRATE_THRES_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_highrate_thres_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_THRES_Y);</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a34ffc9a17ebfc73a883ca95c55ae24e2" kindref="member">BMG160_HIGHRATE_THRES_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_highrate_thres_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_THRES_Z);</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3712"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3738" refid="bmg160_8h_1a5902bec25dbc7e69ede387d74d3c6d92" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a5902bec25dbc7e69ede387d74d3c6d92" kindref="member">bmg160_set_highrate_thres</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_highrate_thres_u8)</highlight></codeline>
<codeline lineno="3740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>high<sp/>rate<sp/>threshold*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a6f8612292fcaaca8f7102638b801b00d" kindref="member">BMG160_HIGHRATE_THRES_X__REG</ref>,</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_THRES_X,<sp/>v_highrate_thres_u8);</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a6f8612292fcaaca8f7102638b801b00d" kindref="member">BMG160_HIGHRATE_THRES_X__REG</ref>,</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a163b894f95c67814e3ae13d2b87a7893" kindref="member">BMG160_HIGHRATE_THRES_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_THRES_Y,<sp/>v_highrate_thres_u8);</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a163b894f95c67814e3ae13d2b87a7893" kindref="member">BMG160_HIGHRATE_THRES_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a34ffc9a17ebfc73a883ca95c55ae24e2" kindref="member">BMG160_HIGHRATE_THRES_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_THRES_Z,<sp/>v_highrate_thres_u8);</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a34ffc9a17ebfc73a883ca95c55ae24e2" kindref="member">BMG160_HIGHRATE_THRES_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3819" refid="bmg160_8h_1a381e611f4f96b75d6e3f42ccf7efbee5" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a381e611f4f96b75d6e3f42ccf7efbee5" kindref="member">bmg160_get_highrate_enable_axis</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_enable_u8)</highlight></codeline>
<codeline lineno="3821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>high<sp/>rate<sp/>axis<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3864d7bac0368f2574812f81cc98fa7e" kindref="member">BMG160_HIGHRATE_ENABLE_X__REG</ref>,</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_enable_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_ENABLE_X);</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4d34810aa71a3e979eb7e1ee2a5b7a50" kindref="member">BMG160_HIGHRATE_ENABLE_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_enable_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_ENABLE_Y);</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a90bbe7a12ffecada57294397587656df" kindref="member">BMG160_HIGHRATE_ENABLE_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_enable_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_ENABLE_Z);</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3888" refid="bmg160_8h_1aca25699ec8be33af85262cf428164304" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aca25699ec8be33af85262cf428164304" kindref="member">bmg160_set_highrate_enable_axis</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_enable_u8)</highlight></codeline>
<codeline lineno="3890"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>high<sp/>rate<sp/>axis<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3864d7bac0368f2574812f81cc98fa7e" kindref="member">BMG160_HIGHRATE_ENABLE_X__REG</ref>,</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_ENABLE_X,<sp/>v_enable_u8);</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3864d7bac0368f2574812f81cc98fa7e" kindref="member">BMG160_HIGHRATE_ENABLE_X__REG</ref>,</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4d34810aa71a3e979eb7e1ee2a5b7a50" kindref="member">BMG160_HIGHRATE_ENABLE_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_ENABLE_Y,<sp/>v_enable_u8);</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4d34810aa71a3e979eb7e1ee2a5b7a50" kindref="member">BMG160_HIGHRATE_ENABLE_Y__REG</ref>,</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a90bbe7a12ffecada57294397587656df" kindref="member">BMG160_HIGHRATE_ENABLE_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_HIGHRATE_ENABLE_Z,<sp/>v_enable_u8);</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a90bbe7a12ffecada57294397587656df" kindref="member">BMG160_HIGHRATE_ENABLE_Z__REG</ref>,</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="3942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3971" refid="bmg160_8h_1aba2340289f482eebd137735edca129ef" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aba2340289f482eebd137735edca129ef" kindref="member">bmg160_get_highrate_durn_axis</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_highrate_durn_axis_u8)</highlight></codeline>
<codeline lineno="3973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>high<sp/>rate<sp/>duration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af53ac9387998c0b217ce519d78ba20f3" kindref="member">BMG160_HIGHRATE_DURN_X_ADDR</ref>,</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_highrate_durn_axis_u8<sp/>=<sp/>v_data_u8;</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa29d0fa9bfe12bc13dadbdab15cced71" kindref="member">BMG160_HIGHRATE_THRES_Y_ADDR</ref>,</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_highrate_durn_axis_u8<sp/>=<sp/>v_data_u8;</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3f1aed9608ccc546d480c1e64c9f59ac" kindref="member">BMG160_HIGHRATE_THRES_Z_ADDR</ref>,</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_highrate_durn_axis_u8<sp/>=<sp/>v_data_u8;</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4039" refid="bmg160_8h_1ab34049faf158840c438f1fc394338d2a" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ab34049faf158840c438f1fc394338d2a" kindref="member">bmg160_set_highrate_durn_axis</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_highrate_durn_axis_u8)</highlight></codeline>
<codeline lineno="4041"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>high<sp/>rate<sp/>duration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/>v_highrate_durn_axis_u8;</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3f83ac6c105076876e86aea75ad5cc54" kindref="member">BMG160_HIGHRATE_THRES_X_ADDR</ref>,</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/>v_highrate_durn_axis_u8;</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa29d0fa9bfe12bc13dadbdab15cced71" kindref="member">BMG160_HIGHRATE_THRES_Y_ADDR</ref>,</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/>v_highrate_durn_axis_u8;</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3f1aed9608ccc546d480c1e64c9f59ac" kindref="member">BMG160_HIGHRATE_THRES_Z_ADDR</ref>,</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4100" refid="bmg160_8h_1a9b840c740e9efba007ed860cf4ae349b" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a9b840c740e9efba007ed860cf4ae349b" kindref="member">bmg160_get_slow_offset_thres</ref>(</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_offset_thres_u8)</highlight></codeline>
<codeline lineno="4102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>slow<sp/>offset<sp/>threshold*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a379c8fb8177c486730000dc08358113b" kindref="member">BMG160_SLOW_OFFSET_THRES__REG</ref>,</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_offset_thres_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SLOW_OFFSET_THRES);</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4140" refid="bmg160_8h_1abaf7a9837a4640e271bee3c6277c6c98" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1abaf7a9837a4640e271bee3c6277c6c98" kindref="member">bmg160_set_slow_offset_thres</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_offset_thres_u8)</highlight></codeline>
<codeline lineno="4141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>slow<sp/>offset<sp/>threshold*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a379c8fb8177c486730000dc08358113b" kindref="member">BMG160_SLOW_OFFSET_THRES__REG</ref>,</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SLOW_OFFSET_THRES,<sp/>v_offset_thres_u8);</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a379c8fb8177c486730000dc08358113b" kindref="member">BMG160_SLOW_OFFSET_THRES__REG</ref>,</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4185" refid="bmg160_8h_1a8ca14e510feb10f66cecca186d4badb9" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a8ca14e510feb10f66cecca186d4badb9" kindref="member">bmg160_get_slow_offset_durn</ref>(</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_offset_durn_u8)</highlight></codeline>
<codeline lineno="4187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>slow<sp/>offset<sp/>duration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ac26de88165389df846701c3c6c718939" kindref="member">BMG160_SLOW_OFFSET_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_offset_durn_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SLOW_OFFSET_DURN);</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4228" refid="bmg160_8h_1ac51fbfc32df639af36dc4b74345a8b7d" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ac51fbfc32df639af36dc4b74345a8b7d" kindref="member">bmg160_set_slow_offset_durn</ref>(</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_offset_durn_u8)</highlight></codeline>
<codeline lineno="4230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>slow<sp/>offset<sp/>duration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ac26de88165389df846701c3c6c718939" kindref="member">BMG160_SLOW_OFFSET_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SLOW_OFFSET_DURN,<sp/>v_offset_durn_u8);</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ac26de88165389df846701c3c6c718939" kindref="member">BMG160_SLOW_OFFSET_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4277" refid="bmg160_8h_1abefbe4ccf81fa4b00cbd28d961b1d8b8" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1abefbe4ccf81fa4b00cbd28d961b1d8b8" kindref="member">bmg160_get_slow_offset_enable_axis</ref>(</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,<sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_slow_offset_u8)</highlight></codeline>
<codeline lineno="4279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>slow<sp/>offset<sp/>axis<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a8224c600e2c4039405467dec8856c266" kindref="member">BMG160_SLOW_OFFSET_ENABLE_X__REG</ref>,</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_slow_offset_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SLOW_OFFSET_ENABLE_X);</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a80f5f9fd91f8566dbaa254ae6bd5b8cc" kindref="member">BMG160_SLOW_OFFSET_ENABLE_Y__REG</ref>,</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_slow_offset_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SLOW_OFFSET_ENABLE_Y);</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a56f6f76720361f50da2ae052f7a8ad7d" kindref="member">BMG160_SLOW_OFFSET_ENABLE_Z__REG</ref>,</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_slow_offset_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SLOW_OFFSET_ENABLE_Z);</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4347" refid="bmg160_8h_1a05b52795cb8108fdc18e634714d5bc97" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a05b52795cb8108fdc18e634714d5bc97" kindref="member">bmg160_set_slow_offset_enable_axis</ref>(</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,<sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_slow_offset_u8)</highlight></codeline>
<codeline lineno="4349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>slow<sp/>offset<sp/>axis<sp/>enable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a8224c600e2c4039405467dec8856c266" kindref="member">BMG160_SLOW_OFFSET_ENABLE_X__REG</ref>,</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SLOW_OFFSET_ENABLE_X,<sp/>v_slow_offset_u8);</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a8224c600e2c4039405467dec8856c266" kindref="member">BMG160_SLOW_OFFSET_ENABLE_X__REG</ref>,</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a80f5f9fd91f8566dbaa254ae6bd5b8cc" kindref="member">BMG160_SLOW_OFFSET_ENABLE_Y__REG</ref>,</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SLOW_OFFSET_ENABLE_Y,<sp/>v_slow_offset_u8);</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a80f5f9fd91f8566dbaa254ae6bd5b8cc" kindref="member">BMG160_SLOW_OFFSET_ENABLE_Y__REG</ref>,</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a56f6f76720361f50da2ae052f7a8ad7d" kindref="member">BMG160_SLOW_OFFSET_ENABLE_Z__REG</ref>,</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_SLOW_OFFSET_ENABLE_Z,</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_slow_offset_u8);</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a56f6f76720361f50da2ae052f7a8ad7d" kindref="member">BMG160_SLOW_OFFSET_ENABLE_Z__REG</ref>,</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4430" refid="bmg160_8h_1a9f07f8845fbfc48ea9d00c494ef5db63" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a9f07f8845fbfc48ea9d00c494ef5db63" kindref="member">bmg160_get_offset_word_length</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_offset_word_length_u8)</highlight></codeline>
<codeline lineno="4432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1ae59b810fffa8bf82dd6642db5646315a" kindref="member">BMG160_AUTO_OFFSET_WORD_LENGHTH</ref>:</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0565f26e0cdcc2770b61275e713047af" kindref="member">BMG160_AUTO_OFFSET_WORD_LENGHTH__REG</ref>,</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_offset_word_length_u8<sp/>=</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ae59b810fffa8bf82dd6642db5646315a" kindref="member">BMG160_AUTO_OFFSET_WORD_LENGHTH</ref>);</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a1ba3c5180b6d742c6d77a6b1f144d120" kindref="member">BMG160_FAST_OFFSET_WORD_LENGHTH</ref>:</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa38ba6212521a8e6ae0ce9bef598f684" kindref="member">BMG160_FAST_OFFSET_WORD_LENGHTH__REG</ref>,</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_offset_word_length_u8<sp/>=</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1ba3c5180b6d742c6d77a6b1f144d120" kindref="member">BMG160_FAST_OFFSET_WORD_LENGHTH</ref>);</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4493" refid="bmg160_8h_1a3d045fa4071eb0f1be7daca424424407" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a3d045fa4071eb0f1be7daca424424407" kindref="member">bmg160_set_offset_word_length</ref>(</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,<sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_offset_word_length_u8)</highlight></codeline>
<codeline lineno="4495"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1ae59b810fffa8bf82dd6642db5646315a" kindref="member">BMG160_AUTO_OFFSET_WORD_LENGHTH</ref>:</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0565f26e0cdcc2770b61275e713047af" kindref="member">BMG160_AUTO_OFFSET_WORD_LENGHTH__REG</ref>,</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ae59b810fffa8bf82dd6642db5646315a" kindref="member">BMG160_AUTO_OFFSET_WORD_LENGHTH</ref>,</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_offset_word_length_u8);</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0565f26e0cdcc2770b61275e713047af" kindref="member">BMG160_AUTO_OFFSET_WORD_LENGHTH__REG</ref>,</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a1ba3c5180b6d742c6d77a6b1f144d120" kindref="member">BMG160_FAST_OFFSET_WORD_LENGHTH</ref>:</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa38ba6212521a8e6ae0ce9bef598f684" kindref="member">BMG160_FAST_OFFSET_WORD_LENGHTH__REG</ref>,</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1ba3c5180b6d742c6d77a6b1f144d120" kindref="member">BMG160_FAST_OFFSET_WORD_LENGHTH</ref>,</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_offset_word_length_u8);</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa38ba6212521a8e6ae0ce9bef598f684" kindref="member">BMG160_FAST_OFFSET_WORD_LENGHTH__REG</ref>,</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4549" refid="bmg160_8h_1af11623673e1d06266715b7cb09d80cbc" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1af11623673e1d06266715b7cb09d80cbc" kindref="member">bmg160_enable_fast_offset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4bd3f8bff7429e54f2be9abf62f210b4" kindref="member">BMG160_FAST_OFFSET_ENABLE__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FAST_OFFSET_ENABLE,</highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4bd3f8bff7429e54f2be9abf62f210b4" kindref="member">BMG160_FAST_OFFSET_ENABLE__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4593" refid="bmg160_8h_1a6abfe8fd451fa5ec91110ba6e0621382" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a6abfe8fd451fa5ec91110ba6e0621382" kindref="member">bmg160_get_fast_offset_enable_axis</ref>(</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_fast_offset_u8)</highlight></codeline>
<codeline lineno="4595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>fast<sp/>offset<sp/>enable<sp/>axis*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aff1722c5f4f5cc667ec16429b165f0ca" kindref="member">BMG160_FAST_OFFSET_ENABLE_XYZ__REG</ref>,</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_fast_offset_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FAST_OFFSET_ENABLE_XYZ);</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4642" refid="bmg160_8h_1a7e67e0c5e75495b8d3b6fb13a5462f6a" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a7e67e0c5e75495b8d3b6fb13a5462f6a" kindref="member">bmg160_set_fast_offset_enable_axis</ref>(</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,<sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_fast_offset_u8)</highlight></codeline>
<codeline lineno="4644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>fast<sp/>offset<sp/>enable<sp/>axis*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4c7ef2bc3687039512cf330beb239c1f" kindref="member">BMG160_FAST_OFFSET_ENABLE_X__REG</ref>,</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FAST_OFFSET_ENABLE_X,<sp/>v_fast_offset_u8);</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4c7ef2bc3687039512cf330beb239c1f" kindref="member">BMG160_FAST_OFFSET_ENABLE_X__REG</ref>,</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ae871cdd2f2f4781f4617ca2c5ac8ec26" kindref="member">BMG160_FAST_OFFSET_ENABLE_Y__REG</ref>,</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FAST_OFFSET_ENABLE_Y,<sp/>v_fast_offset_u8);</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ae871cdd2f2f4781f4617ca2c5ac8ec26" kindref="member">BMG160_FAST_OFFSET_ENABLE_Y__REG</ref>,</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a94a47b5dbb80f488637fbe548f665703" kindref="member">BMG160_FAST_OFFSET_ENABLE_Z__REG</ref>,</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FAST_OFFSET_ENABLE_Z,<sp/>v_fast_offset_u8);</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a94a47b5dbb80f488637fbe548f665703" kindref="member">BMG160_FAST_OFFSET_ENABLE_Z__REG</ref>,</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4714" refid="bmg160_8h_1ae8b18b4eece8a3d280e2f035259829a6" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ae8b18b4eece8a3d280e2f035259829a6" kindref="member">bmg160_get_nvm_remain</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_nvm_remain_u8)</highlight></codeline>
<codeline lineno="4715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>NVM<sp/>program*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9a96a574861a1714044dc31fd68c4e44" kindref="member">BMG160_TRIM_NVM_CTRL_ADDR_NVM_REMAIN__REG</ref>,</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_nvm_remain_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_NVM_CTRL_ADDR_NVM_REMAIN);</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4749" refid="bmg160_8h_1aa10a17bd980259cd5464b0ced5b835d0" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aa10a17bd980259cd5464b0ced5b835d0" kindref="member">bmg160_set_nvm_load</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_nvm_load_u8)</highlight></codeline>
<codeline lineno="4750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>NVM<sp/>program*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1fb7e826c646db690d358820140eefd3" kindref="member">BMG160_TRIM_NVM_CTRL_ADDR_NVM_LOAD__REG</ref>,</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_NVM_CTRL_ADDR_NVM_LOAD,<sp/>v_nvm_load_u8);</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a1fb7e826c646db690d358820140eefd3" kindref="member">BMG160_TRIM_NVM_CTRL_ADDR_NVM_LOAD__REG</ref>,</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4787" refid="bmg160_8h_1ab4929ed39454925d53824e69d1c81198" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ab4929ed39454925d53824e69d1c81198" kindref="member">bmg160_get_nvm_rdy</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_nvm_rdy_u8)</highlight></codeline>
<codeline lineno="4788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aedb70154488747435ef92bcb00788766" kindref="member">BMG160_TRIM_NVM_CTRL_ADDR_NVM_RDY__REG</ref>,</highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_nvm_rdy_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_NVM_CTRL_ADDR_NVM_RDY);</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4821" refid="bmg160_8h_1ab7529a9d746f6746afde15281153933a" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ab7529a9d746f6746afde15281153933a" kindref="member">bmg160_set_nvm_prog_trig</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>nvm_prog_trig)</highlight></codeline>
<codeline lineno="4822"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aad2e789a89fb6460b617ac0cab840f36" kindref="member">BMG160_TRIM_NVM_CTRL_ADDR_NVM_PROG_TRIG__REG</ref>,</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_NVM_CTRL_ADDR_NVM_PROG_TRIG,<sp/>nvm_prog_trig);</highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aad2e789a89fb6460b617ac0cab840f36" kindref="member">BMG160_TRIM_NVM_CTRL_ADDR_NVM_PROG_TRIG__REG</ref>,</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4859" refid="bmg160_8h_1a82b840d80ec869b7a0c6362b8de561be" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a82b840d80ec869b7a0c6362b8de561be" kindref="member">bmg160_get_nvm_prog_mode</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*nvm_prog_mode)</highlight></codeline>
<codeline lineno="4860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0aee98ec3adef93b3713e0394849745a" kindref="member">BMG160_TRIM_NVM_CTRL_ADDR_NVM_PROG_MODE__REG</ref>,</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*nvm_prog_mode<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_NVM_CTRL_ADDR_NVM_PROG_MODE);</highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4894" refid="bmg160_8h_1a970cd3b06e65cbfe246b5db91be04f1f" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a970cd3b06e65cbfe246b5db91be04f1f" kindref="member">bmg160_set_nvm_prog_mode</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>nvm_prog_mode)</highlight></codeline>
<codeline lineno="4895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0aee98ec3adef93b3713e0394849745a" kindref="member">BMG160_TRIM_NVM_CTRL_ADDR_NVM_PROG_MODE__REG</ref>,</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_NVM_CTRL_ADDR_NVM_PROG_MODE,<sp/>nvm_prog_mode);</highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0aee98ec3adef93b3713e0394849745a" kindref="member">BMG160_TRIM_NVM_CTRL_ADDR_NVM_PROG_MODE__REG</ref>,</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4939" refid="bmg160_8h_1a7088e756233577a7e328bfb052044cb4" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a7088e756233577a7e328bfb052044cb4" kindref="member">bmg160_get_i2c_wdt</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_i2c_wdt_u8)</highlight></codeline>
<codeline lineno="4941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>i2c<sp/>wdt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a4d20ab13852159053dce73735cdd43c5" kindref="member">BMG160_I2C_WDT_ENABLE</ref>:</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af97640bc8dde3bf6119320c2a23a5db6" kindref="member">BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_ENABLE__REG</ref>,</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_i2c_wdt_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_ENABLE);</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a7fc5515db577be81bd09a04ea2a97734" kindref="member">BMG160_I2C_WDT_SELECT</ref>:</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a76df1ab5bb2d943c220294547169baad" kindref="member">BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_SELECT__REG</ref>,</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_i2c_wdt_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_SELECT);</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="4973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4999" refid="bmg160_8h_1a692a1dafaff3f29b5b623127542def7e" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a692a1dafaff3f29b5b623127542def7e" kindref="member">bmg160_set_i2c_wdt</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_channel_u8,</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_i2c_wdt_u8)</highlight></codeline>
<codeline lineno="5001"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_channel_u8)<sp/>{</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>i2c<sp/>wdt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a4d20ab13852159053dce73735cdd43c5" kindref="member">BMG160_I2C_WDT_ENABLE</ref>:</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af97640bc8dde3bf6119320c2a23a5db6" kindref="member">BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_ENABLE__REG</ref>,</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_ENABLE,<sp/>v_i2c_wdt_u8);</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af97640bc8dde3bf6119320c2a23a5db6" kindref="member">BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_ENABLE__REG</ref>,</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a7fc5515db577be81bd09a04ea2a97734" kindref="member">BMG160_I2C_WDT_SELECT</ref>:</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a76df1ab5bb2d943c220294547169baad" kindref="member">BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_SELECT__REG</ref>,</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_SELECT,<sp/>v_i2c_wdt_u8);</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a76df1ab5bb2d943c220294547169baad" kindref="member">BMG160_BGW_SPI3_WDT_ADDR_I2C_WDT_SELECT__REG</ref>,</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5062" refid="bmg160_8h_1a024fad333036f317474b87eedc217a57" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a024fad333036f317474b87eedc217a57" kindref="member">bmg160_get_spi3</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_spi3_u8)</highlight></codeline>
<codeline lineno="5063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a272309bd015d97397092b26d643e88a8" kindref="member">BMG160_BGW_SPI3_WDT_ADDR_SPI3__REG</ref>,</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_spi3_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_BGW_SPI3_WDT_ADDR_SPI3);</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5100" refid="bmg160_8h_1a4e11226846b8ca9a9948a6045714d313" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a4e11226846b8ca9a9948a6045714d313" kindref="member">bmg160_set_spi3</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_spi3_u8)</highlight></codeline>
<codeline lineno="5101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a272309bd015d97397092b26d643e88a8" kindref="member">BMG160_BGW_SPI3_WDT_ADDR_SPI3__REG</ref>,</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_BGW_SPI3_WDT_ADDR_SPI3,<sp/>v_spi3_u8);</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a272309bd015d97397092b26d643e88a8" kindref="member">BMG160_BGW_SPI3_WDT_ADDR_SPI3__REG</ref>,</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5138" refid="bmg160_8h_1af9f79f3abf6b53213c621917f277f4d1" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1af9f79f3abf6b53213c621917f277f4d1" kindref="member">bmg160_get_fifo_tag</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_fifo_tag_u8)</highlight></codeline>
<codeline lineno="5139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>fifo<sp/>tag*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4667b47c3e9cf15bc7379e495f47d463" kindref="member">BMG160_FIFO_CGF1_ADDR_TAG__REG</ref>,</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_fifo_tag_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FIFO_CGF1_ADDR_TAG);</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5174" refid="bmg160_8h_1acac872f4c4d9c8461220218870887d9f" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1acac872f4c4d9c8461220218870887d9f" kindref="member">bmg160_set_fifo_tag</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_fifo_tag_u8)</highlight></codeline>
<codeline lineno="5175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_fifo_tag_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1a0a3160aaf6dd938b4b5afc71cdbfb210" kindref="member">BMG160_BIT_LENGTH_FIFO_TAG</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>fifo<sp/>tag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4667b47c3e9cf15bc7379e495f47d463" kindref="member">BMG160_FIFO_CGF1_ADDR_TAG__REG</ref>,</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FIFO_CGF1_ADDR_TAG,<sp/>v_fifo_tag_u8);</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a4667b47c3e9cf15bc7379e495f47d463" kindref="member">BMG160_FIFO_CGF1_ADDR_TAG__REG</ref>,</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5217" refid="bmg160_8h_1a3e732529c274de7de952131c7599b30c" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a3e732529c274de7de952131c7599b30c" kindref="member">bmg160_get_fifo_wm_level</ref>(</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_fifo_wm_level_u8)</highlight></codeline>
<codeline lineno="5219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1adf3349bb913d44cc0298dd576a573f44" kindref="member">BMG160_FIFO_CGF1_ADDR_WML__REG</ref>,</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_fifo_wm_level_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FIFO_CGF1_ADDR_WML);</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5251" refid="bmg160_8h_1a9fc23e5fd9d5ff94801eaaeb8fe08e1f" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a9fc23e5fd9d5ff94801eaaeb8fe08e1f" kindref="member">bmg160_set_fifo_wm_level</ref>(</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_fifo_wm_level_u8)</highlight></codeline>
<codeline lineno="5253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_fifo_wm_level_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1aa5e8a3c3868fd5587a4ea816cc039b85" kindref="member">BMG160_FIFO_WM_LENGTH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1adf3349bb913d44cc0298dd576a573f44" kindref="member">BMG160_FIFO_CGF1_ADDR_WML__REG</ref>,</highlight></codeline>
<codeline lineno="5265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FIFO_CGF1_ADDR_WML,<sp/>v_fifo_wm_level_u8);</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1adf3349bb913d44cc0298dd576a573f44" kindref="member">BMG160_FIFO_CGF1_ADDR_WML__REG</ref>,</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5312" refid="bmg160_8h_1a57e58acf8555a13e43f4d2798f3b52b0" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a57e58acf8555a13e43f4d2798f3b52b0" kindref="member">bmg160_get_offset</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_axis_u8,</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref><sp/>*v_offset_s16)</highlight></codeline>
<codeline lineno="5314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data1_u8r<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data2_u8r<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_axis_u8)<sp/>{</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ac0cc96caf9d8a6fc30aebb4646ae69fe" kindref="member">BMG160_TRIM_GP0_ADDR_OFFSET_X__REG</ref>,</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data1_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data1_u8r,</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_GP0_ADDR_OFFSET_X);</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a75f56eebc8aba517a690e71358fb34f8" kindref="member">BMG160_OFC1_ADDR_OFFSET_X__REG</ref>,</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data2_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data2_u8r,</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_OFC1_ADDR_OFFSET_X);</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/>((v_data2_u8r<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a218a5ce25f11adb5d881c5e26acb8aec" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_02_BITS</ref>)</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>v_data1_u8r);</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,<sp/><ref refid="bmg160_8h_1a3b93c1ece8fd6cf15b0769d35c6dba79" kindref="member">BMG160_OFC2_ADDR</ref>,</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data1_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_offset_s16<sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)((((<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data1_u8r))</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="bmg160_8h_1a81fa5a8cc60a059a5633d36aa5b038f9" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_04_BITS</ref>)</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(v_data2_u8r));</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3951db9a873cf84ac9d92d757507b805" kindref="member">BMG160_TRIM_GP0_ADDR_OFFSET_Y__REG</ref>,</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data1_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data1_u8r,</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_GP0_ADDR_OFFSET_Y);</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a5be5e51a86cfbba575b3dd7a8a3b022f" kindref="member">BMG160_OFC1_ADDR_OFFSET_Y__REG</ref>,</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data2_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data2_u8r,</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_OFC1_ADDR_OFFSET_Y);</highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/>((v_data2_u8r<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af93bb18ad840fcb7dc249f7cc21aca4d" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_01_BIT</ref>)</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>v_data1_u8r);</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aedb3634ca4911263f49afeaa4ba615bd" kindref="member">BMG160_OFC3_ADDR</ref>,<sp/>&amp;v_data1_u8r,</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_offset_s16<sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)((((<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data1_u8r))</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="bmg160_8h_1a81fa5a8cc60a059a5633d36aa5b038f9" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_04_BITS</ref>)</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(v_data2_u8r));</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ab58c0f136e0d553bc2352aa2d1988f36" kindref="member">BMG160_TRIM_GP0_ADDR_OFFSET_Z__REG</ref>,</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data1_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data1_u8r,</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_GP0_ADDR_OFFSET_Z);</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a98131771a0b01536ab82e9a434326f74" kindref="member">BMG160_OFC1_ADDR_OFFSET_Z__REG</ref>,</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data2_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data2_u8r,</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_OFC1_ADDR_OFFSET_Z);</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/>((v_data2_u8r<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1af93bb18ad840fcb7dc249f7cc21aca4d" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_01_BIT</ref>)</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>v_data1_u8r);</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1acc523678ba2ff554bda90ef3f55e668c" kindref="member">BMG160_OFC4_ADDR</ref>,<sp/>&amp;v_data1_u8r,</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_offset_s16<sp/>=<sp/>(<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)((((<ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref>)</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)v_data1_u8r))</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="bmg160_8h_1a81fa5a8cc60a059a5633d36aa5b038f9" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_04_BITS</ref>)</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(v_data2_u8r));</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5440" refid="bmg160_8h_1ae144a613115d1033dc35f946a01aa118" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ae144a613115d1033dc35f946a01aa118" kindref="member">bmg160_set_offset</ref>(</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_axis_u8,<sp/><ref refid="bma2x2_8h_1a4cb19f4a3324cfe0938ddfbfabaa825b" kindref="member">s16</ref><sp/>v_offset_s16)</highlight></codeline>
<codeline lineno="5442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data1_u8r<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data2_u8r<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_axis_u8)<sp/>{</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a21a7a254e45f9012a975fec08bc2add0" kindref="member">BMG160_X_AXIS</ref>:</highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/>((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)<sp/>(v_offset_s16</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/><ref refid="bmg160_8h_1af0e5bf5194b9ce36214635491b7c8c1f" kindref="member">BMG160_OFFSET_MASK_BYTE_OF_DATA</ref>))</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/><ref refid="bmg160_8h_1a81fa5a8cc60a059a5633d36aa5b038f9" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_04_BITS</ref>;</highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3b93c1ece8fd6cf15b0769d35c6dba79" kindref="member">BMG160_OFC2_ADDR</ref>,<sp/>&amp;v_data1_u8r,</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"></highlight></codeline>
<codeline lineno="5462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref>)<sp/>(v_offset_s16</highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/><ref refid="bmg160_8h_1ad1d8a3bec407263084dd25a242b54757" kindref="member">BMG160_OFFSET_X_BIT_MASK1</ref>);</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data2_u8r,</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_OFC1_ADDR_OFFSET_X,<sp/>v_data1_u8r);</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a75f56eebc8aba517a690e71358fb34f8" kindref="member">BMG160_OFC1_ADDR_OFFSET_X__REG</ref>,</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data2_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"></highlight></codeline>
<codeline lineno="5471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref>)<sp/>(v_offset_s16</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/><ref refid="bmg160_8h_1afb69a96ccc62045a2cac96c954d506a0" kindref="member">BMG160_OFFSET_X_BIT_MASK2</ref>);</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data2_u8r,</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_GP0_ADDR_OFFSET_X,<sp/>v_data1_u8r);</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ac0cc96caf9d8a6fc30aebb4646ae69fe" kindref="member">BMG160_TRIM_GP0_ADDR_OFFSET_X__REG</ref>,</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data2_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2e85b06b0bbcd8adbd8d1911717ee967" kindref="member">BMG160_Y_AXIS</ref>:</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/>((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)<sp/>(v_offset_s16</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>BMG160_OFFSET_MASK_BYTE_OF_DATA))<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a81fa5a8cc60a059a5633d36aa5b038f9" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_04_BITS</ref>;</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aedb3634ca4911263f49afeaa4ba615bd" kindref="member">BMG160_OFC3_ADDR</ref>,<sp/>&amp;v_data1_u8r,</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5488"><highlight class="normal"></highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref>)<sp/>(v_offset_s16</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/><ref refid="bmg160_8h_1a7742e2a96b1973b70aee0b1241622faa" kindref="member">BMG160_OFFSET_Y_Z_BIT_MASK2</ref>);</highlight></codeline>
<codeline lineno="5491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data2_u8r,</highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_OFC1_ADDR_OFFSET_Y,<sp/>v_data1_u8r);</highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a5be5e51a86cfbba575b3dd7a8a3b022f" kindref="member">BMG160_OFC1_ADDR_OFFSET_Y__REG</ref>,</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data2_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"></highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref>)<sp/>(v_offset_s16</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/><ref refid="bmg160_8h_1adbce3c96287d9e033f1521d1f4312314" kindref="member">BMG160_OFFSET_Y_Z_BIT_MASK1</ref>);</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data2_u8r,</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_GP0_ADDR_OFFSET_Y,<sp/>v_data1_u8r);</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3951db9a873cf84ac9d92d757507b805" kindref="member">BMG160_TRIM_GP0_ADDR_OFFSET_Y__REG</ref>,</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data2_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5b28a1de87567682177de8967e47de40" kindref="member">BMG160_Z_AXIS</ref>:</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/>((<ref refid="bma2x2_8h_1a151f780fb455885061d3b77ec1c90c03" kindref="member">s8</ref>)<sp/>(v_offset_s16</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>BMG160_OFFSET_MASK_BYTE_OF_DATA))<sp/>&gt;&gt;</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a81fa5a8cc60a059a5633d36aa5b038f9" kindref="member">BMG160_SHIFT_BIT_POSITION_BY_04_BITS</ref>;</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1acc523678ba2ff554bda90ef3f55e668c" kindref="member">BMG160_OFC4_ADDR</ref>,<sp/>&amp;v_data1_u8r,</highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"></highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref>)<sp/>(v_offset_s16</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>BMG160_OFFSET_Y_Z_BIT_MASK2);</highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data2_u8r,</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_OFC1_ADDR_OFFSET_Z,<sp/>v_data1_u8r);</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a98131771a0b01536ab82e9a434326f74" kindref="member">BMG160_OFC1_ADDR_OFFSET_Z__REG</ref>,</highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data2_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5524"><highlight class="normal"></highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data1_u8r<sp/>=<sp/>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref>)<sp/>(v_offset_s16</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>BMG160_OFFSET_Y_Z_BIT_MASK1);</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data2_u8r<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data2_u8r,</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_GP0_ADDR_OFFSET_Z,<sp/>v_data1_u8r);</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ab58c0f136e0d553bc2352aa2d1988f36" kindref="member">BMG160_TRIM_GP0_ADDR_OFFSET_Z__REG</ref>,</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data2_u8r,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5562" refid="bmg160_8h_1a602353883185db6d87a6d60c6b457d5b" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a602353883185db6d87a6d60c6b457d5b" kindref="member">bmg160_get_gp</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_param_u8,</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_gp_u8)</highlight></codeline>
<codeline lineno="5564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_param_u8)<sp/>{</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>general<sp/>purpose<sp/>register*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5a2ac7eb411b88673592acacd5a642e0" kindref="member">BMG160_GP0</ref>:</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9f4f9ab844a768ebd257a3fcdd52cba6" kindref="member">BMG160_TRIM_GP0_ADDR_GP0__REG</ref>,</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_gp_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_GP0_ADDR_GP0);</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1ad37261c668579cf9539d67b7f8f33972" kindref="member">BMG160_GP1</ref>:</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a00fb3f5a73ee17fac11d508d56595e07" kindref="member">BMG160_TRIM_GP1_ADDR</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_gp_u8<sp/>=<sp/>v_data_u8;</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5617" refid="bmg160_8h_1a82cb4639d6e330fa007a3e24839cffdf" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a82cb4639d6e330fa007a3e24839cffdf" kindref="member">bmg160_set_gp</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_param_u8,</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_gp_u8)</highlight></codeline>
<codeline lineno="5619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_param_u8)<sp/>{</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>general<sp/>purpose<sp/>register*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5a2ac7eb411b88673592acacd5a642e0" kindref="member">BMG160_GP0</ref>:</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9f4f9ab844a768ebd257a3fcdd52cba6" kindref="member">BMG160_TRIM_GP0_ADDR_GP0__REG</ref>,</highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_TRIM_GP0_ADDR_GP0,<sp/>v_gp_u8);</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a9f4f9ab844a768ebd257a3fcdd52cba6" kindref="member">BMG160_TRIM_GP0_ADDR_GP0__REG</ref>,</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1ad37261c668579cf9539d67b7f8f33972" kindref="member">BMG160_GP1</ref>:</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/>v_gp_u8;</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a00fb3f5a73ee17fac11d508d56595e07" kindref="member">BMG160_TRIM_GP1_ADDR</ref>,</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5672" refid="bmg160_8h_1aecd3ec4eb3c089164ae3223d8a6a2cd4" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aecd3ec4eb3c089164ae3223d8a6a2cd4" kindref="member">bmg160_get_FIFO_data_reg</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*<ref refid="bmi160_8c_1a8b9c0d391afd8cd230375434294a5513" kindref="member">v_fifo_data_u8</ref>)</highlight></codeline>
<codeline lineno="5673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>fifo<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a42493cb936fdadab521f518f5f4dcf71" kindref="member">BMG160_FIFO_DATA_ADDR</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_fifo_data_u8<sp/>=<sp/>v_data_u8;</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5705" refid="bmg160_8h_1a69c6d5c8eb26e34cb2cda5feb4f137c7" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a69c6d5c8eb26e34cb2cda5feb4f137c7" kindref="member">bmg160_get_fifo_stat_reg</ref>(</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_fifo_stat_u8)</highlight></codeline>
<codeline lineno="5707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>fifo<sp/>over<sp/>run<sp/>and<sp/>frame<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a32371b2bf74cc5057430271b979a4229" kindref="member">BMG160_FIFO_STAT_ADDR</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_fifo_stat_u8<sp/>=<sp/>v_data_u8;</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5737" refid="bmg160_8h_1ae2c9ca18200c9b74d387a46096796ec4" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ae2c9ca18200c9b74d387a46096796ec4" kindref="member">bmg160_get_fifo_frame_count</ref>(</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_fifo_frame_count_u8)</highlight></codeline>
<codeline lineno="5739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>fifo<sp/>frame<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ab10417cceeb9cd0270066c3bde26d8e8" kindref="member">BMG160_FIFO_STAT_FRAME_COUNTER__REG</ref>,</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_fifo_frame_count_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FIFO_STAT_FRAME_COUNTER);</highlight></codeline>
<codeline lineno="5753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5770" refid="bmg160_8h_1a1965e4035c621f019b1c0149ace192c5" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a1965e4035c621f019b1c0149ace192c5" kindref="member">bmg160_get_fifo_overrun</ref>(</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_fifo_overrun_u8)</highlight></codeline>
<codeline lineno="5772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>fifo<sp/>over<sp/>run*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a315173a18837d57de7873cf05b8e0c36" kindref="member">BMG160_FIFO_STAT_OVERRUN__REG</ref>,</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_fifo_overrun_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FIFO_STAT_OVERRUN);</highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5810" refid="bmg160_8h_1a39877aae1eafa1f0c2ae62a0ddc79e93" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a39877aae1eafa1f0c2ae62a0ddc79e93" kindref="member">bmg160_get_fifo_mode</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_fifo_mode_u8)</highlight></codeline>
<codeline lineno="5811"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>fifo<sp/>mode*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a78cc799f6263221b60d276dd9c8ba255" kindref="member">BMG160_FIFO_CGF0_ADDR_MODE__REG</ref>,<sp/>&amp;v_data_u8,</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_fifo_mode_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FIFO_CGF0_ADDR_MODE);</highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5849" refid="bmg160_8h_1a8d3cdb4a8d0fcac11da426f0feb3b7af" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a8d3cdb4a8d0fcac11da426f0feb3b7af" kindref="member">bmg160_set_fifo_mode</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_fifo_mode_u8)</highlight></codeline>
<codeline lineno="5850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_fifo_mode_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1a9d772942275fdd6039371f0f7b83538b" kindref="member">BMG160_BIT_LENGTH_FIFO_MODE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>fifo<sp/>mode*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a78cc799f6263221b60d276dd9c8ba255" kindref="member">BMG160_FIFO_CGF0_ADDR_MODE__REG</ref>,</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FIFO_CGF0_ADDR_MODE,<sp/>v_fifo_mode_u8);</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a78cc799f6263221b60d276dd9c8ba255" kindref="member">BMG160_FIFO_CGF0_ADDR_MODE__REG</ref>,</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5897" refid="bmg160_8h_1a0811ba9f50c24d46b1805e1b48f7ca3c" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a0811ba9f50c24d46b1805e1b48f7ca3c" kindref="member">bmg160_get_fifo_data_select</ref>(</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_fifo_data_select_u8)</highlight></codeline>
<codeline lineno="5899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5902"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>fifo<sp/>data<sp/>select*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1abad814bf57b1c929c9b502dcc4737daa" kindref="member">BMG160_FIFO_CGF0_ADDR_DATA_SELECT__REG</ref>,</highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_fifo_data_select_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FIFO_CGF0_ADDR_DATA_SELECT);</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5937" refid="bmg160_8h_1aa5189b535625f41636985bb4ebcd8000" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aa5189b535625f41636985bb4ebcd8000" kindref="member">bmg160_set_fifo_data_select</ref>(</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_fifo_data_select_u8)</highlight></codeline>
<codeline lineno="5939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_fifo_data_select_u8<sp/>&lt;</highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a06df81dcfdec2f7ac6995b19ec2cbf04" kindref="member">BMG160_BIT_LENGTH_FIFO_DATA_SELECT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>fifo<sp/>data<sp/>select*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1abad814bf57b1c929c9b502dcc4737daa" kindref="member">BMG160_FIFO_CGF0_ADDR_DATA_SELECT__REG</ref>,</highlight></codeline>
<codeline lineno="5953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_FIFO_CGF0_ADDR_DATA_SELECT,</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_fifo_data_select_u8);</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1abad814bf57b1c929c9b502dcc4737daa" kindref="member">BMG160_FIFO_CGF0_ADDR_DATA_SELECT__REG</ref>,</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="5966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5989" refid="bmg160_8h_1afcc0f09c2d4a8513855fa59df11f7bda" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1afcc0f09c2d4a8513855fa59df11f7bda" kindref="member">bmg160_get_power_mode</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_power_mode_u8)</highlight></codeline>
<codeline lineno="5990"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>data1<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>data2<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>data3<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"></highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>power<sp/>mode*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa5d561178cb6bb0098a11c769dbeb0ec" kindref="member">BMG160_MODE_LPM1_ADDR</ref>,<sp/>&amp;data1,</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1afdc9567eb3f2bb53650a3e00c05cd3fa" kindref="member">BMG160_MODE_LPM2_ADDR</ref>,<sp/>&amp;data2,</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1<sp/><sp/>=<sp/>(data1<sp/>&amp;<sp/>0xA0)<sp/>&gt;&gt;<sp/>5;</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data3<sp/><sp/>=<sp/>(data2<sp/>&amp;<sp/>0x40)<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/><sp/>=<sp/>(data2<sp/>&amp;<sp/>0x80)<sp/>&gt;&gt;<sp/>7;</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data3<sp/>==<sp/>0x01)<sp/>{</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_power_mode_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a14fcc7dcbe5c908a10d88b566998918f" kindref="member">BMG160_MODE_ADVANCEDPOWERSAVING</ref>;</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((data1<sp/>==<sp/>0x00)<sp/>&amp;&amp;<sp/>(data2<sp/>==<sp/>0x00))<sp/>{</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_power_mode_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1af4f93113ae71218829bb734d47977956" kindref="member">BMG160_MODE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((data1<sp/>==<sp/>0x01)<sp/>||<sp/>(data1<sp/>==<sp/>0x05))<sp/>{</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_power_mode_u8<sp/><sp/>=</highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad0b0465ebeb1b9f9c3c01c916e145ad3" kindref="member">BMG160_MODE_DEEPSUSPEND</ref>;</highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((data1<sp/>==<sp/>0x04)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(data2<sp/>==<sp/>0x00))<sp/>{</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_power_mode_u8<sp/><sp/>=</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0180ea68292082c93d6524c7f6ff59b3" kindref="member">BMG160_MODE_SUSPEND</ref>;</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((data1<sp/>==<sp/>0x04)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(data2<sp/>==<sp/>0x01))</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_power_mode_u8<sp/><sp/>=</highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a7896aae82f44fd15b340a2030bc1681c" kindref="member">BMG160_MODE_FASTPOWERUP</ref>;</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="6035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6058" refid="bmg160_8h_1abf51786ce119de88e2899c261753d5e3" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1abf51786ce119de88e2899c261753d5e3" kindref="member">bmg160_set_power_mode</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_power_mode_u8)</highlight></codeline>
<codeline lineno="6059"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>data1<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>data2<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>data3<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_autosleepduration<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_bw_u8r<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6067"><highlight class="normal"></highlight></codeline>
<codeline lineno="6068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_power_mode_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1afb4bab20a50738536167f6f03969a86c" kindref="member">BMG160_BIT_LENGTH_POWER_MODE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>the<sp/>power<sp/>mode*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa5d561178cb6bb0098a11c769dbeb0ec" kindref="member">BMG160_MODE_LPM1_ADDR</ref>,<sp/>&amp;data1,</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1afdc9567eb3f2bb53650a3e00c05cd3fa" kindref="member">BMG160_MODE_LPM2_ADDR</ref>,<sp/>&amp;data2,</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_power_mode_u8)<sp/>{</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1af4f93113ae71218829bb734d47977956" kindref="member">BMG160_MODE_NORMAL</ref>:</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data1,</highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM1,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>);</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data2,</highlight></codeline>
<codeline lineno="6086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_FAST_POWERUP,</highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>);</highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data3<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data2,</highlight></codeline>
<codeline lineno="6089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_ADV_POWERSAVING,</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>);</highlight></codeline>
<codeline lineno="6091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa5d561178cb6bb0098a11c769dbeb0ec" kindref="member">BMG160_MODE_LPM1_ADDR</ref>,<sp/>&amp;data1,</highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_bmg160-&gt;<ref refid="structbmg160__t_1aa3983462993d936f9ce82c065d47bb18" kindref="member">delay_msec</ref>(<ref refid="bmg160_8h_1a61bfd192aefa949e33b03aa5eec3ef81" kindref="member">BMG160_POWER_MODE_DELAY</ref>);</highlight></codeline>
<codeline lineno="6096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*A<sp/>minimum<sp/>delay<sp/>of<sp/>at<sp/>least</highlight></codeline>
<codeline lineno="6097"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>450us<sp/>is<sp/>required<sp/>for<sp/>Multiple<sp/>write.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1afdc9567eb3f2bb53650a3e00c05cd3fa" kindref="member">BMG160_MODE_LPM2_ADDR</ref>,<sp/>&amp;data3,</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1ad0b0465ebeb1b9f9c3c01c916e145ad3" kindref="member">BMG160_MODE_DEEPSUSPEND</ref>:</highlight></codeline>
<codeline lineno="6104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data1,</highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM1,</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data2,</highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_FAST_POWERUP,</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>);</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data3<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data2,</highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_ADV_POWERSAVING,</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>);</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa5d561178cb6bb0098a11c769dbeb0ec" kindref="member">BMG160_MODE_LPM1_ADDR</ref>,<sp/>&amp;data1,</highlight></codeline>
<codeline lineno="6116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_bmg160-&gt;<ref refid="structbmg160__t_1aa3983462993d936f9ce82c065d47bb18" kindref="member">delay_msec</ref>(<ref refid="bmg160_8h_1a61bfd192aefa949e33b03aa5eec3ef81" kindref="member">BMG160_POWER_MODE_DELAY</ref>);</highlight></codeline>
<codeline lineno="6118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*A<sp/>minimum<sp/>delay<sp/>of<sp/>at<sp/>least</highlight></codeline>
<codeline lineno="6119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>450us<sp/>is<sp/>required<sp/>for<sp/>Multiple<sp/>write.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1afdc9567eb3f2bb53650a3e00c05cd3fa" kindref="member">BMG160_MODE_LPM2_ADDR</ref>,<sp/>&amp;data3,</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a0180ea68292082c93d6524c7f6ff59b3" kindref="member">BMG160_MODE_SUSPEND</ref>:</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data1,</highlight></codeline>
<codeline lineno="6127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM1,<sp/><ref refid="bmg160_8h_1a4204f65493eff10bae2decafe719a907" kindref="member">BMG160_BIT_MASK_MODE_LPM1</ref>);</highlight></codeline>
<codeline lineno="6128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data2,</highlight></codeline>
<codeline lineno="6129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_FAST_POWERUP,</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>);</highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data3<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data2,</highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_ADV_POWERSAVING,</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>);</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa5d561178cb6bb0098a11c769dbeb0ec" kindref="member">BMG160_MODE_LPM1_ADDR</ref>,<sp/>&amp;data1,</highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_bmg160-&gt;<ref refid="structbmg160__t_1aa3983462993d936f9ce82c065d47bb18" kindref="member">delay_msec</ref>(<ref refid="bmg160_8h_1a61bfd192aefa949e33b03aa5eec3ef81" kindref="member">BMG160_POWER_MODE_DELAY</ref>);</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*A<sp/>minimum<sp/>delay<sp/>of<sp/>at<sp/>least</highlight></codeline>
<codeline lineno="6140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>450us<sp/>is<sp/>required<sp/>for<sp/>Multiple<sp/>write.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1afdc9567eb3f2bb53650a3e00c05cd3fa" kindref="member">BMG160_MODE_LPM2_ADDR</ref>,<sp/>&amp;data3,</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a7896aae82f44fd15b340a2030bc1681c" kindref="member">BMG160_MODE_FASTPOWERUP</ref>:</highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data1,</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM1,<sp/><ref refid="bmg160_8h_1a4204f65493eff10bae2decafe719a907" kindref="member">BMG160_BIT_MASK_MODE_LPM1</ref>);</highlight></codeline>
<codeline lineno="6149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data2,</highlight></codeline>
<codeline lineno="6150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_FAST_POWERUP,</highlight></codeline>
<codeline lineno="6151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data3<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data2,</highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_ADV_POWERSAVING,</highlight></codeline>
<codeline lineno="6154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>);</highlight></codeline>
<codeline lineno="6155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa5d561178cb6bb0098a11c769dbeb0ec" kindref="member">BMG160_MODE_LPM1_ADDR</ref>,<sp/>&amp;data1,</highlight></codeline>
<codeline lineno="6158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_bmg160-&gt;<ref refid="structbmg160__t_1aa3983462993d936f9ce82c065d47bb18" kindref="member">delay_msec</ref>(<ref refid="bmg160_8h_1a61bfd192aefa949e33b03aa5eec3ef81" kindref="member">BMG160_POWER_MODE_DELAY</ref>);</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*A<sp/>minimum<sp/>delay<sp/>of<sp/>at<sp/>least</highlight></codeline>
<codeline lineno="6161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>450us<sp/>is<sp/>required<sp/>for<sp/>Multiple<sp/>write.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1afdc9567eb3f2bb53650a3e00c05cd3fa" kindref="member">BMG160_MODE_LPM2_ADDR</ref>,<sp/>&amp;data3,</highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a14fcc7dcbe5c908a10d88b566998918f" kindref="member">BMG160_MODE_ADVANCEDPOWERSAVING</ref>:</highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configuring<sp/>the<sp/>proper<sp/>settings<sp/>for<sp/>auto</highlight></codeline>
<codeline lineno="6169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8c_1a6b7cf7f05c2cece99d8c466c628bf15c" kindref="member">bmg160_get_bw</ref>(&amp;v_bw_u8r);</highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8c_1aab37401584dd42451df6593d46d41cf0" kindref="member">bmg160_get_auto_sleep_durn</ref>(</highlight></codeline>
<codeline lineno="6172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_autosleepduration);</highlight></codeline>
<codeline lineno="6173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8c_1aec5db851421c46ace7593ba4c092be98" kindref="member">bmg160_set_auto_sleep_durn</ref>(v_autosleepduration,</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_bw_u8r);</highlight></codeline>
<codeline lineno="6175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1afdc9567eb3f2bb53650a3e00c05cd3fa" kindref="member">BMG160_MODE_LPM2_ADDR</ref>,<sp/>&amp;data2,</highlight></codeline>
<codeline lineno="6178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configuring<sp/>the<sp/>advanced<sp/>power<sp/>saving<sp/>mode*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data1,</highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM1,<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>);</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data2<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data2,</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_FAST_POWERUP,</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>);</highlight></codeline>
<codeline lineno="6185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data3<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(data2,</highlight></codeline>
<codeline lineno="6186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_ADV_POWERSAVING,</highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1aa5d561178cb6bb0098a11c769dbeb0ec" kindref="member">BMG160_MODE_LPM1_ADDR</ref>,<sp/>&amp;data1,</highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_bmg160-&gt;<ref refid="structbmg160__t_1aa3983462993d936f9ce82c065d47bb18" kindref="member">delay_msec</ref>(<ref refid="bmg160_8h_1a61bfd192aefa949e33b03aa5eec3ef81" kindref="member">BMG160_POWER_MODE_DELAY</ref>);</highlight></codeline>
<codeline lineno="6193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*A<sp/>minimum<sp/>delay<sp/>of<sp/>at<sp/>least</highlight></codeline>
<codeline lineno="6194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>450us<sp/>is<sp/>required<sp/>for<sp/>Multiple<sp/>write.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1afdc9567eb3f2bb53650a3e00c05cd3fa" kindref="member">BMG160_MODE_LPM2_ADDR</ref>,<sp/>&amp;data3,</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="6203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="6206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6225" refid="bmg160_8h_1ac7a5095b6d98784f0046bdded98c41be" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1ac7a5095b6d98784f0046bdded98c41be" kindref="member">bmg160_selftest</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_result_u8)</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="6227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data1_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data2_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"></highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2ef240fb09011b709dcafce9551ccc9a" kindref="member">BMG160_SELFTEST_ADDR</ref>,<sp/>&amp;v_data1_u8,</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/><sp/><sp/>v_data2_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data1_u8,</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/><sp/><sp/>BMG160_SELFTEST_ADDR_RATEOK);</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/><sp/><sp/>v_data1_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data1_u8,</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/><sp/><sp/>BMG160_SELFTEST_ADDR_TRIGBIST,</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a3f3b65c0cd51380368ac48639efbc52d" kindref="member">BMG160_SELFTEST_ADDR_TRIGBIST__REG</ref>,<sp/>&amp;v_data1_u8,</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"></highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Waiting<sp/>time<sp/>to<sp/>complete<sp/>the<sp/>selftest<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/>p_bmg160-&gt;<ref refid="structbmg160__t_1aa3983462993d936f9ce82c065d47bb18" kindref="member">delay_msec</ref>(<ref refid="bmg160_8h_1ae8284950d92d320a12174165c765d90c" kindref="member">BMG160_SELFTEST_DELAY</ref>);</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"></highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>Selftest<sp/>v_result_u8<sp/>bir<sp/>bist_failure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a907ae62983f3faab73c135e4bb1cbaf4" kindref="member">BMG160_SELFTEST_ADDR_BISTFAIL__REG</ref>,<sp/>&amp;v_data1_u8,</highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/>v_data1_u8<sp/><sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data1_u8,</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/><sp/><sp/>BMG160_SELFTEST_ADDR_BISTFAIL);</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((v_data1_u8<sp/>==<sp/><ref refid="bmg160_8h_1abcacee18aa2779355ace11212dfa985d" kindref="member">BMG160_SELFTEST_BISTFAIL</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/><sp/><sp/>(v_data2_u8<sp/>==<sp/><ref refid="bmg160_8h_1a1adcd14df41493cf6d79dbe287e99850" kindref="member">BMG160_SELFTEST_RATEOK</ref>))</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_result_u8<sp/>=<sp/><ref refid="bmg160_8h_1ab0b8739c1d63460bcbc78adea3e14fc6" kindref="member">C_BMG160_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_result_u8<sp/>=<sp/><ref refid="bmg160_8h_1a54109a61543ed1e3e6f23a6829da0b10" kindref="member">C_BMG160_FAILURE</ref>;</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="6259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6284" refid="bmg160_8h_1aab37401584dd42451df6593d46d41cf0" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aab37401584dd42451df6593d46d41cf0" kindref="member">bmg160_get_auto_sleep_durn</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_durn_u8)</highlight></codeline>
<codeline lineno="6285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>auto<sp/>sleep<sp/>duration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a41041d36c9c1dcdbd9ac0710b88c4e0f" kindref="member">BMG160_MODE_LPM2_ADDR_AUTO_SLEEP_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="6296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_durn_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_AUTO_SLEEP_DURN);</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="6301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6340" refid="bmg160_8h_1aec5db851421c46ace7593ba4c092be98" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1aec5db851421c46ace7593ba4c092be98" kindref="member">bmg160_set_auto_sleep_durn</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_durn_u8,</highlight></codeline>
<codeline lineno="6341"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_bw_u8)</highlight></codeline>
<codeline lineno="6342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6343"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="6345"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_auto_sleep_durn_u8r<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6347"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6348"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="6350"><highlight class="normal">}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>auto<sp/>sleep<sp/>duration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6352"><highlight class="normal"><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a41041d36c9c1dcdbd9ac0710b88c4e0f" kindref="member">BMG160_MODE_LPM2_ADDR_AUTO_SLEEP_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_durn_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1afef9d7341b490080c35c4692025e4d3e" kindref="member">BMG160_BIT_LENGTH_DURN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(v_bw_u8)<sp/>{</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1abea701b8f818a4a4ba5d827940f0be16" kindref="member">C_BMG160_NO_FILTER_U8X</ref>:</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_durn_u8<sp/>&gt;</highlight></codeline>
<codeline lineno="6360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a51e96aaa1c17d464665c4be3fe9faa13" kindref="member">C_BMG160_4MS_AUTO_SLEEP_DURN_U8X</ref>)</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_durn_u8;</highlight></codeline>
<codeline lineno="6363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a51e96aaa1c17d464665c4be3fe9faa13" kindref="member">C_BMG160_4MS_AUTO_SLEEP_DURN_U8X</ref>;</highlight></codeline>
<codeline lineno="6366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1ab654ed63ada662cbe6e3b8f0aa32d41d" kindref="member">C_BMG160_BW_230HZ_U8X</ref>:</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_durn_u8<sp/>&gt;</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a51e96aaa1c17d464665c4be3fe9faa13" kindref="member">C_BMG160_4MS_AUTO_SLEEP_DURN_U8X</ref>)</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_durn_u8;</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a51e96aaa1c17d464665c4be3fe9faa13" kindref="member">C_BMG160_4MS_AUTO_SLEEP_DURN_U8X</ref>;</highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1aacf0f86a3f83597fdc40d80bf6811ff5" kindref="member">C_BMG160_BW_116HZ_U8X</ref>:</highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_durn_u8<sp/>&gt;</highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a51e96aaa1c17d464665c4be3fe9faa13" kindref="member">C_BMG160_4MS_AUTO_SLEEP_DURN_U8X</ref>)</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_durn_u8;</highlight></codeline>
<codeline lineno="6381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a51e96aaa1c17d464665c4be3fe9faa13" kindref="member">C_BMG160_4MS_AUTO_SLEEP_DURN_U8X</ref>;</highlight></codeline>
<codeline lineno="6384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a2868354d5671a52b7fe2100de385305c" kindref="member">C_BMG160_BW_47HZ_U8X</ref>:</highlight></codeline>
<codeline lineno="6386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_durn_u8<sp/>&gt;</highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0c13ac5149461789783817762cec5ba4" kindref="member">C_BMG160_5MS_AUTO_SLEEP_DURN_U8X</ref>)</highlight></codeline>
<codeline lineno="6388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_durn_u8;</highlight></codeline>
<codeline lineno="6390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a0c13ac5149461789783817762cec5ba4" kindref="member">C_BMG160_5MS_AUTO_SLEEP_DURN_U8X</ref>;</highlight></codeline>
<codeline lineno="6393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a5c289272b0b371656aa89f8813bbfdfb" kindref="member">C_BMG160_BW_23HZ_U8X</ref>:</highlight></codeline>
<codeline lineno="6395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_durn_u8<sp/>&gt;</highlight></codeline>
<codeline lineno="6396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad89d95e86514a0a63698d9e44f8a0024" kindref="member">C_BMG160_10MS_AUTO_SLEEP_DURN_U8X</ref>)</highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_durn_u8;</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad89d95e86514a0a63698d9e44f8a0024" kindref="member">C_BMG160_10MS_AUTO_SLEEP_DURN_U8X</ref>;</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1aeef9bb56a816ba94ed4af6de5d37b945" kindref="member">C_BMG160_BW_12HZ_U8X</ref>:</highlight></codeline>
<codeline lineno="6404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_durn_u8<sp/>&gt;</highlight></codeline>
<codeline lineno="6405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ac284ad02d87461fcbeb8f58e389151d7" kindref="member">C_BMG160_20MS_AUTO_SLEEP_DURN_U8X</ref>)</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_durn_u8;</highlight></codeline>
<codeline lineno="6408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ac284ad02d87461fcbeb8f58e389151d7" kindref="member">C_BMG160_20MS_AUTO_SLEEP_DURN_U8X</ref>;</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a05e7018c2898ae64168b738485e750ad" kindref="member">C_BMG160_BW_64HZ_U8X</ref>:</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_durn_u8<sp/>&gt;</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad89d95e86514a0a63698d9e44f8a0024" kindref="member">C_BMG160_10MS_AUTO_SLEEP_DURN_U8X</ref>)</highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_durn_u8;</highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad89d95e86514a0a63698d9e44f8a0024" kindref="member">C_BMG160_10MS_AUTO_SLEEP_DURN_U8X</ref>;</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="bmg160_8h_1a580e78cc6b1a556c983886b170e9be29" kindref="member">C_BMG160_BW_32HZ_U8X</ref>:</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_durn_u8<sp/>&gt;</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ac284ad02d87461fcbeb8f58e389151d7" kindref="member">C_BMG160_20MS_AUTO_SLEEP_DURN_U8X</ref>)</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_durn_u8;</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ac284ad02d87461fcbeb8f58e389151d7" kindref="member">C_BMG160_20MS_AUTO_SLEEP_DURN_U8X</ref>;</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_durn_u8<sp/>&gt;</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a51e96aaa1c17d464665c4be3fe9faa13" kindref="member">C_BMG160_4MS_AUTO_SLEEP_DURN_U8X</ref>)</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_durn_u8;</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r<sp/>=</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a51e96aaa1c17d464665c4be3fe9faa13" kindref="member">C_BMG160_4MS_AUTO_SLEEP_DURN_U8X</ref>;</highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODE_LPM2_ADDR_AUTO_SLEEP_DURN,</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_auto_sleep_durn_u8r);</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a41041d36c9c1dcdbd9ac0710b88c4e0f" kindref="member">BMG160_MODE_LPM2_ADDR_AUTO_SLEEP_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="6452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6478" refid="bmg160_8h_1a337c37c23734adae2dc3ab1f6a3e729d" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1a337c37c23734adae2dc3ab1f6a3e729d" kindref="member">bmg160_get_sleep_durn</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>*v_durn_u8)</highlight></codeline>
<codeline lineno="6479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="6482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="6486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>sleep<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a60aba448a09589a8f6d1fd832d187336" kindref="member">BMG160_MODELPM1_ADDR_SLEEP_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*v_durn_u8<sp/>=<sp/><ref refid="bmg160_8h_1a9a87015f26981a8bcedd67f208123c89" kindref="member">BMG160_GET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODELPM1_ADDR_SLEEP_DURN);</highlight></codeline>
<codeline lineno="6493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="6495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6521" refid="bmg160_8h_1addf0c78dc627205ccff5044f992af0d8" refkind="member"><highlight class="normal"><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/><ref refid="bmg160_8c_1addf0c78dc627205ccff5044f992af0d8" kindref="member">bmg160_set_sleep_durn</ref>(<ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_durn_u8)</highlight></codeline>
<codeline lineno="6522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>used<sp/>to<sp/>return<sp/>the<sp/>bus<sp/>communication<sp/>status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1ad018de6c4646f0c73d0b1c4823c3d7b4" kindref="member">BMG160_RETURN_FUNCTION_TYPE</ref><sp/>comres<sp/>=<sp/><ref refid="bma2x2_8h_1a8fe83ac76edc595f6b98cd4a4127aed5" kindref="member">ERROR</ref>;</highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bma2x2_8h_1aed742c436da53c1080638ce6ef7d13de" kindref="member">u8</ref><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1aaa58aea0bbe206f1a74cc04ef892bb96" kindref="member">BMG160_INIT_VALUE</ref>;</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>p_bmg160<sp/>struct<sp/>pointer<sp/>is<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_bmg160<sp/>==<sp/><ref refid="bmg160_8h_1aad3196e1b1b70aca0101b85f7cd10d90" kindref="member">BMG160_NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="bmg160_8h_1abe7454f4662439227b33a506edcde9ae" kindref="member">E_BMG160_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_durn_u8<sp/>&lt;<sp/><ref refid="bmg160_8h_1afef9d7341b490080c35c4692025e4d3e" kindref="member">BMG160_BIT_LENGTH_DURN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>sleep<sp/>duration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/>p_bmg160-&gt;BMG160_BUS_READ_FUNC</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a60aba448a09589a8f6d1fd832d187336" kindref="member">BMG160_MODELPM1_ADDR_SLEEP_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_data_u8<sp/>=<sp/><ref refid="bmg160_8h_1a5c25da5e6ce9e4bccf05358b7b579d9d" kindref="member">BMG160_SET_BITSLICE</ref>(v_data_u8,</highlight></codeline>
<codeline lineno="6537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BMG160_MODELPM1_ADDR_SLEEP_DURN,<sp/>v_durn_u8);</highlight></codeline>
<codeline lineno="6538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>+=<sp/>p_bmg160-&gt;BMG160_BUS_WRITE_FUNC</highlight></codeline>
<codeline lineno="6539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p_bmg160-&gt;<ref refid="structbmg160__t_1aa50b0df71b19db77268cdf44177cd536" kindref="member">dev_addr</ref>,</highlight></codeline>
<codeline lineno="6540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bmg160_8h_1a60aba448a09589a8f6d1fd832d187336" kindref="member">BMG160_MODELPM1_ADDR_SLEEP_DURN__REG</ref>,</highlight></codeline>
<codeline lineno="6541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;v_data_u8,<sp/><ref refid="bmg160_8h_1a2f05058a8bbc693992457a2b8e792b90" kindref="member">BMG160_GEN_READ_WRITE_DATA_LENGTH</ref>);</highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comres<sp/>=<sp/><ref refid="bmg160_8h_1a0023093d42035679f850cb8dc1b0a92b" kindref="member">E_BMG160_OUT_OF_RANGE</ref>;</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comres;</highlight></codeline>
<codeline lineno="6547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6548"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/BSTLib/3rd-party/bstlib/BMG160_driver/bmg160.c"/>
  </compounddef>
</doxygen>
