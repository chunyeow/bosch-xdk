<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___coap_client_8h" kind="file">
    <compoundname>Serval_CoapClient.h</compoundname>
    <includes refid="_serval___defines_8h" local="no">Serval_Defines.h</includes>
    <includes refid="_serval___exceptions_8h" local="no">Serval_Exceptions.h</includes>
    <includes refid="_serval___msg_8h" local="no">Serval_Msg.h</includes>
    <includes refid="_serval___coap_8h" local="no">Serval_Coap.h</includes>
    <includes refid="_serval___security_8h" local="no">Serval_Security.h</includes>
    <includedby refid="_l_w_m2_m_object_firmware_update_8c" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.c</includedby>
    <incdepgraph>
      <node id="30082">
        <label>stdbool.h</label>
      </node>
      <node id="30075">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="30076" relation="include">
        </childnode>
        <childnode refid="30073" relation="include">
        </childnode>
      </node>
      <node id="30086">
        <label>stdarg.h</label>
      </node>
      <node id="30113">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="30104" relation="include">
        </childnode>
      </node>
      <node id="30098">
        <label>list.h</label>
      </node>
      <node id="30071">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h</label>
        <link refid="Serval_CoapClient.h"/>
        <childnode refid="30072" relation="include">
        </childnode>
        <childnode refid="30073" relation="include">
        </childnode>
        <childnode refid="30074" relation="include">
        </childnode>
        <childnode refid="30125" relation="include">
        </childnode>
        <childnode refid="30126" relation="include">
        </childnode>
      </node>
      <node id="30100">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="30101" relation="include">
        </childnode>
        <childnode refid="30080" relation="include">
        </childnode>
        <childnode refid="30079" relation="include">
        </childnode>
      </node>
      <node id="30116">
        <label>Serval_StringDescr.h</label>
        <link refid="_serval___string_descr_8h"/>
        <childnode refid="30075" relation="include">
        </childnode>
      </node>
      <node id="30078">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="30079" relation="include">
        </childnode>
      </node>
      <node id="30081">
        <label>stdint.h</label>
      </node>
      <node id="30079">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="30080" relation="include">
        </childnode>
      </node>
      <node id="30084">
        <label>stdlib.h</label>
      </node>
      <node id="30073">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="30123">
        <label>Serval_Policy.h</label>
        <link refid="_serval___policy_8h"/>
      </node>
      <node id="30092">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="30095">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="30096" relation="include">
        </childnode>
      </node>
      <node id="30103">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="30105">
        <label>user.h</label>
      </node>
      <node id="30099">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="30079" relation="include">
        </childnode>
        <childnode refid="30100" relation="include">
        </childnode>
        <childnode refid="30103" relation="include">
        </childnode>
      </node>
      <node id="30106">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="30104" relation="include">
        </childnode>
      </node>
      <node id="30119">
        <label>Serval_Callable.h</label>
        <link refid="_serval___callable_8h"/>
        <childnode refid="30075" relation="include">
        </childnode>
        <childnode refid="30120" relation="include">
        </childnode>
      </node>
      <node id="30126">
        <label>Serval_Security.h</label>
        <link refid="_serval___security_8h"/>
        <childnode refid="30072" relation="include">
        </childnode>
        <childnode refid="30074" relation="include">
        </childnode>
        <childnode refid="30076" relation="include">
        </childnode>
        <childnode refid="30127" relation="include">
        </childnode>
      </node>
      <node id="30127">
        <label>Serval_MsgSendingCtx.h</label>
        <link refid="_serval___msg_sending_ctx_8h"/>
        <childnode refid="30123" relation="include">
        </childnode>
      </node>
      <node id="30090">
        <label>stddef.h</label>
      </node>
      <node id="30108">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="30104" relation="include">
        </childnode>
      </node>
      <node id="30088">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="30089" relation="include">
        </childnode>
        <childnode refid="30091" relation="include">
        </childnode>
        <childnode refid="30095" relation="include">
        </childnode>
        <childnode refid="30097" relation="include">
        </childnode>
      </node>
      <node id="30077">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="30078" relation="include">
        </childnode>
        <childnode refid="30080" relation="include">
        </childnode>
        <childnode refid="30085" relation="include">
        </childnode>
        <childnode refid="30086" relation="include">
        </childnode>
        <childnode refid="30087" relation="include">
        </childnode>
        <childnode refid="30084" relation="include">
        </childnode>
        <childnode refid="30075" relation="include">
        </childnode>
        <childnode refid="30088" relation="include">
        </childnode>
        <childnode refid="30099" relation="include">
        </childnode>
        <childnode refid="30104" relation="include">
        </childnode>
      </node>
      <node id="30085">
        <label>limits.h</label>
      </node>
      <node id="30074">
        <label>Serval_Msg.h</label>
        <link refid="_serval___msg_8h"/>
        <childnode refid="30072" relation="include">
        </childnode>
        <childnode refid="30075" relation="include">
        </childnode>
        <childnode refid="30116" relation="include">
        </childnode>
        <childnode refid="30117" relation="include">
        </childnode>
        <childnode refid="30118" relation="include">
        </childnode>
        <childnode refid="30119" relation="include">
        </childnode>
        <childnode refid="30121" relation="include">
        </childnode>
        <childnode refid="30123" relation="include">
        </childnode>
        <childnode refid="30124" relation="include">
        </childnode>
      </node>
      <node id="30094">
        <label>portable.h</label>
      </node>
      <node id="30102">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="30083">
        <label>string.h</label>
      </node>
      <node id="30101">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="30102" relation="include">
        </childnode>
        <childnode refid="30079" relation="include">
        </childnode>
      </node>
      <node id="30120">
        <label>Serval_StructCtx.h</label>
        <link refid="_serval___struct_ctx_8h"/>
        <childnode refid="30090" relation="include">
        </childnode>
      </node>
      <node id="30080">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="30081" relation="include">
        </childnode>
        <childnode refid="30082" relation="include">
        </childnode>
        <childnode refid="30083" relation="include">
        </childnode>
        <childnode refid="30084" relation="include">
        </childnode>
      </node>
      <node id="30124">
        <label>Serval_Msg_Obsolete.h</label>
        <link refid="_serval___msg___obsolete_8h"/>
        <childnode refid="30075" relation="include">
        </childnode>
        <childnode refid="30123" relation="include">
        </childnode>
        <childnode refid="30074" relation="include">
        </childnode>
      </node>
      <node id="30121">
        <label>Serval_Ip.h</label>
        <link refid="_serval___ip_8h"/>
        <childnode refid="30122" relation="include">
        </childnode>
        <childnode refid="30075" relation="include">
        </childnode>
      </node>
      <node id="30093">
        <label>projdefs.h</label>
      </node>
      <node id="30115">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="30122">
        <label>PIp.h</label>
        <link refid="_p_ip_8h"/>
        <childnode refid="30079" relation="include">
        </childnode>
      </node>
      <node id="30114">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="30104" relation="include">
        </childnode>
      </node>
      <node id="30118">
        <label>Serval_Filesystem.h</label>
        <link refid="_serval___filesystem_8h"/>
        <childnode refid="30075" relation="include">
        </childnode>
      </node>
      <node id="30072">
        <label>Serval_Defines.h</label>
        <link refid="_serval___defines_8h"/>
      </node>
      <node id="30125">
        <label>Serval_Coap.h</label>
        <link refid="_serval___coap_8h"/>
        <childnode refid="30072" relation="include">
        </childnode>
        <childnode refid="30123" relation="include">
        </childnode>
      </node>
      <node id="30110">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="30104" relation="include">
        </childnode>
      </node>
      <node id="30096">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="30111">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="30104" relation="include">
        </childnode>
      </node>
      <node id="30117">
        <label>Serval_XmlParser.h</label>
        <link refid="_serval___xml_parser_8h"/>
        <childnode refid="30116" relation="include">
        </childnode>
      </node>
      <node id="30109">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="30104" relation="include">
        </childnode>
      </node>
      <node id="30097">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="30098" relation="include">
        </childnode>
      </node>
      <node id="30112">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="30104" relation="include">
        </childnode>
      </node>
      <node id="30091">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="30081" relation="include">
        </childnode>
        <childnode refid="30078" relation="include">
        </childnode>
        <childnode refid="30092" relation="include">
        </childnode>
      </node>
      <node id="30076">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="30077" relation="include">
        </childnode>
      </node>
      <node id="30089">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="30090" relation="include">
        </childnode>
        <childnode refid="30081" relation="include">
        </childnode>
        <childnode refid="30091" relation="include">
        </childnode>
        <childnode refid="30093" relation="include">
        </childnode>
        <childnode refid="30094" relation="include">
        </childnode>
      </node>
      <node id="30087">
        <label>stdio.h</label>
      </node>
      <node id="30107">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="30104" relation="include">
        </childnode>
      </node>
      <node id="30104">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="30105" relation="include">
        </childnode>
        <childnode refid="30106" relation="include">
        </childnode>
        <childnode refid="30107" relation="include">
        </childnode>
        <childnode refid="30108" relation="include">
        </childnode>
        <childnode refid="30109" relation="include">
        </childnode>
        <childnode refid="30110" relation="include">
        </childnode>
        <childnode refid="30111" relation="include">
        </childnode>
        <childnode refid="30112" relation="include">
        </childnode>
        <childnode refid="30113" relation="include">
        </childnode>
        <childnode refid="30114" relation="include">
        </childnode>
        <childnode refid="30115" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="30128">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h</label>
        <link refid="Serval_CoapClient.h"/>
        <childnode refid="30129" relation="include">
        </childnode>
      </node>
      <node id="30129">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.c</label>
        <link refid="_l_w_m2_m_object_firmware_update_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_serval___coap_client_8h_1a5d35ffa647577119a649d9d4c8bf9ab1" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* CoapAppRespCallback_T)(CoapSession_T *coapSession, Msg_T *msg_ptr, retcode_t status)</definition>
        <argsstring>)(CoapSession_T *coapSession, Msg_T *msg_ptr, retcode_t status)</argsstring>
        <name>CoapAppRespCallback_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data type representing a callback function pointer for CoAP application. The application uses such callback functions in order to be notified about the received messages. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h" line="41" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___coap_client_8h_1a99f784c95134c7f4facb9fdfe6b2b8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapClient_closeSecureConn</definition>
        <argsstring>(Ip_Address_T *peerAddr_ptr, Ip_Port_T peerPort)</argsstring>
        <name>CoapClient_closeSecureConn</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>peerAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>peerPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function close and disconnect an existing secure COAP connection.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ip address of the remote server socket</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peerPort</parametername>
</parameternamelist>
<parameterdescription>
<para>port number of the remote server socket</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>when error code available On success, RC_OK is returned. <linebreak/>
 RC_COAP_SECURE_CONNECTION_ERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_client_8h_1ac20ad9bdedd93b242ed2077bd3544b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapClient_connectSecure</definition>
        <argsstring>(Ip_Address_T *peerAddr_ptr, Ip_Port_T peerPort)</argsstring>
        <name>CoapClient_connectSecure</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>peerAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>peerPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function connects and opens a secure COAP client connection.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>ip address of the remote server socket</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peerPort</parametername>
</parameternamelist>
<parameterdescription>
<para>port number of the remote server socket</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>when errorcode available On success, RC_OK is returned. <linebreak/>
 RC_COAP_SECURE_CONNECTION_ERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_client_8h_1afb46fd8a14d2d0bf4bc3c442cf63a251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapClient_getSecureConnError</definition>
        <argsstring>(Ip_Address_T *peerAddr_ptr, Ip_Port_T peerPort, retcode_t *rc_ptr)</argsstring>
        <name>CoapClient_getSecureConnError</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>peerAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>peerPort</declname>
        </param>
        <param>
          <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref> *</type>
          <declname>rc_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function reports the errors of a secure connection</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned ip address of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peerPort</parametername>
</parameternamelist>
<parameterdescription>
<para>returned port number of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">rc_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>status of this connection</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>On success, RC_OK is returned.<linebreak/>
 RC_COAP_SECURE_CONNECTION_ERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_client_8h_1a8d23d99ef9abb21756bb88e376054321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapClient_getSecureConnState</definition>
        <argsstring>(Ip_Address_T *peerAddr_ptr, Ip_Port_T peerPort, SecureConnectionState_T *state_ptr)</argsstring>
        <name>CoapClient_getSecureConnState</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>peerAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>peerPort</declname>
        </param>
        <param>
          <type><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305" kindref="member">SecureConnectionState_T</ref> *</type>
          <declname>state_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function reports the status of a secure connection</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">peerAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned ip address of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">peerPort</parametername>
</parameternamelist>
<parameterdescription>
<para>returned port number of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">state_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>status of this connection</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>On success, RC_OK is returned.<linebreak/>
 RC_COAP_SECURE_CONNECTION_ERROR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_client_8h_1a81e8168685b19921b183a53c17a16d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapClient_initReqMsg</definition>
        <argsstring>(Ip_Address_T *addr_ptr, Ip_Port_T port, Msg_T **msg_pptr)</argsstring>
        <name>CoapClient_initReqMsg</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>addr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> **</type>
          <declname>msg_pptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to initiate a request from CoAP client. This function checks for any previous active transaction with the given server and if not provides the message to be filled for sending the request.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">addr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the reference to the IP address of the receiver.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">port</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the server port of the receiver.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">msg_pptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This holds message to be filled by application for request.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_COAP_CLIENT_INIT_REQ_ERROR, otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_client_8h_1ace806c801fe9e1a03797ec99466aaa13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapClient_initSecureReqMsg</definition>
        <argsstring>(Ip_Address_T *addr_ptr, Ip_Port_T port, Msg_T **msg_pptr)</argsstring>
        <name>CoapClient_initSecureReqMsg</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>addr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>port</declname>
        </param>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> **</type>
          <declname>msg_pptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to initiate a secure request from CoAP client. This function checks for any previous active transaction with the given server and if not provides the message to be filled for sending the request.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">addr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the reference to the IP address of the receiver.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">port</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the server port of the receiver.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">msg_pptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This holds message to be filled by application for request.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_COAP_CLIENT_INIT_REQ_ERROR, otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_client_8h_1ae2c9090448dc8db58c2e464b2d2b9de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoapClient_iterateSecureConnections</definition>
        <argsstring>(int16_t *iterator_ptr, bool onlyWithError, Ip_Address_T *ipAddr_ptr, Ip_Port_T *port_ptr)</argsstring>
        <name>CoapClient_iterateSecureConnections</name>
        <param>
          <type>int16_t *</type>
          <declname>iterator_ptr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlyWithError</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>ipAddr_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref> *</type>
          <declname>port_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function reports the secure connections.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">iterator_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator for this function. Initialized to -1 it reports the first connection. The next returned values will report the next connections. if -1 returns, no more connections are assigned to this socket. Example: int16_t iter = -1; while(1) { rc = _getSecureConnection(&amp;iter,...); if(iter &lt; 0) break; do_some_thing(...); }</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">onlyWithError</parametername>
</parameternamelist>
<parameterdescription>
<para>true -&gt; report only connections with failures. false -&gt; report all connections</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ipAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned ip address of the connection endpoint</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">port_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>returned port number of the connection endpoint </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_client_8h_1a28a65f6a456b9f1ac7675bfed99a7c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapClient_request</definition>
        <argsstring>(Msg_T *msg_ptr, Callable_T *sentCallback_ptr, CoapAppRespCallback_T respCallback)</argsstring>
        <name>CoapClient_request</name>
        <param>
          <type><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref> *</type>
          <declname>msg_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref> *</type>
          <declname>sentCallback_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___coap_client_8h_1a5d35ffa647577119a649d9d4c8bf9ab1" kindref="member">CoapAppRespCallback_T</ref></type>
          <declname>respCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to push a request from a CoAP client. This function prepares the message for further processing before passing it to the lower layers.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the reference to the message to be pushed.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sentCallback_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the application callback to be called for informing application about status of sending.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">respCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>This is the application callback to be called for a received response message for this request. If the application does not expect a response for this request it should be set to NULL.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RC_OK, if successful<linebreak/>
 RC_COAP_SENDING_ERROR, otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___coap_client_8h_1a76f511d1ad284e65913843493b2c4401" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t CoapClient_startSecureInstance</definition>
        <argsstring>(void)</argsstring>
        <name>CoapClient_startSecureInstance</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to start the secure CoAP client</para><para><simplesect kind="return"><para>, RC_OK, if successful RC_COAP_SECURE_CONNECTION_ERROR, otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h" line="123" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CoAP Client Module</para><para>The interface description of the CoAP Client. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor">#ifndef<sp/>SERVAL_COAPCLIENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_COAPCLIENT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___defines_8h" kindref="compound">Serval_Defines.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_COAP_CLIENT<sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>CoAP<sp/>client<sp/>is<sp/>disabled<sp/>-&gt;<sp/>no<sp/>compilation<sp/>here<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___exceptions_8h" kindref="compound">Serval_Exceptions.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___msg_8h" kindref="compound">Serval_Msg.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___coap_8h" kindref="compound">Serval_Coap.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___security_8h" kindref="compound">Serval_Security.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="_serval___coap_client_8h_1a5d35ffa647577119a649d9d4c8bf9ab1" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___coap_client_8h_1a5d35ffa647577119a649d9d4c8bf9ab1" kindref="member">CoapAppRespCallback_T</ref>)(CoapSession_T<sp/>*coapSession,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>status);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>SERVAL_ENABLE_COAP_COMBINED_SERVER_AND_CLIENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>CoapClient_initialize(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_client_8h_1a81e8168685b19921b183a53c17a16d20" kindref="member">CoapClient_initReqMsg</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*addr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>port,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>**msg_pptr);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>SERVAL_ENABLE_COAP_COMBINED_SERVER_AND_CLIENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>CoapClient_startInstance(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_client_8h_1a28a65f6a456b9f1ac7675bfed99a7c8c" kindref="member">CoapClient_request</ref>(<ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>*msg_ptr,<sp/><ref refid="struct_callable___s" kindref="compound">Callable_T</ref><sp/>*sentCallback_ptr,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___coap_client_8h_1a5d35ffa647577119a649d9d4c8bf9ab1" kindref="member">CoapAppRespCallback_T</ref><sp/>respCallback);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SERVAL_ENABLE_DTLS_CLIENT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_client_8h_1a76f511d1ad284e65913843493b2c4401" kindref="member">CoapClient_startSecureInstance</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_client_8h_1ace806c801fe9e1a03797ec99466aaa13" kindref="member">CoapClient_initSecureReqMsg</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*addr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>port,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_serval___msg_8h_1ae00d936510d9d4493cae90cf1ff00ee4" kindref="member">Msg_T</ref><sp/>**msg_pptr);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_client_8h_1ac20ad9bdedd93b242ed2077bd3544b68" kindref="member">CoapClient_connectSecure</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*peerAddr_ptr,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>peerPort);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_client_8h_1a99f784c95134c7f4facb9fdfe6b2b8fb" kindref="member">CoapClient_closeSecureConn</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*peerAddr_ptr,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>peerPort);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___coap_client_8h_1ae2c9090448dc8db58c2e464b2d2b9de4" kindref="member">CoapClient_iterateSecureConnections</ref>(int16_t<sp/>*iterator_ptr,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>onlyWithError,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*ipAddr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>*port_ptr);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_client_8h_1afb46fd8a14d2d0bf4bc3c442cf63a251" kindref="member">CoapClient_getSecureConnError</ref>(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*peerAddr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>peerPort,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>*rc_ptr);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___coap_client_8h_1a8d23d99ef9abb21756bb88e376054321" kindref="member">CoapClient_getSecureConnState</ref>(</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*peerAddr_ptr,<sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>peerPort,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___security_8h_1a29fcbcabec77bab5261483a90c6e5305" kindref="member">SecureConnectionState_T</ref><sp/>*state_ptr);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_DTLS<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_ENABLE_COAP_CLIENT<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_COAPCLIENT_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h"/>
  </compounddef>
</doxygen>
