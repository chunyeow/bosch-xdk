<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="ff_8h" kind="file">
    <compoundname>ff.h</compoundname>
    <includes refid="integer_8h" local="yes">integer.h</includes>
    <includes refid="ffconf_8h" local="yes">ffconf.h</includes>
    <includedby refid="_l_w_m2_m_object_firmware_update_8c" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.c</includedby>
    <includedby refid="_f_o_t_a_8c" local="yes">SDK/xdk110/Common/source/Utility/FOTA.c</includedby>
    <includedby refid="ff_8c" local="yes">SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c</includedby>
    <includedby refid="cc932_8c" local="yes">SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/cc932.c</includedby>
    <includedby refid="cc936_8c" local="yes">SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/cc936.c</includedby>
    <includedby refid="cc949_8c" local="yes">SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/cc949.c</includedby>
    <includedby refid="cc950_8c" local="yes">SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/cc950.c</includedby>
    <includedby refid="ccsbcs_8c" local="yes">SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/ccsbcs.c</includedby>
    <includedby refid="syscall_8c" local="yes">SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c</includedby>
    <includedby refid="unicode_8c" local="yes">SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/unicode.c</includedby>
    <incdepgraph>
      <node id="29067">
        <label>stdbool.h</label>
      </node>
      <node id="29064">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="29065" relation="include">
        </childnode>
      </node>
      <node id="29058">
        <label>ffconf.h</label>
        <link refid="ffconf_8h"/>
        <childnode refid="29059" relation="include">
        </childnode>
        <childnode refid="29060" relation="include">
        </childnode>
        <childnode refid="29073" relation="include">
        </childnode>
        <childnode refid="29075" relation="include">
        </childnode>
      </node>
      <node id="29065">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="29066" relation="include">
        </childnode>
      </node>
      <node id="29062">
        <label>stdint.h</label>
      </node>
      <node id="29069">
        <label>stdlib.h</label>
      </node>
      <node id="29070">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="29073">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="29074" relation="include">
        </childnode>
      </node>
      <node id="29057">
        <label>integer.h</label>
        <link refid="integer_8h"/>
      </node>
      <node id="29059">
        <label>diskio.h</label>
        <link refid="diskio_8h"/>
        <childnode refid="29057" relation="include">
        </childnode>
      </node>
      <node id="29061">
        <label>stddef.h</label>
      </node>
      <node id="29075">
        <label>BCDS_SDCard_Interface.h</label>
        <link refid="_b_c_d_s___s_d_card___interface_8h"/>
        <childnode refid="29062" relation="include">
        </childnode>
        <childnode refid="29076" relation="include">
        </childnode>
      </node>
      <node id="29072">
        <label>portable.h</label>
      </node>
      <node id="29068">
        <label>string.h</label>
      </node>
      <node id="29066">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="29062" relation="include">
        </childnode>
        <childnode refid="29067" relation="include">
        </childnode>
        <childnode refid="29068" relation="include">
        </childnode>
        <childnode refid="29069" relation="include">
        </childnode>
      </node>
      <node id="29071">
        <label>projdefs.h</label>
      </node>
      <node id="29074">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="29056">
        <label>SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h</label>
        <link refid="ff.h"/>
        <childnode refid="29057" relation="include">
        </childnode>
        <childnode refid="29058" relation="include">
        </childnode>
      </node>
      <node id="29063">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="29062" relation="include">
        </childnode>
        <childnode refid="29064" relation="include">
        </childnode>
        <childnode refid="29070" relation="include">
        </childnode>
      </node>
      <node id="29076">
        <label>BCDS_SDCard_Driver.h</label>
        <link refid="_b_c_d_s___s_d_card___driver_8h"/>
        <childnode refid="29065" relation="include">
        </childnode>
      </node>
      <node id="29060">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="29061" relation="include">
        </childnode>
        <childnode refid="29062" relation="include">
        </childnode>
        <childnode refid="29063" relation="include">
        </childnode>
        <childnode refid="29071" relation="include">
        </childnode>
        <childnode refid="29072" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="29086">
        <label>SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/ccsbcs.c</label>
        <link refid="ccsbcs_8c"/>
      </node>
      <node id="29082">
        <label>SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/unicode.c</label>
        <link refid="unicode_8c"/>
      </node>
      <node id="29079">
        <label>SDK/xdk110/Common/source/Utility/FOTA.c</label>
        <link refid="_f_o_t_a_8c"/>
      </node>
      <node id="29085">
        <label>SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/cc950.c</label>
        <link refid="cc950_8c"/>
      </node>
      <node id="29078">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.c</label>
        <link refid="_l_w_m2_m_object_firmware_update_8c"/>
      </node>
      <node id="29083">
        <label>SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/cc936.c</label>
        <link refid="cc936_8c"/>
      </node>
      <node id="29081">
        <label>SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/cc932.c</label>
        <link refid="cc932_8c"/>
        <childnode refid="29082" relation="include">
        </childnode>
      </node>
      <node id="29080">
        <label>SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c</label>
        <link refid="ff_8c"/>
      </node>
      <node id="29077">
        <label>SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h</label>
        <link refid="ff.h"/>
        <childnode refid="29078" relation="include">
        </childnode>
        <childnode refid="29079" relation="include">
        </childnode>
        <childnode refid="29080" relation="include">
        </childnode>
        <childnode refid="29081" relation="include">
        </childnode>
        <childnode refid="29083" relation="include">
        </childnode>
        <childnode refid="29084" relation="include">
        </childnode>
        <childnode refid="29085" relation="include">
        </childnode>
        <childnode refid="29086" relation="include">
        </childnode>
        <childnode refid="29087" relation="include">
        </childnode>
        <childnode refid="29082" relation="include">
        </childnode>
      </node>
      <node id="29087">
        <label>SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c</label>
        <link refid="syscall_8c"/>
      </node>
      <node id="29084">
        <label>SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/cc949.c</label>
        <link refid="cc949_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_d_i_r" prot="public">DIR</innerclass>
    <innerclass refid="struct_f_a_t_f_s" prot="public">FATFS</innerclass>
    <innerclass refid="struct_f_i_l" prot="public">FIL</innerclass>
    <innerclass refid="struct_f_i_l_i_n_f_o" prot="public">FILINFO</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ff_8h_1a749228947bc890224b8bd5de6e11faa3" prot="public" static="no">
        <name>_FATFS</name>
        <initializer>64180	/* Revision ID */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="20" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1ae936e4c15227768f7da4e0951def89c8" prot="public" static="no">
        <name>_T</name>
        <param><defname>x</defname></param>
        <initializer>x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="68" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a3232964568d17bb4a1af30f9db826ce2" prot="public" static="no">
        <name>_TEXT</name>
        <param><defname>x</defname></param>
        <initializer>x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="69" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1ae8174d00798e34e7c9e95898cb9e1a09" prot="public" static="no">
        <name>AM_ARC</name>
        <initializer>0x20	/* Archive */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="322" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="322" bodyend="-1"/>
        <referencedby refid="ff_8c_1a3a47a08609e77266bc1928af812e06df" compoundref="ff_8c" startline="1519" endline="1567">dir_read</referencedby>
        <referencedby refid="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" compoundref="ff_8c" startline="2809" endline="2846">f_sync</referencedby>
        <referencedby refid="group__filesystem_1ga9ee7e560eec8d82755c636ae41e702cd" compoundref="ff_8c" startline="3669" endline="3702">f_chmod</referencedby>
        <referencedby refid="group__filesystem_1ga2d0ceea336edd9b05754c8684ea8a72f" compoundref="ff_8c" startline="3711" endline="3780">f_rename</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a3a9db44e978ed6c13b641e092d4cd7d3" prot="public" static="no">
        <name>AM_DIR</name>
        <initializer>0x10	/* Directory */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="321" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="321" bodyend="-1"/>
        <referencedby refid="ff_8c_1af194524672491a522f041278b9b74e94" compoundref="ff_8c" startline="2052" endline="2104">follow_path</referencedby>
        <referencedby refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" compoundref="ff_8c" startline="2449" endline="2577">f_open</referencedby>
        <referencedby refid="group__filesystem_1gab63b213c75f7335fbb63a1f3f70e5fc7" compoundref="ff_8c" startline="3187" endline="3234">f_opendir</referencedby>
        <referencedby refid="group__filesystem_1ga2858167fcd0bced48e9be434b3895efe" compoundref="ff_8c" startline="3526" endline="3586">f_unlink</referencedby>
        <referencedby refid="group__filesystem_1ga4b4d38db58e89c526cfcf53200d719d0" compoundref="ff_8c" startline="3595" endline="3660">f_mkdir</referencedby>
        <referencedby refid="group__filesystem_1ga2d0ceea336edd9b05754c8684ea8a72f" compoundref="ff_8c" startline="3711" endline="3780">f_rename</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1aa90c4c921c1955fd407d8bbf17f1674e" prot="public" static="no">
        <name>AM_HID</name>
        <initializer>0x02	/* Hidden */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="317" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="317" bodyend="-1"/>
        <referencedby refid="group__filesystem_1ga9ee7e560eec8d82755c636ae41e702cd" compoundref="ff_8c" startline="3669" endline="3702">f_chmod</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a91161ef62e0e85ba3c2876d3d339473d" prot="public" static="no">
        <name>AM_LFN</name>
        <initializer>0x0F	/* LFN entry */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="320" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="320" bodyend="-1"/>
        <referencedby refid="ff_8c_1a3fe23e7983a2974b8002a8e57c1c06e9" compoundref="ff_8c" startline="1341" endline="1366">fit_lfn</referencedby>
        <referencedby refid="ff_8c_1abf87976453ebce0af60fa7bf4a6e21df" compoundref="ff_8c" startline="1458" endline="1509">dir_find</referencedby>
        <referencedby refid="ff_8c_1a3a47a08609e77266bc1928af812e06df" compoundref="ff_8c" startline="1519" endline="1567">dir_read</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1aefa78fd6b130faaca4e115602869b57c" prot="public" static="no">
        <name>AM_MASK</name>
        <initializer>0x3F	/* Mask of defined bits */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="323" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="323" bodyend="-1"/>
        <referencedby refid="ff_8c_1abf87976453ebce0af60fa7bf4a6e21df" compoundref="ff_8c" startline="1458" endline="1509">dir_find</referencedby>
        <referencedby refid="ff_8c_1a3a47a08609e77266bc1928af812e06df" compoundref="ff_8c" startline="1519" endline="1567">dir_read</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1add6d85d1e7a02b4f6188783ef91a5f1e" prot="public" static="no">
        <name>AM_RDO</name>
        <initializer>0x01	/* Read only */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="316" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="316" bodyend="-1"/>
        <referencedby refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" compoundref="ff_8c" startline="2449" endline="2577">f_open</referencedby>
        <referencedby refid="group__filesystem_1ga2858167fcd0bced48e9be434b3895efe" compoundref="ff_8c" startline="3526" endline="3586">f_unlink</referencedby>
        <referencedby refid="group__filesystem_1ga9ee7e560eec8d82755c636ae41e702cd" compoundref="ff_8c" startline="3669" endline="3702">f_chmod</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a1f25d5c17b5a3a6397b3398add8cdc15" prot="public" static="no">
        <name>AM_SYS</name>
        <initializer>0x04	/* System */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="318" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="318" bodyend="-1"/>
        <referencedby refid="group__filesystem_1ga9ee7e560eec8d82755c636ae41e702cd" compoundref="ff_8c" startline="3669" endline="3702">f_chmod</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a5cfae62dabae0a54809e43b36685ce7c" prot="public" static="no">
        <name>AM_VOL</name>
        <initializer>0x08	/* Volume label */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="319" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="319" bodyend="-1"/>
        <referencedby refid="ff_8c_1abf87976453ebce0af60fa7bf4a6e21df" compoundref="ff_8c" startline="1458" endline="1509">dir_find</referencedby>
        <referencedby refid="ff_8c_1a3a47a08609e77266bc1928af812e06df" compoundref="ff_8c" startline="1519" endline="1567">dir_read</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1aee297a9011164cf485a4df2a72758b08" prot="public" static="no">
        <name>CREATE_LINKMAP</name>
        <initializer>0xFFFFFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="327" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="327" bodyend="-1"/>
        <referencedby refid="group__filesystem_1ga5df0ac672ada972e89ef4b003e57f964" compoundref="ff_8c" startline="3029" endline="3178">f_lseek</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a59adc4c82490d23754cd39c2fb99b0da" prot="public" static="no">
        <name>EOF</name>
        <initializer>(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="253" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="253" bodyend="-1"/>
        <referencedby refid="group__filesystem_1ga62a35ee79e4913c1e31ac706241be7da" compoundref="ff_8c" startline="4524" endline="4542">f_putc</referencedby>
        <referencedby refid="group__filesystem_1ga9443c00129414fbfc16a5a13ad876ced" compoundref="ff_8c" startline="4551" endline="4570">f_puts</referencedby>
        <referencedby refid="group__filesystem_1ga49cccab38cd84e2d3357fef2d1df21f9" compoundref="ff_8c" startline="4579" endline="4674">f_printf</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a970cdd8970a3a94967ad64cfc5d4c161" prot="public" static="no">
        <name>f_eof</name>
        <param><defname>fp</defname></param>
        <initializer>((int)((fp)-&gt;fptr == (fp)-&gt;fsize))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="245" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a25cbdabeed318802cf0e9db6671a33b7" prot="public" static="no">
        <name>f_error</name>
        <param><defname>fp</defname></param>
        <initializer>((fp)-&gt;err)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="246" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1ae4caf47dd5cbc123b61d35542481b1be" prot="public" static="no">
        <name>f_rewind</name>
        <param><defname>fp</defname></param>
        <initializer><ref refid="group__filesystem_1ga5df0ac672ada972e89ef4b003e57f964" kindref="member">f_lseek</ref>((fp), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="249" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a3f92b6c0c1648de678283ab6f1610161" prot="public" static="no">
        <name>f_rewinddir</name>
        <param><defname>dp</defname></param>
        <initializer><ref refid="group__filesystem_1gab39e82a110695de45f416f3149358012" kindref="member">f_readdir</ref>((dp), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="250" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a26f33722c5bf1aa3cd6f0290a83eb2bc" prot="public" static="no">
        <name>f_size</name>
        <param><defname>fp</defname></param>
        <initializer>((fp)-&gt;fsize)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="248" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a5e1daca7ce13cdc277e42185f7f9124f" prot="public" static="no">
        <name>f_tell</name>
        <param><defname>fp</defname></param>
        <initializer>((fp)-&gt;fptr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="247" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a5b2962e3616a1e9eb709d95f4c75c67c" prot="public" static="no">
        <name>FA__DIRTY</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="303" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="303" bodyend="-1"/>
        <referencedby refid="group__filesystem_1gac4c3dcb6869ca252888eebabe39727b3" compoundref="ff_8c" startline="2586" endline="2677">f_read</referencedby>
        <referencedby refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" compoundref="ff_8c" startline="2687" endline="2800">f_write</referencedby>
        <referencedby refid="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" compoundref="ff_8c" startline="2809" endline="2846">f_sync</referencedby>
        <referencedby refid="group__filesystem_1ga5df0ac672ada972e89ef4b003e57f964" compoundref="ff_8c" startline="3029" endline="3178">f_lseek</referencedby>
        <referencedby refid="group__filesystem_1ga691a27b40c348f7c84b42e911636f38a" compoundref="ff_8c" startline="3470" endline="3517">f_truncate</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1ac4b7d5223f84df91c306ffbff536fae4" prot="public" static="no">
        <name>FA__WRITTEN</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="302" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="302" bodyend="-1"/>
        <referencedby refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" compoundref="ff_8c" startline="2449" endline="2577">f_open</referencedby>
        <referencedby refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" compoundref="ff_8c" startline="2687" endline="2800">f_write</referencedby>
        <referencedby refid="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" compoundref="ff_8c" startline="2809" endline="2846">f_sync</referencedby>
        <referencedby refid="group__filesystem_1ga5df0ac672ada972e89ef4b003e57f964" compoundref="ff_8c" startline="3029" endline="3178">f_lseek</referencedby>
        <referencedby refid="group__filesystem_1ga691a27b40c348f7c84b42e911636f38a" compoundref="ff_8c" startline="3470" endline="3517">f_truncate</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1afba4546b131dea4b24727fa20a80e29f" prot="public" static="no">
        <name>FA_CREATE_ALWAYS</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="300" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="300" bodyend="-1"/>
        <referencedby refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" compoundref="ff_8c" startline="2449" endline="2577">f_open</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a417bb1babd1785fd181a806b5613eba3" prot="public" static="no">
        <name>FA_CREATE_NEW</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="299" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="299" bodyend="-1"/>
        <referencedby refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" compoundref="ff_8c" startline="2449" endline="2577">f_open</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a17b01553029920ac0468912b4bcb16c7" prot="public" static="no">
        <name>FA_OPEN_ALWAYS</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="301" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="301" bodyend="-1"/>
        <referencedby refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" compoundref="ff_8c" startline="2449" endline="2577">f_open</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a0c5dd686b10f84c2a2b3954957a5979a" prot="public" static="no">
        <name>FA_OPEN_EXISTING</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="295" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a1f4f3530ff03abbd979b072536e72290" prot="public" static="no">
        <name>FA_READ</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="294" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="294" bodyend="-1"/>
        <referencedby refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" compoundref="ff_8c" startline="2449" endline="2577">f_open</referencedby>
        <referencedby refid="group__filesystem_1gac4c3dcb6869ca252888eebabe39727b3" compoundref="ff_8c" startline="2586" endline="2677">f_read</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1afa366963220c89b882c0361794020c14" prot="public" static="no">
        <name>FA_WRITE</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="298" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="298" bodyend="-1"/>
        <referencedby refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" compoundref="ff_8c" startline="2449" endline="2577">f_open</referencedby>
        <referencedby refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" compoundref="ff_8c" startline="2687" endline="2800">f_write</referencedby>
        <referencedby refid="group__filesystem_1ga5df0ac672ada972e89ef4b003e57f964" compoundref="ff_8c" startline="3029" endline="3178">f_lseek</referencedby>
        <referencedby refid="group__filesystem_1ga691a27b40c348f7c84b42e911636f38a" compoundref="ff_8c" startline="3470" endline="3517">f_truncate</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1aab755aa1b4f81f4aabee4a5d4738cfb0" prot="public" static="no">
        <name>FS_FAT12</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="309" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="309" bodyend="-1"/>
        <referencedby refid="ff_8c_1a65611adf1626e5e08da77cd33a98dd8b" compoundref="ff_8c" startline="818" endline="862">get_fat</referencedby>
        <referencedby refid="ff_8c_1abd4b6b071a8d728a88727051c12bc6d7" compoundref="ff_8c" startline="873" endline="926">put_fat</referencedby>
        <referencedby refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</referencedby>
        <referencedby refid="group__filesystem_1ga0ff39f75a87cbda9cd6ea65d83f16cec" compoundref="ff_8c" startline="3404" endline="3461">f_getfree</referencedby>
        <referencedby refid="group__filesystem_1ga799aff9594e708c8be357281cf85428b" compoundref="ff_8c" startline="4063" endline="4300">f_mkfs</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a7ef90a36d99edfc0138a2155a17a79b9" prot="public" static="no">
        <name>FS_FAT16</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="310" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="310" bodyend="-1"/>
        <referencedby refid="ff_8c_1a65611adf1626e5e08da77cd33a98dd8b" compoundref="ff_8c" startline="818" endline="862">get_fat</referencedby>
        <referencedby refid="ff_8c_1abd4b6b071a8d728a88727051c12bc6d7" compoundref="ff_8c" startline="873" endline="926">put_fat</referencedby>
        <referencedby refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</referencedby>
        <referencedby refid="group__filesystem_1ga0ff39f75a87cbda9cd6ea65d83f16cec" compoundref="ff_8c" startline="3404" endline="3461">f_getfree</referencedby>
        <referencedby refid="group__filesystem_1ga799aff9594e708c8be357281cf85428b" compoundref="ff_8c" startline="4063" endline="4300">f_mkfs</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1ac63e0796095a789cefdbc3c3c676c9ce" prot="public" static="no">
        <name>FS_FAT32</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="311" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="311" bodyend="-1"/>
        <referencedby refid="ff_8c_1aec6b108298553219ebb2b960b528459d" compoundref="ff_8c" startline="760" endline="789">sync_fs</referencedby>
        <referencedby refid="ff_8c_1a65611adf1626e5e08da77cd33a98dd8b" compoundref="ff_8c" startline="818" endline="862">get_fat</referencedby>
        <referencedby refid="ff_8c_1abd4b6b071a8d728a88727051c12bc6d7" compoundref="ff_8c" startline="873" endline="926">put_fat</referencedby>
        <referencedby refid="ff_8c_1a29ecb9f62a34eadb5af2a42be312c31e" compoundref="ff_8c" startline="1080" endline="1118">dir_sdi</referencedby>
        <referencedby refid="ff_8c_1ad1b3343c92d0f0e58ba448c3c11b1f39" compoundref="ff_8c" startline="1235" endline="1247">ld_clust</referencedby>
        <referencedby refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</referencedby>
        <referencedby refid="group__filesystem_1ga4b4d38db58e89c526cfcf53200d719d0" compoundref="ff_8c" startline="3595" endline="3660">f_mkdir</referencedby>
        <referencedby refid="group__filesystem_1ga799aff9594e708c8be357281cf85428b" compoundref="ff_8c" startline="4063" endline="4300">f_mkfs</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a6577ed2f95527745bf4d27c53488b9a7" prot="public" static="no">
        <name>LD2PD</name>
        <param><defname>vol</defname></param>
        <initializer>(<ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>)(vol)	/* Each logical drive is bound to the same physical drive number */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="46" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="46" bodyend="-1"/>
        <referencedby refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</referencedby>
        <referencedby refid="group__filesystem_1ga799aff9594e708c8be357281cf85428b" compoundref="ff_8c" startline="4063" endline="4300">f_mkfs</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1aadc4a9aefaf2588bdd7565549f5d91e7" prot="public" static="no">
        <name>LD2PT</name>
        <param><defname>vol</defname></param>
        <initializer>0			/* Find first valid partition or in SFD */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="47" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="47" bodyend="-1"/>
        <referencedby refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</referencedby>
        <referencedby refid="group__filesystem_1ga799aff9594e708c8be357281cf85428b" compoundref="ff_8c" startline="4063" endline="4300">f_mkfs</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a4690304ddc975516f7dc02575c96e34e" prot="public" static="no">
        <name>LD_DWORD</name>
        <param><defname>ptr</defname></param>
        <initializer>(<ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>)(*(<ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>*)(<ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)(ptr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="336" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="336" bodyend="-1"/>
        <referencedby refid="ff_8c_1a65611adf1626e5e08da77cd33a98dd8b" compoundref="ff_8c" startline="818" endline="862">get_fat</referencedby>
        <referencedby refid="ff_8c_1abd4b6b071a8d728a88727051c12bc6d7" compoundref="ff_8c" startline="873" endline="926">put_fat</referencedby>
        <referencedby refid="ff_8c_1a2bc1b9d8567181c23b4720f4fb6076f5" compoundref="ff_8c" startline="1703" endline="1762">get_fileinfo</referencedby>
        <referencedby refid="ff_8c_1a55626c76a1556af5dc5345e2c0841a65" compoundref="ff_8c" startline="2175" endline="2193">check_fs</referencedby>
        <referencedby refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</referencedby>
        <referencedby refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" compoundref="ff_8c" startline="2449" endline="2577">f_open</referencedby>
        <referencedby refid="group__filesystem_1ga0ff39f75a87cbda9cd6ea65d83f16cec" compoundref="ff_8c" startline="3404" endline="3461">f_getfree</referencedby>
        <referencedby refid="group__filesystem_1ga799aff9594e708c8be357281cf85428b" compoundref="ff_8c" startline="4063" endline="4300">f_mkfs</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a398519bb08da6457e62567d1f0b567e3" prot="public" static="no">
        <name>LD_WORD</name>
        <param><defname>ptr</defname></param>
        <initializer>(<ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref>)(*(<ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref>*)(<ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)(ptr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="335" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="335" bodyend="-1"/>
        <referencedby refid="ff_8c_1a65611adf1626e5e08da77cd33a98dd8b" compoundref="ff_8c" startline="818" endline="862">get_fat</referencedby>
        <referencedby refid="ff_8c_1ad1b3343c92d0f0e58ba448c3c11b1f39" compoundref="ff_8c" startline="1235" endline="1247">ld_clust</referencedby>
        <referencedby refid="ff_8c_1a7ce4d4f3aa55873dc160d76778536a5f" compoundref="ff_8c" startline="1274" endline="1302">cmp_lfn</referencedby>
        <referencedby refid="ff_8c_1a2a2c96233e92d8abe12c4496caec85cf" compoundref="ff_8c" startline="1307" endline="1336">pick_lfn</referencedby>
        <referencedby refid="ff_8c_1a2bc1b9d8567181c23b4720f4fb6076f5" compoundref="ff_8c" startline="1703" endline="1762">get_fileinfo</referencedby>
        <referencedby refid="ff_8c_1a55626c76a1556af5dc5345e2c0841a65" compoundref="ff_8c" startline="2175" endline="2193">check_fs</referencedby>
        <referencedby refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</referencedby>
        <referencedby refid="group__filesystem_1ga0ff39f75a87cbda9cd6ea65d83f16cec" compoundref="ff_8c" startline="3404" endline="3461">f_getfree</referencedby>
        <referencedby refid="group__filesystem_1ga799aff9594e708c8be357281cf85428b" compoundref="ff_8c" startline="4063" endline="4300">f_mkfs</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1abf5aba973d95ac5843b80aa7379cdd66" prot="public" static="no">
        <name>ST_DWORD</name>
        <param><defname>ptr</defname></param>
        <param><defname>val</defname></param>
        <initializer>*(<ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>*)(<ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)(ptr)=(<ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>)(val)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="338" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="338" bodyend="-1"/>
        <referencedby refid="ff_8c_1aec6b108298553219ebb2b960b528459d" compoundref="ff_8c" startline="760" endline="789">sync_fs</referencedby>
        <referencedby refid="ff_8c_1abd4b6b071a8d728a88727051c12bc6d7" compoundref="ff_8c" startline="873" endline="926">put_fat</referencedby>
        <referencedby refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" compoundref="ff_8c" startline="2449" endline="2577">f_open</referencedby>
        <referencedby refid="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" compoundref="ff_8c" startline="2809" endline="2846">f_sync</referencedby>
        <referencedby refid="group__filesystem_1ga4b4d38db58e89c526cfcf53200d719d0" compoundref="ff_8c" startline="3595" endline="3660">f_mkdir</referencedby>
        <referencedby refid="group__filesystem_1ga799aff9594e708c8be357281cf85428b" compoundref="ff_8c" startline="4063" endline="4300">f_mkfs</referencedby>
      </memberdef>
      <memberdef kind="define" id="ff_8h_1a95ceb4c25b216e71baa7102939edfd0d" prot="public" static="no">
        <name>ST_WORD</name>
        <param><defname>ptr</defname></param>
        <param><defname>val</defname></param>
        <initializer>*(<ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref>*)(<ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*)(ptr)=(<ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref>)(val)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="337" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="337" bodyend="-1"/>
        <referencedby refid="ff_8c_1aec6b108298553219ebb2b960b528459d" compoundref="ff_8c" startline="760" endline="789">sync_fs</referencedby>
        <referencedby refid="ff_8c_1abd4b6b071a8d728a88727051c12bc6d7" compoundref="ff_8c" startline="873" endline="926">put_fat</referencedby>
        <referencedby refid="ff_8c_1a357e5a36452e057d68378c98cd61018c" compoundref="ff_8c" startline="1252" endline="1259">st_clust</referencedby>
        <referencedby refid="ff_8c_1a3fe23e7983a2974b8002a8e57c1c06e9" compoundref="ff_8c" startline="1341" endline="1366">fit_lfn</referencedby>
        <referencedby refid="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" compoundref="ff_8c" startline="2809" endline="2846">f_sync</referencedby>
        <referencedby refid="group__filesystem_1gaafaa718d1a487e12a8f0087173dba0b9" compoundref="ff_8c" startline="3789" endline="3822">f_utime</referencedby>
        <referencedby refid="group__filesystem_1ga799aff9594e708c8be357281cf85428b" compoundref="ff_8c" startline="4063" endline="4300">f_mkfs</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" prot="public" static="no">
        <name>FRESULT</name>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" prot="public">
          <name>FR_OK</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97dee4a6b485dc8f91f37486092dfe34" prot="public">
          <name>FR_DISK_ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" prot="public">
          <name>FR_INT_ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cac9894bed3e8632ede8d2712235fa8e45" prot="public">
          <name>FR_NOT_READY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97da8f98fc2e66d8fa7847f9ebb19b8c" prot="public">
          <name>FR_NO_FILE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cae4529c8cc8b59783d6efc9ba4f574532" prot="public">
          <name>FR_NO_PATH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca83e45a4b579558c57192c0a391b9bb45" prot="public">
          <name>FR_INVALID_NAME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca897e9f2dd7629a80f48af242d8bc1a3d" prot="public">
          <name>FR_DENIED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca0d8f024d256df76e84782b95018a2450" prot="public">
          <name>FR_EXIST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3dec4eba481cdf5e99d7cd6009e6dcf8" prot="public">
          <name>FR_INVALID_OBJECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cac3afbb423b1d4497229416812aff383b" prot="public">
          <name>FR_WRITE_PROTECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca487844af77de15f6932a3b41ef3a2d65" prot="public">
          <name>FR_INVALID_DRIVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cafc56605c68aaffab4a428339a8bd600d" prot="public">
          <name>FR_NOT_ENABLED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca086154b5fee763f28c49fd0e2c1cb463" prot="public">
          <name>FR_NO_FILESYSTEM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca4b02760f758f5b1a89f445244fe9fbca" prot="public">
          <name>FR_MKFS_ABORTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3f8ca7e51af8b129d14328de7243c5d4" prot="public">
          <name>FR_TIMEOUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca7db5afaaa2af591bd4a208b2967075d7" prot="public">
          <name>FR_LOCKED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44caf56a76a86602cbdeb2c4f3d00cfad21c" prot="public">
          <name>FR_NOT_ENOUGH_CORE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca50dd3c3c274ccebb2cfbddde9d065bb9" prot="public">
          <name>FR_TOO_MANY_OPEN_FILES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3b89faeceab64db277d0fcdeaaa315d6" prot="public">
          <name>FR_INVALID_PARAMETER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="184" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="184" bodyend="205"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" prot="public" static="no">
        <type>char</type>
        <definition>typedef char TCHAR</definition>
        <argsstring></argsstring>
        <name>TCHAR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="67" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ff_8h_1a53c7e9a7fb3c279254cd2d0445667e2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_chdir</definition>
        <argsstring>(const TCHAR *path)</argsstring>
        <name>f_chdir</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1a13e5933f851b436890361189f64261cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_chdrive</definition>
        <argsstring>(const TCHAR *path)</argsstring>
        <name>f_chdrive</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga9ee7e560eec8d82755c636ae41e702cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_chmod</definition>
        <argsstring>(const TCHAR *path, BYTE attr, BYTE mask)</argsstring>
        <name>f_chmod</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref></type>
          <declname>attr</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>The f_chmod function changes the attribute of a file or sub-directory. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1ga9ee7e560eec8d82755c636ae41e702cd" kindref="member">f_chmod()</ref> function changes the attribute of a file or sub-directory. <linebreak/>
 Example: <programlisting><codeline><highlight class="normal">/*<sp/>Set<sp/>read-only<sp/>flag,<sp/>clear<sp/>archive<sp/>flag<sp/>and<sp/>others<sp/>are<sp/>left<sp/>unchanged.<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_chmod(&quot;file.txt&quot;,<sp/>AR_RDO,<sp/>AR_RDO<sp/>|<sp/>AR_ARC);</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the null-terminated string that specifies an object to be changed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute flags to be set in one or more combination of the following flags. The specified flags are set and others are cleard. <table rows="5" cols="2"><row>
<entry thead="yes"><para>Attribute </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>AM_RDO </para></entry><entry thead="no"><para>Read only </para></entry></row>
<row>
<entry thead="no"><para>AM_ARC </para></entry><entry thead="no"><para>Archive </para></entry></row>
<row>
<entry thead="no"><para>AM_SYS </para></entry><entry thead="no"><para>System </para></entry></row>
<row>
<entry thead="no"><para>AM_HID </para></entry><entry thead="no"><para>Hidden </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute mask that specifies which attribute is changed. The specified attributes are set or cleard and others are left unchanged. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_PATH</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_NAME</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_WRITE_PROTECTED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_DRIVE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENABLED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILESYSTEM</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENOUGH_CORE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0 and _FS_MINIMIZE == 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="229" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3669" bodyend="3702"/>
        <references refid="ff_8c_1a7cc27142421bd12be623072288599791" compoundref="ff_8c" startline="473">DEFINE_NAMEBUF</references>
        <references refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</references>
        <references refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="144">DIR::fs</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a966fe5792671b39db1ccf655a8c1af8d" compoundref="ff_8c" startline="474">INIT_BUF</references>
        <references refid="ff_8c_1af194524672491a522f041278b9b74e94" compoundref="ff_8c" startline="2052" endline="2104">follow_path</references>
        <references refid="ff_8c_1aba6d6942b59f11cf285bdbfb7e38f1fa" compoundref="ff_8c" startline="475">FREE_BUF</references>
        <references refid="group___f_f_c_o_n_f_i_g_1ga52faf11025401372f71e9d81905b7af4" compoundref="ffconf_8h" startline="146">_FS_RPATH</references>
        <references refid="struct_d_i_r_1a34e961714af3bc25c08d5832cca23204" compoundref="ff_8h" startline="151">DIR::fn</references>
        <references refid="ff_8c_1ad2306816015e67e72cfd0a20a880b227" compoundref="ff_8c" startline="351">NSFLAG</references>
        <references refid="ff_8c_1a2db528782a021797b34bdc6e9e9de1c3" compoundref="ff_8c" startline="357">NS_DOT</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca83e45a4b579558c57192c0a391b9bb45" compoundref="ff_8h" startline="191">FR_INVALID_NAME</references>
        <references refid="struct_d_i_r_1a30fe34a14a6efb4c9c04a522f6cf3378" compoundref="ff_8h" startline="150">DIR::dir</references>
        <references refid="ff_8h_1add6d85d1e7a02b4f6188783ef91a5f1e" compoundref="ff_8h" startline="316">AM_RDO</references>
        <references refid="ff_8h_1aa90c4c921c1955fd407d8bbf17f1674e" compoundref="ff_8h" startline="317">AM_HID</references>
        <references refid="ff_8h_1a1f25d5c17b5a3a6397b3398add8cdc15" compoundref="ff_8h" startline="318">AM_SYS</references>
        <references refid="ff_8h_1ae8174d00798e34e7c9e95898cb9e1a09" compoundref="ff_8h" startline="322">AM_ARC</references>
        <references refid="ff_8c_1ad3233e40118ed66095f3c9545b788f8a" compoundref="ff_8c" startline="410">DIR_Attr</references>
        <references refid="struct_f_a_t_f_s_1adb3983f8d19ef9879f30d04b076e9ff2" compoundref="ff_8h" startline="83">FATFS::wflag</references>
        <references refid="ff_8c_1aec6b108298553219ebb2b960b528459d" compoundref="ff_8c" startline="760" endline="789">sync_fs</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga53882db20ef4323dcfd1874d7733ffc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_close</definition>
        <argsstring>(FIL *fp)</argsstring>
        <name>f_close</name>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>The f_close function closes an open file. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1ga53882db20ef4323dcfd1874d7733ffc3" kindref="member">f_close()</ref> function closes an open file object. If any data has been written to the file, the cached information of the file is written back to the volume. After the function succeeded, the file object is no longer valid and it can be discarded. <linebreak/>
 Note that if the file object is in read-only mode and _FS_LOCK option is not enabled, the file object can also be discarded without this process. However this is not recommended for future compatibility.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open file object structure to be closed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_OBJECT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Always available. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="213" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="2857" bodyend="2885"/>
        <references refid="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" compoundref="ff_8c" startline="2809" endline="2846">f_sync</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1aa7193f5b86c3996b5312043a0c26da5f" compoundref="ff_8c" startline="2372" endline="2385">validate</references>
        <references refid="struct_f_i_l_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="115">FIL::fs</references>
        <references refid="ff_8c_1a58c93c453ba943336cd24aa185cd72cf" compoundref="ff_8c" startline="565" endline="577">unlock_fs</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1gab5f7376b6f3e3bcc7f5ff5497c8b7364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_closedir</definition>
        <argsstring>(DIR *dp)</argsstring>
        <name>f_closedir</name>
        <param>
          <type><ref refid="struct_d_i_r" kindref="compound">DIR</ref> *</type>
          <declname>dp</declname>
        </param>
        <briefdescription>
<para>The f_closedir function closes an open directory. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1gab5f7376b6f3e3bcc7f5ff5497c8b7364" kindref="member">f_closedir()</ref> function closes an open directory object. After the function succeeded, the directory object is no longer valid and it can be discarded. <linebreak/>
 Note that the directory object can also be discarded without this process if _FS_LOCK option is not enabled. However this is not recommended for future compatibility. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open directory object structure to be closed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_OBJECT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_MINIMIZE &lt;= 1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="221" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3243" bodyend="3266"/>
        <references refid="ff_8c_1aa7193f5b86c3996b5312043a0c26da5f" compoundref="ff_8c" startline="2372" endline="2385">validate</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="144">DIR::fs</references>
        <references refid="ff_8c_1a58c93c453ba943336cd24aa185cd72cf" compoundref="ff_8c" startline="565" endline="577">unlock_fs</references>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1ae89e589480ab573ce19d22dcd022efe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_fdisk</definition>
        <argsstring>(BYTE pdrv, const DWORD szt[], void *work)</argsstring>
        <name>f_fdisk</name>
        <param>
          <type><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref></type>
          <declname>pdrv</declname>
        </param>
        <param>
          <type>const <ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref></type>
          <declname>szt</declname>
          <array>[]</array>
        </param>
        <param>
          <type>void *</type>
          <declname>work</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1a6db7bc3d037b51a9f205eacda6177a5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_findfirst</definition>
        <argsstring>(DIR *dp, FILINFO *fno, const TCHAR *path, const TCHAR *pattern)</argsstring>
        <name>f_findfirst</name>
        <param>
          <type><ref refid="struct_d_i_r" kindref="compound">DIR</ref> *</type>
          <declname>dp</declname>
        </param>
        <param>
          <type><ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref> *</type>
          <declname>fno</declname>
        </param>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1a013999e446481a607316b916441f8673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_findnext</definition>
        <argsstring>(DIR *dp, FILINFO *fno)</argsstring>
        <name>f_findnext</name>
        <param>
          <type><ref refid="struct_d_i_r" kindref="compound">DIR</ref> *</type>
          <declname>dp</declname>
        </param>
        <param>
          <type><ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref> *</type>
          <declname>fno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1a6c0c4cd695704aa6d952c90be81d9849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_forward</definition>
        <argsstring>(FIL *fp, UINT(*func)(const BYTE *, UINT), UINT btf, UINT *bf)</argsstring>
        <name>f_forward</name>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref>(*)(const <ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref> *, <ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref>)</type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
          <declname>btf</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref> *</type>
          <declname>bf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1acb865a03dbac0031ac5cb8a031f7b71c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_getcwd</definition>
        <argsstring>(TCHAR *buff, UINT len)</argsstring>
        <name>f_getcwd</name>
        <param>
          <type><ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga0ff39f75a87cbda9cd6ea65d83f16cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_getfree</definition>
        <argsstring>(const TCHAR *path, DWORD *nclst, FATFS **fatfs)</argsstring>
        <name>f_getfree</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref> *</type>
          <declname>nclst</declname>
        </param>
        <param>
          <type><ref refid="struct_f_a_t_f_s" kindref="compound">FATFS</ref> **</type>
          <declname>fatfs</declname>
        </param>
        <briefdescription>
<para>The f_getfree function gets number of the free clusters on the volume. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1ga0ff39f75a87cbda9cd6ea65d83f16cec" kindref="member">f_getfree()</ref> function gets number of free clusters on the volume. The member csize in the file system object indicates number of sectors per cluster, so that the free space in unit of sector can be calcurated with this information. When FSINFO structure on the FAT32 volume is not in sync, this function can return an incorrect free cluster count. To avoid this problem, FatFs can be forced full FAT scan by _FS_NOFSINFO option. <linebreak/>
 Example: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/>FATFS<sp/>*fs;</highlight></codeline>
<codeline><highlight class="normal">DWORD<sp/>fre_clust,<sp/>fre_sect,<sp/>tot_sect;</highlight></codeline>
<codeline><highlight class="normal"><sp/>/*<sp/>Get<sp/>volume<sp/>information<sp/>and<sp/>free<sp/>clusters<sp/>of<sp/>drive<sp/>1<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>res<sp/>=<sp/>f_getfree(&quot;1:&quot;,<sp/>&amp;fre_clust,<sp/>&amp;fs);</highlight></codeline>
<codeline><highlight class="normal"><sp/>if<sp/>(res)<sp/>die(res);</highlight></codeline>
<codeline><highlight class="normal"><sp/>/*<sp/>Get<sp/>total<sp/>sectors<sp/>and<sp/>free<sp/>sectors<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>tot_sect<sp/>=<sp/>(fs-&gt;n_fatent<sp/>-<sp/>2)<sp/>*<sp/>fs-&gt;csize;</highlight></codeline>
<codeline><highlight class="normal"><sp/>fre_sect<sp/>=<sp/>fre_clust<sp/>*<sp/>fs-&gt;csize;</highlight></codeline>
<codeline><highlight class="normal"><sp/>/*<sp/>Print<sp/>the<sp/>free<sp/>space<sp/>(assuming<sp/>512<sp/>bytes/sector)<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>printf(&quot;%10lu<sp/>KiB<sp/>total<sp/>drive<sp/>space.\n%10lu<sp/>KiB<sp/>available.\n&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tot_sect<sp/>/<sp/>2,<sp/>fre_sect<sp/>/<sp/>2);</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the null-terminated string that specifies the logical drive. A null-string means the default drive. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nclst</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the DWORD variable to store number of free clusters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">fatfs</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to pointer that to store a pointer to the corresponding file system object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_DRIVE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENABLED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILESYSTEM</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0 and _FS_MINIMIZE == 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="234" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3404" bodyend="3461"/>
        <references refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="struct_f_a_t_f_s_1a509defa217cfb2eb777ed3c74c4ef426" compoundref="ff_8h" startline="95">FATFS::free_clust</references>
        <references refid="struct_f_a_t_f_s_1a388eb0fa0f3f1449a6ab88c6674e16fc" compoundref="ff_8h" startline="100">FATFS::n_fatent</references>
        <references refid="struct_f_a_t_f_s_1a3630ef0b29c45ef8e0c1de639efab754" compoundref="ff_8h" startline="79">FATFS::fs_type</references>
        <references refid="ff_8h_1aab755aa1b4f81f4aabee4a5d4738cfb0" compoundref="ff_8h" startline="309">FS_FAT12</references>
        <references refid="ff_8c_1a65611adf1626e5e08da77cd33a98dd8b" compoundref="ff_8c" startline="818" endline="862">get_fat</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97dee4a6b485dc8f91f37486092dfe34" compoundref="ff_8h" startline="186">FR_DISK_ERR</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" compoundref="ff_8h" startline="187">FR_INT_ERR</references>
        <references refid="struct_f_a_t_f_s_1a74e60540a346de6eb9f0c13d6203efa1" compoundref="ff_8h" startline="103">FATFS::fatbase</references>
        <references refid="ff_8c_1af2e8986556ee6644b4bf31fa4158d735" compoundref="ff_8c" startline="729" endline="750">move_window</references>
        <references refid="struct_f_a_t_f_s_1aabf9e848c88b78e22df6e09a0626e6f5" compoundref="ff_8h" startline="107">FATFS::win</references>
        <references refid="ff_8c_1a42b5140fc5e09a53c8f4cba66dc0e6c1" compoundref="ff_8c" startline="54">SS</references>
        <references refid="ff_8h_1a7ef90a36d99edfc0138a2155a17a79b9" compoundref="ff_8h" startline="310">FS_FAT16</references>
        <references refid="ff_8h_1a398519bb08da6457e62567d1f0b567e3" compoundref="ff_8h" startline="335">LD_WORD</references>
        <references refid="ff_8h_1a4690304ddc975516f7dc02575c96e34e" compoundref="ff_8h" startline="336">LD_DWORD</references>
        <references refid="struct_f_a_t_f_s_1a66c4d8e68262d5542852e2aed6ce69b4" compoundref="ff_8h" startline="84">FATFS::fsi_flag</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1ac4ff40a674bcbfe40d81b1e8e54befc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_getlabel</definition>
        <argsstring>(const TCHAR *path, TCHAR *label, DWORD *vsn)</argsstring>
        <name>f_getlabel</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref> *</type>
          <declname>vsn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga0fa54bd310785ecdaed19dda8f60dac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
        <definition>TCHAR* f_gets</definition>
        <argsstring>(TCHAR *buff, int len, FIL *fp)</argsstring>
        <name>f_gets</name>
        <param>
          <type><ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>The f_gets reads a string from the file. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1ga0fa54bd310785ecdaed19dda8f60dac5" kindref="member">f_gets()</ref> function is a wrapper function of <ref refid="group__filesystem_1gac4c3dcb6869ca252888eebabe39727b3" kindref="member">f_read()</ref> function. The read operation continues until a &apos;<linebreak/>
&apos; is stored, reached end of the file or the buffer is filled with len - 1 characters. The read string is terminated with a &apos;\0&apos;. When no character to read or any error occured during read operation, it returns a null pointer. The status of EOF and error can be examined with <ref refid="group__filesystem_1gaf0878582b1255b693b29dca3c6ecccf1" kindref="member">f_eof()</ref> and <ref refid="group__filesystem_1gad3c6dd79ef26a59629a6c8f6afe71fbf" kindref="member">f_error()</ref> macros. <linebreak/>
 When FatFs is configured to Unicode API (_LFN_UNICODE == 1), data types on the srting fuctions, <ref refid="group__filesystem_1ga62a35ee79e4913c1e31ac706241be7da" kindref="member">f_putc()</ref>, <ref refid="group__filesystem_1ga9443c00129414fbfc16a5a13ad876ced" kindref="member">f_puts()</ref>, <ref refid="group__filesystem_1ga49cccab38cd84e2d3357fef2d1df21f9" kindref="member">f_printf()</ref> and <ref refid="group__filesystem_1ga0fa54bd310785ecdaed19dda8f60dac5" kindref="member">f_gets()</ref>, is also switched to Unicode. The character encoding on the file to be read/written via those functions is selected by _STRF_ENCODE option. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buff</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to read buffer to store the read string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the read buffer in unit of character. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open file object structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>When</parametername>
</parameternamelist>
<parameterdescription>
<para>the function succeeded, buff will be returuned. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _USE_STRFUNC is 1 or 2. When it is set to 2, &apos;&apos;s contained in the file are stripped out. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="243" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="4382" bodyend="4450"/>
        <references refid="group__filesystem_1gac4c3dcb6869ca252888eebabe39727b3" compoundref="ff_8c" startline="2586" endline="2677">f_read</references>
        <references refid="ff_8c_1a58d63a832a117f179e41c7373d013dd6" compoundref="ff_8c" startline="331">IsDBCS1</references>
        <references refid="ff_8h_1ae5146230b88ddb4a6a69340e0fd1eabd" compoundref="cc932_8c" startline="3725" endline="3781">ff_convert</references>
        <references refid="group___f_f_c_o_n_f_i_g_1gaaab0313f867bb008b64236239f5c2660" compoundref="ffconf_8h" startline="47">_USE_STRFUNC</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga5df0ac672ada972e89ef4b003e57f964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_lseek</definition>
        <argsstring>(FIL *fp, DWORD ofs)</argsstring>
        <name>f_lseek</name>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref></type>
          <declname>ofs</declname>
        </param>
        <briefdescription>
<para>The f_lseek function moves the file read/write pointer of an open file object. It can also be used to expand the file size (cluster pre-allocation). </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1ga5df0ac672ada972e89ef4b003e57f964" kindref="member">f_lseek()</ref> function moves the file read/write pointer of an open file. The offset can be specified in only origin from top of the file. When an offset beyond the file size is specified at write mode, the file size is expanded to the specified offset. The file data in the expanded area is undefined because no data is written to the file. This is suitable to pre-allocate a cluster chain quickly, for fast write operation. After the <ref refid="group__filesystem_1ga5df0ac672ada972e89ef4b003e57f964" kindref="member">f_lseek()</ref> function succeeded, the current read/write pointer should be checked in order to make sure the read/write pointer has been moved correctry. In case of the current read/write pointer is not the expected value, either of followings has been occured. <linebreak/>
 <itemizedlist>
<listitem><para><computeroutput>End</computeroutput> of file. The specified ofs was clipped at end of the file because the file has been opened in read-only mode. </para></listitem>
<listitem><para><computeroutput>Disk</computeroutput> full. There is insufficient free space on the volume to expand the file. <linebreak/>
 Fast seek feature is enabled when _USE_FASTSEEK is set to 1 and the member cltbl in the file object is not NULL. This feature enables fast backward/long seek operations without FAT access by using CLMT (cluster link map table). The fast seek feature is also applied to <ref refid="group__filesystem_1gac4c3dcb6869ca252888eebabe39727b3" kindref="member">f_read()</ref>/f_write() function, however, the file size cannot be expanded by <ref refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" kindref="member">f_write()</ref>/f_lseek() function. <linebreak/>
 The CLMT must be created in the user defined DWORD array prior to use the fast seek feature. To create the CLMT, set address of the DWORD array to the member cltbl in the file object, set the array size in unit of items into the first item and call the <ref refid="group__filesystem_1ga5df0ac672ada972e89ef4b003e57f964" kindref="member">f_lseek()</ref> function with ofs = CREATE_LINKMAP. After the function succeeded and CLMT is created, no FAT access is occured at subsequent <ref refid="group__filesystem_1gac4c3dcb6869ca252888eebabe39727b3" kindref="member">f_read()</ref>/f_write()/f_lseek() function to the file. If the function failed with FR_NOT_ENOUGH_CORE, the given array size is insufficient for the file and number of items required is returned into the first item of the array. The required array size is (number of fragments + 1) * 2 items. For example, when the file is fragmented in 5, 12 items will be required for the CLMT. <linebreak/>
 Examples: <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Open<sp/>file<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>fp<sp/>=<sp/>malloc(sizeof<sp/>(FIL));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_open(fp,<sp/>&quot;file.dat&quot;,<sp/>FA_READ|FA_WRITE);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>if<sp/>(res)<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Move<sp/>to<sp/>offset<sp/>of<sp/>5000<sp/>from<sp/>top<sp/>of<sp/>the<sp/>file<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_lseek(fp,<sp/>5000);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Move<sp/>to<sp/>end<sp/>of<sp/>the<sp/>file<sp/>to<sp/>append<sp/>data<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_lseek(fp,<sp/>f_size(fp));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Forward<sp/>3000<sp/>bytes<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_lseek(fp,<sp/>f_tell(fp)<sp/>+<sp/>3000);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Rewind<sp/>2000<sp/>bytes<sp/>(take<sp/>care<sp/>on<sp/>wraparound)<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_lseek(fp,<sp/>f_tell(fp)<sp/>-<sp/>2000);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Cluster<sp/>pre-allocation<sp/>(to<sp/>prevent<sp/>buffer<sp/>overrun<sp/>on<sp/>streaming<sp/>write)<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_open(fp,<sp/>recfile,<sp/>FA_CREATE_NEW<sp/>|<sp/>FA_WRITE);<sp/><sp/><sp/>/*<sp/>Create<sp/>a<sp/>file<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_lseek(fp,<sp/>PRE_SIZE);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Expand<sp/>file<sp/>size<sp/>(cluster<sp/>pre-allocation)<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>if<sp/>(res<sp/>||<sp/>f_tell(fp)<sp/>!=<sp/>PRE_SIZE)<sp/>...<sp/><sp/><sp/>/*<sp/>Check<sp/>if<sp/>the<sp/>file<sp/>has<sp/>been<sp/>expanded<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_lseek(fp,<sp/>DATA_START);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Record<sp/>data<sp/>stream<sp/>WITHOUT<sp/>cluster<sp/>allocation<sp/>delay<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>DATA_START<sp/>and<sp/>write<sp/>block<sp/>size<sp/>should<sp/>be<sp/>aligned<sp/>to<sp/>sector<sp/>boundary<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_truncate(fp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Truncate<sp/>unused<sp/>area<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_lseek(fp,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Put<sp/>file<sp/>header<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_close(fp);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/*<sp/>Using<sp/>fast<sp/>seek<sp/>feature<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>DWORD<sp/>clmt[SZ_TBL];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Cluster<sp/>link<sp/>map<sp/>table<sp/>buffer<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_lseek(fp,<sp/>ofs1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>This<sp/>is<sp/>normal<sp/>seek<sp/>(cltbl<sp/>is<sp/>nulled<sp/>on<sp/>file<sp/>open)<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>fp-&gt;cltbl<sp/>=<sp/>clmt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Enable<sp/>fast<sp/>seek<sp/>feature<sp/>(cltbl<sp/>!=<sp/>NULL)<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>clmt[0]<sp/>=<sp/>SZ_TBL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Set<sp/>table<sp/>size<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_lseek(fp,<sp/>CREATE_LINKMAP);<sp/><sp/><sp/><sp/><sp/>/*<sp/>Create<sp/>CLMT<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>f_lseek(fp,<sp/>ofs2);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>This<sp/>is<sp/>fast<sp/>seek<sp/>*/</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open file object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ofs</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte offset from top of the file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_OBJECT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_MINIMIZE &lt;= 2. </para></simplesect>
</para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="217" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3029" bodyend="3178"/>
        <references refid="ff_8c_1aa7193f5b86c3996b5312043a0c26da5f" compoundref="ff_8c" startline="2372" endline="2385">validate</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
        <references refid="struct_f_i_l_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="115">FIL::fs</references>
        <references refid="struct_f_i_l_1a32b2a186af2cab58af8114c05386b9f6" compoundref="ff_8h" startline="118">FIL::err</references>
        <references refid="ff_8h_1aee297a9011164cf485a4df2a72758b08" compoundref="ff_8h" startline="327">CREATE_LINKMAP</references>
        <references refid="struct_f_i_l_1ad5d52f3fde971d2a05ff777a6243c252" compoundref="ff_8h" startline="121">FIL::sclust</references>
        <references refid="ff_8c_1a65611adf1626e5e08da77cd33a98dd8b" compoundref="ff_8c" startline="818" endline="862">get_fat</references>
        <references refid="ff_8c_1a41e4c46636679236568cf50b5535847f" compoundref="ff_8c" startline="46">ABORT</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" compoundref="ff_8h" startline="187">FR_INT_ERR</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97dee4a6b485dc8f91f37486092dfe34" compoundref="ff_8h" startline="186">FR_DISK_ERR</references>
        <references refid="struct_f_a_t_f_s_1a388eb0fa0f3f1449a6ab88c6674e16fc" compoundref="ff_8h" startline="100">FATFS::n_fatent</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44caf56a76a86602cbdeb2c4f3d00cfad21c" compoundref="ff_8h" startline="202">FR_NOT_ENOUGH_CORE</references>
        <references refid="struct_f_i_l_1af70a0afd16367837984d6205cbfca308" compoundref="ff_8h" startline="120">FIL::fsize</references>
        <references refid="struct_f_i_l_1a0f65af32a2d036c560e66177961b9b22" compoundref="ff_8h" startline="119">FIL::fptr</references>
        <references refid="struct_f_i_l_1ac134c1b4645be670eb5207032e714616" compoundref="ff_8h" startline="122">FIL::clust</references>
        <references refid="ff_8c_1a7519abb60fe91f6aa1d17f64fbae123a" compoundref="ff_8c" startline="800" endline="808">clust2sect</references>
        <references refid="ff_8c_1a42b5140fc5e09a53c8f4cba66dc0e6c1" compoundref="ff_8c" startline="54">SS</references>
        <references refid="struct_f_a_t_f_s_1ace95d33f1aefff4c3e821cf8eac7ec3e" compoundref="ff_8h" startline="81">FATFS::csize</references>
        <references refid="struct_f_i_l_1a272171f74215002aba31a89428f1d290" compoundref="ff_8h" startline="123">FIL::dsect</references>
        <references refid="struct_f_i_l_1abb2c49aaa8df55e1e1d8cb0c5e04a3bf" compoundref="ff_8h" startline="117">FIL::flag</references>
        <references refid="ff_8h_1a5b2962e3616a1e9eb709d95f4c75c67c" compoundref="ff_8h" startline="303">FA__DIRTY</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1ga006bdd486027cb80272afa8849993f7c" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="63">disk_write</references>
        <references refid="struct_f_a_t_f_s_1af46443bf86aaaff8d411814ed640e831" compoundref="ff_8h" startline="80">FATFS::drv</references>
        <references refid="struct_f_i_l_1a1602edc1ba9d9ae2b583cf55f3492325" compoundref="ff_8h" startline="135">FIL::buf</references>
        <references refid="diskio_8h_1gaacdfef1dad6565f65c26d12fe0ea4b2ba2ea4b6ef3fffc17dd1d38ab5c2837737" compoundref="diskio_8h" startline="23">RES_OK</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1gae55155170bc9b99f73b440b93cc1c9e2" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="62">disk_read</references>
        <references refid="group___f_f_c_o_n_f_i_g_1gafb8d35370cfe0c23832ac2d82e854ec6" compoundref="ffconf_8h" startline="30">_FS_READONLY</references>
        <references refid="ff_8h_1afa366963220c89b882c0361794020c14" compoundref="ff_8h" startline="298">FA_WRITE</references>
        <references refid="ff_8c_1acbd0a20a17c6f9b6d536490d1cc3c5ac" compoundref="ff_8c" startline="990" endline="1040">create_chain</references>
        <references refid="ff_8h_1ac4b7d5223f84df91c306ffbff536fae4" compoundref="ff_8h" startline="302">FA__WRITTEN</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga4b4d38db58e89c526cfcf53200d719d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_mkdir</definition>
        <argsstring>(const TCHAR *path)</argsstring>
        <name>f_mkdir</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>The f_mkdir function creates a new directory. </para>        </briefdescription>
        <detaileddescription>
<para>This function creates a new directory. <linebreak/>
 Example: <programlisting><codeline><highlight class="normal">res<sp/>=<sp/>f_mkdir(&quot;sub1&quot;);</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(res)<sp/>die(res);</highlight></codeline>
<codeline><highlight class="normal">res<sp/>=<sp/>f_mkdir(&quot;sub1/sub2&quot;);</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(res)<sp/>die(res);</highlight></codeline>
<codeline><highlight class="normal">res<sp/>=<sp/>f_mkdir(&quot;sub1/sub2/sub3&quot;);</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(res)<sp/>die(res);</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the null-terminated string that specifies the directory name to create. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_PATH</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_NAME</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DENIED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_EXIST</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_WRITE_PROTECTED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_DRIVE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENABLED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILESYSTEM</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENOUGH_CORE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0 and _FS_MINIMIZE == 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="225" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3595" bodyend="3660"/>
        <references refid="ff_8c_1a72589f5bbb514c0b222ab8b292764418" compoundref="ff_8c" startline="67">GET_FATTIME</references>
        <references refid="ff_8c_1a7cc27142421bd12be623072288599791" compoundref="ff_8c" startline="473">DEFINE_NAMEBUF</references>
        <references refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</references>
        <references refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="144">DIR::fs</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a966fe5792671b39db1ccf655a8c1af8d" compoundref="ff_8c" startline="474">INIT_BUF</references>
        <references refid="ff_8c_1af194524672491a522f041278b9b74e94" compoundref="ff_8c" startline="2052" endline="2104">follow_path</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca0d8f024d256df76e84782b95018a2450" compoundref="ff_8h" startline="193">FR_EXIST</references>
        <references refid="group___f_f_c_o_n_f_i_g_1ga52faf11025401372f71e9d81905b7af4" compoundref="ffconf_8h" startline="146">_FS_RPATH</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97da8f98fc2e66d8fa7847f9ebb19b8c" compoundref="ff_8h" startline="189">FR_NO_FILE</references>
        <references refid="struct_d_i_r_1a34e961714af3bc25c08d5832cca23204" compoundref="ff_8h" startline="151">DIR::fn</references>
        <references refid="ff_8c_1ad2306816015e67e72cfd0a20a880b227" compoundref="ff_8c" startline="351">NSFLAG</references>
        <references refid="ff_8c_1a2db528782a021797b34bdc6e9e9de1c3" compoundref="ff_8c" startline="357">NS_DOT</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca83e45a4b579558c57192c0a391b9bb45" compoundref="ff_8h" startline="191">FR_INVALID_NAME</references>
        <references refid="ff_8c_1acbd0a20a17c6f9b6d536490d1cc3c5ac" compoundref="ff_8c" startline="990" endline="1040">create_chain</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca897e9f2dd7629a80f48af242d8bc1a3d" compoundref="ff_8h" startline="192">FR_DENIED</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" compoundref="ff_8h" startline="187">FR_INT_ERR</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97dee4a6b485dc8f91f37486092dfe34" compoundref="ff_8h" startline="186">FR_DISK_ERR</references>
        <references refid="ff_8c_1a5e18753404354b210096f9af99e31bc1" compoundref="ff_8c" startline="700" endline="724">sync_window</references>
        <references refid="ff_8c_1a7519abb60fe91f6aa1d17f64fbae123a" compoundref="ff_8c" startline="800" endline="808">clust2sect</references>
        <references refid="struct_f_a_t_f_s_1aabf9e848c88b78e22df6e09a0626e6f5" compoundref="ff_8h" startline="107">FATFS::win</references>
        <references refid="ff_8c_1a02eb5189e43056a9ddc8a59cbe89be93" compoundref="ff_8c" startline="524" endline="529">mem_set</references>
        <references refid="ff_8c_1a42b5140fc5e09a53c8f4cba66dc0e6c1" compoundref="ff_8c" startline="54">SS</references>
        <references refid="ff_8c_1afa89348e9fc2de82ae9e12c661366b0e" compoundref="ff_8c" startline="409">DIR_Name</references>
        <references refid="ff_8c_1ad3233e40118ed66095f3c9545b788f8a" compoundref="ff_8c" startline="410">DIR_Attr</references>
        <references refid="ff_8h_1a3a9db44e978ed6c13b641e092d4cd7d3" compoundref="ff_8h" startline="321">AM_DIR</references>
        <references refid="ff_8h_1abf5aba973d95ac5843b80aa7379cdd66" compoundref="ff_8h" startline="338">ST_DWORD</references>
        <references refid="ff_8c_1ab9452d336adeece2a1b0b54ab35b8a59" compoundref="ff_8c" startline="417">DIR_WrtTime</references>
        <references refid="ff_8c_1a357e5a36452e057d68378c98cd61018c" compoundref="ff_8c" startline="1252" endline="1259">st_clust</references>
        <references refid="ff_8c_1a8941d573d16af92c8570950d53164f30" compoundref="ff_8c" startline="507" endline="520">mem_cpy</references>
        <references refid="ff_8c_1a51949bb6a3eb30e5a09c48a2ee5a2593" compoundref="ff_8c" startline="426">SZ_DIRE</references>
        <references refid="struct_d_i_r_1ad5d52f3fde971d2a05ff777a6243c252" compoundref="ff_8h" startline="147">DIR::sclust</references>
        <references refid="struct_f_a_t_f_s_1a3630ef0b29c45ef8e0c1de639efab754" compoundref="ff_8h" startline="79">FATFS::fs_type</references>
        <references refid="ff_8h_1ac63e0796095a789cefdbc3c3c676c9ce" compoundref="ff_8h" startline="311">FS_FAT32</references>
        <references refid="struct_f_a_t_f_s_1aebfa6556d8f94e951a8b2c1eb740e9a1" compoundref="ff_8h" startline="104">FATFS::dirbase</references>
        <references refid="struct_f_a_t_f_s_1ace95d33f1aefff4c3e821cf8eac7ec3e" compoundref="ff_8h" startline="81">FATFS::csize</references>
        <references refid="struct_f_a_t_f_s_1a285dc1de6874bb5f0c41c328c9433e14" compoundref="ff_8h" startline="106">FATFS::winsect</references>
        <references refid="struct_f_a_t_f_s_1adb3983f8d19ef9879f30d04b076e9ff2" compoundref="ff_8h" startline="83">FATFS::wflag</references>
        <references refid="ff_8c_1aaff1b52e1f7ae47b4aedad795d7e7e64" compoundref="ff_8c" startline="1578" endline="1645">dir_register</references>
        <references refid="ff_8c_1ab88651d19a5597dec220fe7538cccf23" compoundref="ff_8c" startline="937" endline="979">remove_chain</references>
        <references refid="struct_d_i_r_1a30fe34a14a6efb4c9c04a522f6cf3378" compoundref="ff_8h" startline="150">DIR::dir</references>
        <references refid="ff_8c_1aec6b108298553219ebb2b960b528459d" compoundref="ff_8c" startline="760" endline="789">sync_fs</references>
        <references refid="ff_8c_1aba6d6942b59f11cf285bdbfb7e38f1fa" compoundref="ff_8c" startline="475">FREE_BUF</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga799aff9594e708c8be357281cf85428b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_mkfs</definition>
        <argsstring>(const TCHAR *path, BYTE sfd, UINT au)</argsstring>
        <name>f_mkfs</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref></type>
          <declname>sfd</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
          <declname>au</declname>
        </param>
        <briefdescription>
<para>The f_mkfs fucntion creates an FAT file system on the logical drive. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1ga799aff9594e708c8be357281cf85428b" kindref="member">f_mkfs()</ref> function creates an FAT volume on the specified logical drive. When FDISK format is specified, a primary partition occupies entire space of the physical drive is created and then an FAT volume is created on the partition. When SFD format is specified, the FAT volume starts from the first sector of the physical drive. <linebreak/>
 If the logical drive is bound to the specific partition (1-4) by multiple partition feature (_MULTI_PARTITION), the FAT volume is created into the partition. In this case, the second argument sfd is ignored. The physical drive must have been partitioned with <ref refid="group__filesystem_1ga0c1bd3e3872abbda0e256e7c73da9f3b" kindref="member">f_fdisk()</ref> function or any other partitioning tools prior to create the FAT volume with this function. <linebreak/>
 Note that there are two partitioning rules, FDISK and SFD. The FDISK partitioning is usually used for harddisk, MMC, SDC, CFC and U Disk. It can divide a physical drive into one or more partitions with a partition table on the MBR. However Windows does not support multiple partition on the removable disk. The SFD is non-partitioned method. The FAT volume starts from the first sector on the physical drive without partition table. It is usually used for floppy disk, Microdrive, optical disk and any type of super-floppy media. <linebreak/>
 The FAT sub-type, FAT12/FAT16/FAT32, is determined by number of clusters on the volume and nothing else, according to the FAT specification issued by Microsoft. Thus which FAT sub-type is selected, is depends on the volume size and the specified cluster size. The cluster size affects read/write throughput and space usage efficiency. Larger cluster size increases the read/write throughput and decreases the space usage efficiency of the volume. <linebreak/>
 In case of the number of clusters gets near the FAT sub-type boundaries, the function can fail with FR_MKFS_ABORTED. <linebreak/>
 Example: <programlisting><codeline><highlight class="normal">/*<sp/>Format<sp/>the<sp/>default<sp/>drive<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">int<sp/>main<sp/>(void)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/>FATFS<sp/>fs;<sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>File<sp/>system<sp/>object<sp/>(volume<sp/>work<sp/>area)<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>FIL<sp/>fil;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>File<sp/>object<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>FRESULT<sp/>res;<sp/><sp/><sp/>/*<sp/>API<sp/>result<sp/>code<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>UINT<sp/>bw;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Bytes<sp/>written<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>/*<sp/>Register<sp/>work<sp/>area<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>f_mount(&amp;fs,<sp/>&quot;&quot;,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/>/*<sp/>Create<sp/>FAT<sp/>volume<sp/>with<sp/>default<sp/>cluster<sp/>size<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>res<sp/>=<sp/>f_mkfs(&quot;&quot;,<sp/>0,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/>if<sp/>(res)<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/>/*<sp/>Create<sp/>a<sp/>file<sp/>as<sp/>new<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>res<sp/>=<sp/>f_open(&amp;fil,<sp/>&quot;hello.txt&quot;,<sp/>FA_CREATE_NEW<sp/>|<sp/>FA_WRITE);</highlight></codeline>
<codeline><highlight class="normal"><sp/>if<sp/>(res)<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/>/*<sp/>Write<sp/>a<sp/>message<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>f_write(&amp;fil,<sp/>&quot;Hello,<sp/>World!\r\n&quot;,<sp/>15,<sp/>&amp;bw);</highlight></codeline>
<codeline><highlight class="normal"><sp/>if<sp/>(bw<sp/>!=<sp/>15)<sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/>/*<sp/>Close<sp/>the<sp/>file<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>f_close(&amp;fil);</highlight></codeline>
<codeline><highlight class="normal"><sp/>/*<sp/>Unregister<sp/>work<sp/>area<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/>f_mount(0,<sp/>&quot;&quot;,<sp/>0);</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the null-terminated string that specifies the logical drive to be formatted. If there is no drive number, it means the default drive. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sfd</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies partitioning rule (FDISK(0) or SFD(1)). This argument will be ignored on some case. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">au</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies size of the allocation unit (cluter) in number of bytes or sectors. When the value is from 1 to 128, it specifies number of sectors. When the value is &gt;= _MIN_SS, it specifies number of bytes. If any invalid value, zero or not power of 2, is given, the cluster size is automatically determined depends on the volume size. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_WRITE_PROTECTED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_DRIVE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENABLED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_MKFS_ABORTED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_PARAMETER</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READOLNY == 0 and _USE_MKFS == 1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="238" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="4063" bodyend="4300"/>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3b89faeceab64db277d0fcdeaaa315d6" compoundref="ff_8h" startline="204">FR_INVALID_PARAMETER</references>
        <references refid="ff_8c_1a88ad7e4b1bc98d1a2673a136283dc7ee" compoundref="ff_8c" startline="2114" endline="2165">get_ldnumber</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca487844af77de15f6932a3b41ef3a2d65" compoundref="ff_8h" startline="196">FR_INVALID_DRIVE</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cafc56605c68aaffab4a428339a8bd600d" compoundref="ff_8h" startline="197">FR_NOT_ENABLED</references>
        <references refid="struct_f_a_t_f_s_1a3630ef0b29c45ef8e0c1de639efab754" compoundref="ff_8h" startline="79">FATFS::fs_type</references>
        <references refid="ff_8h_1a6577ed2f95527745bf4d27c53488b9a7" compoundref="ff_8h" startline="46">LD2PD</references>
        <references refid="ff_8h_1aadc4a9aefaf2588bdd7565549f5d91e7" compoundref="ff_8h" startline="47">LD2PT</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1ga45e4ba27a706ed2421edd501406a6496" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="61">disk_initialize</references>
        <references refid="diskio_8h_1abd6503c70d862b979a3f7080a59e9acd" compoundref="diskio_8h" startline="44">STA_NOINIT</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cac9894bed3e8632ede8d2712235fa8e45" compoundref="ff_8h" startline="188">FR_NOT_READY</references>
        <references refid="diskio_8h_1a9ec6dc5f6620a33fabe388d3a111ca8c" compoundref="diskio_8h" startline="46">STA_PROTECT</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cac3afbb423b1d4497229416812aff383b" compoundref="ff_8h" startline="195">FR_WRITE_PROTECTED</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1ga3051f51f1cccb103d145804d5d91b04d" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="64">disk_ioctl</references>
        <references refid="diskio_8h_1ac73b5cf2135cbd459d109b96c9aa346a" compoundref="diskio_8h" startline="54">GET_SECTOR_SIZE</references>
        <references refid="ff_8c_1a42b5140fc5e09a53c8f4cba66dc0e6c1" compoundref="ff_8c" startline="54">SS</references>
        <references refid="diskio_8h_1gaacdfef1dad6565f65c26d12fe0ea4b2ba2ea4b6ef3fffc17dd1d38ab5c2837737" compoundref="diskio_8h" startline="23">RES_OK</references>
        <references refid="group___f_f_c_o_n_f_i_g_1gac271b697378912f17132cb9c7d0de024" compoundref="ffconf_8h" startline="182">_MAX_SS</references>
        <references refid="group___f_f_c_o_n_f_i_g_1gad03aa6d0e294709ae15898ee2c14dc3a" compoundref="ffconf_8h" startline="181">_MIN_SS</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97dee4a6b485dc8f91f37486092dfe34" compoundref="ff_8h" startline="186">FR_DISK_ERR</references>
        <references refid="group___f_f_c_o_n_f_i_g_1gadc02609ba893fe8706a2f8af0e3a3bb5" compoundref="ffconf_8h" startline="173">_MULTI_PARTITION</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1gae55155170bc9b99f73b440b93cc1c9e2" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="62">disk_read</references>
        <references refid="struct_f_a_t_f_s_1aabf9e848c88b78e22df6e09a0626e6f5" compoundref="ff_8h" startline="107">FATFS::win</references>
        <references refid="ff_8h_1a398519bb08da6457e62567d1f0b567e3" compoundref="ff_8h" startline="335">LD_WORD</references>
        <references refid="ff_8c_1a74b810b3f3583c1eb54bd4305c0f261a" compoundref="ff_8c" startline="407">BS_55AA</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca4b02760f758f5b1a89f445244fe9fbca" compoundref="ff_8h" startline="199">FR_MKFS_ABORTED</references>
        <references refid="ff_8c_1ac3f187bf0ba891551f594af6b61f3188" compoundref="ff_8c" startline="405">MBR_Table</references>
        <references refid="ff_8c_1af133060c47366e7e557d4085d931183f" compoundref="ff_8c" startline="406">SZ_PTE</references>
        <references refid="ff_8h_1a4690304ddc975516f7dc02575c96e34e" compoundref="ff_8h" startline="336">LD_DWORD</references>
        <references refid="diskio_8h_1a570216006f6a8fc4e1698b1bbb2d1dde" compoundref="diskio_8h" startline="53">GET_SECTOR_COUNT</references>
        <references refid="ff_8h_1aab755aa1b4f81f4aabee4a5d4738cfb0" compoundref="ff_8h" startline="309">FS_FAT12</references>
        <references refid="ff_8c_1aeec02d5ae07ede32b7d74155bf0fda15" compoundref="ff_8c" startline="361">MIN_FAT16</references>
        <references refid="ff_8h_1a7ef90a36d99edfc0138a2155a17a79b9" compoundref="ff_8h" startline="310">FS_FAT16</references>
        <references refid="ff_8c_1a483625319f3e3bd5ac6502b46c375aed" compoundref="ff_8c" startline="362">MIN_FAT32</references>
        <references refid="ff_8h_1ac63e0796095a789cefdbc3c3c676c9ce" compoundref="ff_8h" startline="311">FS_FAT32</references>
        <references refid="ff_8c_1a412083bc7d166082045a0111e890b22a" compoundref="ff_8c" startline="4059">N_ROOTDIR</references>
        <references refid="ff_8c_1a51949bb6a3eb30e5a09c48a2ee5a2593" compoundref="ff_8c" startline="426">SZ_DIRE</references>
        <references refid="ff_8c_1a3f9495abc6071dcfdbd242cc1f9ad9f8" compoundref="ff_8c" startline="4060">N_FATS</references>
        <references refid="diskio_8h_1aec3bb4dfe075d0ba2f3b07b300a95500" compoundref="diskio_8h" startline="55">GET_BLOCK_SIZE</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1ga006bdd486027cb80272afa8849993f7c" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="63">disk_write</references>
        <references refid="ff_8c_1a02eb5189e43056a9ddc8a59cbe89be93" compoundref="ff_8c" startline="524" endline="529">mem_set</references>
        <references refid="ff_8h_1abf5aba973d95ac5843b80aa7379cdd66" compoundref="ff_8h" startline="338">ST_DWORD</references>
        <references refid="ff_8h_1a95ceb4c25b216e71baa7102939edfd0d" compoundref="ff_8h" startline="337">ST_WORD</references>
        <references refid="ff_8c_1a8941d573d16af92c8570950d53164f30" compoundref="ff_8c" startline="507" endline="520">mem_cpy</references>
        <references refid="ff_8c_1a8551844b4eb4e15aecd8cc9aa3585fa2" compoundref="ff_8c" startline="371">BPB_BytsPerSec</references>
        <references refid="ff_8c_1aab78e41c617a14b9540c0563d6b957fa" compoundref="ff_8c" startline="372">BPB_SecPerClus</references>
        <references refid="ff_8c_1ab3ec444c8457c9bc98aa07e846f5c1b7" compoundref="ff_8c" startline="373">BPB_RsvdSecCnt</references>
        <references refid="ff_8c_1af44a1e8c89ec5502595f23496d24cbf1" compoundref="ff_8c" startline="374">BPB_NumFATs</references>
        <references refid="ff_8c_1aaa667f14c87c45dc128f2ab208e92f98" compoundref="ff_8c" startline="375">BPB_RootEntCnt</references>
        <references refid="ff_8c_1a4eb540eecde0f2df26fa8c7969341d68" compoundref="ff_8c" startline="376">BPB_TotSec16</references>
        <references refid="ff_8c_1a7723a9f0da553e8879d60909d85ccb7b" compoundref="ff_8c" startline="382">BPB_TotSec32</references>
        <references refid="ff_8c_1a414e054c4b5ea3414ebefa3539e7e554" compoundref="ff_8c" startline="377">BPB_Media</references>
        <references refid="ff_8c_1ac71bb771432ea532bc47713a028ebd76" compoundref="ff_8c" startline="379">BPB_SecPerTrk</references>
        <references refid="ff_8c_1a9c03603c3be34d4c5cc1b481b0bc6774" compoundref="ff_8c" startline="380">BPB_NumHeads</references>
        <references refid="ff_8c_1a449d4ed5c4c8105daf29aad9488277f7" compoundref="ff_8c" startline="381">BPB_HiddSec</references>
        <references refid="ff_8c_1a72589f5bbb514c0b222ab8b292764418" compoundref="ff_8c" startline="67">GET_FATTIME</references>
        <references refid="ff_8c_1abaa3aafdcf5e83f8cb7e2bb373b13525" compoundref="ff_8c" startline="398">BS_VolID32</references>
        <references refid="ff_8c_1a6e6340030dc29e7da2e9f92e472a763d" compoundref="ff_8c" startline="389">BPB_FATSz32</references>
        <references refid="ff_8c_1a7add0104bd20083d6940d616faecd45a" compoundref="ff_8c" startline="392">BPB_RootClus</references>
        <references refid="ff_8c_1a51c45669282b9ce9da5152231df9f3ac" compoundref="ff_8c" startline="393">BPB_FSInfo</references>
        <references refid="ff_8c_1a383726fb93488d41866028b4f07c90e1" compoundref="ff_8c" startline="394">BPB_BkBootSec</references>
        <references refid="ff_8c_1aa670c7b495f5b347c442df67b188c58f" compoundref="ff_8c" startline="395">BS_DrvNum32</references>
        <references refid="ff_8c_1a59c4b2f802ab4bc9319e5bd840e615b8" compoundref="ff_8c" startline="397">BS_BootSig32</references>
        <references refid="ff_8c_1a8241a49bce313184a58617ba1ad9e84c" compoundref="ff_8c" startline="399">BS_VolLab32</references>
        <references refid="ff_8c_1a383a71bda500a0fb5a37f4edd785acbf" compoundref="ff_8c" startline="386">BS_VolID</references>
        <references refid="ff_8c_1a60a2f6efeb6a4c7cb2da1e5def6ca43b" compoundref="ff_8c" startline="378">BPB_FATSz16</references>
        <references refid="ff_8c_1a0c51f7393341b839dfb241c2951f3ef4" compoundref="ff_8c" startline="383">BS_DrvNum</references>
        <references refid="ff_8c_1a85a92e790602efef4da3a2f141611ce8" compoundref="ff_8c" startline="385">BS_BootSig</references>
        <references refid="ff_8c_1a28498ba4b07ff90aaa9628e81fb89d32" compoundref="ff_8c" startline="387">BS_VolLab</references>
        <references refid="diskio_8h_1af09fd84bea8d4e889e272471f44d60d6" compoundref="diskio_8h" startline="56">CTRL_TRIM</references>
        <references refid="ff_8c_1a318e58c1966aba52b90ab98dcb649883" compoundref="ff_8c" startline="401">FSI_LeadSig</references>
        <references refid="ff_8c_1a3bac0e6ff5907873030db1d0a7c4ebef" compoundref="ff_8c" startline="402">FSI_StrucSig</references>
        <references refid="ff_8c_1ab711e50459aba01b11c6b46a7cc1410b" compoundref="ff_8c" startline="403">FSI_Free_Count</references>
        <references refid="ff_8c_1a320700cedf300c9b418edf56e5e6b086" compoundref="ff_8c" startline="404">FSI_Nxt_Free</references>
        <references refid="diskio_8h_1a1b3c492f9aec325f0655941b75256f3c" compoundref="diskio_8h" startline="52">CTRL_SYNC</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga16a934c2bbfa2160295810adc49d5509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_mount</definition>
        <argsstring>(FATFS *fs, const TCHAR *path, BYTE opt)</argsstring>
        <name>f_mount</name>
        <param>
          <type><ref refid="struct_f_a_t_f_s" kindref="compound">FATFS</ref> *</type>
          <declname>fs</declname>
        </param>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref></type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>The f_mount fucntion registers/unregisters file system object to the FatFs module. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1ga16a934c2bbfa2160295810adc49d5509" kindref="member">f_mount()</ref> function registers/unregisters a file system object used for the logical drive to the FatFs module as follows: <linebreak/>
 1.Determines the logical drive which specified by path. <linebreak/>
 2.Clears and unregisters the regsitered work area of the drive. <linebreak/>
 3.Clears and registers the new work area to the drive if fs is not NULL. <linebreak/>
 4.Performs volume mount process to the drive if forced mount is specified. <linebreak/>
 The file system object is the work area needed for each logical drive. It must be given to the logical drive with this function prior to use any other file functions except for <ref refid="group__filesystem_1ga0c1bd3e3872abbda0e256e7c73da9f3b" kindref="member">f_fdisk()</ref> function. To unregister a work area, specify a NULL to the fs, and then the work area can be discarded. <linebreak/>
 If forced mount is not specified, this function always succeeds regardless of the physical drive status due to delayed mount feature. It only clears (de-initializes) the given work area and registers its address to the internal table. No activity of the physical drive in this function. It can also be used to force de-initialized the registered work area of a logical drive. The volume mount processes, initialize the corresponding physical drive, find the FAT volume in it and initialize the work area, is performed in the subsequent file access functions when either or both of following condition is true. <linebreak/>
<itemizedlist>
<listitem><para>File system object is not initialized. It is cleared by <ref refid="group__filesystem_1ga16a934c2bbfa2160295810adc49d5509" kindref="member">f_mount()</ref>.</para></listitem><listitem><para>Physical drive is not initialized. It is de-initialized by system reset or media removal. <linebreak/>
 If the function with forced mount failed, it means that the file system object has been registered successfully but the volume is currently not ready to use. Mount process will also be attempted in subsequent file access functions. <linebreak/>
 If implementation of the disk I/O layer lacks media change detection, application program needs to perform a <ref refid="group__filesystem_1ga16a934c2bbfa2160295810adc49d5509" kindref="member">f_mount()</ref> after each media change to force cleared the file system object.</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fs</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the new file system object to be registered. Null pointer unregisters the registered file system object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the null-terminated string that specifies the logical drive. The string with no drive number means the default drive. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">opt</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization option.<itemizedlist>
<listitem><para>0: Do not mount now (to be mounted later),</para></listitem><listitem><para>1: Force mounted the volume to check if the FAT volume is available. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_DRIVE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILESYSTEM</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Always available. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="237" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="2402" bodyend="2440"/>
        <references refid="ff_8c_1a88ad7e4b1bc98d1a2673a136283dc7ee" compoundref="ff_8c" startline="2114" endline="2165">get_ldnumber</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca487844af77de15f6932a3b41ef3a2d65" compoundref="ff_8h" startline="196">FR_INVALID_DRIVE</references>
        <references refid="ff_8h_1a9184443f4d0a50b0f9a7fdb241613119" compoundref="syscall_8c" startline="52" endline="70">ff_del_syncobj</references>
        <references refid="struct_f_a_t_f_s_1a1c2c369d5858a2d8b60e65431b0b1a85" compoundref="ff_8h" startline="91">FATFS::sobj</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" compoundref="ff_8h" startline="187">FR_INT_ERR</references>
        <references refid="struct_f_a_t_f_s_1a3630ef0b29c45ef8e0c1de639efab754" compoundref="ff_8h" startline="79">FATFS::fs_type</references>
        <references refid="ff_8h_1a2593b7acfe680686184f9ecb1be50323" compoundref="syscall_8c" startline="19" endline="40">ff_cre_syncobj</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_open</definition>
        <argsstring>(FIL *fp, const TCHAR *path, BYTE mode)</argsstring>
        <name>f_open</name>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>The f_open function creates a file object to be used to access the file. </para>        </briefdescription>
        <detaileddescription>
<para>After <ref refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" kindref="member">f_open()</ref> function succeeded, the file object is valid. The file object is used for subsequent read/write functions to identify the file. To close an open file, use <ref refid="group__filesystem_1ga53882db20ef4323dcfd1874d7733ffc3" kindref="member">f_close()</ref> function. If the file is modified and not closed properly, the file data will be collapsed. <linebreak/>
 If duplicated file open is needed, read here carefully. However duplicated open of a file with write mode flag is always prohibited. <linebreak/>
 Before using any file function, a work area (file system object) must be registered to the logical drive with <ref refid="group__filesystem_1ga16a934c2bbfa2160295810adc49d5509" kindref="member">f_mount()</ref> function. All API functions except for <ref refid="group__filesystem_1ga0c1bd3e3872abbda0e256e7c73da9f3b" kindref="member">f_fdisk()</ref> function can work after this procedure. <linebreak/>
 Examples: <programlisting><codeline><highlight class="normal"><sp/>/*<sp/>Read<sp/>a<sp/>text<sp/>file<sp/>and<sp/>display<sp/>it<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>FATFS<sp/>FatFs;<sp/><sp/><sp/>/*<sp/>Work<sp/>area<sp/>(file<sp/>system<sp/>object)<sp/>for<sp/>logical<sp/>drive<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>int<sp/>main<sp/>(void)</highlight></codeline>
<codeline><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>FIL<sp/>fil;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>File<sp/>object<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>char<sp/>line[82];<sp/>/*<sp/>Line<sp/>buffer<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>FRESULT<sp/>fr;<sp/><sp/><sp/><sp/>/*<sp/>FatFs<sp/>return<sp/>code<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Register<sp/>work<sp/>area<sp/>to<sp/>the<sp/>default<sp/>drive<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>f_mount(&amp;FatFs,<sp/>&quot;&quot;,<sp/>0);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Open<sp/>a<sp/>text<sp/>file<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>fr<sp/>=<sp/>f_open(&amp;fil,<sp/>&quot;message.txt&quot;,<sp/>FA_READ);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>if<sp/>(fr)<sp/>return<sp/>(int)fr;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Read<sp/>all<sp/>lines<sp/>and<sp/>display<sp/>it<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>while<sp/>(f_gets(line,<sp/>sizeof<sp/>line,<sp/>&amp;fil))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(line);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>/*<sp/>Close<sp/>the<sp/>file<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>f_close(&amp;fil);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">/*<sp/>Copy<sp/>a<sp/>file<sp/>&quot;file.bin&quot;<sp/>on<sp/>the<sp/>drive<sp/>1<sp/>to<sp/>drive<sp/>0<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int<sp/>main<sp/>(void)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>FATFS<sp/>fs[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Work<sp/>area<sp/>(file<sp/>system<sp/>object)<sp/>for<sp/>logical<sp/>drives<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>FIL<sp/>fsrc,<sp/>fdst;<sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>File<sp/>objects<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>BYTE<sp/>buffer[4096];<sp/><sp/><sp/>/*<sp/>File<sp/>copy<sp/>buffer<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>FRESULT<sp/>fr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>FatFs<sp/>function<sp/>common<sp/>result<sp/>code<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>UINT<sp/>br,<sp/>bw;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>File<sp/>read/write<sp/>count<sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*<sp/>Register<sp/>work<sp/>area<sp/>for<sp/>each<sp/>logical<sp/>drive<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>f_mount(&amp;fs[0],<sp/>&quot;0:&quot;,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>f_mount(&amp;fs[1],<sp/>&quot;1:&quot;,<sp/>0);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Open<sp/>source<sp/>file<sp/>on<sp/>the<sp/>drive<sp/>1<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>fr<sp/>=<sp/>f_open(&amp;fsrc,<sp/>&quot;1:file.bin&quot;,<sp/>FA_OPEN_EXISTING<sp/>|<sp/>FA_READ);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>if<sp/>(fr)<sp/>return<sp/>(int)fr;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Create<sp/>destination<sp/>file<sp/>on<sp/>the<sp/>drive<sp/>0<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>fr<sp/>=<sp/>f_open(&amp;fdst,<sp/>&quot;0:file.bin&quot;,<sp/>FA_CREATE_ALWAYS<sp/>|<sp/>FA_WRITE);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>if<sp/>(fr)<sp/>return<sp/>(int)fr;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Copy<sp/>source<sp/>to<sp/>destination<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>for<sp/>(;;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr<sp/>=<sp/>f_read(&amp;fsrc,<sp/>buffer,<sp/>sizeof<sp/>buffer,<sp/>&amp;br);<sp/><sp/>/*<sp/>Read<sp/>a<sp/>chunk<sp/>of<sp/>source<sp/>file<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fr<sp/>||<sp/>br<sp/>==<sp/>0)<sp/>break;<sp/>/*<sp/>error<sp/>or<sp/>eof<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fr<sp/>=<sp/>f_write(&amp;fdst,<sp/>buffer,<sp/>br,<sp/>&amp;bw);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Write<sp/>it<sp/>to<sp/>the<sp/>destination<sp/>file<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fr<sp/>||<sp/>bw<sp/>&lt;<sp/>br)<sp/>break;<sp/>/*<sp/>error<sp/>or<sp/>disk<sp/>full<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Close<sp/>open<sp/>files<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>f_close(&amp;fsrc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>f_close(&amp;fdst);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>/*<sp/>Unregister<sp/>work<sp/>area<sp/>prior<sp/>to<sp/>discard<sp/>it<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>f_mount(NULL,<sp/>&quot;0:&quot;,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>f_mount(NULL,<sp/>&quot;1:&quot;,<sp/>0);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>return<sp/>(int)fr;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the blank file object structure to be created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a null-terminated string that specifies the file name to open or create. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Mode flags that specifies the type of access and open method for the file. It is specified by a combination of following flags.<linebreak/>
<table rows="7" cols="2"><row>
<entry thead="yes"><para>Value </para></entry><entry thead="yes"><para>Description  </para></entry></row>
<row>
<entry thead="no"><para>FA_READ </para></entry><entry thead="no"><para>Specifies read access to the object. Data can be read from the file. Combine with FA_WRITE for read-write access. </para></entry></row>
<row>
<entry thead="no"><para>FA_WRITE </para></entry><entry thead="no"><para>Specifies write access to the object. Data can be written to the file. Combine with FA_READ for read-write access. </para></entry></row>
<row>
<entry thead="no"><para>FA_OPEN_EXISTING </para></entry><entry thead="no"><para>Opens the file. The function fails if the file is not existing. (Default) . </para></entry></row>
<row>
<entry thead="no"><para>FA_OPEN_ALWAYS </para></entry><entry thead="no"><para>Opens the file if it is existing. If not, a new file is created. To append data to the file, use <ref refid="group__filesystem_1ga5df0ac672ada972e89ef4b003e57f964" kindref="member">f_lseek()</ref> function after file open in this method. </para></entry></row>
<row>
<entry thead="no"><para>FA_CREATE_NEW </para></entry><entry thead="no"><para>Creates a new file. The function fails with FR_EXIST if the file is existing. </para></entry></row>
<row>
<entry thead="no"><para>FA_CREATE_NEW </para></entry><entry thead="no"><para>Creates a new file. If the file is existing, it will be truncated and overwritten. <linebreak/>
 </para></entry></row>
</table>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_PATH</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_NAME</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DENIED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_EXIST</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_OBJECT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_WRITE_PROTECTED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_DRIVE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENABLED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILESYSTEM</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_LOCKED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENOUGH_CORE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TOO_MANY_OPEN_FILES</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Always available. The mode flags, FA_WRITE, FA_CREATE_ALWAYS, FA_CREATE_NEW and FA_OPEN_ALWAYS, are not available when _FS_READONLY == 1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="212" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="2449" bodyend="2577"/>
        <references refid="ff_8c_1a7cc27142421bd12be623072288599791" compoundref="ff_8c" startline="473">DEFINE_NAMEBUF</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3dec4eba481cdf5e99d7cd6009e6dcf8" compoundref="ff_8h" startline="194">FR_INVALID_OBJECT</references>
        <references refid="struct_f_i_l_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="115">FIL::fs</references>
        <references refid="ff_8h_1a1f4f3530ff03abbd979b072536e72290" compoundref="ff_8h" startline="294">FA_READ</references>
        <references refid="ff_8h_1afa366963220c89b882c0361794020c14" compoundref="ff_8h" startline="298">FA_WRITE</references>
        <references refid="ff_8h_1afba4546b131dea4b24727fa20a80e29f" compoundref="ff_8h" startline="300">FA_CREATE_ALWAYS</references>
        <references refid="ff_8h_1a17b01553029920ac0468912b4bcb16c7" compoundref="ff_8h" startline="301">FA_OPEN_ALWAYS</references>
        <references refid="ff_8h_1a417bb1babd1785fd181a806b5613eba3" compoundref="ff_8h" startline="299">FA_CREATE_NEW</references>
        <references refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</references>
        <references refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="144">DIR::fs</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a966fe5792671b39db1ccf655a8c1af8d" compoundref="ff_8c" startline="474">INIT_BUF</references>
        <references refid="ff_8c_1af194524672491a522f041278b9b74e94" compoundref="ff_8c" startline="2052" endline="2104">follow_path</references>
        <references refid="struct_d_i_r_1a30fe34a14a6efb4c9c04a522f6cf3378" compoundref="ff_8h" startline="150">DIR::dir</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca83e45a4b579558c57192c0a391b9bb45" compoundref="ff_8h" startline="191">FR_INVALID_NAME</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97da8f98fc2e66d8fa7847f9ebb19b8c" compoundref="ff_8h" startline="189">FR_NO_FILE</references>
        <references refid="ff_8c_1aaff1b52e1f7ae47b4aedad795d7e7e64" compoundref="ff_8c" startline="1578" endline="1645">dir_register</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca50dd3c3c274ccebb2cfbddde9d065bb9" compoundref="ff_8h" startline="203">FR_TOO_MANY_OPEN_FILES</references>
        <references refid="ff_8c_1ad3233e40118ed66095f3c9545b788f8a" compoundref="ff_8c" startline="410">DIR_Attr</references>
        <references refid="ff_8h_1add6d85d1e7a02b4f6188783ef91a5f1e" compoundref="ff_8h" startline="316">AM_RDO</references>
        <references refid="ff_8h_1a3a9db44e978ed6c13b641e092d4cd7d3" compoundref="ff_8h" startline="321">AM_DIR</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca897e9f2dd7629a80f48af242d8bc1a3d" compoundref="ff_8h" startline="192">FR_DENIED</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca0d8f024d256df76e84782b95018a2450" compoundref="ff_8h" startline="193">FR_EXIST</references>
        <references refid="ff_8c_1a72589f5bbb514c0b222ab8b292764418" compoundref="ff_8c" startline="67">GET_FATTIME</references>
        <references refid="ff_8h_1abf5aba973d95ac5843b80aa7379cdd66" compoundref="ff_8h" startline="338">ST_DWORD</references>
        <references refid="ff_8c_1a47fb1881ea71d860db9b8280564cb4d5" compoundref="ff_8c" startline="413">DIR_CrtTime</references>
        <references refid="ff_8c_1ab9452d336adeece2a1b0b54ab35b8a59" compoundref="ff_8c" startline="417">DIR_WrtTime</references>
        <references refid="ff_8c_1abfbfa613864a02a65f0bf70ead6672c7" compoundref="ff_8c" startline="420">DIR_FileSize</references>
        <references refid="ff_8c_1ad1b3343c92d0f0e58ba448c3c11b1f39" compoundref="ff_8c" startline="1235" endline="1247">ld_clust</references>
        <references refid="ff_8c_1a357e5a36452e057d68378c98cd61018c" compoundref="ff_8c" startline="1252" endline="1259">st_clust</references>
        <references refid="struct_f_a_t_f_s_1adb3983f8d19ef9879f30d04b076e9ff2" compoundref="ff_8h" startline="83">FATFS::wflag</references>
        <references refid="struct_f_a_t_f_s_1a285dc1de6874bb5f0c41c328c9433e14" compoundref="ff_8h" startline="106">FATFS::winsect</references>
        <references refid="ff_8c_1ab88651d19a5597dec220fe7538cccf23" compoundref="ff_8c" startline="937" endline="979">remove_chain</references>
        <references refid="struct_f_a_t_f_s_1a10cd8b80b3b6474bf0d6432c8fb9d2d2" compoundref="ff_8h" startline="94">FATFS::last_clust</references>
        <references refid="ff_8c_1af2e8986556ee6644b4bf31fa4158d735" compoundref="ff_8c" startline="729" endline="750">move_window</references>
        <references refid="ff_8h_1ac4b7d5223f84df91c306ffbff536fae4" compoundref="ff_8h" startline="302">FA__WRITTEN</references>
        <references refid="struct_f_i_l_1a5e11faf537370889c867127205f26ad1" compoundref="ff_8h" startline="125">FIL::dir_sect</references>
        <references refid="struct_f_i_l_1a0071755a7d2cacd3bafbb1bf2dab98a0" compoundref="ff_8h" startline="126">FIL::dir_ptr</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" compoundref="ff_8h" startline="187">FR_INT_ERR</references>
        <references refid="ff_8c_1aba6d6942b59f11cf285bdbfb7e38f1fa" compoundref="ff_8c" startline="475">FREE_BUF</references>
        <references refid="struct_f_i_l_1abb2c49aaa8df55e1e1d8cb0c5e04a3bf" compoundref="ff_8h" startline="117">FIL::flag</references>
        <references refid="struct_f_i_l_1a32b2a186af2cab58af8114c05386b9f6" compoundref="ff_8h" startline="118">FIL::err</references>
        <references refid="struct_f_i_l_1ad5d52f3fde971d2a05ff777a6243c252" compoundref="ff_8h" startline="121">FIL::sclust</references>
        <references refid="struct_f_i_l_1af70a0afd16367837984d6205cbfca308" compoundref="ff_8h" startline="120">FIL::fsize</references>
        <references refid="ff_8h_1a4690304ddc975516f7dc02575c96e34e" compoundref="ff_8h" startline="336">LD_DWORD</references>
        <references refid="struct_f_i_l_1a0f65af32a2d036c560e66177961b9b22" compoundref="ff_8h" startline="119">FIL::fptr</references>
        <references refid="struct_f_i_l_1a272171f74215002aba31a89428f1d290" compoundref="ff_8h" startline="123">FIL::dsect</references>
        <references refid="struct_f_i_l_1a7b7a6396b2c82ad46c6d8b2bf141a8dd" compoundref="ff_8h" startline="116">FIL::id</references>
        <references refid="struct_f_a_t_f_s_1a7b7a6396b2c82ad46c6d8b2bf141a8dd" compoundref="ff_8h" startline="85">FATFS::id</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1gab63b213c75f7335fbb63a1f3f70e5fc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_opendir</definition>
        <argsstring>(DIR *dp, const TCHAR *path)</argsstring>
        <name>f_opendir</name>
        <param>
          <type><ref refid="struct_d_i_r" kindref="compound">DIR</ref> *</type>
          <declname>dp</declname>
        </param>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>The f_opendir function opens a directory. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1gab63b213c75f7335fbb63a1f3f70e5fc7" kindref="member">f_opendir()</ref> function opens an exsisting directory and creates a directory object for subsequent <ref refid="group__filesystem_1gab39e82a110695de45f416f3149358012" kindref="member">f_readdir()</ref> function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the blank directory object to create a new one. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the null-terminated string that specifies the directory name to be opened. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_PATH</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_NAME</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_OBJECT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_DRIVE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENABLED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILESYSTEM</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENOUGH_CORE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TOO_MANY_OPEN_FILES</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_MINIMIZE &lt;= 1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="220" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3187" bodyend="3234"/>
        <references refid="ff_8c_1a7cc27142421bd12be623072288599791" compoundref="ff_8c" startline="473">DEFINE_NAMEBUF</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3dec4eba481cdf5e99d7cd6009e6dcf8" compoundref="ff_8h" startline="194">FR_INVALID_OBJECT</references>
        <references refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="144">DIR::fs</references>
        <references refid="ff_8c_1a966fe5792671b39db1ccf655a8c1af8d" compoundref="ff_8c" startline="474">INIT_BUF</references>
        <references refid="ff_8c_1af194524672491a522f041278b9b74e94" compoundref="ff_8c" startline="2052" endline="2104">follow_path</references>
        <references refid="ff_8c_1aba6d6942b59f11cf285bdbfb7e38f1fa" compoundref="ff_8c" startline="475">FREE_BUF</references>
        <references refid="struct_d_i_r_1a30fe34a14a6efb4c9c04a522f6cf3378" compoundref="ff_8h" startline="150">DIR::dir</references>
        <references refid="ff_8c_1ad3233e40118ed66095f3c9545b788f8a" compoundref="ff_8c" startline="410">DIR_Attr</references>
        <references refid="ff_8h_1a3a9db44e978ed6c13b641e092d4cd7d3" compoundref="ff_8h" startline="321">AM_DIR</references>
        <references refid="struct_d_i_r_1ad5d52f3fde971d2a05ff777a6243c252" compoundref="ff_8h" startline="147">DIR::sclust</references>
        <references refid="ff_8c_1ad1b3343c92d0f0e58ba448c3c11b1f39" compoundref="ff_8c" startline="1235" endline="1247">ld_clust</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cae4529c8cc8b59783d6efc9ba4f574532" compoundref="ff_8h" startline="190">FR_NO_PATH</references>
        <references refid="struct_d_i_r_1a7b7a6396b2c82ad46c6d8b2bf141a8dd" compoundref="ff_8h" startline="145">DIR::id</references>
        <references refid="struct_f_a_t_f_s_1a7b7a6396b2c82ad46c6d8b2bf141a8dd" compoundref="ff_8h" startline="85">FATFS::id</references>
        <references refid="ff_8c_1a29ecb9f62a34eadb5af2a42be312c31e" compoundref="ff_8c" startline="1080" endline="1118">dir_sdi</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca50dd3c3c274ccebb2cfbddde9d065bb9" compoundref="ff_8h" startline="203">FR_TOO_MANY_OPEN_FILES</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97da8f98fc2e66d8fa7847f9ebb19b8c" compoundref="ff_8h" startline="189">FR_NO_FILE</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga49cccab38cd84e2d3357fef2d1df21f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int f_printf</definition>
        <argsstring>(FIL *fp, const TCHAR *str,...)</argsstring>
        <name>f_printf</name>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>str</declname>
          <defname>fmt</defname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>The f_printf function writes formatted string to the file. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1ga49cccab38cd84e2d3357fef2d1df21f9" kindref="member">f_printf()</ref> is a wrapper function of <ref refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" kindref="member">f_write()</ref>. The format control directive is a sub-set of standard library shown as follows:<itemizedlist>
<listitem><para>Type: c C s S d D u U x X b B</para></listitem><listitem><para>Size: l L</para></listitem><listitem><para>Flag: 0 - <linebreak/>
 Example: <programlisting><codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%d&quot;,<sp/>1234);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;1234&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%6d,%3d%%&quot;,<sp/>-200,<sp/>5);<sp/><sp/>/*<sp/>&quot;<sp/><sp/>-200,<sp/><sp/>5%&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%ld&quot;,<sp/>12345L);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;12345&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%06d&quot;,<sp/>25);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;000025&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%06d&quot;,<sp/>-25);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;000-25&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%-6d&quot;,<sp/>25);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;25<sp/><sp/><sp/><sp/>&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%u&quot;,<sp/>-1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;65535&quot;<sp/>or<sp/>&quot;4294967295&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%04x&quot;,<sp/>0xAB3);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;0ab3&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%08LX&quot;,<sp/>0x123ABCL);<sp/><sp/><sp/><sp/>/*<sp/>&quot;00123ABC&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%016b&quot;,<sp/>0x550F);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;0101010100001111&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%s&quot;,<sp/>&quot;String&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;String&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%8s&quot;,<sp/>&quot;abc&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;<sp/><sp/><sp/><sp/><sp/>abc&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%-8s&quot;,<sp/>&quot;abc&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;abc<sp/><sp/><sp/><sp/><sp/>&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%c&quot;,<sp/>&apos;a&apos;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>&quot;a&quot;<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_printf(&amp;fil,<sp/>&quot;%f&quot;,<sp/>10.0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>f_printf<sp/>lacks<sp/>floating<sp/>point<sp/>support<sp/>*/</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open file object structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the null terminated format string. The terminator charactor will not be written. ... Optional arguments... </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>When</parametername>
</parameternamelist>
<parameterdescription>
<para>the function succeeded, it returns number of characters written. When the function failed due to disk full or any error, an EOF (-1) will be returned. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0 and _USE_STRFUNC is 1 or 2. When it is set to 2, &apos;<linebreak/>
&apos;s contained in the output are converted to &apos;&apos;+&apos;<linebreak/>
&apos;. <linebreak/>
 When FatFs is configured to Unicode API (_LFN_UNICODE == 1), data types on the srting fuctions, <ref refid="group__filesystem_1ga62a35ee79e4913c1e31ac706241be7da" kindref="member">f_putc()</ref>, <ref refid="group__filesystem_1ga9443c00129414fbfc16a5a13ad876ced" kindref="member">f_puts()</ref>, <ref refid="group__filesystem_1ga49cccab38cd84e2d3357fef2d1df21f9" kindref="member">f_printf()</ref> and <ref refid="group__filesystem_1ga0fa54bd310785ecdaed19dda8f60dac5" kindref="member">f_gets()</ref>, is also switched to Unicode. The character encoding on the file to be read/written via those functions is selected by _STRF_ENCODE option. </para></simplesect>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="242" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="4579" bodyend="4674"/>
        <references refid="structputbuff_1a8d839bbcaa5e21902d2481c87c4f359f" compoundref="ff_8c" startline="4462">putbuff::fp</references>
        <references refid="structputbuff_1a1560bca810e056ea71cbf8c667d59580" compoundref="ff_8c" startline="4463">putbuff::nchr</references>
        <references refid="structputbuff_1ae40354a1051342eb5a9db005715dcfa9" compoundref="ff_8c" startline="4463">putbuff::idx</references>
        <references refid="ff_8c_1a19f72a515ee94dd8a9660d513172ce9b" compoundref="ff_8c" startline="4469" endline="4520">putc_bfd</references>
        <references refid="ff_8c_1a65dee564f69f2ec27f25b67a348018b9" compoundref="ff_8c" startline="326">IsDigit</references>
        <references refid="ff_8c_1a4a9d454724926bd51a3aed589a97f08b" compoundref="ff_8c" startline="325">IsLower</references>
        <references refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" compoundref="ff_8c" startline="2687" endline="2800">f_write</references>
        <references refid="structputbuff_1a6966cd5c37fc8748361cad1ff6f7f640" compoundref="ff_8c" startline="4464">putbuff::buf</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8h_1a59adc4c82490d23754cd39c2fb99b0da" compoundref="ff_8h" startline="253">EOF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga62a35ee79e4913c1e31ac706241be7da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int f_putc</definition>
        <argsstring>(TCHAR c, FIL *fp)</argsstring>
        <name>f_putc</name>
        <param>
          <type><ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>The f_putc funciton puts a character to the file. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1ga62a35ee79e4913c1e31ac706241be7da" kindref="member">f_putc()</ref> function is a wrapper function of <ref refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" kindref="member">f_write()</ref> function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">chr</parametername>
</parameternamelist>
<parameterdescription>
<para>A character to be put. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open file object structuer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>When</parametername>
</parameternamelist>
<parameterdescription>
<para>the character was written successfuly, it returns number of characters written. When the function failed due to disk full or any error, an EOF (-1) will be returned. <linebreak/>
 When FatFs is configured to Unicode API (_LFN_UNICODE == 1), character encoding on the string fuctions, <ref refid="group__filesystem_1ga62a35ee79e4913c1e31ac706241be7da" kindref="member">f_putc()</ref>, <ref refid="group__filesystem_1ga9443c00129414fbfc16a5a13ad876ced" kindref="member">f_puts()</ref>, <ref refid="group__filesystem_1ga49cccab38cd84e2d3357fef2d1df21f9" kindref="member">f_printf()</ref> and <ref refid="group__filesystem_1ga0fa54bd310785ecdaed19dda8f60dac5" kindref="member">f_gets()</ref>, is also switched to Unicode. The character encoding on the file to be read/written via those functions is selected by _STRF_ENCODE option. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0 and _USE_STRFUNC is 1 or 2. When it is set to 2, a &apos;<linebreak/>
&apos; is converted to &apos;&apos;+&apos;<linebreak/>
&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="240" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="4524" bodyend="4542"/>
        <references refid="structputbuff_1a8d839bbcaa5e21902d2481c87c4f359f" compoundref="ff_8c" startline="4462">putbuff::fp</references>
        <references refid="structputbuff_1a1560bca810e056ea71cbf8c667d59580" compoundref="ff_8c" startline="4463">putbuff::nchr</references>
        <references refid="structputbuff_1ae40354a1051342eb5a9db005715dcfa9" compoundref="ff_8c" startline="4463">putbuff::idx</references>
        <references refid="ff_8c_1a19f72a515ee94dd8a9660d513172ce9b" compoundref="ff_8c" startline="4469" endline="4520">putc_bfd</references>
        <references refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" compoundref="ff_8c" startline="2687" endline="2800">f_write</references>
        <references refid="structputbuff_1a6966cd5c37fc8748361cad1ff6f7f640" compoundref="ff_8c" startline="4464">putbuff::buf</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8h_1a59adc4c82490d23754cd39c2fb99b0da" compoundref="ff_8h" startline="253">EOF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga9443c00129414fbfc16a5a13ad876ced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int f_puts</definition>
        <argsstring>(const TCHAR *str, FIL *cp)</argsstring>
        <name>f_puts</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>cp</declname>
          <defname>fp</defname>
        </param>
        <briefdescription>
<para>The f_puts function writes a string to the file. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1ga9443c00129414fbfc16a5a13ad876ced" kindref="member">f_puts()</ref> function is a wrapper function of <ref refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" kindref="member">f_write()</ref> function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the null terminated string to be written. The terminator character will not be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open file object structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>When</parametername>
</parameternamelist>
<parameterdescription>
<para>the function succeeded, it returns number of characters written. When the write operation is aborted due to disk full or any error, an EOF (-1) will be returned. <linebreak/>
 When FatFs is configured to Unicode API (_LFN_UNICODE == 1), character encoding on the srting fuctions, <ref refid="group__filesystem_1ga62a35ee79e4913c1e31ac706241be7da" kindref="member">f_putc()</ref>, <ref refid="group__filesystem_1ga9443c00129414fbfc16a5a13ad876ced" kindref="member">f_puts()</ref>, <ref refid="group__filesystem_1ga49cccab38cd84e2d3357fef2d1df21f9" kindref="member">f_printf()</ref> and <ref refid="group__filesystem_1ga0fa54bd310785ecdaed19dda8f60dac5" kindref="member">f_gets()</ref>, is also switched to Unicode. The character encoding on the file to be read/written via those functions is selected by _STRF_ENCODE option. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0 and _USE_STRFUNC is 1 or 2. When it is set to 2, &apos;<linebreak/>
&apos;s contained in the string are converted to &apos;&apos;+&apos;<linebreak/>
&apos;. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="241" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="4551" bodyend="4570"/>
        <references refid="structputbuff_1a8d839bbcaa5e21902d2481c87c4f359f" compoundref="ff_8c" startline="4462">putbuff::fp</references>
        <references refid="structputbuff_1a1560bca810e056ea71cbf8c667d59580" compoundref="ff_8c" startline="4463">putbuff::nchr</references>
        <references refid="structputbuff_1ae40354a1051342eb5a9db005715dcfa9" compoundref="ff_8c" startline="4463">putbuff::idx</references>
        <references refid="ff_8c_1a19f72a515ee94dd8a9660d513172ce9b" compoundref="ff_8c" startline="4469" endline="4520">putc_bfd</references>
        <references refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" compoundref="ff_8c" startline="2687" endline="2800">f_write</references>
        <references refid="structputbuff_1a6966cd5c37fc8748361cad1ff6f7f640" compoundref="ff_8c" startline="4464">putbuff::buf</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8h_1a59adc4c82490d23754cd39c2fb99b0da" compoundref="ff_8h" startline="253">EOF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1gac4c3dcb6869ca252888eebabe39727b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_read</definition>
        <argsstring>(FIL *fp, void *buff, UINT btr, UINT *br)</argsstring>
        <name>f_read</name>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
          <declname>btr</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref> *</type>
          <declname>br</declname>
        </param>
        <briefdescription>
<para>The f_read function reads data from a file. </para>        </briefdescription>
        <detaileddescription>
<para>The file read/write pointer of the file object advances number of bytes read. After the function succeeded, *br should be checked to detect end of the file. In case of *br is less than btr, it means the read/write pointer reached end of the file during read operation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open file object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buff</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer to store read data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">btr</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read in range of UINT type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">br</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the UINT variable to return number of bytes read. The value is always valid after the function call regardless of the result. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_OBJECT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Always available. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="214" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="2586" bodyend="2677"/>
        <references refid="ff_8c_1aa7193f5b86c3996b5312043a0c26da5f" compoundref="ff_8c" startline="2372" endline="2385">validate</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
        <references refid="struct_f_i_l_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="115">FIL::fs</references>
        <references refid="struct_f_i_l_1a32b2a186af2cab58af8114c05386b9f6" compoundref="ff_8h" startline="118">FIL::err</references>
        <references refid="struct_f_i_l_1abb2c49aaa8df55e1e1d8cb0c5e04a3bf" compoundref="ff_8h" startline="117">FIL::flag</references>
        <references refid="ff_8h_1a1f4f3530ff03abbd979b072536e72290" compoundref="ff_8h" startline="294">FA_READ</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca897e9f2dd7629a80f48af242d8bc1a3d" compoundref="ff_8h" startline="192">FR_DENIED</references>
        <references refid="struct_f_i_l_1af70a0afd16367837984d6205cbfca308" compoundref="ff_8h" startline="120">FIL::fsize</references>
        <references refid="struct_f_i_l_1a0f65af32a2d036c560e66177961b9b22" compoundref="ff_8h" startline="119">FIL::fptr</references>
        <references refid="ff_8c_1a42b5140fc5e09a53c8f4cba66dc0e6c1" compoundref="ff_8c" startline="54">SS</references>
        <references refid="struct_f_a_t_f_s_1ace95d33f1aefff4c3e821cf8eac7ec3e" compoundref="ff_8h" startline="81">FATFS::csize</references>
        <references refid="struct_f_i_l_1ad5d52f3fde971d2a05ff777a6243c252" compoundref="ff_8h" startline="121">FIL::sclust</references>
        <references refid="ff_8c_1a65611adf1626e5e08da77cd33a98dd8b" compoundref="ff_8c" startline="818" endline="862">get_fat</references>
        <references refid="struct_f_i_l_1ac134c1b4645be670eb5207032e714616" compoundref="ff_8h" startline="122">FIL::clust</references>
        <references refid="ff_8c_1a41e4c46636679236568cf50b5535847f" compoundref="ff_8c" startline="46">ABORT</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" compoundref="ff_8h" startline="187">FR_INT_ERR</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97dee4a6b485dc8f91f37486092dfe34" compoundref="ff_8h" startline="186">FR_DISK_ERR</references>
        <references refid="ff_8c_1a7519abb60fe91f6aa1d17f64fbae123a" compoundref="ff_8c" startline="800" endline="808">clust2sect</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1gae55155170bc9b99f73b440b93cc1c9e2" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="62">disk_read</references>
        <references refid="struct_f_a_t_f_s_1af46443bf86aaaff8d411814ed640e831" compoundref="ff_8h" startline="80">FATFS::drv</references>
        <references refid="diskio_8h_1gaacdfef1dad6565f65c26d12fe0ea4b2ba2ea4b6ef3fffc17dd1d38ab5c2837737" compoundref="diskio_8h" startline="23">RES_OK</references>
        <references refid="struct_f_a_t_f_s_1adb3983f8d19ef9879f30d04b076e9ff2" compoundref="ff_8h" startline="83">FATFS::wflag</references>
        <references refid="struct_f_a_t_f_s_1a285dc1de6874bb5f0c41c328c9433e14" compoundref="ff_8h" startline="106">FATFS::winsect</references>
        <references refid="ff_8c_1a8941d573d16af92c8570950d53164f30" compoundref="ff_8c" startline="507" endline="520">mem_cpy</references>
        <references refid="struct_f_a_t_f_s_1aabf9e848c88b78e22df6e09a0626e6f5" compoundref="ff_8h" startline="107">FATFS::win</references>
        <references refid="ff_8h_1a5b2962e3616a1e9eb709d95f4c75c67c" compoundref="ff_8h" startline="303">FA__DIRTY</references>
        <references refid="struct_f_i_l_1a272171f74215002aba31a89428f1d290" compoundref="ff_8h" startline="123">FIL::dsect</references>
        <references refid="struct_f_i_l_1a1602edc1ba9d9ae2b583cf55f3492325" compoundref="ff_8h" startline="135">FIL::buf</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1ga006bdd486027cb80272afa8849993f7c" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="63">disk_write</references>
        <references refid="ff_8c_1af2e8986556ee6644b4bf31fa4158d735" compoundref="ff_8c" startline="729" endline="750">move_window</references>
        <referencedby refid="group__filesystem_1ga0fa54bd310785ecdaed19dda8f60dac5" compoundref="ff_8c" startline="4382" endline="4450">f_gets</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1gab39e82a110695de45f416f3149358012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_readdir</definition>
        <argsstring>(DIR *dp, FILINFO *fno)</argsstring>
        <name>f_readdir</name>
        <param>
          <type><ref refid="struct_d_i_r" kindref="compound">DIR</ref> *</type>
          <declname>dp</declname>
        </param>
        <param>
          <type><ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref> *</type>
          <declname>fno</declname>
        </param>
        <briefdescription>
<para>The f_readdir function reads directory entries. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1gab39e82a110695de45f416f3149358012" kindref="member">f_readdir()</ref> function reads directory items, file and directory, in sequence. All items in the directory can be read by calling <ref refid="group__filesystem_1gab39e82a110695de45f416f3149358012" kindref="member">f_readdir()</ref> function repeatedly. When relative path feature is enabled (_FS_RPATH &gt;= 1), dot entries (&quot;.&quot; and &quot;..&quot;) are not filtered out and they will appear in the read items. When all directory items have been read and no item to read, a null string is returned into the fname[] without any error. When a null pointer is given to the fno, the read index of the directory object is rewinded. <linebreak/>
 When LFN feature is enabled, lfname and lfsize in the file information structure must be initialized with valid value prior to use it. The lfname is a pointer to the LFN read buffer. The lfsize is size of the LFN read buffer in unit of TCHAR. If the LFN is not needed, set a null pointer to the lfname and the LFN is not returned. A null string will be returned into the LFN read buffer in case of following conditions. <linebreak/>
<itemizedlist>
<listitem><para>The directory item has no LFN information.</para></listitem><listitem><para>Either the size of read buffer or LFN working buffer is insufficient for the LFN.</para></listitem><listitem><para>The LFN contains any Unicode character that cannot be converted to OEM code. (not the case at Unicode API cfg.) <linebreak/>
 When the directory item has no LFN information, lower case characters can be contained in the fname[]. <linebreak/>
 Sample Code: <programlisting><codeline><highlight class="normal"><sp/>FRESULT<sp/>scan_files<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/>char*<sp/>path<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Start<sp/>node<sp/>to<sp/>be<sp/>scanned<sp/>(also<sp/>used<sp/>as<sp/>work<sp/>area)<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>FRESULT<sp/>res;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>FILINFO<sp/>fno;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>DIR<sp/>dir;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>i;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>char<sp/>*fn;<sp/><sp/><sp/>/*<sp/>This<sp/>function<sp/>assumes<sp/>non-Unicode<sp/>configuration<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#if<sp/>_USE_LFN</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>static<sp/>char<sp/>lfn[_MAX_LFN<sp/>+<sp/>1];<sp/><sp/><sp/>/*<sp/>Buffer<sp/>to<sp/>store<sp/>the<sp/>LFN<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>fno.lfname<sp/>=<sp/>lfn;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>fno.lfsize<sp/>=<sp/>sizeof<sp/>lfn;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>f_opendir(&amp;dir,<sp/>path);<sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Open<sp/>the<sp/>directory<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(res<sp/>==<sp/>FR_OK)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>strlen(path);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>for<sp/>(;;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>f_readdir(&amp;dir,<sp/>&amp;fno);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Read<sp/>a<sp/>directory<sp/>item<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(res<sp/>!=<sp/>FR_OK<sp/>||<sp/>fno.fname[0]<sp/>==<sp/>0)<sp/>break;<sp/><sp/>/*<sp/>Break<sp/>on<sp/>error<sp/>or<sp/>end<sp/>of<sp/>dir<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fno.fname[0]<sp/>==<sp/>&apos;.&apos;)<sp/>continue;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>Ignore<sp/>dot<sp/>entry<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#if<sp/>_USE_LFN</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn<sp/>=<sp/>*fno.lfname<sp/>?<sp/>fno.lfname<sp/>:<sp/>fno.fname;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn<sp/>=<sp/>fno.fname;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>#endif</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(fno.fattrib<sp/>&amp;<sp/>AM_DIR)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>It<sp/>is<sp/>a<sp/>directory<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(&amp;path[i],<sp/>&quot;/%s&quot;,<sp/>fn);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>scan_files(path);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(res<sp/>!=<sp/>FR_OK)<sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/*<sp/>It<sp/>is<sp/>a<sp/>file.<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;%s/%s\n&quot;,<sp/>path,<sp/>fn);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>f_closedir(&amp;dir)</highlight></codeline>
<codeline><highlight class="normal"><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>res;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open directory object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">fno</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the file information structure to store the read item. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_OBJECT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENOUGH_CORE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_MINIMIZE &lt;= 1. </para></simplesect>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="222" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3275" bodyend="3308"/>
        <references refid="ff_8c_1a7cc27142421bd12be623072288599791" compoundref="ff_8c" startline="473">DEFINE_NAMEBUF</references>
        <references refid="ff_8c_1aa7193f5b86c3996b5312043a0c26da5f" compoundref="ff_8c" startline="2372" endline="2385">validate</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a29ecb9f62a34eadb5af2a42be312c31e" compoundref="ff_8c" startline="1080" endline="1118">dir_sdi</references>
        <references refid="ff_8c_1a966fe5792671b39db1ccf655a8c1af8d" compoundref="ff_8c" startline="474">INIT_BUF</references>
        <references refid="ff_8c_1a3a47a08609e77266bc1928af812e06df" compoundref="ff_8c" startline="1519" endline="1567">dir_read</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97da8f98fc2e66d8fa7847f9ebb19b8c" compoundref="ff_8h" startline="189">FR_NO_FILE</references>
        <references refid="struct_d_i_r_1a3e49e0860170e0fd9fc3e891b0d59975" compoundref="ff_8h" startline="149">DIR::sect</references>
        <references refid="ff_8c_1a2bc1b9d8567181c23b4720f4fb6076f5" compoundref="ff_8c" startline="1703" endline="1762">get_fileinfo</references>
        <references refid="ff_8c_1a2edd26ac71869f25be5fce12eec58171" compoundref="ff_8c" startline="1128" endline="1188">dir_next</references>
        <references refid="ff_8c_1aba6d6942b59f11cf285bdbfb7e38f1fa" compoundref="ff_8c" startline="475">FREE_BUF</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
        <references refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="144">DIR::fs</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga2d0ceea336edd9b05754c8684ea8a72f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_rename</definition>
        <argsstring>(const TCHAR *path_old, const TCHAR *path_new)</argsstring>
        <name>f_rename</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path_old</declname>
        </param>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path_new</declname>
        </param>
        <briefdescription>
<para>Renames a file or sub-directory. </para>        </briefdescription>
        <detaileddescription>
<para>Renames a file or sub-directory and can also move it to other directory within the same logical drive. Do not rename open objects or directry table can be broken. <linebreak/>
 Example: <programlisting><codeline><highlight class="normal">/*<sp/>Rename<sp/>an<sp/>object<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_rename(&quot;oldname.txt&quot;,<sp/>&quot;newname.txt&quot;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/*<sp/>Rename<sp/>and<sp/>move<sp/>an<sp/>object<sp/>to<sp/>other<sp/>directory<sp/>*/</highlight></codeline>
<codeline><highlight class="normal">f_rename(&quot;oldname.txt&quot;,<sp/>&quot;dir1/newname.txt&quot;);</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">old_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a null-terminated string that specifies an existing file or sub-directory to be renamed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a null-terminated string that specifies the new object name. The drive number specified in this string is ignored and one determined by old_name is used instead. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_PATH</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_NAME</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DENIED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_EXIST</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_EXIST</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_WRITE_PROTECTED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_DRIVE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENABLED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILESYSTEM</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_LOCKED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENOUGH_CORE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0 and _FS_MINIMIZE == 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="227" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3711" bodyend="3780"/>
        <references refid="ff_8c_1a7cc27142421bd12be623072288599791" compoundref="ff_8c" startline="473">DEFINE_NAMEBUF</references>
        <references refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</references>
        <references refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="144">DIR::fs</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a966fe5792671b39db1ccf655a8c1af8d" compoundref="ff_8c" startline="474">INIT_BUF</references>
        <references refid="ff_8c_1af194524672491a522f041278b9b74e94" compoundref="ff_8c" startline="2052" endline="2104">follow_path</references>
        <references refid="group___f_f_c_o_n_f_i_g_1ga52faf11025401372f71e9d81905b7af4" compoundref="ffconf_8h" startline="146">_FS_RPATH</references>
        <references refid="struct_d_i_r_1a34e961714af3bc25c08d5832cca23204" compoundref="ff_8h" startline="151">DIR::fn</references>
        <references refid="ff_8c_1ad2306816015e67e72cfd0a20a880b227" compoundref="ff_8c" startline="351">NSFLAG</references>
        <references refid="ff_8c_1a2db528782a021797b34bdc6e9e9de1c3" compoundref="ff_8c" startline="357">NS_DOT</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca83e45a4b579558c57192c0a391b9bb45" compoundref="ff_8h" startline="191">FR_INVALID_NAME</references>
        <references refid="struct_d_i_r_1a30fe34a14a6efb4c9c04a522f6cf3378" compoundref="ff_8h" startline="150">DIR::dir</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97da8f98fc2e66d8fa7847f9ebb19b8c" compoundref="ff_8h" startline="189">FR_NO_FILE</references>
        <references refid="ff_8c_1a8941d573d16af92c8570950d53164f30" compoundref="ff_8c" startline="507" endline="520">mem_cpy</references>
        <references refid="ff_8c_1ad3233e40118ed66095f3c9545b788f8a" compoundref="ff_8c" startline="410">DIR_Attr</references>
        <references refid="ff_8c_1a88ad7e4b1bc98d1a2673a136283dc7ee" compoundref="ff_8c" startline="2114" endline="2165">get_ldnumber</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca487844af77de15f6932a3b41ef3a2d65" compoundref="ff_8h" startline="196">FR_INVALID_DRIVE</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca0d8f024d256df76e84782b95018a2450" compoundref="ff_8h" startline="193">FR_EXIST</references>
        <references refid="ff_8c_1aaff1b52e1f7ae47b4aedad795d7e7e64" compoundref="ff_8c" startline="1578" endline="1645">dir_register</references>
        <references refid="ff_8h_1ae8174d00798e34e7c9e95898cb9e1a09" compoundref="ff_8h" startline="322">AM_ARC</references>
        <references refid="struct_f_a_t_f_s_1adb3983f8d19ef9879f30d04b076e9ff2" compoundref="ff_8h" startline="83">FATFS::wflag</references>
        <references refid="ff_8h_1a3a9db44e978ed6c13b641e092d4cd7d3" compoundref="ff_8h" startline="321">AM_DIR</references>
        <references refid="struct_d_i_r_1ad5d52f3fde971d2a05ff777a6243c252" compoundref="ff_8h" startline="147">DIR::sclust</references>
        <references refid="ff_8c_1a7519abb60fe91f6aa1d17f64fbae123a" compoundref="ff_8c" startline="800" endline="808">clust2sect</references>
        <references refid="ff_8c_1ad1b3343c92d0f0e58ba448c3c11b1f39" compoundref="ff_8c" startline="1235" endline="1247">ld_clust</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" compoundref="ff_8h" startline="187">FR_INT_ERR</references>
        <references refid="ff_8c_1af2e8986556ee6644b4bf31fa4158d735" compoundref="ff_8c" startline="729" endline="750">move_window</references>
        <references refid="struct_f_a_t_f_s_1aabf9e848c88b78e22df6e09a0626e6f5" compoundref="ff_8h" startline="107">FATFS::win</references>
        <references refid="ff_8c_1a51949bb6a3eb30e5a09c48a2ee5a2593" compoundref="ff_8c" startline="426">SZ_DIRE</references>
        <references refid="ff_8c_1a357e5a36452e057d68378c98cd61018c" compoundref="ff_8c" startline="1252" endline="1259">st_clust</references>
        <references refid="ff_8c_1a724c260af4783a0ecf0db8d0687e7bd6" compoundref="ff_8c" startline="1656" endline="1692">dir_remove</references>
        <references refid="ff_8c_1aec6b108298553219ebb2b960b528459d" compoundref="ff_8c" startline="760" endline="789">sync_fs</references>
        <references refid="ff_8c_1aba6d6942b59f11cf285bdbfb7e38f1fa" compoundref="ff_8c" startline="475">FREE_BUF</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1aa82bca64e28bc0d656a7999dd0eadec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_setlabel</definition>
        <argsstring>(const TCHAR *label)</argsstring>
        <name>f_setlabel</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1gabe1f60daab5c7d11170c334fb832c798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_stat</definition>
        <argsstring>(const TCHAR *path, FILINFO *fno)</argsstring>
        <name>f_stat</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref> *</type>
          <declname>fno</declname>
        </param>
        <briefdescription>
<para>The f_stat function checks the existence of a file or sub-directory. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1gabe1f60daab5c7d11170c334fb832c798" kindref="member">f_stat()</ref> function checks the existence of a file or sub-directory. If not exist, the function returns with FR_NO_FILE. If exist, the function returns with FR_OK and the informations of the object, file size, timestamp, attribute and SFN, are stored to the file information structure. For details of the file information, refer to the <ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref> structure and <ref refid="group__filesystem_1gab39e82a110695de45f416f3149358012" kindref="member">f_readdir()</ref> function. <linebreak/>
 When LFN feature is enabled, lfname in the file information structure must be NULLed prior to use it. <linebreak/>
 Examples: <programlisting><codeline><highlight class="normal">FRESULT<sp/>fr;</highlight></codeline>
<codeline><highlight class="normal">FILINFO<sp/>fno;</highlight></codeline>
<codeline><highlight class="normal">printf(&quot;Test<sp/>for<sp/>&apos;file.txt&apos;...\n&quot;);</highlight></codeline>
<codeline><highlight class="normal">#if<sp/>_USE_LFN</highlight></codeline>
<codeline><highlight class="normal">fno.lfname<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal">fr<sp/>=<sp/>f_stat(&quot;file.txt&quot;,<sp/>&amp;fno);</highlight></codeline>
<codeline><highlight class="normal">switch<sp/>(fr)<sp/>{</highlight></codeline>
<codeline><highlight class="normal">case<sp/>FR_OK:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(&quot;Size:<sp/>%u\n&quot;,<sp/>fno.fsize);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(&quot;Timestamp:<sp/>%u/%02u/%02u,<sp/>%02u:%02u\n&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fno.fdate<sp/>&gt;&gt;<sp/>9)<sp/>+<sp/>1980,<sp/>fno.fdate<sp/>&gt;&gt;<sp/>5<sp/>&amp;<sp/>15,<sp/>fno.fdate<sp/>&amp;<sp/>31,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fno.ftime<sp/>&gt;&gt;<sp/>11,<sp/>fno.ftime<sp/>&gt;&gt;<sp/>5<sp/>&amp;<sp/>63);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(&quot;Attributes:<sp/>%c%c%c%c%c\n&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fno.fattrib<sp/>&amp;<sp/>AM_DIR)<sp/>?<sp/>&apos;D&apos;<sp/>:<sp/>&apos;-&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fno.fattrib<sp/>&amp;<sp/>AM_RDO)<sp/>?<sp/>&apos;R&apos;<sp/>:<sp/>&apos;-&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fno.fattrib<sp/>&amp;<sp/>AM_HID)<sp/>?<sp/>&apos;H&apos;<sp/>:<sp/>&apos;-&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fno.fattrib<sp/>&amp;<sp/>AM_SYS)<sp/>?<sp/>&apos;S&apos;<sp/>:<sp/>&apos;-&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fno.fattrib<sp/>&amp;<sp/>AM_ARC)<sp/>?<sp/>&apos;A&apos;<sp/>:<sp/>&apos;-&apos;);</highlight></codeline>
<codeline><highlight class="normal"><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/>case<sp/>FR_NO_FILE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(&quot;It<sp/>is<sp/>not<sp/>exist.\n&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(&quot;An<sp/>error<sp/>occured.<sp/>(%d)\n&quot;,<sp/>fr);</highlight></codeline>
<codeline><highlight class="normal"><sp/>}</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the null-terminated string that specifies the object to get its information. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">fno</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the blank <ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref> structure to store the information of the object. Set null pointer if it is not needed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_PATH</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_NAME</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_DRIVE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENABLED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILESYSTEM</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENOUGH_CORE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_MINIMIZE == 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="228" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3369" bodyend="3395"/>
        <references refid="ff_8c_1a7cc27142421bd12be623072288599791" compoundref="ff_8c" startline="473">DEFINE_NAMEBUF</references>
        <references refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</references>
        <references refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="144">DIR::fs</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a966fe5792671b39db1ccf655a8c1af8d" compoundref="ff_8c" startline="474">INIT_BUF</references>
        <references refid="ff_8c_1af194524672491a522f041278b9b74e94" compoundref="ff_8c" startline="2052" endline="2104">follow_path</references>
        <references refid="struct_d_i_r_1a30fe34a14a6efb4c9c04a522f6cf3378" compoundref="ff_8h" startline="150">DIR::dir</references>
        <references refid="ff_8c_1a2bc1b9d8567181c23b4720f4fb6076f5" compoundref="ff_8c" startline="1703" endline="1762">get_fileinfo</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca83e45a4b579558c57192c0a391b9bb45" compoundref="ff_8h" startline="191">FR_INVALID_NAME</references>
        <references refid="ff_8c_1aba6d6942b59f11cf285bdbfb7e38f1fa" compoundref="ff_8c" startline="475">FREE_BUF</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_sync</definition>
        <argsstring>(FIL *fp)</argsstring>
        <name>f_sync</name>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>The f_sync function flushes the cached information of a writing file. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" kindref="member">f_sync()</ref> function performs the same process as <ref refid="group__filesystem_1ga53882db20ef4323dcfd1874d7733ffc3" kindref="member">f_close()</ref> function but the file is left opened and can continue read/write/seek operations to the file. This is suitable for the applications that open files for a long time in write mode, such as data logger. Performing <ref refid="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" kindref="member">f_sync()</ref> function of periodic or immediataly after <ref refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" kindref="member">f_write()</ref> function can minimize the risk of data loss due to a sudden blackout or an unintentional media removal. <linebreak/>
 However there is no sense in <ref refid="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" kindref="member">f_sync()</ref> function immediataly before <ref refid="group__filesystem_1ga53882db20ef4323dcfd1874d7733ffc3" kindref="member">f_close()</ref> function because it performs <ref refid="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" kindref="member">f_sync()</ref> function in it. In other words, the differnce between those functions is that the file object is invalidated or not. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open file object to be flushed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_OBJECT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="219" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="2809" bodyend="2846"/>
        <references refid="ff_8c_1aa7193f5b86c3996b5312043a0c26da5f" compoundref="ff_8c" startline="2372" endline="2385">validate</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="struct_f_i_l_1abb2c49aaa8df55e1e1d8cb0c5e04a3bf" compoundref="ff_8h" startline="117">FIL::flag</references>
        <references refid="ff_8h_1ac4b7d5223f84df91c306ffbff536fae4" compoundref="ff_8h" startline="302">FA__WRITTEN</references>
        <references refid="ff_8h_1a5b2962e3616a1e9eb709d95f4c75c67c" compoundref="ff_8h" startline="303">FA__DIRTY</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1ga006bdd486027cb80272afa8849993f7c" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="63">disk_write</references>
        <references refid="struct_f_i_l_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="115">FIL::fs</references>
        <references refid="struct_f_a_t_f_s_1af46443bf86aaaff8d411814ed640e831" compoundref="ff_8h" startline="80">FATFS::drv</references>
        <references refid="struct_f_i_l_1a1602edc1ba9d9ae2b583cf55f3492325" compoundref="ff_8h" startline="135">FIL::buf</references>
        <references refid="struct_f_i_l_1a272171f74215002aba31a89428f1d290" compoundref="ff_8h" startline="123">FIL::dsect</references>
        <references refid="diskio_8h_1gaacdfef1dad6565f65c26d12fe0ea4b2ba2ea4b6ef3fffc17dd1d38ab5c2837737" compoundref="diskio_8h" startline="23">RES_OK</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97dee4a6b485dc8f91f37486092dfe34" compoundref="ff_8h" startline="186">FR_DISK_ERR</references>
        <references refid="ff_8c_1af2e8986556ee6644b4bf31fa4158d735" compoundref="ff_8c" startline="729" endline="750">move_window</references>
        <references refid="struct_f_i_l_1a5e11faf537370889c867127205f26ad1" compoundref="ff_8h" startline="125">FIL::dir_sect</references>
        <references refid="struct_f_i_l_1a0071755a7d2cacd3bafbb1bf2dab98a0" compoundref="ff_8h" startline="126">FIL::dir_ptr</references>
        <references refid="ff_8c_1ad3233e40118ed66095f3c9545b788f8a" compoundref="ff_8c" startline="410">DIR_Attr</references>
        <references refid="ff_8h_1ae8174d00798e34e7c9e95898cb9e1a09" compoundref="ff_8h" startline="322">AM_ARC</references>
        <references refid="ff_8h_1abf5aba973d95ac5843b80aa7379cdd66" compoundref="ff_8h" startline="338">ST_DWORD</references>
        <references refid="ff_8c_1abfbfa613864a02a65f0bf70ead6672c7" compoundref="ff_8c" startline="420">DIR_FileSize</references>
        <references refid="struct_f_i_l_1af70a0afd16367837984d6205cbfca308" compoundref="ff_8h" startline="120">FIL::fsize</references>
        <references refid="ff_8c_1a357e5a36452e057d68378c98cd61018c" compoundref="ff_8c" startline="1252" endline="1259">st_clust</references>
        <references refid="struct_f_i_l_1ad5d52f3fde971d2a05ff777a6243c252" compoundref="ff_8h" startline="121">FIL::sclust</references>
        <references refid="ff_8c_1a72589f5bbb514c0b222ab8b292764418" compoundref="ff_8c" startline="67">GET_FATTIME</references>
        <references refid="ff_8c_1ab9452d336adeece2a1b0b54ab35b8a59" compoundref="ff_8c" startline="417">DIR_WrtTime</references>
        <references refid="ff_8h_1a95ceb4c25b216e71baa7102939edfd0d" compoundref="ff_8h" startline="337">ST_WORD</references>
        <references refid="ff_8c_1afa0625d73f4683df24345f51e7a43da3" compoundref="ff_8c" startline="415">DIR_LstAccDate</references>
        <references refid="struct_f_a_t_f_s_1adb3983f8d19ef9879f30d04b076e9ff2" compoundref="ff_8h" startline="83">FATFS::wflag</references>
        <references refid="ff_8c_1aec6b108298553219ebb2b960b528459d" compoundref="ff_8c" startline="760" endline="789">sync_fs</references>
        <referencedby refid="group__filesystem_1ga53882db20ef4323dcfd1874d7733ffc3" compoundref="ff_8c" startline="2857" endline="2885">f_close</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga691a27b40c348f7c84b42e911636f38a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_truncate</definition>
        <argsstring>(FIL *fp)</argsstring>
        <name>f_truncate</name>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>The f_truncate function truncates the file size. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1ga691a27b40c348f7c84b42e911636f38a" kindref="member">f_truncate()</ref> function truncates the file size to the current file read/write pointer. This function has no effect if the file read/write pointer is already pointing end of the file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open file object to be truncated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_OBJECT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0 and _FS_MINIMIZE == 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="218" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3470" bodyend="3517"/>
        <references refid="ff_8c_1aa7193f5b86c3996b5312043a0c26da5f" compoundref="ff_8c" startline="2372" endline="2385">validate</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="struct_f_i_l_1a32b2a186af2cab58af8114c05386b9f6" compoundref="ff_8h" startline="118">FIL::err</references>
        <references refid="struct_f_i_l_1abb2c49aaa8df55e1e1d8cb0c5e04a3bf" compoundref="ff_8h" startline="117">FIL::flag</references>
        <references refid="ff_8h_1afa366963220c89b882c0361794020c14" compoundref="ff_8h" startline="298">FA_WRITE</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca897e9f2dd7629a80f48af242d8bc1a3d" compoundref="ff_8h" startline="192">FR_DENIED</references>
        <references refid="struct_f_i_l_1af70a0afd16367837984d6205cbfca308" compoundref="ff_8h" startline="120">FIL::fsize</references>
        <references refid="struct_f_i_l_1a0f65af32a2d036c560e66177961b9b22" compoundref="ff_8h" startline="119">FIL::fptr</references>
        <references refid="ff_8h_1ac4b7d5223f84df91c306ffbff536fae4" compoundref="ff_8h" startline="302">FA__WRITTEN</references>
        <references refid="ff_8c_1ab88651d19a5597dec220fe7538cccf23" compoundref="ff_8c" startline="937" endline="979">remove_chain</references>
        <references refid="struct_f_i_l_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="115">FIL::fs</references>
        <references refid="struct_f_i_l_1ad5d52f3fde971d2a05ff777a6243c252" compoundref="ff_8h" startline="121">FIL::sclust</references>
        <references refid="ff_8c_1a65611adf1626e5e08da77cd33a98dd8b" compoundref="ff_8c" startline="818" endline="862">get_fat</references>
        <references refid="struct_f_i_l_1ac134c1b4645be670eb5207032e714616" compoundref="ff_8h" startline="122">FIL::clust</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97dee4a6b485dc8f91f37486092dfe34" compoundref="ff_8h" startline="186">FR_DISK_ERR</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" compoundref="ff_8h" startline="187">FR_INT_ERR</references>
        <references refid="struct_f_a_t_f_s_1a388eb0fa0f3f1449a6ab88c6674e16fc" compoundref="ff_8h" startline="100">FATFS::n_fatent</references>
        <references refid="ff_8c_1abd4b6b071a8d728a88727051c12bc6d7" compoundref="ff_8c" startline="873" endline="926">put_fat</references>
        <references refid="ff_8h_1a5b2962e3616a1e9eb709d95f4c75c67c" compoundref="ff_8h" startline="303">FA__DIRTY</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1ga006bdd486027cb80272afa8849993f7c" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="63">disk_write</references>
        <references refid="struct_f_a_t_f_s_1af46443bf86aaaff8d411814ed640e831" compoundref="ff_8h" startline="80">FATFS::drv</references>
        <references refid="struct_f_i_l_1a1602edc1ba9d9ae2b583cf55f3492325" compoundref="ff_8h" startline="135">FIL::buf</references>
        <references refid="struct_f_i_l_1a272171f74215002aba31a89428f1d290" compoundref="ff_8h" startline="123">FIL::dsect</references>
        <references refid="diskio_8h_1gaacdfef1dad6565f65c26d12fe0ea4b2ba2ea4b6ef3fffc17dd1d38ab5c2837737" compoundref="diskio_8h" startline="23">RES_OK</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1ga2858167fcd0bced48e9be434b3895efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_unlink</definition>
        <argsstring>(const TCHAR *path)</argsstring>
        <name>f_unlink</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>The f_unlink function removes a file or sub-directory. </para>        </briefdescription>
        <detaileddescription>
<para>If condition of the object to be removed is applicable to the following terms, the function will be rejected. <linebreak/>
<itemizedlist>
<listitem><para>The file/sub-directory must not have read-only attribute (AM_RDO), or the function will be rejected with FR_DENIED.</para></listitem><listitem><para>The sub-directory must be empty and must not be current directory, or the function will be rejected with FR_DENIED.</para></listitem><listitem><para>The file/sub-directory must not be opened, or the FAT volume can be collapsed. It can be rejected with FR_LOCKED when file lock feature is enabled. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the null-terminated string that specifies an object to be removed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_PATH</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_NAME</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DENIED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_EXIST</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_WRITE_PROTECTED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_DRIVE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENABLED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILESYSTEM</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_LOCKED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENOUGH_CORE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0 and _FS_MINIMIZE == 0. </para></simplesect>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="226" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3526" bodyend="3586"/>
        <references refid="ff_8c_1a7cc27142421bd12be623072288599791" compoundref="ff_8c" startline="473">DEFINE_NAMEBUF</references>
        <references refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</references>
        <references refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="144">DIR::fs</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a966fe5792671b39db1ccf655a8c1af8d" compoundref="ff_8c" startline="474">INIT_BUF</references>
        <references refid="ff_8c_1af194524672491a522f041278b9b74e94" compoundref="ff_8c" startline="2052" endline="2104">follow_path</references>
        <references refid="group___f_f_c_o_n_f_i_g_1ga52faf11025401372f71e9d81905b7af4" compoundref="ffconf_8h" startline="146">_FS_RPATH</references>
        <references refid="struct_d_i_r_1a34e961714af3bc25c08d5832cca23204" compoundref="ff_8h" startline="151">DIR::fn</references>
        <references refid="ff_8c_1ad2306816015e67e72cfd0a20a880b227" compoundref="ff_8c" startline="351">NSFLAG</references>
        <references refid="ff_8c_1a2db528782a021797b34bdc6e9e9de1c3" compoundref="ff_8c" startline="357">NS_DOT</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca83e45a4b579558c57192c0a391b9bb45" compoundref="ff_8h" startline="191">FR_INVALID_NAME</references>
        <references refid="struct_d_i_r_1a30fe34a14a6efb4c9c04a522f6cf3378" compoundref="ff_8h" startline="150">DIR::dir</references>
        <references refid="ff_8c_1ad3233e40118ed66095f3c9545b788f8a" compoundref="ff_8c" startline="410">DIR_Attr</references>
        <references refid="ff_8h_1add6d85d1e7a02b4f6188783ef91a5f1e" compoundref="ff_8h" startline="316">AM_RDO</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca897e9f2dd7629a80f48af242d8bc1a3d" compoundref="ff_8h" startline="192">FR_DENIED</references>
        <references refid="ff_8c_1ad1b3343c92d0f0e58ba448c3c11b1f39" compoundref="ff_8c" startline="1235" endline="1247">ld_clust</references>
        <references refid="ff_8h_1a3a9db44e978ed6c13b641e092d4cd7d3" compoundref="ff_8h" startline="321">AM_DIR</references>
        <references refid="ff_8c_1a8941d573d16af92c8570950d53164f30" compoundref="ff_8c" startline="507" endline="520">mem_cpy</references>
        <references refid="struct_d_i_r_1ad5d52f3fde971d2a05ff777a6243c252" compoundref="ff_8h" startline="147">DIR::sclust</references>
        <references refid="ff_8c_1a29ecb9f62a34eadb5af2a42be312c31e" compoundref="ff_8c" startline="1080" endline="1118">dir_sdi</references>
        <references refid="ff_8c_1a3a47a08609e77266bc1928af812e06df" compoundref="ff_8c" startline="1519" endline="1567">dir_read</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97da8f98fc2e66d8fa7847f9ebb19b8c" compoundref="ff_8h" startline="189">FR_NO_FILE</references>
        <references refid="ff_8c_1a724c260af4783a0ecf0db8d0687e7bd6" compoundref="ff_8c" startline="1656" endline="1692">dir_remove</references>
        <references refid="ff_8c_1ab88651d19a5597dec220fe7538cccf23" compoundref="ff_8c" startline="937" endline="979">remove_chain</references>
        <references refid="ff_8c_1aec6b108298553219ebb2b960b528459d" compoundref="ff_8c" startline="760" endline="789">sync_fs</references>
        <references refid="ff_8c_1aba6d6942b59f11cf285bdbfb7e38f1fa" compoundref="ff_8c" startline="475">FREE_BUF</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1gaafaa718d1a487e12a8f0087173dba0b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_utime</definition>
        <argsstring>(const TCHAR *path, const FILINFO *fno)</argsstring>
        <name>f_utime</name>
        <param>
          <type>const <ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref> *</type>
          <declname>fno</declname>
        </param>
        <briefdescription>
<para>The f_utime function changes the timestamp of a file or sub-directory. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="group__filesystem_1gaafaa718d1a487e12a8f0087173dba0b9" kindref="member">f_utime()</ref> function changes the timestamp of a file or sub-directory <linebreak/>
 Example: <programlisting><codeline><highlight class="normal">FRESULT<sp/>set_timestamp<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>char<sp/>*obj,<sp/><sp/><sp/><sp/><sp/>/*<sp/>Pointer<sp/>to<sp/>the<sp/>file<sp/>name<sp/>*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>year,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>month,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>mday,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>hour,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>min,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>sec</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>FILINFO<sp/>fno;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>fno.fdate<sp/>=<sp/>(WORD)(((year<sp/>-<sp/>1980)<sp/>*<sp/>512U)<sp/>|<sp/>month<sp/>*<sp/>32U<sp/>|<sp/>mday);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>fno.ftime<sp/>=<sp/>(WORD)(hour<sp/>*<sp/>2048U<sp/>|<sp/>min<sp/>*<sp/>32U<sp/>|<sp/>sec<sp/>/<sp/>2U);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>return<sp/>f_utime(obj,<sp/>&amp;fno);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the null-terminated string that specifies an object to be changed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fno</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the file information structure that has a timestamp to be set in member fdate and ftime. Do not care any other members. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_PATH</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_NAME</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_WRITE_PROTECTED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_DRIVE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENABLED</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NO_FILESYSTEM</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_ENOUGH_CORE</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0 and _FS_MINIMIZE == 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="230" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="3789" bodyend="3822"/>
        <references refid="ff_8c_1a7cc27142421bd12be623072288599791" compoundref="ff_8c" startline="473">DEFINE_NAMEBUF</references>
        <references refid="ff_8c_1a4258e0b66f37b7d5f50b906facc55fb3" compoundref="ff_8c" startline="2203" endline="2362">find_volume</references>
        <references refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="144">DIR::fs</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a966fe5792671b39db1ccf655a8c1af8d" compoundref="ff_8c" startline="474">INIT_BUF</references>
        <references refid="ff_8c_1af194524672491a522f041278b9b74e94" compoundref="ff_8c" startline="2052" endline="2104">follow_path</references>
        <references refid="ff_8c_1aba6d6942b59f11cf285bdbfb7e38f1fa" compoundref="ff_8c" startline="475">FREE_BUF</references>
        <references refid="group___f_f_c_o_n_f_i_g_1ga52faf11025401372f71e9d81905b7af4" compoundref="ffconf_8h" startline="146">_FS_RPATH</references>
        <references refid="struct_d_i_r_1a34e961714af3bc25c08d5832cca23204" compoundref="ff_8h" startline="151">DIR::fn</references>
        <references refid="ff_8c_1ad2306816015e67e72cfd0a20a880b227" compoundref="ff_8c" startline="351">NSFLAG</references>
        <references refid="ff_8c_1a2db528782a021797b34bdc6e9e9de1c3" compoundref="ff_8c" startline="357">NS_DOT</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca83e45a4b579558c57192c0a391b9bb45" compoundref="ff_8h" startline="191">FR_INVALID_NAME</references>
        <references refid="struct_d_i_r_1a30fe34a14a6efb4c9c04a522f6cf3378" compoundref="ff_8h" startline="150">DIR::dir</references>
        <references refid="ff_8h_1a95ceb4c25b216e71baa7102939edfd0d" compoundref="ff_8h" startline="337">ST_WORD</references>
        <references refid="ff_8c_1ab9452d336adeece2a1b0b54ab35b8a59" compoundref="ff_8c" startline="417">DIR_WrtTime</references>
        <references refid="struct_f_i_l_i_n_f_o_1adb685b4c58c087d1cd790afb710001cb" compoundref="ff_8h" startline="171">FILINFO::ftime</references>
        <references refid="ff_8c_1abed17fa699511b09cbf64961373d63a4" compoundref="ff_8c" startline="418">DIR_WrtDate</references>
        <references refid="struct_f_i_l_i_n_f_o_1af49edeb97b10af8854cc15a05947a7d4" compoundref="ff_8h" startline="170">FILINFO::fdate</references>
        <references refid="struct_f_a_t_f_s_1adb3983f8d19ef9879f30d04b076e9ff2" compoundref="ff_8h" startline="83">FATFS::wflag</references>
        <references refid="ff_8c_1aec6b108298553219ebb2b960b528459d" compoundref="ff_8c" startline="760" endline="789">sync_fs</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
      </memberdef>
      <memberdef kind="function" id="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref></type>
        <definition>FRESULT f_write</definition>
        <argsstring>(FIL *fp, const void *buff, UINT btw, UINT *bw)</argsstring>
        <name>f_write</name>
        <param>
          <type><ref refid="struct_f_i_l" kindref="compound">FIL</ref> *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
          <declname>btw</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref> *</type>
          <declname>bw</declname>
        </param>
        <briefdescription>
<para>The f_write writes data to a file. </para>        </briefdescription>
        <detaileddescription>
<para>The read/write pointer of the file object advances number of bytes written. After the function succeeded, *bw should be checked to detect the disk full. In case of *bw is less than btw, it means the volume got full during the write operation. The function can take a time when the volume is full or close to full. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the open file object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buff</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data to be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">btw</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies number of bytes to write in range of UINT type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bw</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the UINT variable to return the number of bytes written. The value is always valid after the function call regardless of the result. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>FR_OK</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_DISK_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INT_ERR</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_NOT_READY</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_INVALID_OBJECT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FR_TIMEOUT</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Available when _FS_READONLY == 0. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="215" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.c" bodystart="2687" bodyend="2800"/>
        <references refid="ff_8c_1aa7193f5b86c3996b5312043a0c26da5f" compoundref="ff_8c" startline="2372" endline="2385">validate</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" compoundref="ff_8h" startline="185">FR_OK</references>
        <references refid="ff_8c_1a7e653d8ca0ae09faa49cd5b7335fea84" compoundref="ff_8c" startline="40">LEAVE_FF</references>
        <references refid="struct_f_i_l_1ae363a794e38f3a9aa1d55b8e3c7fcee7" compoundref="ff_8h" startline="115">FIL::fs</references>
        <references refid="struct_f_i_l_1a32b2a186af2cab58af8114c05386b9f6" compoundref="ff_8h" startline="118">FIL::err</references>
        <references refid="struct_f_i_l_1abb2c49aaa8df55e1e1d8cb0c5e04a3bf" compoundref="ff_8h" startline="117">FIL::flag</references>
        <references refid="ff_8h_1afa366963220c89b882c0361794020c14" compoundref="ff_8h" startline="298">FA_WRITE</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca897e9f2dd7629a80f48af242d8bc1a3d" compoundref="ff_8h" startline="192">FR_DENIED</references>
        <references refid="struct_f_i_l_1a0f65af32a2d036c560e66177961b9b22" compoundref="ff_8h" startline="119">FIL::fptr</references>
        <references refid="ff_8c_1a42b5140fc5e09a53c8f4cba66dc0e6c1" compoundref="ff_8c" startline="54">SS</references>
        <references refid="struct_f_a_t_f_s_1ace95d33f1aefff4c3e821cf8eac7ec3e" compoundref="ff_8h" startline="81">FATFS::csize</references>
        <references refid="struct_f_i_l_1ad5d52f3fde971d2a05ff777a6243c252" compoundref="ff_8h" startline="121">FIL::sclust</references>
        <references refid="ff_8c_1acbd0a20a17c6f9b6d536490d1cc3c5ac" compoundref="ff_8c" startline="990" endline="1040">create_chain</references>
        <references refid="struct_f_i_l_1ac134c1b4645be670eb5207032e714616" compoundref="ff_8h" startline="122">FIL::clust</references>
        <references refid="ff_8c_1a41e4c46636679236568cf50b5535847f" compoundref="ff_8c" startline="46">ABORT</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" compoundref="ff_8h" startline="187">FR_INT_ERR</references>
        <references refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97dee4a6b485dc8f91f37486092dfe34" compoundref="ff_8h" startline="186">FR_DISK_ERR</references>
        <references refid="struct_f_a_t_f_s_1a285dc1de6874bb5f0c41c328c9433e14" compoundref="ff_8h" startline="106">FATFS::winsect</references>
        <references refid="struct_f_i_l_1a272171f74215002aba31a89428f1d290" compoundref="ff_8h" startline="123">FIL::dsect</references>
        <references refid="ff_8c_1a5e18753404354b210096f9af99e31bc1" compoundref="ff_8c" startline="700" endline="724">sync_window</references>
        <references refid="ff_8h_1a5b2962e3616a1e9eb709d95f4c75c67c" compoundref="ff_8h" startline="303">FA__DIRTY</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1ga006bdd486027cb80272afa8849993f7c" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="63">disk_write</references>
        <references refid="struct_f_a_t_f_s_1af46443bf86aaaff8d411814ed640e831" compoundref="ff_8h" startline="80">FATFS::drv</references>
        <references refid="struct_f_i_l_1a1602edc1ba9d9ae2b583cf55f3492325" compoundref="ff_8h" startline="135">FIL::buf</references>
        <references refid="diskio_8h_1gaacdfef1dad6565f65c26d12fe0ea4b2ba2ea4b6ef3fffc17dd1d38ab5c2837737" compoundref="diskio_8h" startline="23">RES_OK</references>
        <references refid="ff_8c_1a7519abb60fe91f6aa1d17f64fbae123a" compoundref="ff_8c" startline="800" endline="808">clust2sect</references>
        <references refid="ff_8c_1a8941d573d16af92c8570950d53164f30" compoundref="ff_8c" startline="507" endline="520">mem_cpy</references>
        <references refid="struct_f_a_t_f_s_1aabf9e848c88b78e22df6e09a0626e6f5" compoundref="ff_8h" startline="107">FATFS::win</references>
        <references refid="struct_f_a_t_f_s_1adb3983f8d19ef9879f30d04b076e9ff2" compoundref="ff_8h" startline="83">FATFS::wflag</references>
        <references refid="struct_f_i_l_1af70a0afd16367837984d6205cbfca308" compoundref="ff_8h" startline="120">FIL::fsize</references>
        <references refid="group___s_d_c_a_r_d___i_n_t_e_r_f_a_c_e_1gae55155170bc9b99f73b440b93cc1c9e2" compoundref="_b_c_d_s___s_d_card___interface_8h" startline="62">disk_read</references>
        <references refid="ff_8c_1af2e8986556ee6644b4bf31fa4158d735" compoundref="ff_8c" startline="729" endline="750">move_window</references>
        <references refid="ff_8h_1ac4b7d5223f84df91c306ffbff536fae4" compoundref="ff_8h" startline="302">FA__WRITTEN</references>
        <referencedby refid="ff_8c_1a19f72a515ee94dd8a9660d513172ce9b" compoundref="ff_8c" startline="4469" endline="4520">putc_bfd</referencedby>
        <referencedby refid="group__filesystem_1ga62a35ee79e4913c1e31ac706241be7da" compoundref="ff_8c" startline="4524" endline="4542">f_putc</referencedby>
        <referencedby refid="group__filesystem_1ga9443c00129414fbfc16a5a13ad876ced" compoundref="ff_8c" startline="4551" endline="4570">f_puts</referencedby>
        <referencedby refid="group__filesystem_1ga49cccab38cd84e2d3357fef2d1df21f9" compoundref="ff_8c" startline="4579" endline="4674">f_printf</referencedby>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1ae5146230b88ddb4a6a69340e0fd1eabd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="integer_8h_1a570001c92f314285ad3e7139d8c58cf7" kindref="member">WCHAR</ref></type>
        <definition>WCHAR ff_convert</definition>
        <argsstring>(WCHAR chr, UINT dir)</argsstring>
        <name>ff_convert</name>
        <param>
          <type><ref refid="integer_8h_1a570001c92f314285ad3e7139d8c58cf7" kindref="member">WCHAR</ref></type>
          <declname>chr</declname>
        </param>
        <param>
          <type><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="269" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/cc932.c" bodystart="3725" bodyend="3781"/>
        <references refid="cc932_8c_1ae398d83d47562c988b302e92e23aa183" compoundref="cc932_8c" startline="1870">sjis2uni</references>
        <references refid="cc932_8c_1a52d2962d96a20450629d67c8a229f93e" compoundref="cc932_8c" startline="16">uni2sjis</references>
        <references refid="cc936_8c_1a5b0f5f14234324b9982cb89a5ac9e83a" compoundref="cc936_8c" startline="5468">oem2uni</references>
        <references refid="cc936_8c_1a7015e1f22b00c8e19b59b29b90839c79" compoundref="cc936_8c" startline="14">uni2oem</references>
        <referencedby refid="ff_8c_1a2bc1b9d8567181c23b4720f4fb6076f5" compoundref="ff_8c" startline="1703" endline="1762">get_fileinfo</referencedby>
        <referencedby refid="ff_8c_1a1407adce52a966e786c7d37f9643a800" compoundref="ff_8c" startline="1843" endline="2042">create_name</referencedby>
        <referencedby refid="group__filesystem_1ga0fa54bd310785ecdaed19dda8f60dac5" compoundref="ff_8c" startline="4382" endline="4450">f_gets</referencedby>
        <referencedby refid="ff_8c_1a19f72a515ee94dd8a9660d513172ce9b" compoundref="ff_8c" startline="4469" endline="4520">putc_bfd</referencedby>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1a2593b7acfe680686184f9ecb1be50323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ff_cre_syncobj</definition>
        <argsstring>(BYTE vol, _SYNC_t *sobj)</argsstring>
        <name>ff_cre_syncobj</name>
        <param>
          <type><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref></type>
          <declname>vol</declname>
        </param>
        <param>
          <type><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref> *</type>
          <declname>sobj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="279" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" bodystart="19" bodyend="40"/>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_a_s_i_c_s_1gaa93f0eb578d23995850d61f7d61c55c1" compoundref="_b_c_d_s___basics_8h" startline="76">FALSE</references>
        <referencedby refid="group__filesystem_1ga16a934c2bbfa2160295810adc49d5509" compoundref="ff_8c" startline="2402" endline="2440">f_mount</referencedby>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1a9184443f4d0a50b0f9a7fdb241613119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ff_del_syncobj</definition>
        <argsstring>(_SYNC_t sobj)</argsstring>
        <name>ff_del_syncobj</name>
        <param>
          <type><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref></type>
          <declname>sobj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="282" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" bodystart="52" bodyend="70"/>
        <referencedby refid="group__filesystem_1ga16a934c2bbfa2160295810adc49d5509" compoundref="ff_8c" startline="2402" endline="2440">f_mount</referencedby>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1a5bb37b1d2ec72388812e11003f2b508a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ff_rel_grant</definition>
        <argsstring>(_SYNC_t sobj)</argsstring>
        <name>ff_rel_grant</name>
        <param>
          <type><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref></type>
          <declname>sobj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="281" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" bodystart="107" bodyend="118"/>
        <referencedby refid="ff_8c_1a58c93c453ba943336cd24aa185cd72cf" compoundref="ff_8c" startline="565" endline="577">unlock_fs</referencedby>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1aa0dd2bf38b270e6b39ff395f2d25a0ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ff_req_grant</definition>
        <argsstring>(_SYNC_t sobj)</argsstring>
        <name>ff_req_grant</name>
        <param>
          <type><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref></type>
          <declname>sobj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="280" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/syscall.c" bodystart="81" bodyend="97"/>
        <references refid="group___f_f_c_o_n_f_i_g_1ga526e3cac667f53cc9a48507873348e60" compoundref="ffconf_8h" startline="249">_FS_TIMEOUT</references>
        <referencedby refid="ff_8c_1af35d759ac2dbde3cef605901cab3a776" compoundref="ff_8c" startline="556" endline="561">lock_fs</referencedby>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1af3555c2976dfadc4f1e5cbacc275a012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="integer_8h_1a570001c92f314285ad3e7139d8c58cf7" kindref="member">WCHAR</ref></type>
        <definition>WCHAR ff_wtoupper</definition>
        <argsstring>(WCHAR chr)</argsstring>
        <name>ff_wtoupper</name>
        <param>
          <type><ref refid="integer_8h_1a570001c92f314285ad3e7139d8c58cf7" kindref="member">WCHAR</ref></type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="270" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/option/cc932.c" bodystart="3785" bodyend="3828"/>
        <referencedby refid="ff_8c_1a7ce4d4f3aa55873dc160d76778536a5f" compoundref="ff_8c" startline="1274" endline="1302">cmp_lfn</referencedby>
        <referencedby refid="ff_8c_1a1407adce52a966e786c7d37f9643a800" compoundref="ff_8c" startline="1843" endline="2042">create_name</referencedby>
      </memberdef>
      <memberdef kind="function" id="ff_8h_1af58b536abfd30f77213f4ecaf2ac52f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref></type>
        <definition>DWORD get_fattime</definition>
        <argsstring>(void)</argsstring>
        <name>get_fattime</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h" line="264" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*---------------------------------------------------------------------------/</highlight></codeline>
<codeline lineno="2"><highlight class="comment">/<sp/><sp/>FatFs<sp/>-<sp/>FAT<sp/>file<sp/>system<sp/>module<sp/>include<sp/>R0.11a<sp/><sp/><sp/><sp/>(C)ChaN,<sp/>2015</highlight></codeline>
<codeline lineno="3"><highlight class="comment">/----------------------------------------------------------------------------/</highlight></codeline>
<codeline lineno="4"><highlight class="comment">/<sp/>FatFs<sp/>module<sp/>is<sp/>a<sp/>free<sp/>software<sp/>that<sp/>opened<sp/>under<sp/>license<sp/>policy<sp/>of</highlight></codeline>
<codeline lineno="5"><highlight class="comment">/<sp/>following<sp/>conditions.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">/</highlight></codeline>
<codeline lineno="7"><highlight class="comment">/<sp/>Copyright<sp/>(C)<sp/>2015,<sp/>ChaN,<sp/>all<sp/>right<sp/>reserved.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">/</highlight></codeline>
<codeline lineno="9"><highlight class="comment">/<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">/<sp/><sp/><sp/><sp/>this<sp/>condition<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">/</highlight></codeline>
<codeline lineno="12"><highlight class="comment">/<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>by<sp/>the<sp/>copyright<sp/>holder<sp/>and<sp/>contributors<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="13"><highlight class="comment">/<sp/>and<sp/>any<sp/>warranties<sp/>related<sp/>to<sp/>this<sp/>software<sp/>are<sp/>DISCLAIMED.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">/<sp/>The<sp/>copyright<sp/>owner<sp/>or<sp/>contributors<sp/>be<sp/>NOT<sp/>LIABLE<sp/>for<sp/>any<sp/>damages<sp/>caused</highlight></codeline>
<codeline lineno="15"><highlight class="comment">/<sp/>by<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">/---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_FATFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="ff_8h_1a749228947bc890224b8bd5de6e11faa3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_FATFS<sp/><sp/>64180<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Revision<sp/>ID<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="integer_8h" kindref="compound">integer.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Basic<sp/>integer<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ffconf_8h" kindref="compound">ffconf.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FatFs<sp/>configuration<sp/>options<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_FATFS<sp/>!=<sp/>_FFCONF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Wrong<sp/>configuration<sp/>file<sp/>(ffconf.h).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Definitions<sp/>of<sp/>volume<sp/>management<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_MULTI_PARTITION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Multiple<sp/>partition<sp/>configuration<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>pd;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Physical<sp/>drive<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>pt;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Partition:<sp/>0:Auto<sp/>detect,<sp/>1-4:Forced<sp/>partition)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">}<sp/>PARTITION;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>PARTITION<sp/>VolToPart[];<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Volume<sp/>-<sp/>Partition<sp/>resolution<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LD2PD(vol)<sp/>(VolToPart[vol].pd)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>physical<sp/>drive<sp/>number<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LD2PT(vol)<sp/>(VolToPart[vol].pt)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>partition<sp/>index<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Single<sp/>partition<sp/>configuration<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="ff_8h_1a6577ed2f95527745bf4d27c53488b9a7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LD2PD(vol)<sp/>(BYTE)(vol)<sp/><sp/></highlight><highlight class="comment">/*<sp/>Each<sp/>logical<sp/>drive<sp/>is<sp/>bound<sp/>to<sp/>the<sp/>same<sp/>physical<sp/>drive<sp/>number<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="ff_8h_1aadc4a9aefaf2588bdd7565549f5d91e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LD2PT(vol)<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>first<sp/>valid<sp/>partition<sp/>or<sp/>in<sp/>SFD<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Type<sp/>of<sp/>path<sp/>name<sp/>strings<sp/>on<sp/>FatFs<sp/>API<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_LFN_UNICODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unicode<sp/>string<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!_USE_LFN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>_LFN_UNICODE<sp/>must<sp/>be<sp/>0<sp/>at<sp/>non-LFN<sp/>cfg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_INC_TCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="integer_8h_1a570001c92f314285ad3e7139d8c58cf7" kindref="member">WCHAR</ref><sp/><ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_T(x)<sp/>L<sp/>##<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TEXT(x)<sp/>L<sp/>##<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ANSI/OEM<sp/>string<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_INC_TCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="ff_8h_1a03bdb8ce5895c7e261aadc2529637546" kindref="member">TCHAR</ref>;</highlight></codeline>
<codeline lineno="68" refid="ff_8h_1ae936e4c15227768f7da4e0951def89c8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_T(x)<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="ff_8h_1a3232964568d17bb4a1af30f9db826ce2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TEXT(x)<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>File<sp/>system<sp/>object<sp/>structure<sp/>(FATFS)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="struct_f_a_t_f_s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79" refid="struct_f_a_t_f_s_1a3630ef0b29c45ef8e0c1de639efab754" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1a3630ef0b29c45ef8e0c1de639efab754" kindref="member">fs_type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FAT<sp/>sub-type<sp/>(0:Not<sp/>mounted)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="struct_f_a_t_f_s_1af46443bf86aaaff8d411814ed640e831" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1af46443bf86aaaff8d411814ed640e831" kindref="member">drv</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Physical<sp/>drive<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="struct_f_a_t_f_s_1ace95d33f1aefff4c3e821cf8eac7ec3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1ace95d33f1aefff4c3e821cf8eac7ec3e" kindref="member">csize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sectors<sp/>per<sp/>cluster<sp/>(1,2,4...128)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="struct_f_a_t_f_s_1af18fdbb9dec86b70abc6ee2a1217ac47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1af18fdbb9dec86b70abc6ee2a1217ac47" kindref="member">n_fats</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>FAT<sp/>copies<sp/>(1<sp/>or<sp/>2)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="struct_f_a_t_f_s_1adb3983f8d19ef9879f30d04b076e9ff2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1adb3983f8d19ef9879f30d04b076e9ff2" kindref="member">wflag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>win[]<sp/>flag<sp/>(b0:dirty)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="struct_f_a_t_f_s_1a66c4d8e68262d5542852e2aed6ce69b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1a66c4d8e68262d5542852e2aed6ce69b4" kindref="member">fsi_flag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FSINFO<sp/>flags<sp/>(b7:disabled,<sp/>b0:dirty)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="struct_f_a_t_f_s_1a7b7a6396b2c82ad46c6d8b2bf141a8dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1a7b7a6396b2c82ad46c6d8b2bf141a8dd" kindref="member">id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>File<sp/>system<sp/>mount<sp/>ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="struct_f_a_t_f_s_1a22e74fc44cd5274ba7c3b18d5e357697" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1a22e74fc44cd5274ba7c3b18d5e357697" kindref="member">n_rootdir</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>root<sp/>directory<sp/>entries<sp/>(FAT12/16)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_MAX_SS<sp/>!=<sp/>_MIN_SS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref><sp/><sp/><sp/><sp/>ssize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bytes<sp/>per<sp/>sector<sp/>(512,<sp/>1024,<sp/>2048<sp/>or<sp/>4096)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_FS_REENTRANT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="struct_f_a_t_f_s_1a1c2c369d5858a2d8b60e65431b0b1a85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref><sp/><ref refid="struct_f_a_t_f_s_1a1c2c369d5858a2d8b60e65431b0b1a85" kindref="member">sobj</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Identifier<sp/>of<sp/>sync<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!_FS_READONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="struct_f_a_t_f_s_1a10cd8b80b3b6474bf0d6432c8fb9d2d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1a10cd8b80b3b6474bf0d6432c8fb9d2d2" kindref="member">last_clust</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Last<sp/>allocated<sp/>cluster<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="struct_f_a_t_f_s_1a509defa217cfb2eb777ed3c74c4ef426" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1a509defa217cfb2eb777ed3c74c4ef426" kindref="member">free_clust</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>free<sp/>clusters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_FS_RPATH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/>cdir;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>directory<sp/>start<sp/>cluster<sp/>(0:root)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="struct_f_a_t_f_s_1a388eb0fa0f3f1449a6ab88c6674e16fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1a388eb0fa0f3f1449a6ab88c6674e16fc" kindref="member">n_fatent</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>FAT<sp/>entries,<sp/>=<sp/>number<sp/>of<sp/>clusters<sp/>+<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="struct_f_a_t_f_s_1af70a0afd16367837984d6205cbfca308" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1af70a0afd16367837984d6205cbfca308" kindref="member">fsize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sectors<sp/>per<sp/>FAT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="struct_f_a_t_f_s_1a3e3472628262823af495681702709e8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1a3e3472628262823af495681702709e8e" kindref="member">volbase</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Volume<sp/>start<sp/>sector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="struct_f_a_t_f_s_1a74e60540a346de6eb9f0c13d6203efa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1a74e60540a346de6eb9f0c13d6203efa1" kindref="member">fatbase</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FAT<sp/>start<sp/>sector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="struct_f_a_t_f_s_1aebfa6556d8f94e951a8b2c1eb740e9a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1aebfa6556d8f94e951a8b2c1eb740e9a1" kindref="member">dirbase</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Root<sp/>directory<sp/>start<sp/>sector<sp/>(FAT32:Cluster#)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="struct_f_a_t_f_s_1a112ba7d33529e5c9fda3b950fff01180" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1a112ba7d33529e5c9fda3b950fff01180" kindref="member">database</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Data<sp/>start<sp/>sector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="struct_f_a_t_f_s_1a285dc1de6874bb5f0c41c328c9433e14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s_1a285dc1de6874bb5f0c41c328c9433e14" kindref="member">winsect</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>sector<sp/>appearing<sp/>in<sp/>the<sp/>win[]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="struct_f_a_t_f_s_1aabf9e848c88b78e22df6e09a0626e6f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/><sp/><sp/><sp/>win[<ref refid="group___f_f_c_o_n_f_i_g_1gac271b697378912f17132cb9c7d0de024" kindref="member">_MAX_SS</ref>];<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disk<sp/>access<sp/>window<sp/>for<sp/>Directory,<sp/>FAT<sp/>(and<sp/>file<sp/>data<sp/>at<sp/>tiny<sp/>cfg)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/><ref refid="struct_f_a_t_f_s" kindref="compound">FATFS</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>File<sp/>object<sp/>structure<sp/>(FIL)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="struct_f_i_l" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115" refid="struct_f_i_l_1ae363a794e38f3a9aa1d55b8e3c7fcee7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s" kindref="compound">FATFS</ref>*<sp/><sp/><ref refid="struct_f_i_l_1ae363a794e38f3a9aa1d55b8e3c7fcee7" kindref="member">fs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>related<sp/>file<sp/>system<sp/>object<sp/>(**do<sp/>not<sp/>change<sp/>order**)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="struct_f_i_l_1a7b7a6396b2c82ad46c6d8b2bf141a8dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_i_l_1a7b7a6396b2c82ad46c6d8b2bf141a8dd" kindref="member">id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Owner<sp/>file<sp/>system<sp/>mount<sp/>ID<sp/>(**do<sp/>not<sp/>change<sp/>order**)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="struct_f_i_l_1abb2c49aaa8df55e1e1d8cb0c5e04a3bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_i_l_1abb2c49aaa8df55e1e1d8cb0c5e04a3bf" kindref="member">flag</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Status<sp/>flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="struct_f_i_l_1a32b2a186af2cab58af8114c05386b9f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_i_l_1a32b2a186af2cab58af8114c05386b9f6" kindref="member">err</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Abort<sp/>flag<sp/>(error<sp/>code)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="struct_f_i_l_1a0f65af32a2d036c560e66177961b9b22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_i_l_1a0f65af32a2d036c560e66177961b9b22" kindref="member">fptr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>File<sp/>read/write<sp/>pointer<sp/>(Zeroed<sp/>on<sp/>file<sp/>open)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="struct_f_i_l_1af70a0afd16367837984d6205cbfca308" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_i_l_1af70a0afd16367837984d6205cbfca308" kindref="member">fsize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>File<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="struct_f_i_l_1ad5d52f3fde971d2a05ff777a6243c252" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_i_l_1ad5d52f3fde971d2a05ff777a6243c252" kindref="member">sclust</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>File<sp/>start<sp/>cluster<sp/>(0:no<sp/>cluster<sp/>chain,<sp/>always<sp/>0<sp/>when<sp/>fsize<sp/>is<sp/>0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="struct_f_i_l_1ac134c1b4645be670eb5207032e714616" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_i_l_1ac134c1b4645be670eb5207032e714616" kindref="member">clust</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>cluster<sp/>of<sp/>fpter<sp/>(not<sp/>valid<sp/>when<sp/>fprt<sp/>is<sp/>0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="struct_f_i_l_1a272171f74215002aba31a89428f1d290" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_i_l_1a272171f74215002aba31a89428f1d290" kindref="member">dsect</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sector<sp/>number<sp/>appearing<sp/>in<sp/>buf[]<sp/>(0:invalid)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!_FS_READONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="struct_f_i_l_1a5e11faf537370889c867127205f26ad1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_i_l_1a5e11faf537370889c867127205f26ad1" kindref="member">dir_sect</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sector<sp/>number<sp/>containing<sp/>the<sp/>directory<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="struct_f_i_l_1a0071755a7d2cacd3bafbb1bf2dab98a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/><sp/><sp/><ref refid="struct_f_i_l_1a0071755a7d2cacd3bafbb1bf2dab98a0" kindref="member">dir_ptr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>directory<sp/>entry<sp/>in<sp/>the<sp/>win[]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_USE_FASTSEEK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>*<sp/><sp/>cltbl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>cluster<sp/>link<sp/>map<sp/>table<sp/>(Nulled<sp/>on<sp/>file<sp/>open)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_FS_LOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/><sp/><sp/><sp/>lockid;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>File<sp/>lock<sp/>ID<sp/>origin<sp/>from<sp/>1<sp/>(index<sp/>of<sp/>file<sp/>semaphore<sp/>table<sp/>Files[])<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!_FS_TINY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="struct_f_i_l_1a1602edc1ba9d9ae2b583cf55f3492325" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/><sp/><sp/><sp/>buf[<ref refid="group___f_f_c_o_n_f_i_g_1gac271b697378912f17132cb9c7d0de024" kindref="member">_MAX_SS</ref>];<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>File<sp/>private<sp/>data<sp/>read/write<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/><ref refid="struct_f_i_l" kindref="compound">FIL</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Directory<sp/>object<sp/>structure<sp/>(DIR)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="struct_d_i_r" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144" refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_a_t_f_s" kindref="compound">FATFS</ref>*<sp/><sp/><ref refid="struct_d_i_r_1ae363a794e38f3a9aa1d55b8e3c7fcee7" kindref="member">fs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>owner<sp/>file<sp/>system<sp/>object<sp/>(**do<sp/>not<sp/>change<sp/>order**)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="struct_d_i_r_1a7b7a6396b2c82ad46c6d8b2bf141a8dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref><sp/><sp/><sp/><sp/><ref refid="struct_d_i_r_1a7b7a6396b2c82ad46c6d8b2bf141a8dd" kindref="member">id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Owner<sp/>file<sp/>system<sp/>mount<sp/>ID<sp/>(**do<sp/>not<sp/>change<sp/>order**)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="struct_d_i_r_1ab7c5089b70ce76bcd61abe615ed2a42b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref><sp/><sp/><sp/><sp/><ref refid="struct_d_i_r_1ab7c5089b70ce76bcd61abe615ed2a42b" kindref="member">index</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>read/write<sp/>index<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="struct_d_i_r_1ad5d52f3fde971d2a05ff777a6243c252" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_d_i_r_1ad5d52f3fde971d2a05ff777a6243c252" kindref="member">sclust</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Table<sp/>start<sp/>cluster<sp/>(0:Root<sp/>dir)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="struct_d_i_r_1ac134c1b4645be670eb5207032e714616" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_d_i_r_1ac134c1b4645be670eb5207032e714616" kindref="member">clust</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>cluster<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="struct_d_i_r_1a3e49e0860170e0fd9fc3e891b0d59975" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_d_i_r_1a3e49e0860170e0fd9fc3e891b0d59975" kindref="member">sect</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Current<sp/>sector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="struct_d_i_r_1a30fe34a14a6efb4c9c04a522f6cf3378" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/><sp/><sp/><ref refid="struct_d_i_r_1a30fe34a14a6efb4c9c04a522f6cf3378" kindref="member">dir</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>current<sp/>SFN<sp/>entry<sp/>in<sp/>the<sp/>win[]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="struct_d_i_r_1a34e961714af3bc25c08d5832cca23204" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*<sp/><sp/><sp/><ref refid="struct_d_i_r_1a34e961714af3bc25c08d5832cca23204" kindref="member">fn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>SFN<sp/>(in/out)<sp/>{file[8],ext[3],status[1]}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_FS_LOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/><sp/><sp/><sp/>lockid;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>File<sp/>lock<sp/>ID<sp/>(index<sp/>of<sp/>file<sp/>semaphore<sp/>table<sp/>Files[])<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_USE_LFN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="struct_d_i_r_1a95ac58da8ca4254c6923552f1a9ca92d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a570001c92f314285ad3e7139d8c58cf7" kindref="member">WCHAR</ref>*<sp/><sp/><ref refid="struct_d_i_r_1a95ac58da8ca4254c6923552f1a9ca92d" kindref="member">lfn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>LFN<sp/>working<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="struct_d_i_r_1a7f94c0148d9e604278c77e10ab0140cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref><sp/><sp/><sp/><sp/><ref refid="struct_d_i_r_1a7f94c0148d9e604278c77e10ab0140cb" kindref="member">lfn_idx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Last<sp/>matched<sp/>LFN<sp/>index<sp/>number<sp/>(0xFFFF:No<sp/>LFN)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_USE_FIND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/><sp/><sp/><sp/>pat;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>name<sp/>matching<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}<sp/><ref refid="struct_d_i_r" kindref="compound">DIR</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>File<sp/>information<sp/>structure<sp/>(FILINFO)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="struct_f_i_l_i_n_f_o" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169" refid="struct_f_i_l_i_n_f_o_1af70a0afd16367837984d6205cbfca308" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><sp/><sp/><ref refid="struct_f_i_l_i_n_f_o_1af70a0afd16367837984d6205cbfca308" kindref="member">fsize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>File<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="struct_f_i_l_i_n_f_o_1af49edeb97b10af8854cc15a05947a7d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_i_l_i_n_f_o_1af49edeb97b10af8854cc15a05947a7d4" kindref="member">fdate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Last<sp/>modified<sp/>date<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="struct_f_i_l_i_n_f_o_1adb685b4c58c087d1cd790afb710001cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a197942eefa7db30960ae396d68339b97" kindref="member">WORD</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_i_l_i_n_f_o_1adb685b4c58c087d1cd790afb710001cb" kindref="member">ftime</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Last<sp/>modified<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="struct_f_i_l_i_n_f_o_1a8d28e8b20d001f36bf6099d312384fbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_i_l_i_n_f_o_1a8d28e8b20d001f36bf6099d312384fbd" kindref="member">fattrib</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Attribute<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="struct_f_i_l_i_n_f_o_1a7c33845207b44ca3b394052ad6724e72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR<sp/><sp/><sp/>fname[13];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Short<sp/>file<sp/>name<sp/>(8.3<sp/>format)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_USE_LFN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="struct_f_i_l_i_n_f_o_1ac40e23991a0616f2573d7856cdbba9ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TCHAR*<sp/><sp/><ref refid="struct_f_i_l_i_n_f_o_1ac40e23991a0616f2573d7856cdbba9ea" kindref="member">lfname</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pointer<sp/>to<sp/>the<sp/>LFN<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="struct_f_i_l_i_n_f_o_1a28ec94b667e705d5eb0ec0bc7b5e32ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/><sp/><sp/><sp/><ref refid="struct_f_i_l_i_n_f_o_1a28ec94b667e705d5eb0ec0bc7b5e32ec" kindref="member">lfsize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Size<sp/>of<sp/>LFN<sp/>buffer<sp/>in<sp/>TCHAR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/><ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>File<sp/>function<sp/>return<sp/>code<sp/>(FRESULT)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="185" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca62fce5cd9df008f8fc85f99706bda5f1" kindref="member">FR_OK</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(0)<sp/>Succeeded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97dee4a6b485dc8f91f37486092dfe34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97dee4a6b485dc8f91f37486092dfe34" kindref="member">FR_DISK_ERR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(1)<sp/>A<sp/>hard<sp/>error<sp/>occurred<sp/>in<sp/>the<sp/>low<sp/>level<sp/>disk<sp/>I/O<sp/>layer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cab6c9903af6e9bffbb7a288705f4a6a76" kindref="member">FR_INT_ERR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(2)<sp/>Assertion<sp/>failed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cac9894bed3e8632ede8d2712235fa8e45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cac9894bed3e8632ede8d2712235fa8e45" kindref="member">FR_NOT_READY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(3)<sp/>The<sp/>physical<sp/>drive<sp/>cannot<sp/>work<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97da8f98fc2e66d8fa7847f9ebb19b8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca97da8f98fc2e66d8fa7847f9ebb19b8c" kindref="member">FR_NO_FILE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(4)<sp/>Could<sp/>not<sp/>find<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cae4529c8cc8b59783d6efc9ba4f574532" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cae4529c8cc8b59783d6efc9ba4f574532" kindref="member">FR_NO_PATH</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(5)<sp/>Could<sp/>not<sp/>find<sp/>the<sp/>path<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca83e45a4b579558c57192c0a391b9bb45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca83e45a4b579558c57192c0a391b9bb45" kindref="member">FR_INVALID_NAME</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(6)<sp/>The<sp/>path<sp/>name<sp/>format<sp/>is<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca897e9f2dd7629a80f48af242d8bc1a3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca897e9f2dd7629a80f48af242d8bc1a3d" kindref="member">FR_DENIED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(7)<sp/>Access<sp/>denied<sp/>due<sp/>to<sp/>prohibited<sp/>access<sp/>or<sp/>directory<sp/>full<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca0d8f024d256df76e84782b95018a2450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca0d8f024d256df76e84782b95018a2450" kindref="member">FR_EXIST</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(8)<sp/>Access<sp/>denied<sp/>due<sp/>to<sp/>prohibited<sp/>access<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3dec4eba481cdf5e99d7cd6009e6dcf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3dec4eba481cdf5e99d7cd6009e6dcf8" kindref="member">FR_INVALID_OBJECT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(9)<sp/>The<sp/>file/directory<sp/>object<sp/>is<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cac3afbb423b1d4497229416812aff383b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cac3afbb423b1d4497229416812aff383b" kindref="member">FR_WRITE_PROTECTED</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(10)<sp/>The<sp/>physical<sp/>drive<sp/>is<sp/>write<sp/>protected<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca487844af77de15f6932a3b41ef3a2d65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca487844af77de15f6932a3b41ef3a2d65" kindref="member">FR_INVALID_DRIVE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(11)<sp/>The<sp/>logical<sp/>drive<sp/>number<sp/>is<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cafc56605c68aaffab4a428339a8bd600d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44cafc56605c68aaffab4a428339a8bd600d" kindref="member">FR_NOT_ENABLED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(12)<sp/>The<sp/>volume<sp/>has<sp/>no<sp/>work<sp/>area<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca086154b5fee763f28c49fd0e2c1cb463" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca086154b5fee763f28c49fd0e2c1cb463" kindref="member">FR_NO_FILESYSTEM</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(13)<sp/>There<sp/>is<sp/>no<sp/>valid<sp/>FAT<sp/>volume<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca4b02760f758f5b1a89f445244fe9fbca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca4b02760f758f5b1a89f445244fe9fbca" kindref="member">FR_MKFS_ABORTED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(14)<sp/>The<sp/>f_mkfs()<sp/>aborted<sp/>due<sp/>to<sp/>any<sp/>parameter<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3f8ca7e51af8b129d14328de7243c5d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3f8ca7e51af8b129d14328de7243c5d4" kindref="member">FR_TIMEOUT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(15)<sp/>Could<sp/>not<sp/>get<sp/>a<sp/>grant<sp/>to<sp/>access<sp/>the<sp/>volume<sp/>within<sp/>defined<sp/>period<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca7db5afaaa2af591bd4a208b2967075d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca7db5afaaa2af591bd4a208b2967075d7" kindref="member">FR_LOCKED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(16)<sp/>The<sp/>operation<sp/>is<sp/>rejected<sp/>according<sp/>to<sp/>the<sp/>file<sp/>sharing<sp/>policy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44caf56a76a86602cbdeb2c4f3d00cfad21c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44caf56a76a86602cbdeb2c4f3d00cfad21c" kindref="member">FR_NOT_ENOUGH_CORE</ref>,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(17)<sp/>LFN<sp/>working<sp/>buffer<sp/>could<sp/>not<sp/>be<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca50dd3c3c274ccebb2cfbddde9d065bb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca50dd3c3c274ccebb2cfbddde9d065bb9" kindref="member">FR_TOO_MANY_OPEN_FILES</ref>,<sp/></highlight><highlight class="comment">/*<sp/>(18)<sp/>Number<sp/>of<sp/>open<sp/>files<sp/>&gt;<sp/>_FS_LOCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3b89faeceab64db277d0fcdeaaa315d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ff_8h_1ga49d0171ecbd362cda5680a0d360db44ca3b89faeceab64db277d0fcdeaaa315d6" kindref="member">FR_INVALID_PARAMETER</ref><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(19)<sp/>Given<sp/>parameter<sp/>is<sp/>invalid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">}<sp/><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FatFs<sp/>module<sp/>application<sp/>interface<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1gaefdef7126128d99d0b3bd82c28e54d80" kindref="member">f_open</ref><sp/>(<ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>fp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path,<sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>mode);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>or<sp/>create<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1ga53882db20ef4323dcfd1874d7733ffc3" kindref="member">f_close</ref><sp/>(<ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>fp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>an<sp/>open<sp/>file<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1gac4c3dcb6869ca252888eebabe39727b3" kindref="member">f_read</ref><sp/>(<ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>fp,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff,<sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>btr,<sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref>*<sp/>br);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>data<sp/>from<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1gae6a4dfae8a9e308bdb2283a37ef680f2" kindref="member">f_write</ref><sp/>(<ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>fp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff,<sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>btw,<sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref>*<sp/>bw);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>data<sp/>to<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="ff_8h_1a6c0c4cd695704aa6d952c90be81d9849" kindref="member">f_forward</ref><sp/>(<ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>fp,<sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref>(*func)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref>*,<ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref>),<sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>btf,<sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref>*<sp/>bf);<sp/></highlight><highlight class="comment">/*<sp/>Forward<sp/>data<sp/>to<sp/>the<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1ga5df0ac672ada972e89ef4b003e57f964" kindref="member">f_lseek</ref><sp/>(<ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>fp,<sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>ofs);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>file<sp/>pointer<sp/>of<sp/>a<sp/>file<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1ga691a27b40c348f7c84b42e911636f38a" kindref="member">f_truncate</ref><sp/>(<ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>fp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Truncate<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1gad69c7246b122ba56a134939ee0eaf847" kindref="member">f_sync</ref><sp/>(<ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>fp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Flush<sp/>cached<sp/>data<sp/>of<sp/>a<sp/>writing<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1gab63b213c75f7335fbb63a1f3f70e5fc7" kindref="member">f_opendir</ref><sp/>(<ref refid="struct_d_i_r" kindref="compound">DIR</ref>*<sp/>dp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Open<sp/>a<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1gab5f7376b6f3e3bcc7f5ff5497c8b7364" kindref="member">f_closedir</ref><sp/>(<ref refid="struct_d_i_r" kindref="compound">DIR</ref>*<sp/>dp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Close<sp/>an<sp/>open<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1gab39e82a110695de45f416f3149358012" kindref="member">f_readdir</ref><sp/>(<ref refid="struct_d_i_r" kindref="compound">DIR</ref>*<sp/>dp,<sp/><ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref>*<sp/>fno);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>a<sp/>directory<sp/>item<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="ff_8h_1a6db7bc3d037b51a9f205eacda6177a5f" kindref="member">f_findfirst</ref><sp/>(<ref refid="struct_d_i_r" kindref="compound">DIR</ref>*<sp/>dp,<sp/><ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref>*<sp/>fno,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>pattern);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>first<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="ff_8h_1a013999e446481a607316b916441f8673" kindref="member">f_findnext</ref><sp/>(<ref refid="struct_d_i_r" kindref="compound">DIR</ref>*<sp/>dp,<sp/><ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref>*<sp/>fno);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>next<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1ga4b4d38db58e89c526cfcf53200d719d0" kindref="member">f_mkdir</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>sub<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1ga2858167fcd0bced48e9be434b3895efe" kindref="member">f_unlink</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Delete<sp/>an<sp/>existing<sp/>file<sp/>or<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1ga2d0ceea336edd9b05754c8684ea8a72f" kindref="member">f_rename</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path_old,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path_new);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rename/Move<sp/>a<sp/>file<sp/>or<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1gabe1f60daab5c7d11170c334fb832c798" kindref="member">f_stat</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path,<sp/><ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref>*<sp/>fno);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>file<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1ga9ee7e560eec8d82755c636ae41e702cd" kindref="member">f_chmod</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path,<sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>attr,<sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>mask);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>attribute<sp/>of<sp/>the<sp/>file/dir<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1gaafaa718d1a487e12a8f0087173dba0b9" kindref="member">f_utime</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_i_l_i_n_f_o" kindref="compound">FILINFO</ref>*<sp/>fno);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>times-tamp<sp/>of<sp/>the<sp/>file/dir<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="ff_8h_1a53c7e9a7fb3c279254cd2d0445667e2f" kindref="member">f_chdir</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>current<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="ff_8h_1a13e5933f851b436890361189f64261cd" kindref="member">f_chdrive</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>current<sp/>drive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="ff_8h_1acb865a03dbac0031ac5cb8a031f7b71c" kindref="member">f_getcwd</ref><sp/>(TCHAR*<sp/>buff,<sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>len);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>current<sp/>directory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1ga0ff39f75a87cbda9cd6ea65d83f16cec" kindref="member">f_getfree</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path,<sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>*<sp/>nclst,<sp/><ref refid="struct_f_a_t_f_s" kindref="compound">FATFS</ref>**<sp/>fatfs);<sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>number<sp/>of<sp/>free<sp/>clusters<sp/>on<sp/>the<sp/>drive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="ff_8h_1ac4ff40a674bcbfe40d81b1e8e54befc6" kindref="member">f_getlabel</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path,<sp/>TCHAR*<sp/>label,<sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref>*<sp/>vsn);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>volume<sp/>label<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="ff_8h_1aa82bca64e28bc0d656a7999dd0eadec7" kindref="member">f_setlabel</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>label);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>volume<sp/>label<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1ga16a934c2bbfa2160295810adc49d5509" kindref="member">f_mount</ref><sp/>(<ref refid="struct_f_a_t_f_s" kindref="compound">FATFS</ref>*<sp/>fs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path,<sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>opt);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mount/Unmount<sp/>a<sp/>logical<sp/>drive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="group__filesystem_1ga799aff9594e708c8be357281cf85428b" kindref="member">f_mkfs</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>path,<sp/><ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>sfd,<sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>au);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>file<sp/>system<sp/>on<sp/>the<sp/>volume<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="group__filesystem_1ga49d0171ecbd362cda5680a0d360db44c" kindref="member">FRESULT</ref><sp/><ref refid="ff_8h_1ae89e589480ab573ce19d22dcd022efe0" kindref="member">f_fdisk</ref><sp/>(<ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>pdrv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/>szt[],<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>work);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Divide<sp/>a<sp/>physical<sp/>drive<sp/>into<sp/>some<sp/>partitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__filesystem_1ga62a35ee79e4913c1e31ac706241be7da" kindref="member">f_putc</ref><sp/>(TCHAR<sp/>c,<sp/><ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>fp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>a<sp/>character<sp/>to<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__filesystem_1ga9443c00129414fbfc16a5a13ad876ced" kindref="member">f_puts</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>str,<sp/><ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>cp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>a<sp/>string<sp/>to<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__filesystem_1ga49cccab38cd84e2d3357fef2d1df21f9" kindref="member">f_printf</ref><sp/>(<ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>fp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TCHAR*<sp/>str,<sp/>...);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>a<sp/>formatted<sp/>string<sp/>to<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">TCHAR*<sp/><ref refid="group__filesystem_1ga0fa54bd310785ecdaed19dda8f60dac5" kindref="member">f_gets</ref><sp/>(TCHAR*<sp/>buff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/><ref refid="struct_f_i_l" kindref="compound">FIL</ref>*<sp/>fp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>a<sp/>string<sp/>from<sp/>the<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="ff_8h_1a970cdd8970a3a94967ad64cfc5d4c161" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f_eof(fp)<sp/>((int)((fp)-&gt;fptr<sp/>==<sp/>(fp)-&gt;fsize))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="ff_8h_1a25cbdabeed318802cf0e9db6671a33b7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f_error(fp)<sp/>((fp)-&gt;err)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="ff_8h_1a5e1daca7ce13cdc277e42185f7f9124f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f_tell(fp)<sp/>((fp)-&gt;fptr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="ff_8h_1a26f33722c5bf1aa3cd6f0290a83eb2bc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f_size(fp)<sp/>((fp)-&gt;fsize)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="ff_8h_1ae4caf47dd5cbc123b61d35542481b1be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f_rewind(fp)<sp/>f_lseek((fp),<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="ff_8h_1a3f92b6c0c1648de678283ab6f1610161" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>f_rewinddir(dp)<sp/>f_readdir((dp),<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="ff_8h_1a59adc4c82490d23754cd39c2fb99b0da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EOF<sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Additional<sp/>user<sp/>defined<sp/>functions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RTC<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!_FS_READONLY<sp/>&amp;&amp;<sp/>!_FS_NORTC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><ref refid="integer_8h_1ad342ac907eb044443153a22f964bf0af" kindref="member">DWORD</ref><sp/><ref refid="ff_8h_1af58b536abfd30f77213f4ecaf2ac52f5" kindref="member">get_fattime</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Unicode<sp/>support<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_USE_LFN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unicode<sp/>-<sp/>OEM<sp/>code<sp/>conversion<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><ref refid="integer_8h_1a570001c92f314285ad3e7139d8c58cf7" kindref="member">WCHAR</ref><sp/><ref refid="ff_8h_1ae5146230b88ddb4a6a69340e0fd1eabd" kindref="member">ff_convert</ref><sp/>(<ref refid="integer_8h_1a570001c92f314285ad3e7139d8c58cf7" kindref="member">WCHAR</ref><sp/>chr,<sp/><ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>dir);<sp/></highlight><highlight class="comment">/*<sp/>OEM-Unicode<sp/>bidirectional<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><ref refid="integer_8h_1a570001c92f314285ad3e7139d8c58cf7" kindref="member">WCHAR</ref><sp/><ref refid="ff_8h_1af3555c2976dfadc4f1e5cbacc275a012" kindref="member">ff_wtoupper</ref><sp/>(<ref refid="integer_8h_1a570001c92f314285ad3e7139d8c58cf7" kindref="member">WCHAR</ref><sp/>chr);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unicode<sp/>upper-case<sp/>conversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_USE_LFN<sp/>==<sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Memory<sp/>functions<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ff_memalloc<sp/>(<ref refid="integer_8h_1a36cb3b01d81ffd844bbbfb54003e06ec" kindref="member">UINT</ref><sp/>msize);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>memory<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ff_memfree<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>mblock);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>memory<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Sync<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_FS_REENTRANT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ff_8h_1a2593b7acfe680686184f9ecb1be50323" kindref="member">ff_cre_syncobj</ref><sp/>(<ref refid="integer_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>vol,<sp/><ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref>*<sp/>sobj);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>a<sp/>sync<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ff_8h_1aa0dd2bf38b270e6b39ff395f2d25a0ed" kindref="member">ff_req_grant</ref><sp/>(<ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref><sp/>sobj);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>sync<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ff_8h_1a5bb37b1d2ec72388812e11003f2b508a" kindref="member">ff_rel_grant</ref><sp/>(<ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref><sp/>sobj);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unlock<sp/>sync<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ff_8h_1a9184443f4d0a50b0f9a7fdb241613119" kindref="member">ff_del_syncobj</ref><sp/>(<ref refid="group___f_f_c_o_n_f_i_g_1ga9a3f0670343e51652dd12b18fa90a9eb" kindref="member">_SYNC_t</ref><sp/>sobj);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Delete<sp/>a<sp/>sync<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Flags<sp/>and<sp/>offset<sp/>address<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>File<sp/>access<sp/>control<sp/>and<sp/>file<sp/>status<sp/>flags<sp/>(FIL.flag)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="ff_8h_1a1f4f3530ff03abbd979b072536e72290" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FA_READ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="ff_8h_1a0c5dd686b10f84c2a2b3954957a5979a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FA_OPEN_EXISTING<sp/><sp/><sp/><sp/>0x00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!_FS_READONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="ff_8h_1afa366963220c89b882c0361794020c14" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FA_WRITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="ff_8h_1a417bb1babd1785fd181a806b5613eba3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FA_CREATE_NEW<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="ff_8h_1afba4546b131dea4b24727fa20a80e29f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FA_CREATE_ALWAYS<sp/><sp/><sp/><sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="ff_8h_1a17b01553029920ac0468912b4bcb16c7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FA_OPEN_ALWAYS<sp/><sp/><sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="ff_8h_1ac4b7d5223f84df91c306ffbff536fae4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FA__WRITTEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="ff_8h_1a5b2962e3616a1e9eb709d95f4c75c67c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FA__DIRTY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FAT<sp/>sub<sp/>type<sp/>(FATFS.fs_type)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="ff_8h_1aab755aa1b4f81f4aabee4a5d4738cfb0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FS_FAT12<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="ff_8h_1a7ef90a36d99edfc0138a2155a17a79b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FS_FAT16<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="ff_8h_1ac63e0796095a789cefdbc3c3c676c9ce" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FS_FAT32<sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>File<sp/>attribute<sp/>bits<sp/>for<sp/>directory<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="ff_8h_1add6d85d1e7a02b4f6188783ef91a5f1e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AM_RDO<sp/><sp/>0x01<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>only<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="ff_8h_1aa90c4c921c1955fd407d8bbf17f1674e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AM_HID<sp/><sp/>0x02<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hidden<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="ff_8h_1a1f25d5c17b5a3a6397b3398add8cdc15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AM_SYS<sp/><sp/>0x04<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>System<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="ff_8h_1a5cfae62dabae0a54809e43b36685ce7c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AM_VOL<sp/><sp/>0x08<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Volume<sp/>label<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="ff_8h_1a91161ef62e0e85ba3c2876d3d339473d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AM_LFN<sp/><sp/>0x0F<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LFN<sp/>entry<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="ff_8h_1a3a9db44e978ed6c13b641e092d4cd7d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AM_DIR<sp/><sp/>0x10<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Directory<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="ff_8h_1ae8174d00798e34e7c9e95898cb9e1a09" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AM_ARC<sp/><sp/>0x20<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Archive<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="ff_8h_1aefa78fd6b130faaca4e115602869b57c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AM_MASK<sp/>0x3F<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mask<sp/>of<sp/>defined<sp/>bits<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Fast<sp/>seek<sp/>feature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="ff_8h_1aee297a9011164cf485a4df2a72758b08" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CREATE_LINKMAP<sp/><sp/>0xFFFFFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Multi-byte<sp/>word<sp/>access<sp/>macros<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_WORD_ACCESS<sp/>==<sp/>1<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Enable<sp/>word<sp/>access<sp/>to<sp/>the<sp/>FAT<sp/>structure<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="ff_8h_1a398519bb08da6457e62567d1f0b567e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LD_WORD(ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(WORD)(*(WORD*)(BYTE*)(ptr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="ff_8h_1a4690304ddc975516f7dc02575c96e34e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LD_DWORD(ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(DWORD)(*(DWORD*)(BYTE*)(ptr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="ff_8h_1a95ceb4c25b216e71baa7102939edfd0d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ST_WORD(ptr,val)<sp/><sp/><sp/><sp/>*(WORD*)(BYTE*)(ptr)=(WORD)(val)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="ff_8h_1abf5aba973d95ac5843b80aa7379cdd66" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ST_DWORD(ptr,val)<sp/><sp/><sp/>*(DWORD*)(BYTE*)(ptr)=(DWORD)(val)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>byte-by-byte<sp/>access<sp/>to<sp/>the<sp/>FAT<sp/>structure<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LD_WORD(ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(WORD)(((WORD)*((BYTE*)(ptr)+1)&lt;&lt;8)|(WORD)*(BYTE*)(ptr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LD_DWORD(ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(DWORD)(((DWORD)*((BYTE*)(ptr)+3)&lt;&lt;24)|((DWORD)*((BYTE*)(ptr)+2)&lt;&lt;16)|((WORD)*((BYTE*)(ptr)+1)&lt;&lt;8)|*(BYTE*)(ptr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ST_WORD(ptr,val)<sp/><sp/><sp/><sp/>*(BYTE*)(ptr)=(BYTE)(val);<sp/>*((BYTE*)(ptr)+1)=(BYTE)((WORD)(val)&gt;&gt;8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ST_DWORD(ptr,val)<sp/><sp/><sp/>*(BYTE*)(ptr)=(BYTE)(val);<sp/>*((BYTE*)(ptr)+1)=(BYTE)((WORD)(val)&gt;&gt;8);<sp/>*((BYTE*)(ptr)+2)=(BYTE)((DWORD)(val)&gt;&gt;16);<sp/>*((BYTE*)(ptr)+3)=(BYTE)((DWORD)(val)&gt;&gt;24)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_FATFS<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/FATfs/3rd-party/fatfs/src/ff.h"/>
  </compounddef>
</doxygen>
