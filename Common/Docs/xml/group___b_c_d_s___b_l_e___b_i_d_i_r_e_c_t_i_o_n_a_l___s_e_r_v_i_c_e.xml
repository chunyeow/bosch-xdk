<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="group___b_c_d_s___b_l_e___b_i_d_i_r_e_c_t_i_o_n_a_l___s_e_r_v_i_c_e" kind="group">
    <compoundname>BCDS_BLE_BIDIRECTIONAL_SERVICE</compoundname>
    <title>Bidirectional Service</title>
    <innerfile refid="_b_c_d_s___bidirectional_service_8h">BCDS_BidirectionalService.h</innerfile>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___b_c_d_s___b_l_e___b_i_d_i_r_e_c_t_i_o_n_a_l___s_e_r_v_i_c_e_1gac998b046809a4420821c242b10b1d580" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* BidirectionalService_DataReceivedCallBack)(uint8_t *rxBuffer, uint8_t rxDataLength)</definition>
        <argsstring>)(uint8_t *rxBuffer, uint8_t rxDataLength)</argsstring>
        <name>BidirectionalService_DataReceivedCallBack</name>
        <briefdescription>
<para>Typedef to notify the application about any incoming data. </para>        </briefdescription>
        <detaileddescription>
<para>Typedef to notify the application about any incoming data</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rxBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the received data buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rxDataLength</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the received data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Do not perform any heavy processing within this function and return asap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/services/BCDS_BidirectionalService.h" line="74" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/services/BCDS_BidirectionalService.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___b_l_e___b_i_d_i_r_e_c_t_i_o_n_a_l___s_e_r_v_i_c_e_1ga0dd8825934eb178cdfcaffefc25766fa" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* BidirectionalService_SendEventCallback)(Retcode_T sendStatus)</definition>
        <argsstring>)(Retcode_T sendStatus)</argsstring>
        <name>BidirectionalService_SendEventCallback</name>
        <briefdescription>
<para>Typedef to send status notification. </para>        </briefdescription>
        <detaileddescription>
<para>Typedef to send status notification.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sendStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>Status of the send operation</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>For every single BidirectionalService_SendData, this must be synchronized before triggering a new send. If the interface user wants to have a queuing mechanism for sending data where the user need not worry about this notification and shall load the send API per need, it is excepted to be implemented as a wrapper at the application end on top of this.</para></simplesect>
<simplesect kind="note"><para>Do not perform any heavy processing within this function and return asap. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/services/BCDS_BidirectionalService.h" line="91" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/services/BCDS_BidirectionalService.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___b_i_d_i_r_e_c_t_i_o_n_a_l___s_e_r_v_i_c_e_1gac78d59b7026264423eb6d18a8594602f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BidirectionalService_Init</definition>
        <argsstring>(BidirectionalService_DataReceivedCallBack readCallback, BidirectionalService_SendEventCallback sendCallback)</argsstring>
        <name>BidirectionalService_Init</name>
        <param>
          <type><ref refid="group___b_c_d_s___b_l_e___b_i_d_i_r_e_c_t_i_o_n_a_l___s_e_r_v_i_c_e_1gac998b046809a4420821c242b10b1d580" kindref="member">BidirectionalService_DataReceivedCallBack</ref></type>
          <declname>readCallback</declname>
        </param>
        <param>
          <type><ref refid="group___b_c_d_s___b_l_e___b_i_d_i_r_e_c_t_i_o_n_a_l___s_e_r_v_i_c_e_1ga0dd8825934eb178cdfcaffefc25766fa" kindref="member">BidirectionalService_SendEventCallback</ref></type>
          <declname>sendCallback</declname>
        </param>
        <briefdescription>
<para>Initializes the Bidirectional Service. </para>        </briefdescription>
        <detaileddescription>
<para>Initializes the Bidirectional Service with a readCallback and a sendCallback to be implemented by the application.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">readCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Application Callback that will be called on data reception for any data reception</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sendCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Application Callback that will be notified about the data send status.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. Refer <ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref> and <ref refid="group___b_c_d_s___b_l_e_1ga0f2731d56101ae023851508c9293df01" kindref="member">Ble_Retcode_E</ref> for other values.</para></simplesect>
<simplesect kind="see"><para><ref refid="group___b_c_d_s___b_l_e___b_i_d_i_r_e_c_t_i_o_n_a_l___s_e_r_v_i_c_e_1ga82d39b7e6afe5777c0e8b12114d43cd9" kindref="member">BidirectionalService_SendData</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/services/BCDS_BidirectionalService.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___b_i_d_i_r_e_c_t_i_o_n_a_l___s_e_r_v_i_c_e_1ga6404c558081be21e0f9a95d2ceb26ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BidirectionalService_Register</definition>
        <argsstring>(void)</argsstring>
        <name>BidirectionalService_Register</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Registers the BidirectionalService at the ATT server. </para>        </briefdescription>
        <detaileddescription>
<para>Registers the BidirectionalService at the ATT server. This must be done during the boot phase of the stack.</para><para><simplesect kind="see"><para><ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga8151e909a16f5aa075b42ebcaacb463e" kindref="member">BlePeripheral_ServiceRegistryCallback</ref></para></simplesect>
<simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. Refer <ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref> and <ref refid="group___b_c_d_s___b_l_e_1ga0f2731d56101ae023851508c9293df01" kindref="member">Ble_Retcode_E</ref> for other values.</para></simplesect>
<simplesect kind="note"><para>Bidirectional Services must have been successfully initialized prior to this call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/services/BCDS_BidirectionalService.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___b_i_d_i_r_e_c_t_i_o_n_a_l___s_e_r_v_i_c_e_1ga82d39b7e6afe5777c0e8b12114d43cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BidirectionalService_SendData</definition>
        <argsstring>(uint8_t *payload, uint8_t payloadLen)</argsstring>
        <name>BidirectionalService_SendData</name>
        <param>
          <type>uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>payloadLen</declname>
        </param>
        <briefdescription>
<para>Sends data to the client. </para>        </briefdescription>
        <detaileddescription>
<para>Sends the provided data to the client</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dataToSend</parametername>
</parameternamelist>
<parameterdescription>
<para>The payload to be sent</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dataToSendLen</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the payload to be sent</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. Refer <ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref> and <ref refid="group___b_c_d_s___b_l_e_1ga0f2731d56101ae023851508c9293df01" kindref="member">Ble_Retcode_E</ref> for other values.</para></simplesect>
<simplesect kind="note"><para>Bidirectional Service must have been successfully initialized and registered prior. BidirectionalService_SendEventCallback will be triggered to provide the status of every individual send&apos;s. BidirectionalService_SendData may only be called again, when BidirectionalService_SendEventCallback has been called as a reaction to a previous call of BidirectionalService_SendData. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/services/BCDS_BidirectionalService.h" line="142" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The BCDS bidirectional communication service is a custom service, that provides a raw byte array payload communication. </para>    </briefdescription>
    <detaileddescription>
<para>The BCDS bidirectional communication service is a custom service, that provides a raw byte array payload communication. It offers a single service UUID (0x1B, 0xC5, 0xD5, 0xA5, 0x02, 0x00, 0x97, 0xB7, 0xE6, 0x11, 0xFA, 0x1C, 0xC0, 0x75, 0xE8, 0xB9) with two characteristics: rx characteristic and tx characteristic, which provide the reading and writing of arbitrary byte arrays. </para>    </detaileddescription>
  </compounddef>
</doxygen>
