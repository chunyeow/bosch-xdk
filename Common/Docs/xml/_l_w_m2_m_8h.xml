<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_l_w_m2_m_8h" kind="file">
    <compoundname>LWM2M.h</compoundname>
    <includes refid="_x_d_k___l_w_m2_m_8h" local="yes">XDK_LWM2M.h</includes>
    <includedby refid="_l_w_m2_m_object_barometer_8c" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.c</includedby>
    <includedby refid="_l_w_m2_m_object_connectivity_monitoring_8c" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.c</includedby>
    <includedby refid="_l_w_m2_m_object_device_8c" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.c</includedby>
    <includedby refid="_l_w_m2_m_object_gyroscope_8c" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.c</includedby>
    <includedby refid="_l_w_m2_m_object_humidity_8c" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectHumidity.c</includedby>
    <includedby refid="_l_w_m2_m_object_illuminance_8c" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.c</includedby>
    <includedby refid="_l_w_m2_m_object_light_control_8c" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.c</includedby>
    <includedby refid="_l_w_m2_m_object_magnetometer_8c" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.c</includedby>
    <includedby refid="_l_w_m2_m_object_temperature_8c" local="yes">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectTemperature.c</includedby>
    <incdepgraph>
      <node id="24293">
        <label>stdbool.h</label>
      </node>
      <node id="24296">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="24297" relation="include">
        </childnode>
        <childnode refid="24291" relation="include">
        </childnode>
        <childnode refid="24290" relation="include">
        </childnode>
      </node>
      <node id="24292">
        <label>stdint.h</label>
      </node>
      <node id="24290">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="24291" relation="include">
        </childnode>
      </node>
      <node id="24295">
        <label>stdlib.h</label>
      </node>
      <node id="24288">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h</label>
        <link refid="LWM2M.h"/>
        <childnode refid="24289" relation="include">
        </childnode>
      </node>
      <node id="24298">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="24294">
        <label>string.h</label>
      </node>
      <node id="24297">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="24298" relation="include">
        </childnode>
        <childnode refid="24290" relation="include">
        </childnode>
      </node>
      <node id="24291">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="24292" relation="include">
        </childnode>
        <childnode refid="24293" relation="include">
        </childnode>
        <childnode refid="24294" relation="include">
        </childnode>
        <childnode refid="24295" relation="include">
        </childnode>
      </node>
      <node id="24289">
        <label>XDK_LWM2M.h</label>
        <link refid="_x_d_k___l_w_m2_m_8h"/>
        <childnode refid="24290" relation="include">
        </childnode>
        <childnode refid="24296" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="24302">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.c</label>
        <link refid="_l_w_m2_m_object_device_8c"/>
      </node>
      <node id="24301">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.c</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8c"/>
      </node>
      <node id="24299">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h</label>
        <link refid="LWM2M.h"/>
        <childnode refid="24300" relation="include">
        </childnode>
        <childnode refid="24301" relation="include">
        </childnode>
        <childnode refid="24302" relation="include">
        </childnode>
        <childnode refid="24303" relation="include">
        </childnode>
        <childnode refid="24304" relation="include">
        </childnode>
        <childnode refid="24305" relation="include">
        </childnode>
        <childnode refid="24306" relation="include">
        </childnode>
        <childnode refid="24307" relation="include">
        </childnode>
        <childnode refid="24308" relation="include">
        </childnode>
      </node>
      <node id="24308">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectTemperature.c</label>
        <link refid="_l_w_m2_m_object_temperature_8c"/>
      </node>
      <node id="24305">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.c</label>
        <link refid="_l_w_m2_m_object_illuminance_8c"/>
      </node>
      <node id="24306">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.c</label>
        <link refid="_l_w_m2_m_object_light_control_8c"/>
      </node>
      <node id="24307">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.c</label>
        <link refid="_l_w_m2_m_object_magnetometer_8c"/>
      </node>
      <node id="24304">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectHumidity.c</label>
        <link refid="_l_w_m2_m_object_humidity_8c"/>
      </node>
      <node id="24300">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.c</label>
        <link refid="_l_w_m2_m_object_barometer_8c"/>
      </node>
      <node id="24303">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.c</label>
        <link refid="_l_w_m2_m_object_gyroscope_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_l_w_m2_m_8h_1aeff436dab58e06c672aac9b3dda2073b" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* LWM2M_LedStateChangeHandler_T)(bool state)</definition>
        <argsstring>)(bool state)</argsstring>
        <name>LWM2M_LedStateChangeHandler_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback handler for LED state changes.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>new state of LED. true for LED on, false, for off </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h" line="57" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_l_w_m2_m_8h_1a16fdb62e641390a89f4df75f871acbdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LWM2M_OrangeLedSetState</definition>
        <argsstring>(bool on)</argsstring>
        <name>LWM2M_OrangeLedSetState</name>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
<para>Set state of the orange LED. </para>        </briefdescription>
        <detaileddescription>
<para>Set state of the orange LED and reports that to the associated handler. <simplesect kind="see"><para><ref refid="_l_w_m2_m_8h_1a43f9be6e69340b8373060abfb8994db4" kindref="member">LWM2M_SetOrangeLedStateChangeHandler</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">on</parametername>
</parameternamelist>
<parameterdescription>
<para>state of LED </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h" line="88" column="1"/>
        <referencedby refid="_l_w_m2_m_object_light_control_8c_1a36cc6cc96a2434b70a309caefb24a698" compoundref="_l_w_m2_m_object_light_control_8c" startline="183" endline="186">RW_Orange</referencedby>
      </memberdef>
      <memberdef kind="function" id="_l_w_m2_m_8h_1aec4720c04ba2a025732ee59980c2c750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LWM2M_Reboot</definition>
        <argsstring>(void)</argsstring>
        <name>LWM2M_Reboot</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reboot the device. </para>        </briefdescription>
        <detaileddescription>
<para>When the function is called first, it reboots with a delay of 5s to have time to send a response. Though reboot is sometimes used for undetermined working devices, the delay of 5 s may not work. Therefore, a second call of this function reboots the device immediately (and without sending a response). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h" line="66" column="1"/>
        <referencedby refid="_l_w_m2_m_object_device_8c_1a05affde7049f9f47cb85d67e68184caa" compoundref="_l_w_m2_m_object_device_8c" startline="347" endline="361">deviceRebootFunc</referencedby>
      </memberdef>
      <memberdef kind="function" id="_l_w_m2_m_8h_1aaa0811b78433ef142885da7b81fc2082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LWM2M_RebootNow</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>LWM2M_RebootNow</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Reboots the device. Prints last message and wait before reboot the device, if SERVAL_LOG_LEVEL is at least SERVAL_LOG_LEVEL_ERROR. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>message to be printed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_l_w_m2_m_8h_1a1f3d3d22913d2c312c886abb9395cc8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LWM2M_RedLedSetState</definition>
        <argsstring>(bool on)</argsstring>
        <name>LWM2M_RedLedSetState</name>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
<para>Set state of the red LED. </para>        </briefdescription>
        <detaileddescription>
<para>Set state of the red LED and reports that to the associated handler. <simplesect kind="see"><para><ref refid="_l_w_m2_m_8h_1addec56cdf72e793c7c65096545b2a08e" kindref="member">LWM2M_SetRedLedStateChangeHandler</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">on</parametername>
</parameternamelist>
<parameterdescription>
<para>state of LED </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h" line="77" column="1"/>
        <referencedby refid="_l_w_m2_m_object_light_control_8c_1aec3525d396a6901501bfd98032ef6645" compoundref="_l_w_m2_m_object_light_control_8c" startline="178" endline="181">RW_Red</referencedby>
      </memberdef>
      <memberdef kind="function" id="_l_w_m2_m_8h_1a43f9be6e69340b8373060abfb8994db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LWM2M_SetOrangeLedStateChangeHandler</definition>
        <argsstring>(LWM2M_LedStateChangeHandler_T handler)</argsstring>
        <name>LWM2M_SetOrangeLedStateChangeHandler</name>
        <param>
          <type><ref refid="_l_w_m2_m_8h_1aeff436dab58e06c672aac9b3dda2073b" kindref="member">LWM2M_LedStateChangeHandler_T</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set change handler for orange LED. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>callback for LED state changes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h" line="115" column="1"/>
        <referencedby refid="_l_w_m2_m_object_light_control_8h_1aeb9641cf50264f13850ad6f49e6365b1" compoundref="_l_w_m2_m_object_light_control_8c" startline="196" endline="203">LWM2MObjectLightControl_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="_l_w_m2_m_8h_1addec56cdf72e793c7c65096545b2a08e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LWM2M_SetRedLedStateChangeHandler</definition>
        <argsstring>(LWM2M_LedStateChangeHandler_T handler)</argsstring>
        <name>LWM2M_SetRedLedStateChangeHandler</name>
        <param>
          <type><ref refid="_l_w_m2_m_8h_1aeff436dab58e06c672aac9b3dda2073b" kindref="member">LWM2M_LedStateChangeHandler_T</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set change handler for red LED. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>callback for LED state changes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h" line="107" column="1"/>
        <referencedby refid="_l_w_m2_m_object_light_control_8h_1aeb9641cf50264f13850ad6f49e6365b1" compoundref="_l_w_m2_m_object_light_control_8c" startline="196" endline="203">LWM2MObjectLightControl_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="_l_w_m2_m_8h_1a6e55177e2363441a769a6ba751f5d1d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LWM2M_SetYellowLedStateChangeHandler</definition>
        <argsstring>(LWM2M_LedStateChangeHandler_T handler)</argsstring>
        <name>LWM2M_SetYellowLedStateChangeHandler</name>
        <param>
          <type><ref refid="_l_w_m2_m_8h_1aeff436dab58e06c672aac9b3dda2073b" kindref="member">LWM2M_LedStateChangeHandler_T</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set change handler for yellow LED. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>callback for LED state changes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h" line="123" column="1"/>
        <referencedby refid="_l_w_m2_m_object_light_control_8h_1aeb9641cf50264f13850ad6f49e6365b1" compoundref="_l_w_m2_m_object_light_control_8c" startline="196" endline="203">LWM2MObjectLightControl_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="_l_w_m2_m_8h_1aac28080bfa757040291d39997c741920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LWM2M_YellowLedSetState</definition>
        <argsstring>(bool on)</argsstring>
        <name>LWM2M_YellowLedSetState</name>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
<para>Set state of the yellow LED. </para>        </briefdescription>
        <detaileddescription>
<para>Set state of the yellow LED and reports that to the associated handler. <simplesect kind="see"><para><ref refid="_l_w_m2_m_8h_1a43f9be6e69340b8373060abfb8994db4" kindref="member">LWM2M_SetOrangeLedStateChangeHandler</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">on</parametername>
</parameternamelist>
<parameterdescription>
<para>state of LED </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h" line="99" column="1"/>
        <referencedby refid="_l_w_m2_m_object_light_control_8c_1a9c48514b1662ebd723b8166710ab2609" compoundref="_l_w_m2_m_object_light_control_8c" startline="188" endline="191">RW_Yellow</referencedby>
      </memberdef>
      <memberdef kind="function" id="_l_w_m2_m_8h_1a10bde680f92d419a85f31d752cbe22d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___l_w_m2_m_1ga16484e7e661031ac083e827b121c49c0" kindref="member">LWM2M_Setup_T</ref> *</type>
        <definition>LWM2M_Setup_T* LWM2MGetCredentials</definition>
        <argsstring>(void)</argsstring>
        <name>LWM2MGetCredentials</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h" line="134" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Private header for LWM2M file. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor">#ifndef<sp/>LWM2M_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LWM2M_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_x_d_k___l_w_m2_m_8h" kindref="compound">XDK_LWM2M.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>type<sp/>and<sp/>macro<sp/>definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="_l_w_m2_m_8h_1aeff436dab58e06c672aac9b3dda2073b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_l_w_m2_m_8h_1aeff436dab58e06c672aac9b3dda2073b" kindref="member">LWM2M_LedStateChangeHandler_T</ref>)(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_w_m2_m_8h_1aec4720c04ba2a025732ee59980c2c750" kindref="member">LWM2M_Reboot</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_w_m2_m_8h_1a1f3d3d22913d2c312c886abb9395cc8d" kindref="member">LWM2M_RedLedSetState</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_w_m2_m_8h_1a16fdb62e641390a89f4df75f871acbdf" kindref="member">LWM2M_OrangeLedSetState</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_w_m2_m_8h_1aac28080bfa757040291d39997c741920" kindref="member">LWM2M_YellowLedSetState</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>on);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_w_m2_m_8h_1addec56cdf72e793c7c65096545b2a08e" kindref="member">LWM2M_SetRedLedStateChangeHandler</ref>(<ref refid="_l_w_m2_m_8h_1aeff436dab58e06c672aac9b3dda2073b" kindref="member">LWM2M_LedStateChangeHandler_T</ref><sp/>handler);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_w_m2_m_8h_1a43f9be6e69340b8373060abfb8994db4" kindref="member">LWM2M_SetOrangeLedStateChangeHandler</ref>(<ref refid="_l_w_m2_m_8h_1aeff436dab58e06c672aac9b3dda2073b" kindref="member">LWM2M_LedStateChangeHandler_T</ref><sp/>handler);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_w_m2_m_8h_1a6e55177e2363441a769a6ba751f5d1d4" kindref="member">LWM2M_SetYellowLedStateChangeHandler</ref>(<ref refid="_l_w_m2_m_8h_1aeff436dab58e06c672aac9b3dda2073b" kindref="member">LWM2M_LedStateChangeHandler_T</ref><sp/>handler);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_w_m2_m_8h_1aaa0811b78433ef142885da7b81fc2082" kindref="member">LWM2M_RebootNow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="struct_l_w_m2_m___setup___s" kindref="compound">LWM2M_Setup_T</ref><sp/>*<sp/><ref refid="_l_w_m2_m_8h_1a10bde680f92d419a85f31d752cbe22d6" kindref="member">LWM2MGetCredentials</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>LWM2M_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2M.h"/>
  </compounddef>
</doxygen>
