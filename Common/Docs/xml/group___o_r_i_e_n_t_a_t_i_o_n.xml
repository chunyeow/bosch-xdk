<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="group___o_r_i_e_n_t_a_t_i_o_n" kind="group">
    <compoundname>ORIENTATION</compoundname>
    <title>Orientation</title>
    <innerfile refid="_b_c_d_s___orientation_8h">BCDS_Orientation.h</innerfile>
    <innerclass refid="struct_orientation___euler_data___s" prot="public">Orientation_EulerData_S</innerclass>
    <innerclass refid="struct_orientation___quaternion_data___s" prot="public">Orientation_QuaternionData_S</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___o_r_i_e_n_t_a_t_i_o_n_1gae1737ce60c28bbc8d898aa83a7b4ca2c" prot="public" static="no">
        <name>Orientation_InitStatus_E</name>
        <enumvalue id="group___o_r_i_e_n_t_a_t_i_o_n_1ggae1737ce60c28bbc8d898aa83a7b4ca2ca35894092f74ab3caf18e9ed6a4c57973" prot="public">
          <name>ORIENTATION_SENSOR_UNINITIALISED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Specifies orientation sensor is uninitialised </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___o_r_i_e_n_t_a_t_i_o_n_1ggae1737ce60c28bbc8d898aa83a7b4ca2ca39b94d4a0cb54052eef9dd7024e39765" prot="public">
          <name>ORIENTATION_SENSOR_INITIALISED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Specifies orientation sensor is initialised </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enum values to represent Orientation sensor initialisation status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="88" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" bodystart="87" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___o_r_i_e_n_t_a_t_i_o_n_1gae6e865864966dc0f5f7b5e76f08751c3" prot="public" static="no">
        <type>float</type>
        <definition>typedef float Orientation_DataType_T</definition>
        <argsstring></argsstring>
        <name>Orientation_DataType_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data type used for reading orientation data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="84" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___o_r_i_e_n_t_a_t_i_o_n_1gaca5b217be93b0e0fe2b533f440c3193b" prot="public" static="no">
        <type>struct <ref refid="struct_orientation___euler_data___s" kindref="compound">Orientation_EulerData_S</ref></type>
        <definition>typedef struct Orientation_EulerData_S Orientation_EulerData_T</definition>
        <argsstring></argsstring>
        <name>Orientation_EulerData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="102" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___o_r_i_e_n_t_a_t_i_o_n_1ga9064f936cd76c601c7e786c41c97e39d" prot="public" static="no">
        <type>struct <ref refid="struct_orientation___euler_data___s" kindref="compound">Orientation_EulerData_S</ref> *</type>
        <definition>typedef struct Orientation_EulerData_S * Orientation_EulerDataPtr_T</definition>
        <argsstring></argsstring>
        <name>Orientation_EulerDataPtr_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="112" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___o_r_i_e_n_t_a_t_i_o_n_1ga0eb92ff04f4d56c08a09e3a24cd28b3e" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* Orientation_HandlePtr_T</definition>
        <argsstring></argsstring>
        <name>Orientation_HandlePtr_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the handle for Orientation sensor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="115" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___o_r_i_e_n_t_a_t_i_o_n_1ga803a63351fb900e624a44a4253c8436f" prot="public" static="no">
        <type>enum <ref refid="group___o_r_i_e_n_t_a_t_i_o_n_1gae1737ce60c28bbc8d898aa83a7b4ca2c" kindref="member">Orientation_InitStatus_E</ref></type>
        <definition>typedef enum Orientation_InitStatus_E Orientation_InitStatus_T</definition>
        <argsstring></argsstring>
        <name>Orientation_InitStatus_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="84" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___o_r_i_e_n_t_a_t_i_o_n_1ga906fd8f96b3bd6c693f1f1b58835470d" prot="public" static="no">
        <type>struct <ref refid="struct_orientation___quaternion_data___s" kindref="compound">Orientation_QuaternionData_S</ref></type>
        <definition>typedef struct Orientation_QuaternionData_S Orientation_QuaternionData_T</definition>
        <argsstring></argsstring>
        <name>Orientation_QuaternionData_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="84" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___o_r_i_e_n_t_a_t_i_o_n_1ga886daa811a5a4da25c3b81b543a8b6fe" prot="public" static="no">
        <type>struct <ref refid="struct_orientation___quaternion_data___s" kindref="compound">Orientation_QuaternionData_S</ref> *</type>
        <definition>typedef struct Orientation_QuaternionData_S * Orientation_QuaternionDataPtr_T</definition>
        <argsstring></argsstring>
        <name>Orientation_QuaternionDataPtr_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="102" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___o_r_i_e_n_t_a_t_i_o_n_1gaa7130ee6d5b2c0d7d5e0ae66adea8574" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BCDS_DEPRECATED</definition>
        <argsstring>(Retcode_T Orientation_readQuaternionValue(Orientation_QuaternionDataPtr_T quaternionValue))</argsstring>
        <name>BCDS_DEPRECATED</name>
        <param>
          <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref> </type>
          <declname>Orientation_readQuaternionValue</declname>
          <array>Orientation_QuaternionDataPtr_T quaternionValue</array>
        </param>
        <briefdescription>
<para>Reads orientation quaternion value from the orientation sensor. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000004"><xreftitle>Deprecated</xreftitle><xrefdescription><para>since version v3.0.1, replaced by <ref refid="group___r_o_t_a_t_i_o_n_1gabee3b9ca61b5bba969d9025d14ebc9a2" kindref="member">Rotation_readQuaternionValue</ref></para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">Orientation_QuaternionDataPtr_T</parametername>
</parameternamelist>
<parameterdescription>
<para>quaternionValue, output parameter in which the quaternion value will be written to, from within the function</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbad4c5988e22c0ad0a5d497f1e9448c06d" kindref="member">RETCODE_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reading orientation quaternion value success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbaea901b927978b56cbfae3fa93c3ddfa4" kindref="member">RETCODE_UNINITIALIZED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>If called without initializing the sensor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>In case quaternionValue is a NULL pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next Byte represents Severity and Last 2 LSBytes represents error code). </para></simplesect>
<simplesect kind="note"><para>Pass the return value of this function to #BCDS_getUserErrorCode() API to know the user type return code present in #BCDS_SensorErrorType.h. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___o_r_i_e_n_t_a_t_i_o_n_1gac3f3da6d3eaa4f75fdf7ffc48cff190b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Orientation_deInit</definition>
        <argsstring>(void)</argsstring>
        <name>Orientation_deInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>API to Deinitialise the orientation module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Orientation sensor De-initialization success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" kindref="member">RETCODE_FAILURE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Orientation sensor De-initialization failure</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>This API needs to be called when we require to stop the orientation data reading.</para></simplesect>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next Byte represents Severity and Last 2 LSBytes represents error code). </para></simplesect>
<simplesect kind="note"><para>Pass the return value of this function to #BCDS_getUserErrorCode() API to know the user type return code present in #BCDS_SensorErrorType.h. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___o_r_i_e_n_t_a_t_i_o_n_1ga7d37f740ae578c031eebffd155d19e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Orientation_init</definition>
        <argsstring>(Orientation_HandlePtr_T handle)</argsstring>
        <name>Orientation_init</name>
        <param>
          <type><ref refid="group___o_r_i_e_n_t_a_t_i_o_n_1ga0eb92ff04f4d56c08a09e3a24cd28b3e" kindref="member">Orientation_HandlePtr_T</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Initializes the Orientation sensor.This API should return RETCODE_OK in order to communicate with sensor.This function needs to be called before calling any other function of the Orientation sensor api. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Orientation_HandlePtr_T</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle to the orientation object that should be initialized</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Orientation sensor initialization success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>In case of invalid sensor handle.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Refer #XdkSensorHandle.h for selecting the proper handle. </para></simplesect>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next Byte represents Severity and Last 2 LSBytes represents error code). </para></simplesect>
<simplesect kind="note"><para>Pass the return value of this function to #BCDS_getUserErrorCode() API to know the user type return code present in #BCDS_SensorErrorType.h. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___o_r_i_e_n_t_a_t_i_o_n_1ga206b22a8982bac2f42fde41cde9647fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Orientation_readEulerDegreeVal</definition>
        <argsstring>(Orientation_EulerDataPtr_T eulerValueInDegree)</argsstring>
        <name>Orientation_readEulerDegreeVal</name>
        <param>
          <type><ref refid="group___o_r_i_e_n_t_a_t_i_o_n_1ga9064f936cd76c601c7e786c41c97e39d" kindref="member">Orientation_EulerDataPtr_T</ref></type>
          <declname>eulerValueInDegree</declname>
        </param>
        <briefdescription>
<para>Reads orientation euler value in degrees from the orientation sensor. The degree values vary from 0 to 360. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">Orientation_EulerDataPtr_T</parametername>
</parameternamelist>
<parameterdescription>
<para>eulerValueInDegree, output parameter in which the euler value in degrees will be written to, from within the function</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbad4c5988e22c0ad0a5d497f1e9448c06d" kindref="member">RETCODE_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reading orientation euler value in degrees success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbaea901b927978b56cbfae3fa93c3ddfa4" kindref="member">RETCODE_UNINITIALIZED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>If called without initializing the sensor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>In case eulerValueInDegre is a NULL pointer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next Byte represents Severity and Last 2 LSBytes represents error code). </para></simplesect>
<simplesect kind="note"><para>Pass the return value of this function to #BCDS_getUserErrorCode() API to know the user type return code present in #BCDS_SensorErrorType.h. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___o_r_i_e_n_t_a_t_i_o_n_1gacde31626f0dac27b56b6c02f4b10b77e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T Orientation_readEulerRadianVal</definition>
        <argsstring>(Orientation_EulerDataPtr_T eulerValueInRadian)</argsstring>
        <name>Orientation_readEulerRadianVal</name>
        <param>
          <type><ref refid="group___o_r_i_e_n_t_a_t_i_o_n_1ga9064f936cd76c601c7e786c41c97e39d" kindref="member">Orientation_EulerDataPtr_T</ref></type>
          <declname>eulerValueInRadian</declname>
        </param>
        <briefdescription>
<para>Reads orientation euler value in radians from the orientation sensor. The radian values vary from 0 to 6.28 (2*pi) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">Orientation_EulerDataPtr_T</parametername>
</parameternamelist>
<parameterdescription>
<para>eulerValueInRadian, output parameter in which the euler value in radians will be written to, from within the function</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbad4c5988e22c0ad0a5d497f1e9448c06d" kindref="member">RETCODE_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Reading orientation euler value in radians success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbaea901b927978b56cbfae3fa93c3ddfa4" kindref="member">RETCODE_UNINITIALIZED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>If called without initializing the sensor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>In case eulerValueInRadian is a NULL pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next Byte represents Severity and Last 2 LSBytes represents error code). </para></simplesect>
<simplesect kind="note"><para>Pass the return value of this function to #BCDS_getUserErrorCode() API to know the user type return code present in #BCDS_SensorErrorType.h. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorToolbox/include/BCDS_Orientation.h" line="169" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Orientation Sensor based on BMI160 and BMM150. </para>    </briefdescription>
    <detaileddescription>
<para>In geometry, the orientation of an object (such as a line, plane or rigid body) is part of the description of how it is placed in the space it is in. <linebreak/>
 Orientation sensor is applied to detect direction status of the device in two or three dimensions. <linebreak/>
 Certain methods to describe orientations of a rigid body in three dimensions have been developed. <linebreak/>
 They are as follows :</para><para><bold>EULER</bold> <bold>ANGLES</bold> <bold></bold>:</para><para>To describe an orientation in 3-dimensional Euclidean space, three parameters are required. <linebreak/>
 They can be given in several ways, Euler angles being one of them, which describes the orientation of a frame of reference (typically, a coordinate system or basis) relative to another. <linebreak/>
 They are represented by <bold>heading</bold> (rotation around the Z-axis), <bold>pitch</bold> (rotation around the X-axis) and <bold>roll</bold> (rotation around the Y-axis). <linebreak/>
 Euler Angles can be represented in <emphasis>degrees</emphasis> or in <emphasis>radians</emphasis>.</para><para><bold>QUATERNION</bold> <bold></bold>:</para><para>Unit quaternion provides a convenient mathematical notation for representing orientations and rotations of objects in three dimensions. <linebreak/>
 A quaternion represents two things. It has an x, y and z component, which represents the axis about which a rotation will occur. <linebreak/>
 It also has a w component, which represents the amount of rotation which will occur about this axis.</para><para>Quaternion is represented by vector q(q[0],q[1],q[2],q[3]) where in, <bold>q</bold>[0] <bold>=</bold> <bold>cos</bold>(θ/2) , <bold>q</bold>[1] <bold>=</bold> <bold>u</bold> <bold>*</bold> <bold>sin</bold>(θ/2) , <bold>q</bold>[2] <bold>=</bold> <bold>v</bold> <bold>*</bold> <bold>sin</bold>(θ/2) , <bold>q</bold>[3] <bold>=</bold> <bold>w</bold> <bold>*</bold> <bold>sin</bold>(θ/2) ( [u,v,w] is the unit vector parallel to rotation axis )</para><para><bold>Orientation</bold> <bold>Calibration</bold> <bold>method</bold> : <linebreak/>
 Orientation calibration should be done by leaving the device in flat position a few seconds (for gyroscope calibration) and then making the &apos;8&apos; figure motion (for magnetometer calibration) as in <ulink url="https://www.youtube.com/watch?v=sP3d00Hr14o">https://www.youtube.com/watch?v=sP3d00Hr14o</ulink>. <linebreak/>
 &apos;8&apos; figure motion may be done more than once (maybe 5 times) for a proper calibration.</para><para><bold>Limitations</bold> <bold>of</bold> <bold>orientation</bold> <bold></bold>: <linebreak/>
This sensor cannot be used while using virtual sensor fingerPrint. </para>    </detaileddescription>
  </compounddef>
</doxygen>
