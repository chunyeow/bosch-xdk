<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l" kind="group">
    <compoundname>BCDS_BLE_PERIPHERAL</compoundname>
    <title>BLE Peripheral</title>
    <innerfile refid="_b_c_d_s___ble_peripheral_8h">BCDS_BlePeripheral.h</innerfile>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga4d676f8735fe285543171f95db08c445" prot="public" static="no">
        <name>Ble_PeripheralEvent_E</name>
        <enumvalue id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gga4d676f8735fe285543171f95db08c445ac4e4479392a1444b912200b7e1c12240" prot="public">
          <name>BLE_PERIPHERAL_STARTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event indicating that the peripheral has been started and entered sleep mode </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gga4d676f8735fe285543171f95db08c445aa759513e4385848da1cc3e9d742b96de" prot="public">
          <name>BLE_PERIPHERAL_SERVICES_REGISTERED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This event indicates that the required services have been registered successfully </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gga4d676f8735fe285543171f95db08c445a50d5ab2121e7254bad9f087f897e5e62" prot="public">
          <name>BLE_PERIPHERAL_SLEEP_SUCCEEDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event indicating that the peripheral has entered sleep mode </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gga4d676f8735fe285543171f95db08c445a4f02577c686c40c18d00abfc3e97c6d7" prot="public">
          <name>BLE_PERIPHERAL_WAKEUP_SUCCEEDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event indicating that the peripheral has entered woken up from sleep and is ready for user interaction </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gga4d676f8735fe285543171f95db08c445afd9d4e56036c5b1ff3312e46293625cf" prot="public">
          <name>BLE_PERIPHERAL_CONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event indicating that a connection to an external device has been established </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gga4d676f8735fe285543171f95db08c445a8e7ad433df5911c845a37fed0e58658c" prot="public">
          <name>BLE_PERIPHERAL_DISCONNECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event indicating that a connection to an external device has been terminated </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gga4d676f8735fe285543171f95db08c445ac67d5c18f69e126aaa153b3d54d80928" prot="public">
          <name>BLE_PERIPHERAL_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Event indicating that an error has occured </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gga4d676f8735fe285543171f95db08c445aa738c5c324f6235545093aef6506728f" prot="public">
          <name>BLE_PERIPHERAL_EVENT_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Defines boundary of BLE events </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration to represent the Bluetooth peripheral events. </para>        </briefdescription>
        <detaileddescription>
<para>Enumeration to represent the Bluetooth peripheral events. They will be provided through <ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gab690b4c85b7b3e6e4d4a7a11eb0e646d" kindref="member">BlePeripheral_EventCallback</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="210" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" bodystart="209" bodyend="219"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gae72aee055dc7b4740a845090e9fc6d97" prot="public" static="no">
        <type>enum <ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga4d676f8735fe285543171f95db08c445" kindref="member">Ble_PeripheralEvent_E</ref></type>
        <definition>typedef enum Ble_PeripheralEvent_E BlePeripheral_Event_T</definition>
        <argsstring></argsstring>
        <name>BlePeripheral_Event_T</name>
        <briefdescription>
<para>Typedef to represent the Bluetooth peripheral event. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="151" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gab690b4c85b7b3e6e4d4a7a11eb0e646d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* BlePeripheral_EventCallback)(BlePeripheral_Event_T event, void *data)</definition>
        <argsstring>)(BlePeripheral_Event_T event, void *data)</argsstring>
        <name>BlePeripheral_EventCallback</name>
        <briefdescription>
<para>Callback function signature to be called when the BLE stack changes its state. </para>        </briefdescription>
        <detaileddescription>
<para>Callback function signature to be called when the BLE stack changes its state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event that has occurred.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>void pointer pointing to a data type with further information based on the event.</para></parameterdescription>
</parameteritem>
</parameterlist>
<table rows="8" cols="2"><row>
<entry thead="yes"><para>event </para></entry><entry thead="yes"><para>data type  </para></entry></row>
<row>
<entry thead="no"><para>BLE_PERIPHERAL_STARTED </para></entry><entry thead="no"><para>Retcode_T </para></entry></row>
<row>
<entry thead="no"><para>BLE_PERIPHERAL_SERVICES_REGISTERED </para></entry><entry thead="no"><para>unused </para></entry></row>
<row>
<entry thead="no"><para>BLE_PERIPHERAL_SLEEP_SUCCEEDED </para></entry><entry thead="no"><para>Retcode_T </para></entry></row>
<row>
<entry thead="no"><para>BLE_PERIPHERAL_WAKEUP_SUCCEEDED </para></entry><entry thead="no"><para>Retcode_T </para></entry></row>
<row>
<entry thead="no"><para>BLE_PERIPHERAL_CONNECTED </para></entry><entry thead="no"><para>Ble_RemoteDeviceAddress_T </para></entry></row>
<row>
<entry thead="no"><para>BLE_PERIPHERAL_DISCONNECTED </para></entry><entry thead="no"><para>Ble_RemoteDeviceAddress_T </para></entry></row>
<row>
<entry thead="no"><para>BLE_PERIPHERAL_ERROR </para></entry><entry thead="no"><para>Retcode_T </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="248" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga8151e909a16f5aa075b42ebcaacb463e" prot="public" static="no">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref>(*</type>
        <definition>typedef Retcode_T(* BlePeripheral_ServiceRegistryCallback)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>BlePeripheral_ServiceRegistryCallback</name>
        <briefdescription>
<para>Callback function definition to be called in order to register the BLE services the application wants to use. </para>        </briefdescription>
        <detaileddescription>
<para>Callback function definition to be called in order to register the BLE services the application wants to use. This function will be called after the application has called <ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gac778c65cbb6bf746eb70aee00cd4caea" kindref="member">BlePeripheral_Start</ref>. It has to be implemented by the application implementer. Within this function, all services that the application requires have to be registered with the Alpwise stack using the <ref refid="attserver_8h" kindref="compound">attserver.h</ref> interface.</para><para><simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. Refer <ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref> and <ref refid="group___b_c_d_s___b_l_e_1ga0f2731d56101ae023851508c9293df01" kindref="member">Ble_Retcode_E</ref> for other values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="259" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gaaf20f4f28bf6eef19d017759ff7470c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BlePeripheral_Deinitialize</definition>
        <argsstring>(void)</argsstring>
        <name>BlePeripheral_Deinitialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>De-initializes the BLE stack, corresponding resources and modules. </para>        </briefdescription>
        <detaileddescription>
<para>De-initializes the BLE stack, corresponding resources and modules.</para><para><simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. Refer <ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref> and <ref refid="group___b_c_d_s___b_l_e_1ga0f2731d56101ae023851508c9293df01" kindref="member">Ble_Retcode_E</ref> for other values.</para></simplesect>
<simplesect kind="warning"><para>The implementation is pending. Do not expect the module to re-initialize again (calling BlePeripheral_Initialize after calling Ble_Deinitialize). Do not make use of this API. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="370" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga37432af8b3ca564cfff593df8478bb52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t BlePeripheral_GetBleTaskStackHighwaterMark</definition>
        <argsstring>(void)</argsstring>
        <name>BlePeripheral_GetBleTaskStackHighwaterMark</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the BLE peripheral task stack high water mark. </para>        </briefdescription>
        <detaileddescription>
<para>Gets the BLE peripheral task stack high water mark</para><para><simplesect kind="return"><para>The BLE task stack high water mark value.</para></simplesect>
<simplesect kind="see"><para><ref refid="task_8h_1a799967af01d328132cde814e47733437" kindref="member">uxTaskGetStackHighWaterMark</ref> from FreeRTOS </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gaa2eea2eabeb60f07785bb527d17add46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t BlePeripheral_GetConnectionHandle</definition>
        <argsstring>(void)</argsstring>
        <name>BlePeripheral_GetConnectionHandle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Gets the Connection handle. </para>        </briefdescription>
        <detaileddescription>
<para>Gets the Connection handle for the current connection or 0 if the device is currently not connected.</para><para><simplesect kind="return"><para>The Connection Handle value. 0 if the device is not connected. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="378" column="1"/>
        <referencedby refid="_grid_eye_service_8c_1a9ea933926fbca9369d8f65ddc2098515" compoundref="_grid_eye_service_8c" startline="363" endline="434">GridEyeService_SendData</referencedby>
        <referencedby refid="group___b_c_d_s___b_l_e___s_e_n_s_o_r___s_e_r_v_i_c_e_s_1gab2cac8a8afcdab504e7ec7e1f45c02cb" compoundref="_sensor_services_8c" startline="1582" endline="1645">SensorServices_SendData</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga06b3f6e3cac8ffd7fb38b63eab7752f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BlePeripheral_Initialize</definition>
        <argsstring>(BlePeripheral_EventCallback callBackOnEvent, BlePeripheral_ServiceRegistryCallback serviceRegistryCallback)</argsstring>
        <name>BlePeripheral_Initialize</name>
        <param>
          <type><ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gab690b4c85b7b3e6e4d4a7a11eb0e646d" kindref="member">BlePeripheral_EventCallback</ref></type>
          <declname>callBackOnEvent</declname>
        </param>
        <param>
          <type><ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga8151e909a16f5aa075b42ebcaacb463e" kindref="member">BlePeripheral_ServiceRegistryCallback</ref></type>
          <declname>serviceRegistryCallback</declname>
        </param>
        <briefdescription>
<para>Initializes the BLE Peripheral module. </para>        </briefdescription>
        <detaileddescription>
<para>Initializes the BLE Peripheral module, i.e. required resources (task, semaphores, queues, etc.) will be created and initialized.</para><para><simplesect kind="note"><para><orderedlist>
<listitem><para>This API shall be called only once.</para></listitem><listitem><para>It will return failure when called the second time.</para></listitem></orderedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callBackOnEvent</parametername>
</parameternamelist>
<parameterdescription>
<para>Registration of callback function for notification of BLE events.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">serviceRegistryCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>Registration of callback function used to register the services the application wants to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. Refer <ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref> and <ref refid="group___b_c_d_s___b_l_e_1ga0f2731d56101ae023851508c9293df01" kindref="member">Ble_Retcode_E</ref> for other values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gae92aa333085732a958c85e976e657edb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BlePeripheral_SetDeviceName</definition>
        <argsstring>(uint8_t *name)</argsstring>
        <name>BlePeripheral_SetDeviceName</name>
        <param>
          <type>uint8_t *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets the device name which will be visible to scanning devices. </para>        </briefdescription>
        <detaileddescription>
<para>Sets the device name which will be visible to scanning devices.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable containing the device name. The value must be null terminated and should not exceed 21 bytes.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. Refer <ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref> and <ref refid="group___b_c_d_s___b_l_e_1ga0f2731d56101ae023851508c9293df01" kindref="member">Ble_Retcode_E</ref> for other values.</para></simplesect>
<simplesect kind="note"><para>This function must be called before BlePeripheral_Start in order to be effective. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gae8c57ae210071f514afa7726afab0d3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BlePeripheral_SetMacAddress</definition>
        <argsstring>(uint64_t macAddress)</argsstring>
        <name>BlePeripheral_SetMacAddress</name>
        <param>
          <type>uint64_t</type>
          <declname>macAddress</declname>
        </param>
        <briefdescription>
<para>Sets the MAC address of the device. </para>        </briefdescription>
        <detaileddescription>
<para>Sets the MAC address of the device.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">macAddress</parametername>
</parameternamelist>
<parameterdescription>
<para>the MAC address that should be used for this device.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. Refer <ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref> and <ref refid="group___b_c_d_s___b_l_e_1ga0f2731d56101ae023851508c9293df01" kindref="member">Ble_Retcode_E</ref> for other values.</para></simplesect>
<simplesect kind="note"><para>This function must be called before BlePeripheral_Start in order to be effective and macAddress parameters are purpose to BOSCH OUI ID of FC-D6-BD , So that macAddress should starts with &quot;FC-D6-BD&quot; OUI if not, macAddress will be Randomly Generated for ex: XX-XX-XX-XX-XX-XX. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga90ef9541fb40bbba081054ecd9c29b37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BlePeripheral_Sleep</definition>
        <argsstring>(void)</argsstring>
        <name>BlePeripheral_Sleep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sets the BLE peripheral into SLEEP mode. </para>        </briefdescription>
        <detaileddescription>
<para>Sets the BLE peripheral into SLEEP mode</para><para><simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. Refer <ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref> and <ref refid="group___b_c_d_s___b_l_e_1ga0f2731d56101ae023851508c9293df01" kindref="member">Ble_Retcode_E</ref> for other values.</para></simplesect>
<simplesect kind="note"><para>BLE_PERIPHERAL_SLEEP_SUCCEEDED will be received in the BlePeripheral_EventCallback. Until it is received, neither BlePeripheral_Sleep nor BlePeripheral_Wakeup shall be triggered. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gac778c65cbb6bf746eb70aee00cd4caea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BlePeripheral_Start</definition>
        <argsstring>(void)</argsstring>
        <name>BlePeripheral_Start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Starts the BLE module as a peripheral. </para>        </briefdescription>
        <detaileddescription>
<para>Starts the BLE module as a peripheral.</para><para><simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. Refer <ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref> and <ref refid="group___b_c_d_s___b_l_e_1ga0f2731d56101ae023851508c9293df01" kindref="member">Ble_Retcode_E</ref> for other values.</para></simplesect>
<simplesect kind="note"><para>This function initializes the underlying layers and the radio chip to a working state and then switches the radio to sleep mode. Wait and sync for BLE_PERIPHERAL_STARTED event callBack (BlePeripheral_EventCallback) registered at the time of BlePeripheral_Initialize API trigger. The device is in the same state as in BLE_PERIPHERAL_SLEEP_SUCCEEDED event upon receiving BLE_PERIPHERAL_STARTED event. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga2fc5db2f8b3b738a8206a3d12e30c1f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BlePeripheral_Wakeup</definition>
        <argsstring>(void)</argsstring>
        <name>BlePeripheral_Wakeup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Wakes up the BLE peripheral and makes it discoverable. </para>        </briefdescription>
        <detaileddescription>
<para>Wakes up the BLE peripheral and makes it discoverable.</para><para><simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. Refer <ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref> and <ref refid="group___b_c_d_s___b_l_e_1ga0f2731d56101ae023851508c9293df01" kindref="member">Ble_Retcode_E</ref> for other values.</para></simplesect>
<simplesect kind="note"><para>BLE_PERIPHERAL_WAKEUP_SUCCEEDED will be received in the BlePeripheral_EventCallback. Until it is received, neither BlePeripheral_Sleep nor BlePeripheral_Wakeup shall be triggered. Once the BLE_PERIPHERAL_WAKEUP_SUCCEEDED event is received, the BLE peripheral will advertise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BLE/include/BCDS_BlePeripheral.h" line="357" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This module provides a convenient abstraction to use a device as BLE Peripheral. </para>    </briefdescription>
    <detaileddescription>
<para>A BLE Peripheral is a device that can be discovered and connected by a central device, e.g. a smartphone. There are several applications for Andoid and iOS available in the respective stores that allow to search for nearby BLE peripherals, connect to them and use their services.</para><para>This implementation integrates and uses the Alpwise BLE stack. Related documentation is available in the respective library path. It provides several standard Bluetooth Profile and Service implementations, such as Heart Rate Monitor etc.</para><para>The supported radio chip is the EM9301.</para><para>A typical application flow of an application based on this module is summarized below:<orderedlist>
<listitem><para>Initialization with event and service registration callbacks</para></listitem><listitem><para>Set the necessary peripheral properties such as name and MAC address</para></listitem><listitem><para>Start (the device will be in sleep mode initially in order to save power)</para></listitem><listitem><para>Wakeup</para></listitem><listitem><para>Use the services API of the registered services to Send &amp; Receive data if connected</para></listitem><listitem><para>Sleep in order to save power</para></listitem><listitem><para>repeat steps 4.-6.</para></listitem><listitem><para>Deinitialize</para></listitem></orderedlist>
</para><para>Example:</para><para><programlisting><codeline><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___basics_8h" kindref="compound">BCDS_Basics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___retcode_8h" kindref="compound">BCDS_Retcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BluetoothPeripheral_BasicExample()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>deviceName[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MyPeripheral&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">uint64_t<sp/>macAdress<sp/>=<sp/>UINT64_C(0x12345678);</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>dataToSend[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;BCDS&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>dataToSendLen<sp/>=<sp/>UINT8_C(4);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga06b3f6e3cac8ffd7fb38b63eab7752f0" kindref="member">BlePeripheral_Initialize</ref>(EventCallBack,<sp/>ServiceRegistrationCallBack);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>ServiceRegistrationCallBack<sp/>initialize<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>register<sp/>all<sp/>services<sp/>that<sp/>should<sp/>be<sp/>available<sp/>to<sp/>the<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Currently<sp/>this<sp/>package<sp/>supports<sp/>two<sp/>services<sp/>:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>BCDS<sp/>Bidirectional<sp/>Service</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Additionally<sp/>the<sp/>service<sp/>implementations<sp/>of<sp/>Alpwise<sp/>can<sp/>be<sp/>used<sp/>as<sp/>well<sp/>as<sp/>custom<sp/>services<sp/>(see<sp/>e.g.<sp/>the<sp/>BCDS<sp/>Bidirectional<sp/>Service<sp/>as<sp/>example).</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gae92aa333085732a958c85e976e657edb" kindref="member">BlePeripheral_SetDeviceName</ref>(deviceName);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gae8c57ae210071f514afa7726afab0d3f" kindref="member">BlePeripheral_SetMacAddress</ref>(macAdress);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1gac778c65cbb6bf746eb70aee00cd4caea" kindref="member">BlePeripheral_Start</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>BLE_PERIPHERAL_STARTED<sp/>event<sp/>is<sp/>received<sp/>in<sp/>the<sp/>EventCallBack.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>device<sp/>is<sp/>now<sp/>in<sp/>sleep<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>background<sp/>the<sp/>ServiceRegistrationCallBack<sp/>will<sp/>be<sp/>called<sp/>and<sp/>on<sp/>success<sp/>triggers</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>BLE_PERIPHERAL_SERVICES_REGISTERED<sp/>event<sp/>to<sp/>be<sp/>received<sp/>in<sp/>the<sp/>EventCallBack.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>example,<sp/>both<sp/>&quot;data<sp/>send<sp/>complete&quot;<sp/>and<sp/>&quot;data<sp/>receive&quot;<sp/>callback<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>registered<sp/>at<sp/>the<sp/>time<sp/>of<sp/>service<sp/>initialization.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>after<sp/>the<sp/>BluetoothPeripheral_BasicExample<sp/>function<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>reference<sp/>implementation<sp/>for<sp/>ServiceRegistrationCallBack.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga2fc5db2f8b3b738a8206a3d12e30c1f6" kindref="member">BlePeripheral_Wakeup</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>the<sp/>BLE_PERIPHERAL_WAKEUP_SUCCEEDED<sp/>event<sp/>is<sp/>received<sp/>in<sp/>EventCallBack.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>device<sp/>has<sp/>entered<sp/>advertising<sp/>state<sp/>now<sp/>and<sp/>can<sp/>be<sp/>discovered<sp/>and<sp/>connected<sp/>by<sp/>a<sp/>central<sp/>device,<sp/>e.g.<sp/>a<sp/>Smartphone<sp/>with<sp/>BLE<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Once<sp/>the<sp/>central<sp/>device<sp/>connects,<sp/>the<sp/>BLE_PERIPHERAL_CONNECTED<sp/>event<sp/>will<sp/>be<sp/>received<sp/>with<sp/>#Ble_RemoteDeviceAddress_T</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>parameter<sp/>in<sp/>EventCallBack.<sp/>Now<sp/>you<sp/>are<sp/>ready<sp/>to<sp/>communicate<sp/>with<sp/>the<sp/>connected<sp/>remote<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">BlePeripheralService_SendData(dataToSend,<sp/>dataToSendLen)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>RETCODE_OK<sp/>as<sp/>parameter<sp/>in<sp/>callback<sp/>registered<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>time<sp/>of<sp/>service<sp/>initialization<sp/>to<sp/>confirm<sp/>successful<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>send<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>BLE_PERIPHERAL_DISCONNECTED<sp/>event<sp/>is<sp/>received<sp/>in<sp/>EventCallBack,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>further<sp/>communications<sp/>will<sp/>not<sp/>be<sp/>supported<sp/>until<sp/>a<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>connection<sp/>is<sp/>available.<sp/>The<sp/>device<sp/>will<sp/>stay<sp/>in<sp/>advertising<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>until<sp/>BlePeripheral_Sleep<sp/>is<sp/>triggered.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___b_c_d_s___b_l_e___p_e_r_i_p_h_e_r_a_l_1ga90ef9541fb40bbba081054ecd9c29b37" kindref="member">BlePeripheral_Sleep</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>BLE_PERIPHERAL_SLEEP_SUCCEEDED<sp/>event<sp/>in<sp/>EventCallBack.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>device<sp/>now<sp/>has<sp/>entered<sp/>deep<sp/>sleep<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>this<sp/>is<sp/>called<sp/>during<sp/>an<sp/>active<sp/>connection,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>BLE_PERIPHERAL_DISCONNECTED<sp/>event<sp/>with<sp/>Ble_RemoteDeviceAddress_T</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>parameter<sp/>will<sp/>be<sp/>received<sp/>before<sp/>BLE_PERIPHERAL_SLEEP_SUCCEEDED<sp/>in<sp/>the<sp/>EventCallBack.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>ServiceRegistrationCallBack()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BIDIRECTIONAL_SERVICE</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___b_c_d_s___b_l_e___b_i_d_i_r_e_c_t_i_o_n_a_l___s_e_r_v_i_c_e_1gac78d59b7026264423eb6d18a8594602f" kindref="member">BidirectionalService_Init</ref>(readCallback,<sp/>sendCallBack);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>readCallback<sp/>will<sp/>be<sp/>triggered<sp/>upon<sp/>reception<sp/>of<sp/>input<sp/>packets.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>sendCallBack<sp/>will<sp/>be<sp/>triggered<sp/>upon<sp/>every<sp/>single.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>BidirectionalService_SendData<sp/>trigger<sp/>to<sp/>notify<sp/>the<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="group___b_c_d_s___b_l_e___b_i_d_i_r_e_c_t_i_o_n_a_l___s_e_r_v_i_c_e_1ga6404c558081be21e0f9a95d2ceb26ee1" kindref="member">BidirectionalService_Register</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>Register<sp/>the<sp/>Bi-directional<sp/>Service.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>BidirectionalService_SendData<sp/>further<sp/>to<sp/>send<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BIDIRECTIONAL_SERVICE</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CUSTOM_SERVICE</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">CustomServices_Init(readCallback,<sp/>sendCallBack);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>readCallback<sp/>will<sp/>be<sp/>triggered<sp/>upon<sp/>reception<sp/>of<sp/>input<sp/>packets.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>sendCallBack<sp/>will<sp/>be<sp/>triggered<sp/>upon<sp/>every<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>CustomServices_SendData<sp/>trigger<sp/>to<sp/>notify<sp/>the<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">CustomServices_Register();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>Register<sp/>the<sp/>Interface<sp/>user&apos;s<sp/>Service.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>CustomServices_SendData<sp/>further<sp/>to<sp/>send<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>CUSTOM_SERVICE</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref>;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>CUSTOM_SERVICE</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implement<sp/>CustomServices_Init,<sp/>CustomServices_Register<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>CustomServices_SendData<sp/>as<sp/>per<sp/>application<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>CUSTOM_SERVICE</highlight></codeline>
</programlisting></para><para><simplesect kind="note"><para><orderedlist>
<listitem><para>Minimum initial connection interval time is defined as 30mSec.(<ref refid="_ble_gap_8h" kindref="compound">BleGap.h</ref>)</para></listitem><listitem><para>The Latency for mode transition INITIALIZATION -&gt; START is ~ 16mSec, for SLEEP -&gt; WAKEUP ~ 2.7mSec.</para></listitem><listitem><para>BlePeripheral_Start must be called only once after initialization. The calling thread must have lesser priority than the BLE peripheral thread. The priority of BLE peripheral thread is defined using the macro BLE_TASK_PRIORITY in package configuration header file (<ref refid="_b_c_d_s___bluetooth_config_8h" kindref="compound">BCDS_BluetoothConfig.h</ref>).</para></listitem><listitem><para>If de-initialized, then after initialization BLE start shall be called once again.</para></listitem><listitem><para>After BlePeripheral_Start, the Alpwise stack will be initialized and the radio will be in sleep mode. The BLE_PERIPHERAL_STARTED event will be provided upon successful initialization through BlePeripheral_EventCallback.</para></listitem><listitem><para>After successful BlePeripheral_Start, only BlePeripheral_Wakeup and BlePeripheral_Sleep may be called.</para></listitem><listitem><para>After BlePeripheral_Wakeup, it takes ~50mSec for device to be discoverable.</para></listitem><listitem><para>BLE device is no longer discoverable after entering to SLEEP and vice-versa for WAKEUP.</para></listitem><listitem><para>Upon SLEEP trigger, if the BLE device was previously connected, it would disconnect (providing event) and then enter the SLEEP mode.</para></listitem><listitem><para>Upon SLEEP and WAKEUP trigger we must wait atleast 1 ms before triggering the next power control successfully. It is expected to be synchronized with the corresponding events.</para></listitem><listitem><para>All the SLEEP and WAKEUP trigger operation status will be updated through BLE_PERIPHERAL_SLEEP_SUCCEEDED and BLE_PERIPHERAL_WAKEUP_SUCCEEDED event notification via BLE event callback that would have been registered at the time of initialization.</para></listitem><listitem><para>For all the SLEEP and WAKEUP triggers, application must wait / sync with the events before triggering further operations. </para></listitem></orderedlist>
</para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
