<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_b_s_p___u_s_b_8c" kind="file">
    <compoundname>BSP_USB.c</compoundname>
    <includes refid="_b_c_d_s___b_s_p_8h" local="yes">BCDS_BSP.h</includes>
    <includes refid="_b_c_d_s___h_a_l_8h" local="yes">BCDS_HAL.h</includes>
    <incdepgraph>
      <node id="35564">
        <label>stdbool.h</label>
      </node>
      <node id="35569">
        <label>BCDS_HALConfig.h</label>
        <link refid="_b_c_d_s___h_a_l_config_8h"/>
      </node>
      <node id="35563">
        <label>stdint.h</label>
      </node>
      <node id="35561">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="35562" relation="include">
        </childnode>
      </node>
      <node id="35566">
        <label>stdlib.h</label>
      </node>
      <node id="35559">
        <label>SDK/xdk110/Platform/BSP/source/BSP_USB.c</label>
        <link refid="BSP_USB.c"/>
        <childnode refid="35560" relation="include">
        </childnode>
        <childnode refid="35568" relation="include">
        </childnode>
      </node>
      <node id="35565">
        <label>string.h</label>
      </node>
      <node id="35562">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="35563" relation="include">
        </childnode>
        <childnode refid="35564" relation="include">
        </childnode>
        <childnode refid="35565" relation="include">
        </childnode>
        <childnode refid="35566" relation="include">
        </childnode>
      </node>
      <node id="35568">
        <label>BCDS_HAL.h</label>
        <link refid="_b_c_d_s___h_a_l_8h"/>
        <childnode refid="35561" relation="include">
        </childnode>
        <childnode refid="35569" relation="include">
        </childnode>
      </node>
      <node id="35560">
        <label>BCDS_BSP.h</label>
        <link refid="_b_c_d_s___b_s_p_8h"/>
        <childnode refid="35561" relation="include">
        </childnode>
        <childnode refid="35567" relation="include">
        </childnode>
      </node>
      <node id="35567">
        <label>BCDS_Essentials.h</label>
        <link refid="_b_c_d_s___essentials_8h"/>
        <childnode refid="35563" relation="include">
        </childnode>
        <childnode refid="35564" relation="include">
        </childnode>
        <childnode refid="35565" relation="include">
        </childnode>
        <childnode refid="35566" relation="include">
        </childnode>
        <childnode refid="35568" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_b_s_p___u_s_b_8c_1abff8f3a204e79671b98fabaa652198c3" prot="public" static="no">
        <name>BCDS_MODULE_ID</name>
        <initializer><ref refid="_b_c_d_s___b_s_p_8h_1a557f5b440a4210273c8cae4a124c4084a58ea3fda7c37a8bdb81d4381923c8db1" kindref="member">BCDS_BSP_MODULE_ID_USB</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BSP/source/BSP_USB.c" line="50" column="10" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BSP/source/BSP_USB.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This module takes care of USB initialization , USB scanning and printing to USB API&apos;s. USB communications device class (or USB CDC) is a composite Universal Serial Bus device class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">/*<sp/>module<sp/>includes<sp/>**********************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___b_s_p_8h" kindref="compound">BCDS_BSP.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>system<sp/>header<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BCDS_MODULE_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="_b_s_p___u_s_b_8c_1abff8f3a204e79671b98fabaa652198c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCDS_MODULE_ID<sp/>BCDS_BSP_MODULE_ID_USB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___h_a_l_8h" kindref="compound">BCDS_HAL.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BCDS_FEATURE_BSP_USB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>additional<sp/>interface<sp/>header<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;em_device.h&quot;</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor">#if<sp/>defined(<sp/>USB_PRESENT<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>USB_COUNT<sp/>==<sp/>1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BCDS_MODULE_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCDS_MODULE_ID<sp/><sp/>BCDS_HAL_MODULE_ID_USB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___assert_8h" kindref="compound">BCDS_Assert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;em_usb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___u_s_b_8h" kindref="compound">BCDS_USB.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_s_p___u_s_b___descriptors_8h" kindref="compound">BSP_USB_Descriptors.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_s_p___board_shared_8h" kindref="compound">BSP_BoardShared.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>local<sp/>prototypes<sp/>*********************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USB_TX_RX_BUF_SIZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UINT16_C(256)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor">static<sp/>UBUF(<sp/>USB_usbRxBuffer_mau,<sp/>USB_TX_RX_BUF_SIZE<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>USB_dataReceivedCallback(USB_Status_TypeDef<sp/>status,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bytesReceived,<sp/>uint32_t<sp/>remainingBytes);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>USB_dataTransferred(USB_Status_TypeDef<sp/>status,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bytesTransfered,<sp/>uint32_t<sp/>remainingBytes);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">uint8_t<sp/>*USB_usbbuffer_gpu<sp/>=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_c_d_s___u_s_b_8h_1a53403a699c7192f8c36dd19fd2fb0097" kindref="member">USB_stateChange</ref>(USBD_State_TypeDef<sp/>oldState,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>USBD_State_TypeDef<sp/>newState);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_b_c_d_s___u_s_b_8h_1a389063ac3c4c73160e7d83b7f0c3e4a3" kindref="member">USB_setupCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>USB_Setup_TypeDef<sp/>*setup);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>constant<sp/>definitions<sp/>*****************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>local<sp/>variables<sp/>**********************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>USB_transferCount_mdu;<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/>USB_transferDone_md;<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>USB_Status_TypeDef<sp/>USB_transferStatus_md;<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/>USB_configured_md;<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal">USB_lineCoding_t<sp/><ref refid="group___f_o_t_a_1gac3f386836c3da530e53d6776dff129f2" kindref="member">__attribute__</ref>((aligned(4)))<sp/>USB_lineCoding_mds;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>global<sp/>variables<sp/>*********************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>inline<sp/>functions<sp/>*********************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>local<sp/>functions<sp/>**********************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">static<sp/>inline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>USB_setSerialNumber(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*serialNumber<sp/>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>uint8_t<sp/>strLength<sp/>=<sp/>UINT8_C(0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>*serialNumber<sp/>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_serialnumber_gau.name[<sp/>strLength++<sp/>]<sp/>=<sp/>*serialNumber++;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>strLength<sp/>==<sp/><ref refid="_b_s_p___u_s_b___descriptors_8h_1ac9be029c855d49f8cbfb84eb632d2563" kindref="member">USBDESC_STR_LEN</ref><sp/>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>USB_serialnumber_gau.len<sp/><sp/>=<sp/>(strLength<sp/>*<sp/>2)<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>USB_serialnumber_gau.type<sp/>=<sp/>USB_STRING_DESCRIPTOR;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>USB_dataReceivedCallback(USB_Status_TypeDef<sp/>status,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bytesReceived,<sp/>uint32_t<sp/>remainingBytes)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>remainingBytes;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>returnStatus<sp/>=<sp/>UINT8_C(0);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((status<sp/>==<sp/>USB_STATUS_OK)<sp/>&amp;&amp;<sp/>(bytesReceived<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*execute<sp/>callback<sp/>function<sp/>only<sp/>if<sp/>it<sp/>is<sp/>provided<sp/>during<sp/>usb<sp/>initialization*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(USB_lineCoding_mds.usbRxCallback<sp/>!=<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(USB_lineCoding_mds.usbRxCallback))(USB_usbRxBuffer_mau,<sp/>bytesReceived);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>the<sp/>endpoint<sp/>and<sp/>wait<sp/>for<sp/>the<sp/>packet<sp/>received<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>returnStatus<sp/>=<sp/>USBD_Read(<ref refid="_b_s_p___u_s_b___descriptors_8h_1ab6ccf327d06025fa6e21397e6bb3c52c" kindref="member">USB_EP_DATA_OUT</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>USB_usbRxBuffer_mau,<sp/>USB_TX_RX_BUF_SIZE,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USB_dataReceivedCallback);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(returnStatus);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>USB_dataTransferred(USB_Status_TypeDef<sp/>status,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bytesTransfered,<sp/>uint32_t<sp/>remainingBytes)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>remainingBytes;<sp/></highlight><highlight class="comment">/*<sp/>Unused<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_transferStatus_md<sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_transferCount_mdu<sp/>=<sp/>bytesTransfered;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_transferDone_md<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffada68ee7000f7f5dbb4f98dfae7a80a4c0b" kindref="member">USB_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(USB_transferStatus_md);</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>refer<sp/>interface<sp/>header<sp/>USB_ih.h<sp/>for<sp/>further<sp/>details<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_c_d_s___u_s_b_8h_1a53403a699c7192f8c36dd19fd2fb0097" kindref="member">USB_stateChange</ref>(USBD_State_TypeDef<sp/>oldState,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>USBD_State_TypeDef<sp/>newState)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<sp/>oldState;<sp/></highlight><highlight class="comment">/*<sp/>Unused<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(USBD_STATE_CONFIGURED<sp/>==<sp/>newState)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USB_configured_md<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffada68ee7000f7f5dbb4f98dfae7a80a4c0b" kindref="member">USB_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Inorder<sp/>to<sp/>receive<sp/>data,<sp/>endpoint<sp/>should<sp/>be<sp/>enabled<sp/>every<sp/>time.<sp/>For<sp/>the<sp/>first<sp/>time<sp/>,<sp/>the<sp/>reception<sp/>of<sp/>the<sp/>data<sp/>is</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>enabled<sp/>here(i.e<sp/>After<sp/>USB<sp/>successfully<sp/>configured)<sp/>and<sp/><sp/>re<sp/>enabling<sp/>the<sp/>endpoint,for<sp/>reception<sp/>of<sp/>data<sp/>is<sp/>handled</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>the<sp/>call<sp/>back<sp/>function(USB_dataReceivedCallback)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USBD_Read(<ref refid="_b_s_p___u_s_b___descriptors_8h_1ab6ccf327d06025fa6e21397e6bb3c52c" kindref="member">USB_EP_DATA_OUT</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>USB_usbRxBuffer_mau,<sp/><ref refid="group___u_s_b_c_o_n_f_i_g_1gaa5984755c501d7b775a35568b8a1b87f" kindref="member">USB_BULK_SIZE</ref>,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USB_dataReceivedCallback);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USB_configured_md<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>refer<sp/>interface<sp/>header<sp/>USB_ih.h<sp/>for<sp/>further<sp/>details<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_b_c_d_s___u_s_b_8h_1a389063ac3c4c73160e7d83b7f0c3e4a3" kindref="member">USB_setupCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>USB_Setup_TypeDef<sp/>*setup)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retVal<sp/>=<sp/>USB_STATUS_REQ_UNHANDLED;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((setup-&gt;Type<sp/>==<sp/>USB_SETUP_TYPE_CLASS)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(setup-&gt;Recipient<sp/>==<sp/>USB_SETUP_RECIPIENT_INTERFACE))</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(setup-&gt;bRequest)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>USB_CDC_GETLINECODING:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="_b_s_p___u_s_b___descriptors_8h_1a32a8d1c5e4d242918ef2911cc8e78b80" kindref="member">USB_SETUP_VALUE</ref><sp/>==<sp/>setup-&gt;wValue)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<ref refid="_b_s_p___u_s_b___descriptors_8h_1a84f5bc8df3b0edb433aec2d1b461db52" kindref="member">USB_SETUP_INDEX</ref><sp/>==<sp/>setup-&gt;wIndex)<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">/*<sp/>Interface<sp/>no.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="_b_s_p___u_s_b___descriptors_8h_1a561fac01afed804dda387082ca837ab9" kindref="member">USB_SETUP_LENGTH</ref><sp/>==<sp/>setup-&gt;wLength)<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">/*<sp/>Length<sp/>of<sp/>cdcLineCoding<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(USB_SETUP_DIR_IN<sp/>==<sp/>setup-&gt;Direction))</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>current<sp/>settings<sp/>to<sp/>USB<sp/>host.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USBD_Write(0,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>&amp;USB_lineCoding_mds,<sp/><ref refid="_b_s_p___u_s_b___descriptors_8h_1a561fac01afed804dda387082ca837ab9" kindref="member">USB_SETUP_LENGTH</ref>,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>USB_STATUS_OK;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>USB_CDC_SETLINECODING:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="_b_s_p___u_s_b___descriptors_8h_1a32a8d1c5e4d242918ef2911cc8e78b80" kindref="member">USB_SETUP_VALUE</ref><sp/>==<sp/>setup-&gt;wValue)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<ref refid="_b_s_p___u_s_b___descriptors_8h_1a84f5bc8df3b0edb433aec2d1b461db52" kindref="member">USB_SETUP_INDEX</ref><sp/>==<sp/>setup-&gt;wIndex)<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">/*<sp/>Interface<sp/>no.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="_b_s_p___u_s_b___descriptors_8h_1a561fac01afed804dda387082ca837ab9" kindref="member">USB_SETUP_LENGTH</ref><sp/>==<sp/>setup-&gt;wLength)<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">/*<sp/>Length<sp/>of<sp/>cdcLineCoding<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(USB_SETUP_DIR_IN<sp/>!=<sp/>setup-&gt;Direction))</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>new<sp/>settings<sp/>from<sp/>USB<sp/>host.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USBD_Read(0,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>&amp;USB_lineCoding_mds,<sp/><ref refid="_b_s_p___u_s_b___descriptors_8h_1a561fac01afed804dda387082ca837ab9" kindref="member">USB_SETUP_LENGTH</ref>,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>USB_STATUS_OK;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>USB_CDC_SETCTRLLINESTATE:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="_b_s_p___u_s_b___descriptors_8h_1a84f5bc8df3b0edb433aec2d1b461db52" kindref="member">USB_SETUP_INDEX</ref><sp/>==<sp/>setup-&gt;wIndex)<sp/>&amp;&amp;<sp/></highlight><highlight class="comment">/*<sp/>Interface<sp/>no.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="_b_s_p___u_s_b___descriptors_8h_1adb592e4af94086c1f1f511c0b4831527" kindref="member">USB_SETUP_NO_DATA_LENGTH</ref><sp/>==<sp/>setup-&gt;wLength))<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>nothing<sp/>(<sp/>Non<sp/>compliant<sp/>behaviour<sp/>!!<sp/>)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/>USB_STATUS_OK;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(retVal);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>global<sp/>functions<sp/>*********************************************************<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>refer<sp/>interface<sp/>header<sp/>USB_ih.h<sp/>for<sp/>further<sp/>details<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_c_d_s___u_s_b_8h_1a879e7559244f3e8c8993e105fd45cd36" kindref="member">USB_init</ref>(<ref refid="_b_c_d_s___u_s_b_8h_1a2ffcdb62ade4bd4ec00c2aba30403e42" kindref="member">USB_lineCoding_tp</ref><sp/>lineCoding,<sp/><ref refid="_b_c_d_s___u_s_b_8h_1ab3772f65ab04d0f68069f37172001922" kindref="member">USB_rxCallback</ref><sp/><ref refid="_b_c_d_s___u_s_b_8h_1a7cc2a256ae475cff6e0b8b1fd6c952be" kindref="member">usbRxCallback</ref>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>usbSerialNumber[<ref refid="_b_s_p___u_s_b___descriptors_8h_1ac9be029c855d49f8cbfb84eb632d2563" kindref="member">USBDESC_STR_LEN</ref>];</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___a_s_s_e_r_t_1ga0041af519e0e7d47c9bcc83760c4669e" kindref="member">assert</ref>(lineCoding<sp/>!=<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_lineCoding_mds.Baudrate<sp/>=<sp/>lineCoding-&gt;Baudrate;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_lineCoding_mds.charFormat<sp/>=<sp/>lineCoding-&gt;charFormat;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_lineCoding_mds.dataBits<sp/>=<sp/>lineCoding-&gt;dataBits;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_lineCoding_mds.parityType<sp/>=<sp/>lineCoding-&gt;parityType;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_configured_md<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_lineCoding_mds.usbRxCallback<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a7cc2a256ae475cff6e0b8b1fd6c952be" kindref="member">usbRxCallback</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>USB<sp/>Serial<sp/>Number<sp/>String<sp/>with<sp/>all<sp/>Zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(usbSerialNumber,<sp/>UINT8_C(0),<sp/><ref refid="_b_s_p___u_s_b___descriptors_8h_1ac9be029c855d49f8cbfb84eb632d2563" kindref="member">USBDESC_STR_LEN</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Format<sp/>Unique<sp/>ID<sp/>of<sp/>MCU<sp/>in<sp/>Hex<sp/>format<sp/>and<sp/>put<sp/>it<sp/>into<sp/>String<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(usbSerialNumber,<sp/><ref refid="_b_s_p___u_s_b___descriptors_8h_1ac9be029c855d49f8cbfb84eb632d2563" kindref="member">USBDESC_STR_LEN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%lX%lX&quot;</highlight><highlight class="normal">,<sp/>DEVINFO-&gt;UNIQUEH,<sp/>DEVINFO-&gt;UNIQUEL);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>USB<sp/>Serial<sp/>Number<sp/>*before*<sp/>USB<sp/>Stack<sp/>initialization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_setSerialNumber(usbSerialNumber);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>USBD_Init(&amp;<ref refid="_b_s_p___u_s_b___descriptors_8h_1aa9f5eb253363378f1741c08ead6dcb16" kindref="member">USB_initStruct_mds</ref>);<sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>USB<sp/>CDC<sp/>=&gt;<sp/>USB<sp/>communications<sp/>device<sp/>class<sp/>functionality<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>refer<sp/>interface<sp/>header<sp/>USB_ih.h<sp/>for<sp/>further<sp/>details<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/><ref refid="_b_c_d_s___u_s_b_8h_1aef191ec15ee3d2ca0e93b27cfaaeabde" kindref="member">USB_transmitByte</ref>(uint8_t<sp/><ref refid="_fault_handler_8c_1a977b4c6fdb29af4d067f43aa302e99e9" kindref="member">byte</ref>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/>retVal<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_transferDone_md<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>buffer[1];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0]<sp/>=<sp/><ref refid="_fault_handler_8c_1a977b4c6fdb29af4d067f43aa302e99e9" kindref="member">byte</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffada68ee7000f7f5dbb4f98dfae7a80a4c0b" kindref="member">USB_SUCCESS</ref><sp/>==<sp/>USB_configured_md)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USBD_Write(<ref refid="_b_s_p___u_s_b___descriptors_8h_1ab4ca5f73934445833cba832d30164e23" kindref="member">USB_EP_DATA_IN</ref>,<sp/>buffer,<sp/>1,<sp/>USB_dataTransferred);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref><sp/>==<sp/>USB_transferDone_md)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USB_CC_TEST_GTEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(USB_STATUS_OK<sp/>==<sp/>USB_transferStatus_md)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffada68ee7000f7f5dbb4f98dfae7a80a4c0b" kindref="member">USB_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(retVal);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>refer<sp/>interface<sp/>header<sp/>USB_ih.h<sp/>for<sp/>further<sp/>details<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/><ref refid="_b_c_d_s___u_s_b_8h_1a63e760cba277adf454e31843d322241b" kindref="member">USB_receiveByte</ref>(uint8_t*<sp/>byte)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/>retVal<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_transferDone_md<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>buffer[1];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_s_s_e_r_t_1ga0041af519e0e7d47c9bcc83760c4669e" kindref="member">assert</ref>(byte<sp/>!=<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffada68ee7000f7f5dbb4f98dfae7a80a4c0b" kindref="member">USB_SUCCESS</ref><sp/>==<sp/>USB_configured_md)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USBD_Read(<ref refid="_b_s_p___u_s_b___descriptors_8h_1ab6ccf327d06025fa6e21397e6bb3c52c" kindref="member">USB_EP_DATA_OUT</ref>,<sp/>buffer,<sp/>1,<sp/>USB_dataTransferred);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref><sp/>==<sp/>USB_transferDone_md)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USB_CC_TEST_GTEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(USB_STATUS_OK<sp/>==<sp/>USB_transferStatus_md)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*byte<sp/>=<sp/>buffer[0];</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffada68ee7000f7f5dbb4f98dfae7a80a4c0b" kindref="member">USB_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(retVal);</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USB_USE_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/><ref refid="_retarget_stdio_8c_1a9769f68c8b6969d71fcef47682009ba1" kindref="member">RETARGET_WriteChar</ref>(uint8_t<sp/>*data,<sp/>uint32_t<sp/>len)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/>retVal<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a30320573f452a73550f3190261383831" kindref="member">USB_transmitData</ref>(data,<sp/>len);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>refer<sp/>interface<sp/>header<sp/>USB_ih.h<sp/>for<sp/>further<sp/>details<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/><ref refid="_b_c_d_s___u_s_b_8h_1a30320573f452a73550f3190261383831" kindref="member">USB_transmitData</ref>(uint8_t<sp/>*data,<sp/>uint32_t<sp/>len)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/>retVal<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter<sp/>=<sp/><ref refid="_b_s_p___u_s_b___descriptors_8h_1a699d9a6423e50c1e0204d0270440b7a6" kindref="member">USB_ZERO_VALUE</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>USB_transferDone_md<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffada68ee7000f7f5dbb4f98dfae7a80a4c0b" kindref="member">USB_SUCCESS</ref><sp/>==<sp/>USB_configured_md)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USB_usbbuffer_gpu<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USBD_Write(<ref refid="_b_s_p___u_s_b___descriptors_8h_1ab4ca5f73934445833cba832d30164e23" kindref="member">USB_EP_DATA_IN</ref>,<sp/>USB_usbbuffer_gpu,<sp/>len,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USB_dataTransferred);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref><sp/>==<sp/>USB_transferDone_md)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USBTIMER_DelayMs(<ref refid="_b_s_p___u_s_b___descriptors_8h_1af6dcd0381a719e440a406c501fed68d8" kindref="member">USB_ONE_MILLI_SECOND_DELAY</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_b_s_p___u_s_b___descriptors_8h_1a83434c79425832b8fe2b2cbb4e5f6988" kindref="member">USB_DELAY_LIMIT</ref><sp/>==<sp/>counter)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USB_transferStatus_md<sp/>=<sp/>USB_STATUS_EP_BUSY;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(USB_STATUS_OK<sp/>==<sp/>USB_transferStatus_md)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffada68ee7000f7f5dbb4f98dfae7a80a4c0b" kindref="member">USB_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(retVal);</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal">uint8_t<sp/><ref refid="_retarget_stdio_8c_1a5af724185f484056b02b42f4ab184bfb" kindref="member">RETARGET_ReadChar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_c_d_s___u_s_b_8h_1a63e760cba277adf454e31843d322241b" kindref="member">USB_receiveByte</ref>(&amp;byte);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(byte);</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USB_USE_PRINTF<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/><ref refid="_b_c_d_s___u_s_b_8h_1a7a91b7e2b8b6696705b8536907b75615" kindref="member">USB_callBackMapping</ref>(<ref refid="_b_c_d_s___u_s_b_8h_1ab3772f65ab04d0f68069f37172001922" kindref="member">USB_rxCallback</ref><sp/>usbcallback)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_b_c_d_s___u_s_b_8h_1af0f98e66450be55819a5e55cb3d3d86c" kindref="member">USB_returnCode_t</ref><sp/>returnStatus<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffadaee346d6a4cafcdc888e56e3600b15afc" kindref="member">USB_FAILURE</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usbcallback<sp/>!=<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>USB_lineCoding_mds.usbRxCallback<sp/>=<sp/>usbcallback;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnStatus<sp/>=<sp/><ref refid="_b_c_d_s___u_s_b_8h_1a2c4d2989d3c997e2b8f0757bdd96ffada68ee7000f7f5dbb4f98dfae7a80a4c0b" kindref="member">USB_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(returnStatus);</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>API<sp/>documentation<sp/>is<sp/>in<sp/>interface<sp/>header<sp/>file<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_b_c_d_s___u_s_b_8h_1a35d4b1fdcba9babf9cd3d7ee571da971" kindref="member">USB_DisConnect</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>USBD_Disconnect();</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>(USB_PRESENT<sp/>)<sp/>&amp;&amp;<sp/>(<sp/>USB_COUNT<sp/>==<sp/>1<sp/>)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BCDS_FEATURE_BSP_USB<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BSP/source/BSP_USB.c"/>
  </compounddef>
</doxygen>
