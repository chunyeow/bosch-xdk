<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___callable_8h" kind="file">
    <compoundname>Serval_Callable.h</compoundname>
    <includes refid="_serval___types_8h" local="no">Serval_Types.h</includes>
    <includes refid="_serval___struct_ctx_8h" local="no">Serval_StructCtx.h</includes>
    <includedby refid="_mbed_t_l_s___tls_8h" local="yes">SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Tls.h</includedby>
    <includedby refid="_p_a_l__socket_monitor__ih_8h" local="yes">SDK/xdk110/Common/legacy/include/ServalPAL_WiFi/PAL_socketMonitor_ih.h</includedby>
    <includedby refid="_serval___scheduler_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Scheduler.h</includedby>
    <includedby refid="_serval___udp_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Udp.h</includedby>
    <includedby refid="_serval___http_client_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_HttpClient.h</includedby>
    <includedby refid="_serval___http_server_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_HttpServer.h</includedby>
    <includedby refid="_serval___msg_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h</includedby>
    <includedby refid="_serval___x_tcp_server_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcpServer.h</includedby>
    <incdepgraph>
      <node id="29930">
        <label>stdbool.h</label>
      </node>
      <node id="29923">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="29924" relation="include">
        </childnode>
        <childnode refid="29964" relation="include">
        </childnode>
      </node>
      <node id="29934">
        <label>stdarg.h</label>
      </node>
      <node id="29961">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="29952" relation="include">
        </childnode>
      </node>
      <node id="29946">
        <label>list.h</label>
      </node>
      <node id="29948">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="29949" relation="include">
        </childnode>
        <childnode refid="29928" relation="include">
        </childnode>
        <childnode refid="29927" relation="include">
        </childnode>
      </node>
      <node id="29926">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="29927" relation="include">
        </childnode>
      </node>
      <node id="29929">
        <label>stdint.h</label>
      </node>
      <node id="29927">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="29928" relation="include">
        </childnode>
      </node>
      <node id="29932">
        <label>stdlib.h</label>
      </node>
      <node id="29964">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="29940">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="29943">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="29944" relation="include">
        </childnode>
      </node>
      <node id="29951">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="29953">
        <label>user.h</label>
      </node>
      <node id="29947">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="29927" relation="include">
        </childnode>
        <childnode refid="29948" relation="include">
        </childnode>
        <childnode refid="29951" relation="include">
        </childnode>
      </node>
      <node id="29954">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="29952" relation="include">
        </childnode>
      </node>
      <node id="29922">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h</label>
        <link refid="Serval_Callable.h"/>
        <childnode refid="29923" relation="include">
        </childnode>
        <childnode refid="29965" relation="include">
        </childnode>
      </node>
      <node id="29938">
        <label>stddef.h</label>
      </node>
      <node id="29956">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="29952" relation="include">
        </childnode>
      </node>
      <node id="29936">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="29937" relation="include">
        </childnode>
        <childnode refid="29939" relation="include">
        </childnode>
        <childnode refid="29943" relation="include">
        </childnode>
        <childnode refid="29945" relation="include">
        </childnode>
      </node>
      <node id="29925">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="29926" relation="include">
        </childnode>
        <childnode refid="29928" relation="include">
        </childnode>
        <childnode refid="29933" relation="include">
        </childnode>
        <childnode refid="29934" relation="include">
        </childnode>
        <childnode refid="29935" relation="include">
        </childnode>
        <childnode refid="29932" relation="include">
        </childnode>
        <childnode refid="29923" relation="include">
        </childnode>
        <childnode refid="29936" relation="include">
        </childnode>
        <childnode refid="29947" relation="include">
        </childnode>
        <childnode refid="29952" relation="include">
        </childnode>
      </node>
      <node id="29933">
        <label>limits.h</label>
      </node>
      <node id="29942">
        <label>portable.h</label>
      </node>
      <node id="29950">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="29931">
        <label>string.h</label>
      </node>
      <node id="29949">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="29950" relation="include">
        </childnode>
        <childnode refid="29927" relation="include">
        </childnode>
      </node>
      <node id="29965">
        <label>Serval_StructCtx.h</label>
        <link refid="_serval___struct_ctx_8h"/>
        <childnode refid="29938" relation="include">
        </childnode>
      </node>
      <node id="29928">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="29929" relation="include">
        </childnode>
        <childnode refid="29930" relation="include">
        </childnode>
        <childnode refid="29931" relation="include">
        </childnode>
        <childnode refid="29932" relation="include">
        </childnode>
      </node>
      <node id="29941">
        <label>projdefs.h</label>
      </node>
      <node id="29963">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="29962">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="29952" relation="include">
        </childnode>
      </node>
      <node id="29958">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="29952" relation="include">
        </childnode>
      </node>
      <node id="29944">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="29959">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="29952" relation="include">
        </childnode>
      </node>
      <node id="29957">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="29952" relation="include">
        </childnode>
      </node>
      <node id="29945">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="29946" relation="include">
        </childnode>
      </node>
      <node id="29960">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="29952" relation="include">
        </childnode>
      </node>
      <node id="29939">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="29929" relation="include">
        </childnode>
        <childnode refid="29926" relation="include">
        </childnode>
        <childnode refid="29940" relation="include">
        </childnode>
      </node>
      <node id="29924">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="29925" relation="include">
        </childnode>
      </node>
      <node id="29937">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="29938" relation="include">
        </childnode>
        <childnode refid="29929" relation="include">
        </childnode>
        <childnode refid="29939" relation="include">
        </childnode>
        <childnode refid="29941" relation="include">
        </childnode>
        <childnode refid="29942" relation="include">
        </childnode>
      </node>
      <node id="29935">
        <label>stdio.h</label>
      </node>
      <node id="29955">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="29952" relation="include">
        </childnode>
      </node>
      <node id="29952">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="29953" relation="include">
        </childnode>
        <childnode refid="29954" relation="include">
        </childnode>
        <childnode refid="29955" relation="include">
        </childnode>
        <childnode refid="29956" relation="include">
        </childnode>
        <childnode refid="29957" relation="include">
        </childnode>
        <childnode refid="29958" relation="include">
        </childnode>
        <childnode refid="29959" relation="include">
        </childnode>
        <childnode refid="29960" relation="include">
        </childnode>
        <childnode refid="29961" relation="include">
        </childnode>
        <childnode refid="29962" relation="include">
        </childnode>
        <childnode refid="29963" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="30009">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceEnvironment.c</label>
        <link refid="_l_w_m2_m_sensor_device_environment_8c"/>
      </node>
      <node id="29981">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h</label>
        <link refid="_serval___coap_server_8h"/>
        <childnode refid="29982" relation="include">
        </childnode>
      </node>
      <node id="30019">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Webserver.h</label>
        <link refid="_serval___webserver_8h"/>
      </node>
      <node id="29995">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.c</label>
        <link refid="_l_w_m2_m_objects_8c"/>
      </node>
      <node id="29985">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.h</label>
        <link refid="_l_w_m2_m_objects_8h"/>
        <childnode refid="29984" relation="include">
        </childnode>
        <childnode refid="29986" relation="include">
        </childnode>
        <childnode refid="29987" relation="include">
        </childnode>
        <childnode refid="29988" relation="include">
        </childnode>
        <childnode refid="29989" relation="include">
        </childnode>
        <childnode refid="29990" relation="include">
        </childnode>
        <childnode refid="29991" relation="include">
        </childnode>
        <childnode refid="29992" relation="include">
        </childnode>
        <childnode refid="29993" relation="include">
        </childnode>
        <childnode refid="29994" relation="include">
        </childnode>
        <childnode refid="29995" relation="include">
        </childnode>
        <childnode refid="29996" relation="include">
        </childnode>
        <childnode refid="29997" relation="include">
        </childnode>
        <childnode refid="29971" relation="include">
        </childnode>
      </node>
      <node id="29979">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h</label>
        <link refid="_serval___coap_client_8h"/>
        <childnode refid="29980" relation="include">
        </childnode>
      </node>
      <node id="29986">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.c</label>
        <link refid="_l_w_m2_m_object_alert_notification_8c"/>
      </node>
      <node id="30012">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.h</label>
        <link refid="_l_w_m2_m_object_alert_notification_8h"/>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="29986" relation="include">
        </childnode>
      </node>
      <node id="29989">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.c</label>
        <link refid="_l_w_m2_m_object_device_8c"/>
      </node>
      <node id="30007">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceIlluminance.c</label>
        <link refid="_l_w_m2_m_sensor_device_illuminance_8c"/>
      </node>
      <node id="30015">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Resources.h</label>
        <link refid="_serval___resources_8h"/>
      </node>
      <node id="29999">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.h</label>
        <link refid="_l_w_m2_m_object_device_8h"/>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="29989" relation="include">
        </childnode>
      </node>
      <node id="29988">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.c</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8c"/>
      </node>
      <node id="30000">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.h</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8h"/>
        <childnode refid="29985" relation="include">
        </childnode>
      </node>
      <node id="30017">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestClient.h</label>
        <link refid="_serval___rest_client_8h"/>
      </node>
      <node id="29998">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceAccelerometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_accelerometer_8c"/>
      </node>
      <node id="29969">
        <label>SDK/xdk110/Common/legacy/source/ServalPAL_WiFi.c</label>
        <link refid="_serval_p_a_l___wi_fi_8c"/>
      </node>
      <node id="29975">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_HttpServer.h</label>
        <link refid="_serval___http_server_8h"/>
      </node>
      <node id="30022">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Flags.h</label>
        <link refid="_mbed_t_l_s___flags_8h"/>
      </node>
      <node id="30016">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Rest.h</label>
        <link refid="_serval___rest_8h"/>
        <childnode refid="30015" relation="include">
        </childnode>
        <childnode refid="30017" relation="include">
        </childnode>
        <childnode refid="30018" relation="include">
        </childnode>
      </node>
      <node id="30018">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h</label>
        <link refid="_serval___rest_server_8h"/>
      </node>
      <node id="29996">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.c</label>
        <link refid="_l_w_m2_m_object_sensor_device_8c"/>
      </node>
      <node id="30024">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcpClient.h</label>
        <link refid="_serval___x_tcp_client_8h"/>
      </node>
      <node id="30010">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.h</label>
        <link refid="_l_w_m2_m_object_sensor_device_8h"/>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="29989" relation="include">
        </childnode>
        <childnode refid="29996" relation="include">
        </childnode>
      </node>
      <node id="29973">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Socket.h</label>
        <link refid="_mbed_t_l_s___socket_8h"/>
      </node>
      <node id="29966">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h</label>
        <link refid="Serval_Callable.h"/>
        <childnode refid="29967" relation="include">
        </childnode>
        <childnode refid="29968" relation="include">
        </childnode>
        <childnode refid="29970" relation="include">
        </childnode>
        <childnode refid="29972" relation="include">
        </childnode>
        <childnode refid="29974" relation="include">
        </childnode>
        <childnode refid="29975" relation="include">
        </childnode>
        <childnode refid="29976" relation="include">
        </childnode>
        <childnode refid="29978" relation="include">
        </childnode>
      </node>
      <node id="29970">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Scheduler.h</label>
        <link refid="_serval___scheduler_8h"/>
        <childnode refid="29971" relation="include">
        </childnode>
      </node>
      <node id="30021">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h</label>
        <link refid="_serval___security_8h"/>
        <childnode refid="30022" relation="include">
        </childnode>
        <childnode refid="29967" relation="include">
        </childnode>
        <childnode refid="29972" relation="include">
        </childnode>
        <childnode refid="29979" relation="include">
        </childnode>
        <childnode refid="29981" relation="include">
        </childnode>
        <childnode refid="29982" relation="include">
        </childnode>
        <childnode refid="30017" relation="include">
        </childnode>
        <childnode refid="30018" relation="include">
        </childnode>
      </node>
      <node id="30005">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceMagnetometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_magnetometer_8c"/>
      </node>
      <node id="29997">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectTemperature.c</label>
        <link refid="_l_w_m2_m_object_temperature_8c"/>
      </node>
      <node id="29976">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h</label>
        <link refid="_serval___msg_8h"/>
        <childnode refid="29967" relation="include">
        </childnode>
        <childnode refid="29977" relation="include">
        </childnode>
        <childnode refid="29972" relation="include">
        </childnode>
        <childnode refid="29979" relation="include">
        </childnode>
        <childnode refid="29981" relation="include">
        </childnode>
        <childnode refid="30014" relation="include">
        </childnode>
        <childnode refid="29974" relation="include">
        </childnode>
        <childnode refid="29982" relation="include">
        </childnode>
        <childnode refid="30020" relation="include">
        </childnode>
        <childnode refid="30016" relation="include">
        </childnode>
        <childnode refid="30017" relation="include">
        </childnode>
        <childnode refid="30021" relation="include">
        </childnode>
        <childnode refid="30019" relation="include">
        </childnode>
        <childnode refid="30023" relation="include">
        </childnode>
        <childnode refid="30024" relation="include">
        </childnode>
        <childnode refid="30025" relation="include">
        </childnode>
      </node>
      <node id="30014">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Http.h</label>
        <link refid="_serval___http_8h"/>
        <childnode refid="29974" relation="include">
        </childnode>
        <childnode refid="29975" relation="include">
        </childnode>
        <childnode refid="30015" relation="include">
        </childnode>
        <childnode refid="30016" relation="include">
        </childnode>
        <childnode refid="30018" relation="include">
        </childnode>
        <childnode refid="30019" relation="include">
        </childnode>
      </node>
      <node id="29992">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.c</label>
        <link refid="_l_w_m2_m_object_illuminance_8c"/>
      </node>
      <node id="29968">
        <label>SDK/xdk110/Common/legacy/include/ServalPAL_WiFi/PAL_socketMonitor_ih.h</label>
        <link refid="_p_a_l__socket_monitor__ih_8h"/>
        <childnode refid="29969" relation="include">
        </childnode>
      </node>
      <node id="30006">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.h</label>
        <link refid="_l_w_m2_m_object_illuminance_8h"/>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="30007" relation="include">
        </childnode>
      </node>
      <node id="30023">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcp.h</label>
        <link refid="_serval___x_tcp_8h"/>
        <childnode refid="30015" relation="include">
        </childnode>
        <childnode refid="30024" relation="include">
        </childnode>
        <childnode refid="29978" relation="include">
        </childnode>
      </node>
      <node id="30020">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h</label>
        <link refid="_serval___msg___obsolete_8h"/>
        <childnode refid="29976" relation="include">
        </childnode>
      </node>
      <node id="29980">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.c</label>
        <link refid="_l_w_m2_m_object_firmware_update_8c"/>
      </node>
      <node id="29993">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.c</label>
        <link refid="_l_w_m2_m_object_light_control_8c"/>
      </node>
      <node id="30001">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.h</label>
        <link refid="_l_w_m2_m_object_firmware_update_8h"/>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="29980" relation="include">
        </childnode>
      </node>
      <node id="29994">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.c</label>
        <link refid="_l_w_m2_m_object_magnetometer_8c"/>
      </node>
      <node id="30011">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.h</label>
        <link refid="_l_w_m2_m_object_light_control_8h"/>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="29993" relation="include">
        </childnode>
      </node>
      <node id="30004">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.h</label>
        <link refid="_l_w_m2_m_object_magnetometer_8h"/>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="30005" relation="include">
        </childnode>
      </node>
      <node id="30025">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h</label>
        <link refid="_serval___x_udp_8h"/>
      </node>
      <node id="29982">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h</label>
        <link refid="_serval___lwm2m_8h"/>
        <childnode refid="29983" relation="include">
        </childnode>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="29999" relation="include">
        </childnode>
        <childnode refid="30000" relation="include">
        </childnode>
        <childnode refid="30001" relation="include">
        </childnode>
        <childnode refid="30002" relation="include">
        </childnode>
        <childnode refid="30004" relation="include">
        </childnode>
        <childnode refid="30006" relation="include">
        </childnode>
        <childnode refid="30008" relation="include">
        </childnode>
        <childnode refid="30010" relation="include">
        </childnode>
        <childnode refid="30011" relation="include">
        </childnode>
        <childnode refid="30012" relation="include">
        </childnode>
        <childnode refid="30013" relation="include">
        </childnode>
        <childnode refid="29984" relation="include">
        </childnode>
        <childnode refid="29986" relation="include">
        </childnode>
        <childnode refid="29993" relation="include">
        </childnode>
        <childnode refid="29995" relation="include">
        </childnode>
        <childnode refid="29996" relation="include">
        </childnode>
        <childnode refid="30003" relation="include">
        </childnode>
        <childnode refid="30007" relation="include">
        </childnode>
      </node>
      <node id="29978">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcpServer.h</label>
        <link refid="_serval___x_tcp_server_8h"/>
      </node>
      <node id="29972">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Udp.h</label>
        <link refid="_serval___udp_8h"/>
        <childnode refid="29973" relation="include">
        </childnode>
        <childnode refid="29967" relation="include">
        </childnode>
      </node>
      <node id="29977">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Tcp.h</label>
        <link refid="_serval___tcp_8h"/>
        <childnode refid="29973" relation="include">
        </childnode>
        <childnode refid="29967" relation="include">
        </childnode>
        <childnode refid="29975" relation="include">
        </childnode>
        <childnode refid="29978" relation="include">
        </childnode>
      </node>
      <node id="29984">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.c</label>
        <link refid="_l_w_m2_m_object_accelerometer_8c"/>
      </node>
      <node id="29967">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Tls.h</label>
        <link refid="_mbed_t_l_s___tls_8h"/>
      </node>
      <node id="29983">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.h</label>
        <link refid="_l_w_m2_m_object_accelerometer_8h"/>
        <childnode refid="29984" relation="include">
        </childnode>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="29998" relation="include">
        </childnode>
      </node>
      <node id="29991">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectHumidity.c</label>
        <link refid="_l_w_m2_m_object_humidity_8c"/>
      </node>
      <node id="30003">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceGyroscope.c</label>
        <link refid="_l_w_m2_m_sensor_device_gyroscope_8c"/>
      </node>
      <node id="29987">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.c</label>
        <link refid="_l_w_m2_m_object_barometer_8c"/>
      </node>
      <node id="30008">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.h</label>
        <link refid="_l_w_m2_m_object_barometer_8h"/>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="30009" relation="include">
        </childnode>
      </node>
      <node id="29974">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_HttpClient.h</label>
        <link refid="_serval___http_client_8h"/>
      </node>
      <node id="29971">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.c</label>
        <link refid="_l_w_m2_m_util_8c"/>
      </node>
      <node id="30013">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.h</label>
        <link refid="_l_w_m2_m_util_8h"/>
        <childnode refid="29984" relation="include">
        </childnode>
        <childnode refid="29986" relation="include">
        </childnode>
        <childnode refid="29987" relation="include">
        </childnode>
        <childnode refid="29988" relation="include">
        </childnode>
        <childnode refid="29990" relation="include">
        </childnode>
        <childnode refid="29991" relation="include">
        </childnode>
        <childnode refid="29992" relation="include">
        </childnode>
        <childnode refid="29993" relation="include">
        </childnode>
        <childnode refid="29994" relation="include">
        </childnode>
        <childnode refid="29996" relation="include">
        </childnode>
        <childnode refid="29997" relation="include">
        </childnode>
        <childnode refid="29971" relation="include">
        </childnode>
      </node>
      <node id="29990">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.c</label>
        <link refid="_l_w_m2_m_object_gyroscope_8c"/>
      </node>
      <node id="30002">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.h</label>
        <link refid="_l_w_m2_m_object_gyroscope_8h"/>
        <childnode refid="29985" relation="include">
        </childnode>
        <childnode refid="30003" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_callable___s" prot="public">Callable_S</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_serval___callable_8h_1aefa4934df585b0a7e768c608d64049bd" prot="public" static="no">
        <name>CALLABLE_GET_CONTEXT</name>
        <param><defname>ContextTypeName</defname></param>
        <param><defname>ContextMemberNameOfCallable</defname></param>
        <param><defname>callable_ptr</defname></param>
        <initializer><ref refid="_serval___struct_ctx_8h_1a1038ae94aba60e4345b213a35a75c11c" kindref="member">GET_CONTEXT_OF_MEMBER</ref>(ContextTypeName, ContextMemberNameOfCallable, \
      callable_ptr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This macro provides a pointer to the context structure of the given callable object. It is assumed here that the callable object is member of a struct. A pointer to the struct will be returned.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ContextTypeName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the expected data type of the containing structure</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ContextMemberNameOfCallable</parametername>
</parameternamelist>
<parameterdescription>
<para>the member name of the callable object inside the enclosing structure</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callable_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the callable object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the enclosing structure which contains the given callable object as a member. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" line="87" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" bodystart="86" bodyend="-1"/>
        <referencedby refid="_l_w_m2_m_util_8c_1ad1a6326b3fbca1827e7dd7bcd82112fe" compoundref="_l_w_m2_m_util_8c" startline="136" endline="149">ScheduleUpdateSingleResource</referencedby>
        <referencedby refid="_l_w_m2_m_util_8c_1adbb61325e88fab1a5463cda116647b6a" compoundref="_l_w_m2_m_util_8c" startline="175" endline="189">ScheduleUpdatePairResources</referencedby>
        <referencedby refid="_l_w_m2_m_util_8c_1aceccc0561ccc2e667a26f60a6e4431b5" compoundref="_l_w_m2_m_util_8c" startline="216" endline="231">ScheduleUpdateTrippleResources</referencedby>
        <referencedby refid="_l_w_m2_m_util_8c_1a41fe07cbe091fd3b4604aa6b09203496" compoundref="_l_w_m2_m_util_8c" startline="259" endline="266">ScheduleCall</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" prot="public" static="no">
        <type>struct <ref refid="struct_callable___s" kindref="compound">Callable_S</ref></type>
        <definition>typedef struct Callable_S Callable_T</definition>
        <argsstring></argsstring>
        <name>Callable_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The data type for callable elements.</para><para><simplesect kind="see"><para>struct <ref refid="struct_callable___s" kindref="compound">Callable_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" line="723" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_serval___callable_8h_1a6db595a6161d5ec5d75d560bd11d9ff2" prot="public" static="no">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref>(*</type>
        <definition>typedef retcode_t(* CallableFunc_T)(Callable_T *callable_ptr, retcode_t status)</definition>
        <argsstring>)(Callable_T *callable_ptr, retcode_t status)</argsstring>
        <name>CallableFunc_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This data type represents a function pointer for the function carried by the Callable_T element.</para><para>The parameter callable_ptr generally refers to the Callable_T element carrying this functions. This pointer is passed into the function in order to allow the retrieval of the context structure using the macro <ref refid="_serval___callable_8h_1aefa4934df585b0a7e768c608d64049bd" kindref="member">CALLABLE_GET_CONTEXT()</ref>. The other parameter status is used to pass the status which should be signaled to the invoked function.</para><para><simplesect kind="see"><para><ref refid="_serval___callable_8h_1aefa4934df585b0a7e768c608d64049bd" kindref="member">CALLABLE_GET_CONTEXT()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" line="52" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___callable_8h_1a552e0962e47ec55caef49de91176b52e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref> *</type>
        <definition>static Callable_T* Callable_assign</definition>
        <argsstring>(Callable_T *callable_ptr, CallableFunc_T function)</argsstring>
        <name>Callable_assign</name>
        <param>
          <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref> *</type>
          <declname>callable_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___callable_8h_1a6db595a6161d5ec5d75d560bd11d9ff2" kindref="member">CallableFunc_T</ref></type>
          <declname>function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function assigns a function to the given Callable.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callable_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a Callable_T object to which the function needs to be assigned. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">function</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a CallableFunc_T object, this holds the function to be assigned.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to Callable_T object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" line="103" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" bodystart="103" bodyend="108"/>
        <references refid="struct_callable___s_1a907cb3dbbe43f0e60dc1a6f03cf6ba23" compoundref="_serval___callable_8h" startline="65">Callable_S::func</references>
        <referencedby refid="_l_w_m2_m_util_8h_1ae1d28e0c67d65e52b4e20ce43c33affb" compoundref="_l_w_m2_m_util_8c" startline="152" endline="173">LWM2MUtil_UpdateSingleResource</referencedby>
        <referencedby refid="_l_w_m2_m_util_8h_1abcf35896cccc0800860339e9e7cc79fa" compoundref="_l_w_m2_m_util_8c" startline="192" endline="214">LWM2MUtil_UpdatePairResources</referencedby>
        <referencedby refid="_l_w_m2_m_util_8h_1a1ff840860e5d590f8faf91d32cbe2ff3" compoundref="_l_w_m2_m_util_8c" startline="234" endline="257">LWM2MUtil_UpdateTrippleResources</referencedby>
        <referencedby refid="_l_w_m2_m_util_8h_1a008c4225a368f8897d018b51e2f6fdca" compoundref="_l_w_m2_m_util_8c" startline="269" endline="280">LWM2MUtil_Schedule</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___callable_8h_1abde5ed446940eb67670ec38c5a5ebdd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
        <definition>retcode_t Callable_call</definition>
        <argsstring>(Callable_T *callable_ptr, retcode_t status)</argsstring>
        <name>Callable_call</name>
        <param>
          <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref> *</type>
          <declname>callable_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to invoke the callable element. It propagates the error code returned by the encapsulated function. also this function does not handle any exception returned by the invoked callback, instead it return the return code from callbeck as it is to the calling function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callable_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a Callable_T element to be invoked. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">status</parametername>
</parameternamelist>
<parameterdescription>
<para>Status to be passed to callable element.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the return value of the encapsulated function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___callable_8h_1a98d1fec24285be4ee1c8f21455dd8b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Callable_callback</definition>
        <argsstring>(Callable_T *callable_ptr, retcode_t status)</argsstring>
        <name>Callable_callback</name>
        <param>
          <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref> *</type>
          <declname>callable_ptr</declname>
        </param>
        <param>
          <type><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref></type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to invoke the callable element when it is used as a callback function. It works as <ref refid="_serval___callable_8h_1abde5ed446940eb67670ec38c5a5ebdd3" kindref="member">Callable_call()</ref> with the difference that any potential error codes are handled inside the function without propagating them to the caller. This is done this way since the caller of a callback function is not resposible and usually not able to handle errors in this context.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callable_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a Callable_T object which holds the callback function. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">status</parametername>
</parameternamelist>
<parameterdescription>
<para>Status to be passed to callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___callable_8h_1af1a45b6035ccf4042dccd7ed8367ef4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Callable_clear</definition>
        <argsstring>(Callable_T *callable_ptr)</argsstring>
        <name>Callable_clear</name>
        <param>
          <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref> *</type>
          <declname>callable_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function clears or resets the callable element by setting its function pointer to NULL.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callable_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a Callable_T object to be cleared. It has to be a valid pointer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" line="173" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" bodystart="173" bodyend="176"/>
        <references refid="struct_callable___s_1a907cb3dbbe43f0e60dc1a6f03cf6ba23" compoundref="_serval___callable_8h" startline="65">Callable_S::func</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <referencedby refid="_l_w_m2_m_util_8c_1ad1a6326b3fbca1827e7dd7bcd82112fe" compoundref="_l_w_m2_m_util_8c" startline="136" endline="149">ScheduleUpdateSingleResource</referencedby>
        <referencedby refid="_l_w_m2_m_util_8h_1ae1d28e0c67d65e52b4e20ce43c33affb" compoundref="_l_w_m2_m_util_8c" startline="152" endline="173">LWM2MUtil_UpdateSingleResource</referencedby>
        <referencedby refid="_l_w_m2_m_util_8c_1adbb61325e88fab1a5463cda116647b6a" compoundref="_l_w_m2_m_util_8c" startline="175" endline="189">ScheduleUpdatePairResources</referencedby>
        <referencedby refid="_l_w_m2_m_util_8h_1abcf35896cccc0800860339e9e7cc79fa" compoundref="_l_w_m2_m_util_8c" startline="192" endline="214">LWM2MUtil_UpdatePairResources</referencedby>
        <referencedby refid="_l_w_m2_m_util_8c_1aceccc0561ccc2e667a26f60a6e4431b5" compoundref="_l_w_m2_m_util_8c" startline="216" endline="231">ScheduleUpdateTrippleResources</referencedby>
        <referencedby refid="_l_w_m2_m_util_8h_1a1ff840860e5d590f8faf91d32cbe2ff3" compoundref="_l_w_m2_m_util_8c" startline="234" endline="257">LWM2MUtil_UpdateTrippleResources</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___callable_8h_1a3960f4b58f721ecd74cd6fb356426b46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Callable_isAssigned</definition>
        <argsstring>(Callable_T *callable_ptr)</argsstring>
        <name>Callable_isAssigned</name>
        <param>
          <type><ref refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" kindref="member">Callable_T</ref> *</type>
          <declname>callable_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function checks the given callable pointer on being valid (not NULL) and a valid function is assigned to it.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">callable_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference of object Callable_T to check for the state.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if the callable pointer is valid (not NULL) and it holds a valid callable function pointer. Otherwise, FALSE is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" line="120" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h" bodystart="120" bodyend="124"/>
        <references refid="group___b_a_s_i_c_s_1gac97b8ee753e4405397a42ad5799b0f9e" compoundref="_b_c_d_s___basics_8h" startline="84">null</references>
        <references refid="struct_callable___s_1a907cb3dbbe43f0e60dc1a6f03cf6ba23" compoundref="_serval___callable_8h" startline="65">Callable_S::func</references>
        <referencedby refid="_l_w_m2_m_util_8h_1ae1d28e0c67d65e52b4e20ce43c33affb" compoundref="_l_w_m2_m_util_8c" startline="152" endline="173">LWM2MUtil_UpdateSingleResource</referencedby>
        <referencedby refid="_l_w_m2_m_util_8h_1abcf35896cccc0800860339e9e7cc79fa" compoundref="_l_w_m2_m_util_8c" startline="192" endline="214">LWM2MUtil_UpdatePairResources</referencedby>
        <referencedby refid="_l_w_m2_m_util_8h_1a1ff840860e5d590f8faf91d32cbe2ff3" compoundref="_l_w_m2_m_util_8c" startline="234" endline="257">LWM2MUtil_UpdateTrippleResources</referencedby>
        <referencedby refid="_l_w_m2_m_util_8h_1a008c4225a368f8897d018b51e2f6fdca" compoundref="_l_w_m2_m_util_8c" startline="269" endline="280">LWM2MUtil_Schedule</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An implementation of function objects.</para><para>This module implements a data structure Callable_T which encapsulates a function pointer. Callable_T elements are used as jobs which can be enqueued into the scheduler queue such that they are invoked when the scheduler processes its waiting queue. They are also used as callback functions in the case of asynchronous (non-blocking) calls, such as sending. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">#ifndef<sp/>SERVAL_CALLABLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_CALLABLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___types_8h" kindref="compound">Serval_Types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___struct_ctx_8h" kindref="compound">Serval_StructCtx.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="_serval___callable_8h_1aa408037ca2aba1815007b4f41386f7c6" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_callable___s" kindref="compound">Callable_S</ref><sp/><ref refid="struct_callable___s" kindref="compound">Callable_T</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="_serval___callable_8h_1a6db595a6161d5ec5d75d560bd11d9ff2" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>(*<ref refid="_serval___callable_8h_1a6db595a6161d5ec5d75d560bd11d9ff2" kindref="member">CallableFunc_T</ref>)(<ref refid="struct_callable___s" kindref="compound">Callable_T</ref><sp/>*callable_ptr,<sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>status);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="struct_callable___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_callable___s" kindref="compound">Callable_S</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65" refid="struct_callable___s_1a907cb3dbbe43f0e60dc1a6f03cf6ba23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_serval___callable_8h_1a6db595a6161d5ec5d75d560bd11d9ff2" kindref="member">CallableFunc_T</ref><sp/><ref refid="struct_callable___s_1a907cb3dbbe43f0e60dc1a6f03cf6ba23" kindref="member">func</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="_serval___callable_8h_1aefa4934df585b0a7e768c608d64049bd" refkind="member"><highlight class="preprocessor">#define<sp/>CALLABLE_GET_CONTEXT(\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/>ContextTypeName,<sp/>ContextMemberNameOfCallable,<sp/>callable_ptr)<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/>GET_CONTEXT_OF_MEMBER(ContextTypeName,<sp/>ContextMemberNameOfCallable,<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>callable_ptr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="_serval___callable_8h_1a552e0962e47ec55caef49de91176b52e" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_callable___s" kindref="compound">Callable_T</ref><sp/>*<ref refid="_serval___callable_8h_1a552e0962e47ec55caef49de91176b52e" kindref="member">Callable_assign</ref>(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_callable___s" kindref="compound">Callable_T</ref>*<sp/>callable_ptr,<sp/><ref refid="_serval___callable_8h_1a6db595a6161d5ec5d75d560bd11d9ff2" kindref="member">CallableFunc_T</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>callable_ptr-&gt;<ref refid="struct_callable___s_1a907cb3dbbe43f0e60dc1a6f03cf6ba23" kindref="member">func</ref><sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>callable_ptr;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="_serval___callable_8h_1a3960f4b58f721ecd74cd6fb356426b46" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_serval___callable_8h_1a3960f4b58f721ecd74cd6fb356426b46" kindref="member">Callable_isAssigned</ref>(<ref refid="struct_callable___s" kindref="compound">Callable_T</ref>*<sp/>callable_ptr)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(callable_ptr<sp/>!=<sp/><ref refid="group___b_a_s_i_c_s_1gac97b8ee753e4405397a42ad5799b0f9e" kindref="member">null</ref>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(callable_ptr-&gt;<ref refid="struct_callable___s_1a907cb3dbbe43f0e60dc1a6f03cf6ba23" kindref="member">func</ref><sp/>!=<sp/>(<ref refid="_serval___callable_8h_1a6db595a6161d5ec5d75d560bd11d9ff2" kindref="member">CallableFunc_T</ref>)<ref refid="group___b_a_s_i_c_s_1gac97b8ee753e4405397a42ad5799b0f9e" kindref="member">null</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/><ref refid="_serval___callable_8h_1abde5ed446940eb67670ec38c5a5ebdd3" kindref="member">Callable_call</ref>(</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_callable___s" kindref="compound">Callable_T</ref>*<sp/>callable_ptr,<sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>status);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___callable_8h_1a98d1fec24285be4ee1c8f21455dd8b12" kindref="member">Callable_callback</ref>(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_callable___s" kindref="compound">Callable_T</ref>*<sp/>callable_ptr,<sp/><ref refid="_serval___types_8h_1a473797d61ec6d5f5a4f91d1d8b56b198" kindref="member">retcode_t</ref><sp/>status);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="_serval___callable_8h_1af1a45b6035ccf4042dccd7ed8367ef4e" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___callable_8h_1af1a45b6035ccf4042dccd7ed8367ef4e" kindref="member">Callable_clear</ref>(<ref refid="struct_callable___s" kindref="compound">Callable_T</ref>*<sp/>callable_ptr)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>callable_ptr-&gt;<ref refid="struct_callable___s_1a907cb3dbbe43f0e60dc1a6f03cf6ba23" kindref="member">func</ref><sp/>=<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_CALLABLE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Callable.h"/>
  </compounddef>
</doxygen>
