<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="nonos_8c" kind="file">
    <compoundname>nonos.c</compoundname>
    <includes refid="simplelink_8h" local="yes">simplelink.h</includes>
    <includes refid="protocol_8h" local="yes">protocol.h</includes>
    <includes refid="driver_8h" local="yes">driver.h</includes>
    <includes refid="nonos_8h" local="yes">nonos.h</includes>
    <incdepgraph>
      <node id="34355">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="34346" relation="include">
        </childnode>
      </node>
      <node id="34347">
        <label>user.h</label>
      </node>
      <node id="34348">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="34346" relation="include">
        </childnode>
      </node>
      <node id="34358">
        <label>protocol.h</label>
        <link refid="protocol_8h"/>
      </node>
      <node id="34350">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="34346" relation="include">
        </childnode>
      </node>
      <node id="34359">
        <label>driver.h</label>
        <link refid="driver_8h"/>
      </node>
      <node id="34345">
        <label>SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c</label>
        <link refid="nonos.c"/>
        <childnode refid="34346" relation="include">
        </childnode>
        <childnode refid="34358" relation="include">
        </childnode>
        <childnode refid="34359" relation="include">
        </childnode>
        <childnode refid="34357" relation="include">
        </childnode>
      </node>
      <node id="34357">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="34356">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="34346" relation="include">
        </childnode>
      </node>
      <node id="34352">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="34346" relation="include">
        </childnode>
      </node>
      <node id="34353">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="34346" relation="include">
        </childnode>
      </node>
      <node id="34351">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="34346" relation="include">
        </childnode>
      </node>
      <node id="34354">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="34346" relation="include">
        </childnode>
      </node>
      <node id="34349">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="34346" relation="include">
        </childnode>
      </node>
      <node id="34346">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="34347" relation="include">
        </childnode>
        <childnode refid="34348" relation="include">
        </childnode>
        <childnode refid="34349" relation="include">
        </childnode>
        <childnode refid="34350" relation="include">
        </childnode>
        <childnode refid="34351" relation="include">
        </childnode>
        <childnode refid="34352" relation="include">
        </childnode>
        <childnode refid="34353" relation="include">
        </childnode>
        <childnode refid="34354" relation="include">
        </childnode>
        <childnode refid="34355" relation="include">
        </childnode>
        <childnode refid="34356" relation="include">
        </childnode>
        <childnode refid="34357" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="nonos_8c_1aa187f417e4bd657be8f60a6119d798a8" prot="public" static="no" mutable="no">
        <type><ref refid="struct___sl_non_os_c_b__t" kindref="compound">_SlNonOsCB_t</ref></type>
        <definition>_SlNonOsCB_t g__SlNonOsCB</definition>
        <argsstring></argsstring>
        <name>g__SlNonOsCB</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c" line="52" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c" bodystart="52" bodyend="-1"/>
        <referencedby refid="driver_8h_1ae2bf640fd2366dd60b0218736e86ba1b" compoundref="driver_8c" startline="497" endline="551">_SlDrvDriverCBInit</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nonos_8c_1ac9697cfc827b271c5570f88a832d1f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nonos_8h_1a290180671b8de4420a5f0ad3d7b526da" kindref="member">_SlNonOsRetVal_t</ref></type>
        <definition>_SlNonOsRetVal_t _SlNonOsMainLoopTask</definition>
        <argsstring>(void)</argsstring>
        <name>_SlNonOsMainLoopTask</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function must be called from the main loop in non-os paltforms. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 - No more activities 1 - Activity still in progress </para></simplesect>
<simplesect kind="note"><para></para></simplesect>
<simplesect kind="warning"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c" line="165" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c" bodystart="165" bodyend="194"/>
        <references refid="simplelink_8h_1a86fece66c08bb2138117876194a9474a" compoundref="simplelink_8h" startline="223">_i8</references>
        <references refid="nonos_8h_1af6ac60cf7adfd6fcac980f1badc07616" compoundref="nonos_8h" startline="56">NONOS_MAX_SPAWN_ENTRIES</references>
        <references refid="struct___sl_non_os_c_b__t_1ac4bc5b932c600bf15f31afd6b06d78e3" compoundref="nonos_8h" startline="72">_SlNonOsCB_t::SpawnEntries</references>
        <references refid="struct___sl_non_os_spawn_entry__t_1a7442af650ebb9042595faba30f294c38" compoundref="nonos_8h" startline="67">_SlNonOsSpawnEntry_t::IsAllocated</references>
        <references refid="group___b_a_s_i_c_s_1gaa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_b_c_d_s___basics_8h" startline="73">TRUE</references>
        <references refid="struct___sl_non_os_spawn_entry__t_1aba58f3f75a8d954c2f97130d661941ab" compoundref="nonos_8h" startline="65">_SlNonOsSpawnEntry_t::pEntry</references>
        <references refid="struct___sl_non_os_spawn_entry__t_1a63ad54c993b6ca0d76f718dc1a1164c3" compoundref="nonos_8h" startline="66">_SlNonOsSpawnEntry_t::pValue</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_a_s_i_c_s_1gaa93f0eb578d23995850d61f7d61c55c1" compoundref="_b_c_d_s___basics_8h" startline="76">FALSE</references>
        <references refid="nonos_8h_1a8428f89abce5bc56c94d2525d5b806d5" compoundref="nonos_8h" startline="79">NONOS_RET_OK</references>
        <referencedby refid="nonos_8h_1a954d558f1d447286f292f24017f2779b" compoundref="nonos_8c" startline="61" endline="134">_SlNonOsSemGet</referencedby>
      </memberdef>
      <memberdef kind="function" id="nonos_8c_1a954d558f1d447286f292f24017f2779b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nonos_8h_1a290180671b8de4420a5f0ad3d7b526da" kindref="member">_SlNonOsRetVal_t</ref></type>
        <definition>_SlNonOsRetVal_t _SlNonOsSemGet</definition>
        <argsstring>(_SlNonOsSemObj_t *pSyncObj, _SlNonOsSemObj_t WaitValue, _SlNonOsSemObj_t SetValue, _SlNonOsTime_t Timeout)</argsstring>
        <name>_SlNonOsSemGet</name>
        <param>
          <type><ref refid="nonos_8h_1ad8d1dde26a161d1575ee47a6c2918ab7" kindref="member">_SlNonOsSemObj_t</ref> *</type>
          <declname>pSyncObj</declname>
        </param>
        <param>
          <type><ref refid="nonos_8h_1ad8d1dde26a161d1575ee47a6c2918ab7" kindref="member">_SlNonOsSemObj_t</ref></type>
          <declname>WaitValue</declname>
        </param>
        <param>
          <type><ref refid="nonos_8h_1ad8d1dde26a161d1575ee47a6c2918ab7" kindref="member">_SlNonOsSemObj_t</ref></type>
          <declname>SetValue</declname>
        </param>
        <param>
          <type><ref refid="nonos_8h_1a48b09e140347a093df1e64251458b83c" kindref="member">_SlNonOsTime_t</ref></type>
          <declname>Timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c" line="61" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c" bodystart="61" bodyend="134"/>
        <references refid="simplelink_8h_1a44f20b191bdb85d44eabe758192d7f11" compoundref="simplelink_8h" startline="222">_u8</references>
        <references refid="nonos_8h_1a8428f89abce5bc56c94d2525d5b806d5" compoundref="nonos_8h" startline="79">NONOS_RET_OK</references>
        <references refid="nonos_8h_1a1bf1647530d8adcd30e8434d8dc9ba0c" compoundref="nonos_8h" startline="76">NONOS_WAIT_FOREVER</references>
        <references refid="nonos_8h_1a982b799d22b1926cada119d6f87d401d" compoundref="nonos_8h" startline="77">NONOS_NO_WAIT</references>
        <references refid="nonos_8h_1ad2cef6ae792816911f7a6c1c443232e8" compoundref="nonos_8h" startline="80">NONOS_RET_ERR</references>
        <references refid="group___b_a_s_i_c_s_1gaa93f0eb578d23995850d61f7d61c55c1" compoundref="_b_c_d_s___basics_8h" startline="76">FALSE</references>
        <references refid="driver_8c_1a4b8ef9e93bdf76f67c2619d9c60ee32b" compoundref="driver_8c" startline="468">g_pCB</references>
        <references refid="struct___sl_driver_cb__t_1ab526a0711b84048f1ae2a40c8d0446ee" compoundref="driver_8h" startline="264">_SlDriverCb_t::IsCmdRespWaited</references>
        <references refid="nonos_8c_1ac9697cfc827b271c5570f88a832d1f9c" compoundref="nonos_8c" startline="165" endline="194">_SlNonOsMainLoopTask</references>
        <references refid="nonos_8h_1a51201013a0447b6082cb559c61c2e6cc" compoundref="nonos_8h" startline="84">__NON_OS_SYNC_OBJ_SIGNAL_VALUE</references>
      </memberdef>
      <memberdef kind="function" id="nonos_8c_1a46435f3fba476397d3ba74df5528d325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nonos_8h_1a290180671b8de4420a5f0ad3d7b526da" kindref="member">_SlNonOsRetVal_t</ref></type>
        <definition>_SlNonOsRetVal_t _SlNonOsSemSet</definition>
        <argsstring>(_SlNonOsSemObj_t *pSemObj, _SlNonOsSemObj_t Value)</argsstring>
        <name>_SlNonOsSemSet</name>
        <param>
          <type><ref refid="nonos_8h_1ad8d1dde26a161d1575ee47a6c2918ab7" kindref="member">_SlNonOsSemObj_t</ref> *</type>
          <declname>pSemObj</declname>
        </param>
        <param>
          <type><ref refid="nonos_8h_1ad8d1dde26a161d1575ee47a6c2918ab7" kindref="member">_SlNonOsSemObj_t</ref></type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c" line="55" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c" bodystart="55" bodyend="59"/>
        <references refid="nonos_8h_1a8428f89abce5bc56c94d2525d5b806d5" compoundref="nonos_8h" startline="79">NONOS_RET_OK</references>
      </memberdef>
      <memberdef kind="function" id="nonos_8c_1a82603f206edc009b152527b72a0d6d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="nonos_8h_1a290180671b8de4420a5f0ad3d7b526da" kindref="member">_SlNonOsRetVal_t</ref></type>
        <definition>_SlNonOsRetVal_t _SlNonOsSpawn</definition>
        <argsstring>(_SlSpawnEntryFunc_t pEntry, void *pValue, _u32 flags)</argsstring>
        <name>_SlNonOsSpawn</name>
        <param>
          <type><ref refid="group___user_events_1gab16f1ff833e9170a968990d22ec082b2" kindref="member">_SlSpawnEntryFunc_t</ref></type>
          <declname>pEntry</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pValue</declname>
        </param>
        <param>
          <type><ref refid="simplelink_8h_1a87886b60e61f791da9953f573bc83d8d" kindref="member">_u32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>This function call the pEntry callback from a different context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pEntry</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to the entry callback function</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pValue</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to any type of memory structure that would be passed to pEntry callback from the execution thread.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>- execution flags - reserved for future usage</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>upon successful registration of the spawn the function return 0 (the function is not blocked till the end of the execution of the function and could be returned before the execution is actually completed) Otherwise, a negative value indicating the error code shall be returned </para></simplesect>
<simplesect kind="note"><para></para></simplesect>
<simplesect kind="warning"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c" line="137" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c" bodystart="137" bodyend="162"/>
        <references refid="simplelink_8h_1a86fece66c08bb2138117876194a9474a" compoundref="simplelink_8h" startline="223">_i8</references>
        <references refid="nonos_8h_1af6ac60cf7adfd6fcac980f1badc07616" compoundref="nonos_8h" startline="56">NONOS_MAX_SPAWN_ENTRIES</references>
        <references refid="struct___sl_non_os_c_b__t_1ac4bc5b932c600bf15f31afd6b06d78e3" compoundref="nonos_8h" startline="72">_SlNonOsCB_t::SpawnEntries</references>
        <references refid="struct___sl_non_os_spawn_entry__t_1a7442af650ebb9042595faba30f294c38" compoundref="nonos_8h" startline="67">_SlNonOsSpawnEntry_t::IsAllocated</references>
        <references refid="group___b_a_s_i_c_s_1gaa93f0eb578d23995850d61f7d61c55c1" compoundref="_b_c_d_s___basics_8h" startline="76">FALSE</references>
        <references refid="struct___sl_non_os_spawn_entry__t_1a63ad54c993b6ca0d76f718dc1a1164c3" compoundref="nonos_8h" startline="66">_SlNonOsSpawnEntry_t::pValue</references>
        <references refid="struct___sl_non_os_spawn_entry__t_1aba58f3f75a8d954c2f97130d661941ab" compoundref="nonos_8h" startline="65">_SlNonOsSpawnEntry_t::pEntry</references>
        <references refid="group___b_a_s_i_c_s_1gaa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_b_c_d_s___basics_8h" startline="73">TRUE</references>
        <references refid="nonos_8h_1a8428f89abce5bc56c94d2525d5b806d5" compoundref="nonos_8h" startline="79">NONOS_RET_OK</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>nonos.c<sp/>-<sp/>CC31xx/CC32xx<sp/>Host<sp/>Driver<sp/>Implementation</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2015<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>-<sp/>http://www.ti.com/<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Include<sp/>files<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="simplelink_8h" kindref="compound">simplelink.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="protocol_8h" kindref="compound">protocol.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="driver_8h" kindref="compound">driver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SL_PLATFORM_MULTI_THREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nonos_8h" kindref="compound">nonos.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="nonos_8c_1aa187f417e4bd657be8f60a6119d798a8" refkind="member"><highlight class="normal"><ref refid="struct___sl_non_os_c_b__t" kindref="compound">_SlNonOsCB_t</ref><sp/><ref refid="nonos_8c_1aa187f417e4bd657be8f60a6119d798a8" kindref="member">g__SlNonOsCB</ref><sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="nonos_8h_1a46435f3fba476397d3ba74df5528d325" refkind="member"><highlight class="normal"><ref refid="nonos_8h_1a290180671b8de4420a5f0ad3d7b526da" kindref="member">_SlNonOsRetVal_t</ref><sp/><ref refid="nonos_8c_1a46435f3fba476397d3ba74df5528d325" kindref="member">_SlNonOsSemSet</ref>(<ref refid="nonos_8h_1ad8d1dde26a161d1575ee47a6c2918ab7" kindref="member">_SlNonOsSemObj_t</ref>*<sp/>pSemObj<sp/>,<sp/><ref refid="nonos_8h_1ad8d1dde26a161d1575ee47a6c2918ab7" kindref="member">_SlNonOsSemObj_t</ref><sp/>Value)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>*pSemObj<sp/>=<sp/>Value;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="nonos_8h_1a8428f89abce5bc56c94d2525d5b806d5" kindref="member">NONOS_RET_OK</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="nonos_8h_1a954d558f1d447286f292f24017f2779b" refkind="member"><highlight class="normal"><ref refid="nonos_8h_1a290180671b8de4420a5f0ad3d7b526da" kindref="member">_SlNonOsRetVal_t</ref><sp/><ref refid="nonos_8c_1a954d558f1d447286f292f24017f2779b" kindref="member">_SlNonOsSemGet</ref>(<ref refid="nonos_8h_1ad8d1dde26a161d1575ee47a6c2918ab7" kindref="member">_SlNonOsSemObj_t</ref>*<sp/>pSyncObj,<sp/><ref refid="nonos_8h_1ad8d1dde26a161d1575ee47a6c2918ab7" kindref="member">_SlNonOsSemObj_t</ref><sp/>WaitValue,<sp/><ref refid="nonos_8h_1ad8d1dde26a161d1575ee47a6c2918ab7" kindref="member">_SlNonOsSemObj_t</ref><sp/>SetValue,<sp/><ref refid="nonos_8h_1a48b09e140347a093df1e64251458b83c" kindref="member">_SlNonOsTime_t</ref><sp/>Timeout)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(!defined<sp/>(SL_TINY))<sp/>&amp;&amp;<sp/>(defined(sl_GetTimestamp))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___sl_timeout_params__t" kindref="compound">_SlTimeoutParams_t</ref><sp/><sp/><sp/><sp/><sp/><sp/>TimeoutInfo={0};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>timeout<sp/>0<sp/>configured,<sp/>just<sp/>detect<sp/>the<sp/>value<sp/>and<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Timeout<sp/>==0)<sp/>&amp;&amp;<sp/>(WaitValue<sp/>==<sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="simplelink_8h_1a44f20b191bdb85d44eabe758192d7f11" kindref="member">_u8</ref><sp/>*)pSyncObj))<sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pSyncObj<sp/>=<sp/>SetValue;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="nonos_8h_1a8428f89abce5bc56c94d2525d5b806d5" kindref="member">NONOS_RET_OK</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(!defined<sp/>(SL_TINY))<sp/>&amp;&amp;<sp/>(defined(sl_GetTimestamp))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Timeout<sp/>!=<sp/><ref refid="nonos_8h_1a1bf1647530d8adcd30e8434d8dc9ba0c" kindref="member">NONOS_WAIT_FOREVER</ref>)<sp/>&amp;&amp;<sp/>(Timeout<sp/>!=<sp/><ref refid="nonos_8h_1a982b799d22b1926cada119d6f87d401d" kindref="member">NONOS_NO_WAIT</ref>))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SlDrvStartMeasureTimeout(&amp;TimeoutInfo,<sp/>Timeout);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_SlSyncWaitLoopCallback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="nonos_8h_1a48b09e140347a093df1e64251458b83c" kindref="member">_SlNonOsTime_t</ref><sp/>timeOutRequest<sp/>=<sp/>Timeout;<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Timeout&gt;0)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WaitValue<sp/>==<sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="simplelink_8h_1a44f20b191bdb85d44eabe758192d7f11" kindref="member">_u8</ref><sp/>*)pSyncObj))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pSyncObj<sp/>=<sp/>SetValue;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(!defined<sp/>(sl_GetTimestamp))<sp/>||<sp/><sp/>(defined<sp/>(SL_TINY_EXT))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Timeout<sp/>!=<sp/><ref refid="nonos_8h_1a1bf1647530d8adcd30e8434d8dc9ba0c" kindref="member">NONOS_WAIT_FOREVER</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timeout--;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Timeout<sp/>!=<sp/><ref refid="nonos_8h_1a1bf1647530d8adcd30e8434d8dc9ba0c" kindref="member">NONOS_WAIT_FOREVER</ref>)<sp/>&amp;&amp;<sp/>(Timeout<sp/>!=<sp/><ref refid="nonos_8h_1a982b799d22b1926cada119d6f87d401d" kindref="member">NONOS_NO_WAIT</ref>))</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_SlDrvIsTimeoutExpired(&amp;TimeoutInfo))</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="nonos_8h_1a290180671b8de4420a5f0ad3d7b526da" kindref="member">_SlNonOsRetVal_t</ref>)<ref refid="nonos_8h_1ad2cef6ae792816911f7a6c1c443232e8" kindref="member">NONOS_RET_ERR</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>are<sp/>in<sp/>cmd<sp/>context<sp/>and<sp/>waiting<sp/>for<sp/>its<sp/>cmd<sp/>response</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>do<sp/>not<sp/>handle<sp/>spawn<sp/>async<sp/>events<sp/>as<sp/>the<sp/>global<sp/>lock<sp/>was<sp/>already<sp/>taken<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_a_s_i_c_s_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref><sp/>==<sp/><ref refid="driver_8c_1a4b8ef9e93bdf76f67c2619d9c60ee32b" kindref="member">g_pCB</ref>-&gt;<ref refid="struct___sl_driver_cb__t_1ab526a0711b84048f1ae2a40c8d0446ee" kindref="member">IsCmdRespWaited</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<ref refid="nonos_8c_1ac9697cfc827b271c5570f88a832d1f9c" kindref="member">_SlNonOsMainLoopTask</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_SlSyncWaitLoopCallback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<ref refid="nonos_8h_1a51201013a0447b6082cb559c61c2e6cc" kindref="member">__NON_OS_SYNC_OBJ_SIGNAL_VALUE</ref><sp/>==<sp/>WaitValue)<sp/>&amp;&amp;<sp/>(timeOutRequest<sp/>!=<sp/><ref refid="nonos_8h_1a982b799d22b1926cada119d6f87d401d" kindref="member">NONOS_NO_WAIT</ref>)<sp/>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WaitValue<sp/>==<sp/>*((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="simplelink_8h_1a44f20b191bdb85d44eabe758192d7f11" kindref="member">_u8</ref><sp/>*)pSyncObj))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pSyncObj<sp/>=<sp/>SetValue;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SlSyncWaitLoopCallback();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>Timeout)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="nonos_8h_1ad2cef6ae792816911f7a6c1c443232e8" kindref="member">NONOS_RET_ERR</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="nonos_8h_1a8428f89abce5bc56c94d2525d5b806d5" kindref="member">NONOS_RET_OK</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="nonos_8h_1a82603f206edc009b152527b72a0d6d65" refkind="member"><highlight class="normal"><ref refid="nonos_8h_1a290180671b8de4420a5f0ad3d7b526da" kindref="member">_SlNonOsRetVal_t</ref><sp/><ref refid="nonos_8c_1a82603f206edc009b152527b72a0d6d65" kindref="member">_SlNonOsSpawn</ref>(<ref refid="group___user_events_1gab16f1ff833e9170a968990d22ec082b2" kindref="member">_SlSpawnEntryFunc_t</ref><sp/>pEntry<sp/>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pValue<sp/>,<sp/><ref refid="simplelink_8h_1a87886b60e61f791da9953f573bc83d8d" kindref="member">_u32</ref><sp/>flags)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="simplelink_8h_1a86fece66c08bb2138117876194a9474a" kindref="member">_i8</ref><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(void)flags;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SL_TINY_EXT<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0<sp/>;<sp/>i&lt;<ref refid="nonos_8h_1af6ac60cf7adfd6fcac980f1badc07616" kindref="member">NONOS_MAX_SPAWN_ENTRIES</ref><sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">#endif<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___sl_non_os_spawn_entry__t" kindref="compound">_SlNonOsSpawnEntry_t</ref>*<sp/>pE<sp/>=<sp/>&amp;g__SlNonOsCB.<ref refid="struct___sl_non_os_c_b__t_1ac4bc5b932c600bf15f31afd6b06d78e3" kindref="member">SpawnEntries</ref>[i];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pE-&gt;<ref refid="struct___sl_non_os_spawn_entry__t_1a7442af650ebb9042595faba30f294c38" kindref="member">IsAllocated</ref><sp/>==<sp/><ref refid="group___b_a_s_i_c_s_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pE-&gt;<ref refid="struct___sl_non_os_spawn_entry__t_1a63ad54c993b6ca0d76f718dc1a1164c3" kindref="member">pValue</ref><sp/>=<sp/>pValue;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pE-&gt;<ref refid="struct___sl_non_os_spawn_entry__t_1aba58f3f75a8d954c2f97130d661941ab" kindref="member">pEntry</ref><sp/>=<sp/>pEntry;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pE-&gt;<ref refid="struct___sl_non_os_spawn_entry__t_1a7442af650ebb9042595faba30f294c38" kindref="member">IsAllocated</ref><sp/>=<sp/><ref refid="group___b_a_s_i_c_s_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SL_TINY_EXT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="nonos_8h_1a8428f89abce5bc56c94d2525d5b806d5" kindref="member">NONOS_RET_OK</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="nonos_8h_1ac9697cfc827b271c5570f88a832d1f9c" refkind="member"><highlight class="normal"><ref refid="nonos_8h_1a290180671b8de4420a5f0ad3d7b526da" kindref="member">_SlNonOsRetVal_t</ref><sp/><ref refid="nonos_8c_1ac9697cfc827b271c5570f88a832d1f9c" kindref="member">_SlNonOsMainLoopTask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="simplelink_8h_1a86fece66c08bb2138117876194a9474a" kindref="member">_i8</ref><sp/>i=0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/>pValue;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SL_TINY_EXT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0<sp/>;<sp/>i&lt;<ref refid="nonos_8h_1af6ac60cf7adfd6fcac980f1badc07616" kindref="member">NONOS_MAX_SPAWN_ENTRIES</ref><sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___sl_non_os_spawn_entry__t" kindref="compound">_SlNonOsSpawnEntry_t</ref>*<sp/>pE<sp/>=<sp/>&amp;g__SlNonOsCB.<ref refid="struct___sl_non_os_c_b__t_1ac4bc5b932c600bf15f31afd6b06d78e3" kindref="member">SpawnEntries</ref>[i];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pE-&gt;<ref refid="struct___sl_non_os_spawn_entry__t_1a7442af650ebb9042595faba30f294c38" kindref="member">IsAllocated</ref><sp/>==<sp/><ref refid="group___b_a_s_i_c_s_1gaa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___user_events_1gab16f1ff833e9170a968990d22ec082b2" kindref="member">_SlSpawnEntryFunc_t</ref><sp/><sp/>pF<sp/>=<sp/>pE-&gt;<ref refid="struct___sl_non_os_spawn_entry__t_1aba58f3f75a8d954c2f97130d661941ab" kindref="member">pEntry</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pValue<sp/>=<sp/>pE-&gt;<ref refid="struct___sl_non_os_spawn_entry__t_1a63ad54c993b6ca0d76f718dc1a1164c3" kindref="member">pValue</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>the<sp/>entry<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pE-&gt;<ref refid="struct___sl_non_os_spawn_entry__t_1aba58f3f75a8d954c2f97130d661941ab" kindref="member">pEntry</ref><sp/>=<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pE-&gt;<ref refid="struct___sl_non_os_spawn_entry__t_1a63ad54c993b6ca0d76f718dc1a1164c3" kindref="member">pValue</ref><sp/>=<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pE-&gt;<ref refid="struct___sl_non_os_spawn_entry__t_1a7442af650ebb9042595faba30f294c38" kindref="member">IsAllocated</ref><sp/>=<sp/><ref refid="group___b_a_s_i_c_s_1gaa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>execute<sp/>the<sp/>spawn<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pF(pValue);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="nonos_8h_1a8428f89abce5bc56c94d2525d5b806d5" kindref="member">NONOS_RET_OK</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*(SL_PLATFORM<sp/>!=<sp/>SL_PLATFORM_NON_OS)*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/WiFi/3rd-party/TI/simplelink/source/nonos.c"/>
  </compounddef>
</doxygen>
