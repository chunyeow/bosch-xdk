<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_adc_central_8h" kind="file">
    <compoundname>AdcCentral.h</compoundname>
    <includes refid="_mcu___adc_8h" local="yes">Mcu_Adc.h</includes>
    <includedby refid="_adc_central_8c" local="yes">SDK/xdk110/Common/source/AdcCentral.c</includedby>
    <includedby refid="_battery_monitor_8c" local="yes">SDK/xdk110/Common/source/BatteryMonitor.c</includedby>
    <includedby refid="_lem_8c" local="yes">SDK/xdk110/Common/source/Sensor/Lem.c</includedby>
    <includedby refid="_noise_sensor_8c" local="yes">SDK/xdk110/Common/source/Sensor/NoiseSensor.c</includedby>
    <incdepgraph>
      <node id="23044">
        <label>stdbool.h</label>
      </node>
      <node id="23047">
        <label>BCDS_HALConfig.h</label>
        <link refid="_b_c_d_s___h_a_l_config_8h"/>
      </node>
      <node id="23039">
        <label>Mcu_Adc.h</label>
        <link refid="_mcu___adc_8h"/>
        <childnode refid="23040" relation="include">
        </childnode>
        <childnode refid="23042" relation="include">
        </childnode>
        <childnode refid="23048" relation="include">
        </childnode>
      </node>
      <node id="23043">
        <label>stdint.h</label>
      </node>
      <node id="23041">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="23042" relation="include">
        </childnode>
      </node>
      <node id="23046">
        <label>stdlib.h</label>
      </node>
      <node id="23048">
        <label>em_adc.h</label>
      </node>
      <node id="23038">
        <label>SDK/xdk110/Common/include/AdcCentral.h</label>
        <link refid="AdcCentral.h"/>
        <childnode refid="23039" relation="include">
        </childnode>
      </node>
      <node id="23045">
        <label>string.h</label>
      </node>
      <node id="23042">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="23043" relation="include">
        </childnode>
        <childnode refid="23044" relation="include">
        </childnode>
        <childnode refid="23045" relation="include">
        </childnode>
        <childnode refid="23046" relation="include">
        </childnode>
      </node>
      <node id="23040">
        <label>BCDS_HAL.h</label>
        <link refid="_b_c_d_s___h_a_l_8h"/>
        <childnode refid="23041" relation="include">
        </childnode>
        <childnode refid="23047" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="23050">
        <label>SDK/xdk110/Common/source/AdcCentral.c</label>
        <link refid="_adc_central_8c"/>
      </node>
      <node id="23053">
        <label>SDK/xdk110/Common/source/Sensor/NoiseSensor.c</label>
        <link refid="_noise_sensor_8c"/>
      </node>
      <node id="23049">
        <label>SDK/xdk110/Common/include/AdcCentral.h</label>
        <link refid="AdcCentral.h"/>
        <childnode refid="23050" relation="include">
        </childnode>
        <childnode refid="23051" relation="include">
        </childnode>
        <childnode refid="23052" relation="include">
        </childnode>
        <childnode refid="23053" relation="include">
        </childnode>
      </node>
      <node id="23052">
        <label>SDK/xdk110/Common/source/Sensor/Lem.c</label>
        <link refid="_lem_8c"/>
      </node>
      <node id="23051">
        <label>SDK/xdk110/Common/source/BatteryMonitor.c</label>
        <link refid="_battery_monitor_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_adc_central___config_scan___s" prot="public">AdcCentral_ConfigScan_S</innerclass>
    <innerclass refid="struct_adc_central___config_single___s" prot="public">AdcCentral_ConfigSingle_S</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___m_c_u___a_d_c_1ga7a491848ba3e936f2ddbee610d3841f6" prot="public" static="no">
        <type>struct <ref refid="struct_adc_central___config_scan___s" kindref="compound">AdcCentral_ConfigScan_S</ref></type>
        <definition>typedef struct AdcCentral_ConfigScan_S AdcCentral_ConfigScan_T</definition>
        <argsstring></argsstring>
        <name>AdcCentral_ConfigScan_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" line="85" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___m_c_u___a_d_c_1ga220058012ede24f1a07b094f16212b87" prot="public" static="no">
        <type>struct <ref refid="struct_adc_central___config_scan___s" kindref="compound">AdcCentral_ConfigScan_S</ref> *</type>
        <definition>typedef struct AdcCentral_ConfigScan_S * AdcCentral_ConfigScanPtr_T</definition>
        <argsstring></argsstring>
        <name>AdcCentral_ConfigScanPtr_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" line="97" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___m_c_u___a_d_c_1ga825fd3a13fc79254c43abe31e9032cfe" prot="public" static="no">
        <type>struct <ref refid="struct_adc_central___config_single___s" kindref="compound">AdcCentral_ConfigSingle_S</ref></type>
        <definition>typedef struct AdcCentral_ConfigSingle_S AdcCentral_ConfigSingle_T</definition>
        <argsstring></argsstring>
        <name>AdcCentral_ConfigSingle_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" line="71" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___m_c_u___a_d_c_1ga6220128058d11b9e3349f5bbb150488d" prot="public" static="no">
        <type>struct <ref refid="struct_adc_central___config_single___s" kindref="compound">AdcCentral_ConfigSingle_S</ref> *</type>
        <definition>typedef struct AdcCentral_ConfigSingle_S * AdcCentral_ConfigSinglePtr_T</definition>
        <argsstring></argsstring>
        <name>AdcCentral_ConfigSinglePtr_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" line="85" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___m_c_u___a_d_c_1gad1a5f38fbc9f6541d760ef92c114ad3e" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* AdcCentral_ScanCallback_T)(ADC_T adc, uint32_t samplingFrequency, uint16_t *buffer)</definition>
        <argsstring>)(ADC_T adc, uint32_t samplingFrequency, uint16_t *buffer)</argsstring>
        <name>AdcCentral_ScanCallback_T</name>
        <briefdescription>
<para>Application callback for scan channel configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">adc</parametername>
</parameternamelist>
<parameterdescription>
<para>MCU handle for ADC </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">samplingFrequency</parametername>
</parameternamelist>
<parameterdescription>
<para>structure holding data and its sampling frequency </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer pointing to the ADC samples </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" line="63" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___m_c_u___a_d_c_1ga889727ddbc5fd21aa40e1bd88f76377b" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* AdcCentral_SingleCallback_T)(ADC_T adc, uint16_t *buffer)</definition>
        <argsstring>)(ADC_T adc, uint16_t *buffer)</argsstring>
        <name>AdcCentral_SingleCallback_T</name>
        <briefdescription>
<para>Application callback template for single channel configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">adc</parametername>
</parameternamelist>
<parameterdescription>
<para>MCU handle for ADC </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer pointing to the ADC samples </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" line="71" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___m_c_u___a_d_c_1gaf745cabdf12c14268e1317ff99a3d2da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T AdcCentral_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>AdcCentral_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>De-Initialize the ADC Module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>upon successful execution, error otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" line="151" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/AdcCentral.c" bodystart="394" bodyend="432"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="_adc_central_8c_1a83fe8a748cf41c0ca3b6b41f029e01c0af7aa8e51c7170a049f74d7e2fd9d7a4f" compoundref="_adc_central_8c" startline="74">ADC_CENTRAL_INIT</references>
        <references refid="struct_adc_central___info___s_1aed939bad236bffc5eb20eb9899b45cbf" compoundref="_adc_central_8c" startline="98">AdcCentral_Info_S::State</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="_xdk_common_info_8h_1af47ea12fc017f15b07bf3c5b537cba8ba103663504fb5c775f38e0b6eb553ab19" compoundref="_xdk_common_info_8h" startline="133">RETCODE_ADC_CENTRAL_ALREADY_DEINIT</references>
        <references refid="_mcu___adc_8c_1a672221ef60cfa0f6eb0ff4dca833a86f" compoundref="_mcu___adc_8c" startline="438" endline="471">Mcu_Adc_StopScan</references>
        <references refid="struct_adc_central___info___s_1ab51a3d55bb779237d0b6dc4ac70d80e6" compoundref="_adc_central_8c" startline="102">AdcCentral_Info_S::ScanChannelConfigLock</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="semphr_8h_1acd7d0eda0923d7caeeaaee9202c43eab" compoundref="semphr_8h" startline="1098">vSemaphoreDelete</references>
        <references refid="struct_adc_central___info___s_1a18110e09b7434e81cb705055b0896bb3" compoundref="_adc_central_8c" startline="101">AdcCentral_Info_S::ScanChannelInfoLock</references>
        <references refid="group___g_u_a_r_d_e_d_t_a_s_k_1ga51f6e6351b9c18daa93967c7c3ee9528">GuardedTask_Deinitialize</references>
        <references refid="struct_adc_central___info___s_1a6d3b42abde7a9e97f746bf7d3f65916b" compoundref="_adc_central_8c" startline="99">AdcCentral_Info_S::AdcScanGuardedTaskHandle</references>
        <references refid="_mcu___adc_8c_1a44e63406e19cdf37c1ea9c92f82c060f" compoundref="_mcu___adc_8c" startline="290" endline="321">Mcu_Adc_DeInitialize</references>
        <references refid="struct_adc_central___info___s_1aea5c14a63fa4f4c89309ca0ad4e474ee" compoundref="_adc_central_8c" startline="103">AdcCentral_Info_S::SingleChannel</references>
        <references refid="struct_adc_central___single_channel_info___s_1ae3488ce35a32ef4d00d3d194c2abfc6f" compoundref="_adc_central_8c" startline="91">AdcCentral_SingleChannelInfo_S::State</references>
        <references refid="_adc_central_8c_1adb5389b414718e6dbb08d41d33bb7f5ea27cb59877497736172278df85fa234ee" compoundref="_adc_central_8c" startline="64">ADC_SINGLE_STATE_INIT</references>
      </memberdef>
      <memberdef kind="function" id="group___m_c_u___a_d_c_1ga384bfb9ef993b0b92e10b86f753de9b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T AdcCentral_Init</definition>
        <argsstring>(void)</argsstring>
        <name>AdcCentral_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the ADC Central Module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>upon successful execution, error otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" line="105" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/AdcCentral.c" bodystart="435" bodyend="473"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="_adc_central_8c_1a83fe8a748cf41c0ca3b6b41f029e01c0ae9ce8f41c98ed8bd035109c9085db24b" compoundref="_adc_central_8c" startline="75">ADC_CENTRAL_READY</references>
        <references refid="struct_adc_central___info___s_1aed939bad236bffc5eb20eb9899b45cbf" compoundref="_adc_central_8c" startline="98">AdcCentral_Info_S::State</references>
        <references refid="_mcu___adc_8c_1ac43ceff74fb52944a6f5a70090e1368e" compoundref="_mcu___adc_8c" startline="245" endline="287">Mcu_Adc_Initialize</references>
        <references refid="_adc_central_8c_1a0d97f4dc9f61d71d47a5d6969a7bd406" compoundref="_adc_central_8c" startline="191" endline="236">AdcIRQCallback</references>
        <references refid="group___g_u_a_r_d_e_d_t_a_s_k_1ga03ba41bc6f613d186f100ac6bd4de4ad">GuardedTask_Initialize</references>
        <references refid="struct_adc_central___info___s_1a6d3b42abde7a9e97f746bf7d3f65916b" compoundref="_adc_central_8c" startline="99">AdcCentral_Info_S::AdcScanGuardedTaskHandle</references>
        <references refid="_adc_central_8c_1a26665316284353545a1c721aa901e5a7" compoundref="_adc_central_8c" startline="238" endline="392">receiveProcess</references>
        <references refid="group___a_d_c_c_e_n_t_r_a_l_c_o_n_f_i_g_1gae6236affea43aaef2d9d07b2a0f4ab03" compoundref="_adc_central_config_8h" startline="72">ADCCENTRAL_TASK_PRIORITY</references>
        <references refid="group___a_d_c_c_e_n_t_r_a_l_c_o_n_f_i_g_1ga875317fe83fdb8da0df63bbff942409c" compoundref="_adc_central_config_8h" startline="76">ADCCENTRAL_TASK_STACK_SIZE</references>
        <references refid="struct_adc_central___info___s_1a18110e09b7434e81cb705055b0896bb3" compoundref="_adc_central_8c" startline="101">AdcCentral_Info_S::ScanChannelInfoLock</references>
        <references refid="struct_adc_central___info___s_1ab51a3d55bb779237d0b6dc4ac70d80e6" compoundref="_adc_central_8c" startline="102">AdcCentral_Info_S::ScanChannelConfigLock</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba281b77d7bbd0b11781de864c12f32fd9" compoundref="_b_c_d_s___retcode_8h" startline="117">RETCODE_SEMAPHORE_ERROR</references>
        <references refid="struct_adc_central___info___s_1aea5c14a63fa4f4c89309ca0ad4e474ee" compoundref="_adc_central_8c" startline="103">AdcCentral_Info_S::SingleChannel</references>
        <references refid="struct_adc_central___single_channel_info___s_1ae3488ce35a32ef4d00d3d194c2abfc6f" compoundref="_adc_central_8c" startline="91">AdcCentral_SingleChannelInfo_S::State</references>
        <references refid="_adc_central_8c_1adb5389b414718e6dbb08d41d33bb7f5eaf152a7ab4bd45578690379a7607043e9" compoundref="_adc_central_8c" startline="65">ADC_SINGLE_STATE_READY</references>
        <references refid="struct_adc_central___info___s_1a1949f525ed3d5d1fa9b58eea872634e5" compoundref="_adc_central_8c" startline="104">AdcCentral_Info_S::ScanSamplingFreq</references>
        <references refid="struct_adc_central___info___s_1ae4ac402d62ac267309bab17f68c2b4fc" compoundref="_adc_central_8c" startline="105">AdcCentral_Info_S::ScanChannelMask</references>
        <references refid="struct_adc_central___info___s_1ab68b11dda4897bcf505ad684ad7bfc5e" compoundref="_adc_central_8c" startline="106">AdcCentral_Info_S::ScanChannelInfoIndex</references>
        <referencedby refid="group___b_a_t_t_e_r_y_m_o_n_i_t_o_r_1ga5a312f35b44dd926b4c5f054300c40c6" compoundref="_battery_monitor_8c" startline="79" endline="109">BatteryMonitor_Init</referencedby>
        <referencedby refid="group___l_e_m_1ga8ba134c64badc08d5b1596c7ba340164" compoundref="_lem_8c" startline="137" endline="162">Lem_Enable</referencedby>
        <referencedby refid="group___n_o_i_s_e_s_e_n_s_o_r_1ga768120add5c75dfb2e6942d35101b7fa" compoundref="_noise_sensor_8c" startline="96" endline="118">NoiseSensor_Setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___m_c_u___a_d_c_1ga4487fdc581149fa5086b20427da36045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T AdcCentral_StartScan</definition>
        <argsstring>(ADC_T adc, AdcCentral_ConfigScanPtr_T configScan)</argsstring>
        <name>AdcCentral_StartScan</name>
        <param>
          <type><ref refid="_mcu___adc_8h_1a5860f527f3003fac5b4c77b3d28f3e9b" kindref="member">ADC_T</ref></type>
          <declname>adc</declname>
        </param>
        <param>
          <type><ref refid="group___m_c_u___a_d_c_1ga220058012ede24f1a07b094f16212b87" kindref="member">AdcCentral_ConfigScanPtr_T</ref></type>
          <declname>configScan</declname>
        </param>
        <briefdescription>
<para>Start Scan Mode on ADC Interface &amp; Start the PRS Timer as producer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">adc</parametername>
</parameternamelist>
<parameterdescription>
<para>: ADC handle.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">configScan</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure which holds the configurations related to scan mode.</para></parameterdescription>
</parameteritem>
</parameterlist>
Three channels(CH4, CH5 &amp; CH6) are supported for the ADC scan &amp; maximum 3 independent users can be possible. Number of samples is fixed to 256 samples per channel. So if multiple channels are enabled by single user then provide buffer accordingly. ADC sampling is done with the user which has the highest sampling frequency. Lower sampling frequency users are notified with ADC callback on multiples of higher sampling frequency user. Independent sampling frequency works better when lower sampling frequency is multiples of higher sampling frequency. So when ADC Scan complete callback is triggered for the users actual frequency at which the adc samples provided is notified with the sampleFrequency parameter in the <ref refid="group___m_c_u___a_d_c_1ga889727ddbc5fd21aa40e1bd88f76377b" kindref="member">AdcCentral_SingleCallback_T</ref> callback.</para><para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>upon successful execution, error otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" line="133" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/AdcCentral.c" bodystart="506" bodyend="587"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" compoundref="_b_c_d_s___retcode_8h" startline="112">RETCODE_NULL_POINTER</references>
        <references refid="_adc_central_8c_1a8d3b4cd21301c826ce4ac147f31d037a" compoundref="_adc_central_8c" startline="55">MAX_NO_OF_SCAN_CHANNELS</references>
        <references refid="struct_adc_central___info___s_1ab68b11dda4897bcf505ad684ad7bfc5e" compoundref="_adc_central_8c" startline="106">AdcCentral_Info_S::ScanChannelInfoIndex</references>
        <references refid="_xdk_common_info_8h_1af47ea12fc017f15b07bf3c5b537cba8ba7db0ebdc33d95da7faeace3f124e7843" compoundref="_xdk_common_info_8h" startline="129">RETCODE_ADC_REACHED_MAX_SCAN_CHANNELS</references>
        <references refid="semphr_8h_1af116e436d2a5ae5bd72dbade2b5ea930" compoundref="semphr_8h" startline="289">xSemaphoreTake</references>
        <references refid="struct_adc_central___info___s_1a18110e09b7434e81cb705055b0896bb3" compoundref="_adc_central_8c" startline="101">AdcCentral_Info_S::ScanChannelInfoLock</references>
        <references refid="portmacro_8h_1a72723ba1e4a85ca14f25c2b9e066613d" compoundref="portmacro_8h" startline="64">portMAX_DELAY</references>
        <references refid="_adc_central_8c_1a69f0055946033f09d812c0d3941e2a2e" compoundref="_adc_central_8c" startline="131" endline="147">IsChannelAlreadyActivated</references>
        <references refid="struct_adc_central___config_scan___s_1a087ed4815f756a0687b5c916b936f11d" compoundref="_adc_central_8h" startline="92">AdcCentral_ConfigScan_S::ChannelScanMask</references>
        <references refid="_xdk_common_info_8h_1af47ea12fc017f15b07bf3c5b537cba8ba27395375e4d712237c128eb3f136e8cd" compoundref="_xdk_common_info_8h" startline="127">RETCODE_ADC_SCAN_CHANNEL_ALREADY_ENABLED</references>
        <references refid="_adc_central_8c_1a813d501cbe2d92dbb3c002498fd092e0" compoundref="_adc_central_8c" startline="149" endline="172">findScanChannelsInfo</references>
        <references refid="struct_adc_central___info___s_1ae4ac402d62ac267309bab17f68c2b4fc" compoundref="_adc_central_8c" startline="105">AdcCentral_Info_S::ScanChannelMask</references>
        <references refid="struct_adc_central___info___s_1a968b021ea76a97905c18fb766e2ddc88" compoundref="_adc_central_8c" startline="107">AdcCentral_Info_S::IsScanChannelConfigChanged</references>
        <references refid="struct_adc_central___info___s_1ab51a3d55bb779237d0b6dc4ac70d80e6" compoundref="_adc_central_8c" startline="102">AdcCentral_Info_S::ScanChannelConfigLock</references>
        <references refid="_mcu___adc_8c_1a672221ef60cfa0f6eb0ff4dca833a86f" compoundref="_mcu___adc_8c" startline="438" endline="471">Mcu_Adc_StopScan</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba281b77d7bbd0b11781de864c12f32fd9" compoundref="_b_c_d_s___retcode_8h" startline="117">RETCODE_SEMAPHORE_ERROR</references>
        <references refid="struct_adc_central___info___s_1a8898807fb6a52e4401be2f7246179a5f" compoundref="_adc_central_8c" startline="100">AdcCentral_Info_S::ScanChannel</references>
        <references refid="struct_adc_central___scan_channel_info___s_1a15d4ed6239e694730820f282e82cc90f" compoundref="_adc_central_8c" startline="82">AdcCentral_ScanChannelInfo_S::SamplingFreq</references>
        <references refid="struct_adc_central___config_scan___s_1a7e11be3a2417ae8e19905c8e13aa2442" compoundref="_adc_central_8h" startline="94">AdcCentral_ConfigScan_S::SamplingRateInHz</references>
        <references refid="struct_adc_central___info___s_1a1949f525ed3d5d1fa9b58eea872634e5" compoundref="_adc_central_8c" startline="104">AdcCentral_Info_S::ScanSamplingFreq</references>
        <references refid="struct_mcu___adc___config_scan___s_1a15a29da407bed66f69cc83ff595dd6e0" compoundref="_mcu___adc_8h" startline="177">Mcu_Adc_ConfigScan_S::AcqTime</references>
        <references refid="_mcu___adc_8h_1afaedfbeee1ed31a27cf10c71b60a6d3caaa2e5d7c03ea038a7d4685c8e123f96f" compoundref="_mcu___adc_8h" startline="114">ADC_ACQ_TIME_128</references>
        <references refid="struct_mcu___adc___config_scan___s_1a087ed4815f756a0687b5c916b936f11d" compoundref="_mcu___adc_8h" startline="171">Mcu_Adc_ConfigScan_S::ChannelScanMask</references>
        <references refid="struct_mcu___adc___config_scan___s_1a7e11be3a2417ae8e19905c8e13aa2442" compoundref="_mcu___adc_8h" startline="173">Mcu_Adc_ConfigScan_S::SamplingRateInHz</references>
        <references refid="struct_mcu___adc___config_scan___s_1a1e98a729d768aed6a076425816de41f3" compoundref="_mcu___adc_8h" startline="175">Mcu_Adc_ConfigScan_S::Reference</references>
        <references refid="group___a_d_c_c_e_n_t_r_a_l_c_o_n_f_i_g_1ga7f7fc0daea2252780c34be1f1b75a144" compoundref="_adc_central_config_8h" startline="64">ADCCENTRAL_REF_VOLTAGE</references>
        <references refid="struct_mcu___adc___config_scan___s_1ae90c4ba13730c0920e88e77212dd9628" compoundref="_mcu___adc_8h" startline="176">Mcu_Adc_ConfigScan_S::Resolution</references>
        <references refid="_mcu___adc_8h_1a28192a30ab66ef92e890ca0667ccff89ac002266035b9c3a14762154237da8e87" compoundref="_mcu___adc_8h" startline="95">ADC_RESOLUTION_12BIT</references>
        <references refid="struct_mcu___adc___config_scan___s_1ae4398a2ee15010b2562c2825560d44cf" compoundref="_mcu___adc_8h" startline="172">Mcu_Adc_ConfigScan_S::BufferPtr</references>
        <references refid="_adc_central_8c_1a0f959b7cd756b4446d13dbdbd7710bed" compoundref="_adc_central_8c" startline="112">scanDataBufffer</references>
        <references refid="struct_mcu___adc___config_scan___s_1a1f9152ab9aaf275cdc68a1db0dd22bdb" compoundref="_mcu___adc_8h" startline="174">Mcu_Adc_ConfigScan_S::NoOfSamples</references>
        <references refid="group___a_d_c_c_e_n_t_r_a_l_c_o_n_f_i_g_1ga14473fd902f8459a5f45f004e4147f33" compoundref="_adc_central_config_8h" startline="60">ADC_CENTRAL_NO_OF_SAMPLES</references>
        <references refid="struct_adc_central___scan_channel_info___s_1aeef0ecb1357ed3c02bba93c808e78e40" compoundref="_adc_central_8c" startline="84">AdcCentral_ScanChannelInfo_S::Appcallback</references>
        <references refid="struct_adc_central___config_scan___s_1aeef0ecb1357ed3c02bba93c808e78e40" compoundref="_adc_central_8h" startline="95">AdcCentral_ConfigScan_S::Appcallback</references>
        <references refid="struct_adc_central___scan_channel_info___s_1ac48e70ca9de88b1fdd8095540749a3dd" compoundref="_adc_central_8c" startline="83">AdcCentral_ScanChannelInfo_S::Buffer</references>
        <references refid="struct_adc_central___config_scan___s_1ae4398a2ee15010b2562c2825560d44cf" compoundref="_adc_central_8h" startline="93">AdcCentral_ConfigScan_S::BufferPtr</references>
        <references refid="struct_adc_central___scan_channel_info___s_1ac655d3dd4ff70ce23b1d983dd2336314" compoundref="_adc_central_8c" startline="80">AdcCentral_ScanChannelInfo_S::Channelmask</references>
        <references refid="_mcu___adc_8c_1a212b87da9358bd695370474550555f8a" compoundref="_mcu___adc_8c" startline="369" endline="435">Mcu_Adc_StartScan</references>
        <references refid="semphr_8h_1aae55761cabfa9bf85c8f4430f78c0953" compoundref="semphr_8h" startline="447">xSemaphoreGive</references>
        <referencedby refid="group___l_e_m_1ga8ba134c64badc08d5b1596c7ba340164" compoundref="_lem_8c" startline="137" endline="162">Lem_Enable</referencedby>
        <referencedby refid="group___n_o_i_s_e_s_e_n_s_o_r_1ga7fb2dfb213f9bacae96eee4e1bc65fbe" compoundref="_noise_sensor_8c" startline="120" endline="147">NoiseSensor_Enable</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___m_c_u___a_d_c_1ga1045e55329fc26bdacc46ef7f040cc6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T AdcCentral_StartSingle</definition>
        <argsstring>(ADC_T adc, AdcCentral_ConfigSinglePtr_T configStart)</argsstring>
        <name>AdcCentral_StartSingle</name>
        <param>
          <type><ref refid="_mcu___adc_8h_1a5860f527f3003fac5b4c77b3d28f3e9b" kindref="member">ADC_T</ref></type>
          <declname>adc</declname>
        </param>
        <param>
          <type><ref refid="group___m_c_u___a_d_c_1ga6220128058d11b9e3349f5bbb150488d" kindref="member">AdcCentral_ConfigSinglePtr_T</ref></type>
          <declname>configStart</declname>
        </param>
        <briefdescription>
<para>Start Single Mode on ADC Interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">adc</parametername>
</parameternamelist>
<parameterdescription>
<para>: ADC handle.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">configStart</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure which holds the configurations(Resolution, ADC reference,callback) related to single mode.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>upon successful execution, error otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" line="116" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/AdcCentral.c" bodystart="475" bodyend="504"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" compoundref="_b_c_d_s___retcode_8h" startline="108">RETCODE_INVALID_PARAM</references>
        <references refid="_adc_central_8c_1adb5389b414718e6dbb08d41d33bb7f5eaf152a7ab4bd45578690379a7607043e9" compoundref="_adc_central_8c" startline="65">ADC_SINGLE_STATE_READY</references>
        <references refid="struct_adc_central___info___s_1aea5c14a63fa4f4c89309ca0ad4e474ee" compoundref="_adc_central_8c" startline="103">AdcCentral_Info_S::SingleChannel</references>
        <references refid="struct_adc_central___single_channel_info___s_1ae3488ce35a32ef4d00d3d194c2abfc6f" compoundref="_adc_central_8c" startline="91">AdcCentral_SingleChannelInfo_S::State</references>
        <references refid="_xdk_common_info_8h_1af47ea12fc017f15b07bf3c5b537cba8ba65462c83928f650c568f020feb3dd1b2" compoundref="_xdk_common_info_8h" startline="130">RETCODE_ADC_SINGLE_CHANNEL_NOT_READY</references>
        <references refid="_adc_central_8c_1a2df4d70232576529507c30b493fc6247" compoundref="_adc_central_8c" startline="120" endline="128">IsScanChannelActive</references>
        <references refid="struct_adc_central___config_single___s_1a3b471348facf90fed27bde303c153459" compoundref="_adc_central_8h" startline="78">AdcCentral_ConfigSingle_S::Channel</references>
        <references refid="_xdk_common_info_8h_1af47ea12fc017f15b07bf3c5b537cba8bac2ec9d4147c6484b7af88796ce416b1b" compoundref="_xdk_common_info_8h" startline="131">RETCODE_ADC_CENTRAL_USED_IN_SCAN</references>
        <references refid="struct_mcu___adc___config_single___s_1a15a29da407bed66f69cc83ff595dd6e0" compoundref="_mcu___adc_8h" startline="162">Mcu_Adc_ConfigSingle_S::AcqTime</references>
        <references refid="struct_adc_central___config_single___s_1a15a29da407bed66f69cc83ff595dd6e0" compoundref="_adc_central_8h" startline="82">AdcCentral_ConfigSingle_S::AcqTime</references>
        <references refid="struct_mcu___adc___config_single___s_1a3b471348facf90fed27bde303c153459" compoundref="_mcu___adc_8h" startline="158">Mcu_Adc_ConfigSingle_S::Channel</references>
        <references refid="struct_mcu___adc___config_single___s_1a1e98a729d768aed6a076425816de41f3" compoundref="_mcu___adc_8h" startline="160">Mcu_Adc_ConfigSingle_S::Reference</references>
        <references refid="struct_adc_central___config_single___s_1a1e98a729d768aed6a076425816de41f3" compoundref="_adc_central_8h" startline="80">AdcCentral_ConfigSingle_S::Reference</references>
        <references refid="struct_mcu___adc___config_single___s_1ae90c4ba13730c0920e88e77212dd9628" compoundref="_mcu___adc_8h" startline="161">Mcu_Adc_ConfigSingle_S::Resolution</references>
        <references refid="struct_adc_central___config_single___s_1ae90c4ba13730c0920e88e77212dd9628" compoundref="_adc_central_8h" startline="81">AdcCentral_ConfigSingle_S::Resolution</references>
        <references refid="struct_mcu___adc___config_single___s_1ae4398a2ee15010b2562c2825560d44cf" compoundref="_mcu___adc_8h" startline="159">Mcu_Adc_ConfigSingle_S::BufferPtr</references>
        <references refid="struct_adc_central___config_single___s_1ae4398a2ee15010b2562c2825560d44cf" compoundref="_adc_central_8h" startline="79">AdcCentral_ConfigSingle_S::BufferPtr</references>
        <references refid="struct_adc_central___single_channel_info___s_1abee273739ea1185e31b2d1caa044bd66" compoundref="_adc_central_8c" startline="92">AdcCentral_SingleChannelInfo_S::Appcallback</references>
        <references refid="struct_adc_central___config_single___s_1abee273739ea1185e31b2d1caa044bd66" compoundref="_adc_central_8h" startline="83">AdcCentral_ConfigSingle_S::Appcallback</references>
        <references refid="_adc_central_8c_1adb5389b414718e6dbb08d41d33bb7f5eae5a19dccb2023d95ef71893bf645577d" compoundref="_adc_central_8c" startline="66">ADC_SINGLE_CONVERSION_STATE</references>
        <references refid="_mcu___adc_8c_1a7c06b63d12bfbb86668ce40476ebb76b" compoundref="_mcu___adc_8c" startline="323" endline="366">Mcu_Adc_StartSingle</references>
        <referencedby refid="group___b_a_t_t_e_r_y_m_o_n_i_t_o_r_1gaf86e2e00a58342a77311da2486bc5b3d" compoundref="_battery_monitor_8c" startline="112" endline="145">BatteryMonitor_MeasureSignal</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___m_c_u___a_d_c_1ga624c10c0aaa3e1cf89b2b0aa08c8cc62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T AdcCentral_StopScan</definition>
        <argsstring>(ADC_T adc, uint32_t ChannelScanMask)</argsstring>
        <name>AdcCentral_StopScan</name>
        <param>
          <type><ref refid="_mcu___adc_8h_1a5860f527f3003fac5b4c77b3d28f3e9b" kindref="member">ADC_T</ref></type>
          <declname>adc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ChannelScanMask</declname>
        </param>
        <briefdescription>
<para>Stop the Scan mode on ADC Interface and stops the PRS timer used for sampling adc channels. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">adc</parametername>
</parameternamelist>
<parameterdescription>
<para>: ADC handle.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ChannelScanMask</parametername>
</parameternamelist>
<parameterdescription>
<para>: Channel in which scan has to be stopped</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>upon successful execution, error otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h" line="144" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/source/AdcCentral.c" bodystart="589" bodyend="642"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" compoundref="_b_c_d_s___retcode_8h" startline="106">RETCODE_FAILURE</references>
        <references refid="_adc_central_8c_1a69f0055946033f09d812c0d3941e2a2e" compoundref="_adc_central_8c" startline="131" endline="147">IsChannelAlreadyActivated</references>
        <references refid="_xdk_common_info_8h_1af47ea12fc017f15b07bf3c5b537cba8baa270cef9c61e8f540ba7cf4dacc8643a" compoundref="_xdk_common_info_8h" startline="128">RETCODE_ADC_SCAN_CHANNEL_NOT_ENABLED</references>
        <references refid="_mcu___adc_8c_1a672221ef60cfa0f6eb0ff4dca833a86f" compoundref="_mcu___adc_8c" startline="438" endline="471">Mcu_Adc_StopScan</references>
        <references refid="_adc_central_8c_1af50a35bdc7a9366df6be5df60ad1c792" compoundref="_adc_central_8c" startline="174" endline="189">findindexOfScanChannel</references>
        <references refid="_adc_central_8c_1a8d3b4cd21301c826ce4ac147f31d037a" compoundref="_adc_central_8c" startline="55">MAX_NO_OF_SCAN_CHANNELS</references>
        <references refid="struct_adc_central___info___s_1a8898807fb6a52e4401be2f7246179a5f" compoundref="_adc_central_8c" startline="100">AdcCentral_Info_S::ScanChannel</references>
        <references refid="struct_adc_central___scan_channel_info___s_1aeef0ecb1357ed3c02bba93c808e78e40" compoundref="_adc_central_8c" startline="84">AdcCentral_ScanChannelInfo_S::Appcallback</references>
        <references refid="struct_adc_central___scan_channel_info___s_1ac48e70ca9de88b1fdd8095540749a3dd" compoundref="_adc_central_8c" startline="83">AdcCentral_ScanChannelInfo_S::Buffer</references>
        <references refid="struct_adc_central___scan_channel_info___s_1ac655d3dd4ff70ce23b1d983dd2336314" compoundref="_adc_central_8c" startline="80">AdcCentral_ScanChannelInfo_S::Channelmask</references>
        <references refid="struct_adc_central___info___s_1ab68b11dda4897bcf505ad684ad7bfc5e" compoundref="_adc_central_8c" startline="106">AdcCentral_Info_S::ScanChannelInfoIndex</references>
        <references refid="struct_adc_central___info___s_1ae4ac402d62ac267309bab17f68c2b4fc" compoundref="_adc_central_8c" startline="105">AdcCentral_Info_S::ScanChannelMask</references>
        <references refid="struct_mcu___adc___config_scan___s_1a15a29da407bed66f69cc83ff595dd6e0" compoundref="_mcu___adc_8h" startline="177">Mcu_Adc_ConfigScan_S::AcqTime</references>
        <references refid="_mcu___adc_8h_1afaedfbeee1ed31a27cf10c71b60a6d3ca7966f0d1c3e0d629d5d9d704ec065f27" compoundref="_mcu___adc_8h" startline="111">ADC_ACQ_TIME_16</references>
        <references refid="struct_mcu___adc___config_scan___s_1a087ed4815f756a0687b5c916b936f11d" compoundref="_mcu___adc_8h" startline="171">Mcu_Adc_ConfigScan_S::ChannelScanMask</references>
        <references refid="struct_mcu___adc___config_scan___s_1a7e11be3a2417ae8e19905c8e13aa2442" compoundref="_mcu___adc_8h" startline="173">Mcu_Adc_ConfigScan_S::SamplingRateInHz</references>
        <references refid="struct_adc_central___info___s_1a1949f525ed3d5d1fa9b58eea872634e5" compoundref="_adc_central_8c" startline="104">AdcCentral_Info_S::ScanSamplingFreq</references>
        <references refid="struct_mcu___adc___config_scan___s_1a1e98a729d768aed6a076425816de41f3" compoundref="_mcu___adc_8h" startline="175">Mcu_Adc_ConfigScan_S::Reference</references>
        <references refid="group___a_d_c_c_e_n_t_r_a_l_c_o_n_f_i_g_1ga7f7fc0daea2252780c34be1f1b75a144" compoundref="_adc_central_config_8h" startline="64">ADCCENTRAL_REF_VOLTAGE</references>
        <references refid="struct_mcu___adc___config_scan___s_1ae90c4ba13730c0920e88e77212dd9628" compoundref="_mcu___adc_8h" startline="176">Mcu_Adc_ConfigScan_S::Resolution</references>
        <references refid="_mcu___adc_8h_1a28192a30ab66ef92e890ca0667ccff89ac002266035b9c3a14762154237da8e87" compoundref="_mcu___adc_8h" startline="95">ADC_RESOLUTION_12BIT</references>
        <references refid="struct_mcu___adc___config_scan___s_1ae4398a2ee15010b2562c2825560d44cf" compoundref="_mcu___adc_8h" startline="172">Mcu_Adc_ConfigScan_S::BufferPtr</references>
        <references refid="_adc_central_8c_1a0f959b7cd756b4446d13dbdbd7710bed" compoundref="_adc_central_8c" startline="112">scanDataBufffer</references>
        <references refid="struct_mcu___adc___config_scan___s_1a1f9152ab9aaf275cdc68a1db0dd22bdb" compoundref="_mcu___adc_8h" startline="174">Mcu_Adc_ConfigScan_S::NoOfSamples</references>
        <references refid="group___a_d_c_c_e_n_t_r_a_l_c_o_n_f_i_g_1ga14473fd902f8459a5f45f004e4147f33" compoundref="_adc_central_config_8h" startline="60">ADC_CENTRAL_NO_OF_SAMPLES</references>
        <references refid="_mcu___adc_8c_1a212b87da9358bd695370474550555f8a" compoundref="_mcu___adc_8c" startline="369" endline="435">Mcu_Adc_StartScan</references>
        <referencedby refid="group___l_e_m_1ga9b1265bbf44186fc16d74ebabfdd6c61" compoundref="_lem_8c" startline="165" endline="178">Lem_Disable</referencedby>
        <referencedby refid="group___n_o_i_s_e_s_e_n_s_o_r_1gaaf106b5b0f33ff97ed750f001d741030" compoundref="_noise_sensor_8c" startline="190" endline="208">NoiseSensor_Disable</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor">#ifndef<sp/>XDK_ADCCENTRAL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XDK_ADCCENTRAL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Include<sp/>all<sp/>headers<sp/>which<sp/>are<sp/>needed<sp/>by<sp/>this<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mcu___adc_8h" kindref="compound">Mcu_Adc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>type<sp/>and<sp/>macro<sp/>definitions<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group___m_c_u___a_d_c_1gad1a5f38fbc9f6541d760ef92c114ad3e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group___m_c_u___a_d_c_1gad1a5f38fbc9f6541d760ef92c114ad3e" kindref="member">AdcCentral_ScanCallback_T</ref>)(<ref refid="_mcu___adc_8h_1a5860f527f3003fac5b4c77b3d28f3e9b" kindref="member">ADC_T</ref><sp/>adc,<sp/>uint32_t<sp/>samplingFrequency,<sp/>uint16_t*<sp/>buffer);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="group___m_c_u___a_d_c_1ga889727ddbc5fd21aa40e1bd88f76377b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group___m_c_u___a_d_c_1ga889727ddbc5fd21aa40e1bd88f76377b" kindref="member">AdcCentral_SingleCallback_T</ref>)(<ref refid="_mcu___adc_8h_1a5860f527f3003fac5b4c77b3d28f3e9b" kindref="member">ADC_T</ref><sp/>adc,<sp/>uint16_t*<sp/>buffer);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="struct_adc_central___config_single___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_adc_central___config_single___s" kindref="compound">AdcCentral_ConfigSingle_S</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78" refid="struct_adc_central___config_single___s_1a3b471348facf90fed27bde303c153459" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_mcu___adc_8h_1a69934bf9a51d9c8e356dd99ddf4ccabd" kindref="member">Adc_Channel_T</ref><sp/><ref refid="struct_adc_central___config_single___s_1a3b471348facf90fed27bde303c153459" kindref="member">Channel</ref>;</highlight></codeline>
<codeline lineno="79" refid="struct_adc_central___config_single___s_1ae4398a2ee15010b2562c2825560d44cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t*<sp/><ref refid="struct_adc_central___config_single___s_1ae4398a2ee15010b2562c2825560d44cf" kindref="member">BufferPtr</ref>;</highlight></codeline>
<codeline lineno="80" refid="struct_adc_central___config_single___s_1a1e98a729d768aed6a076425816de41f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_mcu___adc_8h_1a1f12ee5eb2ef0899ae2e26b0514206c6" kindref="member">Adc_Reference_T</ref><sp/><ref refid="struct_adc_central___config_single___s_1a1e98a729d768aed6a076425816de41f3" kindref="member">Reference</ref>;</highlight></codeline>
<codeline lineno="81" refid="struct_adc_central___config_single___s_1ae90c4ba13730c0920e88e77212dd9628" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_mcu___adc_8h_1a1d9413656c58294c842bc7252c0397ae" kindref="member">Adc_Resolution_T</ref><sp/><ref refid="struct_adc_central___config_single___s_1ae90c4ba13730c0920e88e77212dd9628" kindref="member">Resolution</ref>;</highlight></codeline>
<codeline lineno="82" refid="struct_adc_central___config_single___s_1a15a29da407bed66f69cc83ff595dd6e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_mcu___adc_8h_1aad409243b9627b823d5bc7dc4b36f082" kindref="member">Adc_AcqTime_T</ref><sp/><ref refid="struct_adc_central___config_single___s_1a15a29da407bed66f69cc83ff595dd6e0" kindref="member">AcqTime</ref>;</highlight></codeline>
<codeline lineno="83" refid="struct_adc_central___config_single___s_1abee273739ea1185e31b2d1caa044bd66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___m_c_u___a_d_c_1ga889727ddbc5fd21aa40e1bd88f76377b" kindref="member">AdcCentral_SingleCallback_T</ref><sp/><ref refid="struct_adc_central___config_single___s_1abee273739ea1185e31b2d1caa044bd66" kindref="member">Appcallback</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85" refid="group___m_c_u___a_d_c_1ga6220128058d11b9e3349f5bbb150488d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_adc_central___config_single___s" kindref="compound">AdcCentral_ConfigSingle_S</ref><sp/><ref refid="struct_adc_central___config_single___s" kindref="compound">AdcCentral_ConfigSingle_T</ref>,<sp/>*<ref refid="group___m_c_u___a_d_c_1ga6220128058d11b9e3349f5bbb150488d" kindref="member">AdcCentral_ConfigSinglePtr_T</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="struct_adc_central___config_scan___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_adc_central___config_scan___s" kindref="compound">AdcCentral_ConfigScan_S</ref></highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92" refid="struct_adc_central___config_scan___s_1a087ed4815f756a0687b5c916b936f11d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_adc_central___config_scan___s_1a087ed4815f756a0687b5c916b936f11d" kindref="member">ChannelScanMask</ref>;</highlight></codeline>
<codeline lineno="93" refid="struct_adc_central___config_scan___s_1ae4398a2ee15010b2562c2825560d44cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>*<ref refid="struct_adc_central___config_scan___s_1ae4398a2ee15010b2562c2825560d44cf" kindref="member">BufferPtr</ref>;</highlight></codeline>
<codeline lineno="94" refid="struct_adc_central___config_scan___s_1a7e11be3a2417ae8e19905c8e13aa2442" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_adc_central___config_scan___s_1a7e11be3a2417ae8e19905c8e13aa2442" kindref="member">SamplingRateInHz</ref>;</highlight></codeline>
<codeline lineno="95" refid="struct_adc_central___config_scan___s_1aeef0ecb1357ed3c02bba93c808e78e40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___m_c_u___a_d_c_1gad1a5f38fbc9f6541d760ef92c114ad3e" kindref="member">AdcCentral_ScanCallback_T</ref><sp/><ref refid="struct_adc_central___config_scan___s_1aeef0ecb1357ed3c02bba93c808e78e40" kindref="member">Appcallback</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97" refid="group___m_c_u___a_d_c_1ga220058012ede24f1a07b094f16212b87" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_adc_central___config_scan___s" kindref="compound">AdcCentral_ConfigScan_S</ref><sp/><ref refid="struct_adc_central___config_scan___s" kindref="compound">AdcCentral_ConfigScan_T</ref>,<sp/>*<ref refid="group___m_c_u___a_d_c_1ga220058012ede24f1a07b094f16212b87" kindref="member">AdcCentral_ConfigScanPtr_T</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>function<sp/>declarations<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___m_c_u___a_d_c_1ga384bfb9ef993b0b92e10b86f753de9b2" kindref="member">AdcCentral_Init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___m_c_u___a_d_c_1ga1045e55329fc26bdacc46ef7f040cc6f" kindref="member">AdcCentral_StartSingle</ref>(<ref refid="_mcu___adc_8h_1a5860f527f3003fac5b4c77b3d28f3e9b" kindref="member">ADC_T</ref><sp/>adc,<sp/>AdcCentral_ConfigSinglePtr_T<sp/>configStart);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___m_c_u___a_d_c_1ga4487fdc581149fa5086b20427da36045" kindref="member">AdcCentral_StartScan</ref>(<ref refid="_mcu___adc_8h_1a5860f527f3003fac5b4c77b3d28f3e9b" kindref="member">ADC_T</ref><sp/>adc,<sp/>AdcCentral_ConfigScanPtr_T<sp/>configScan);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___m_c_u___a_d_c_1ga624c10c0aaa3e1cf89b2b0aa08c8cc62" kindref="member">AdcCentral_StopScan</ref>(<ref refid="_mcu___adc_8h_1a5860f527f3003fac5b4c77b3d28f3e9b" kindref="member">ADC_T</ref><sp/>adc,uint32_t<sp/><ref refid="struct_adc_central___config_scan___s_1a087ed4815f756a0687b5c916b936f11d" kindref="member">ChannelScanMask</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___m_c_u___a_d_c_1gaf745cabdf12c14268e1317ff99a3d2da" kindref="member">AdcCentral_DeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>XDK_ADCCENTRAL_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Common/include/AdcCentral.h"/>
  </compounddef>
</doxygen>
