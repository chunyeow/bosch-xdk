<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="group___b_c_d_s___h_a_l___b_s_p___i_r_sensor___node" kind="group">
    <compoundname>BCDS_HAL_BSP_IRSensor_Node</compoundname>
    <title>IRSensor_Node</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___b_c_d_s___h_a_l___b_s_p___i_r_sensor___node_1ga6e94f550d9d21ca70998ece3b11d15cc" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* BSP_IRSensor_InterruptCallback_T)(uint32_t, uint32_t)</definition>
        <argsstring>)(uint32_t, uint32_t)</argsstring>
        <name>BSP_IRSensor_InterruptCallback_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>type definition for the sensor callback This callback is created by the application whenever the sensor has dedicated interrupt lines. The application should then pass the callback at the <ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga311d37af892ea5672b90ddac5d658440" kindref="member">BSP_SensorNode_Enable()</ref> function.</para><para>the first parameter is the interrupt identifier and the second parameter is the edge resulted in the interrupt (falling edge or rising) refer to the implementation for more details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/bsp/BCDS_BSP_IRSensorNode.h" line="97" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/bsp/BCDS_BSP_IRSensorNode.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___b_c_d_s___h_a_l___b_s_p___i_r_sensor___node_1ga06cbb0d3a490b5c6d2f64a7afbdb88ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BSP_IRSensorNode_Connect</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_IRSensorNode_Connect</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Maps the GPIO pins to their desired function. </para>        </briefdescription>
        <detaileddescription>
<para>This function once called will map the GPIO pins related to the sensor node to their desired functions.</para><para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>in the case of success or an error code otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/bsp/BCDS_BSP_IRSensorNode.h" line="106" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BSP/source/BSP_IRSensorNode.c" bodystart="66" bodyend="72"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___h_a_l___b_s_p___i_r_sensor___node_1gac2cae000595497f1c7db27de4b984c39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BSP_IRSensorNode_Disable</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_IRSensorNode_Disable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disables the control over the peripheral. </para>        </briefdescription>
        <detaileddescription>
<para>This function once called will disable control over the requested sensor peripheral by executing the disabling procedure as prescribed in the vendor datasheet.</para><para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>in the case of success or an error code otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/bsp/BCDS_BSP_IRSensorNode.h" line="128" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BSP/source/BSP_IRSensorNode.c" bodystart="92" bodyend="102"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="_b_s_p___board_8c_1a020117ef816fbaa56ea21db43e5d2f39" compoundref="_b_s_p___board_8c" startline="638" endline="651">Board_SnoozePowerSupply2V5</references>
        <references refid="_b_s_p___board_shared_8h_1a363f84ef9ec49fb78723dab902e8e570a179ea31ba63d972d696f371be1052146" compoundref="_b_s_p___board_shared_8h" startline="90">EXTENSION_BOARD</references>
        <references refid="_b_s_p___board_8c_1afd96801f1d74465dfd79ad4c0e059784" compoundref="_b_s_p___board_8c" startline="656" endline="668">Board_DisablePowerSupply3V3</references>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___h_a_l___b_s_p___i_r_sensor___node_1ga3095f7e2a39b692fdd259277a69eb01e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BSP_IRSensorNode_Disconnect</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_IRSensorNode_Disconnect</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disconnects the sensor node. </para>        </briefdescription>
        <detaileddescription>
<para>This function disconnects the GPIO pins dedicated to the sensor node and put them into low power consumption status.</para><para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>in the case of success or an error code otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/bsp/BCDS_BSP_IRSensorNode.h" line="137" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BSP/source/BSP_IRSensorNode.c" bodystart="107" bodyend="112"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___h_a_l___b_s_p___i_r_sensor___node_1ga63ec777f119d10a6d31915a5679142c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T BSP_IRSensorNode_Enable</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_IRSensorNode_Enable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Enables the control over the peripheral. </para>        </briefdescription>
        <detaileddescription>
<para>A prior call to MCU_&lt;RESOURCE&gt;_Initialize() is necessary for this function in order to operate.This function once called will allow the required sensor peripheral to receive, execute commands and transmit process data.</para><para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>in the case of success or an error code otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/bsp/BCDS_BSP_IRSensorNode.h" line="118" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BSP/source/BSP_IRSensorNode.c" bodystart="77" bodyend="88"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="_b_s_p___board_8c_1a43a88dd2bacbfa6b21b32b3e0fb2c3eb" compoundref="_b_s_p___board_8c" startline="617" endline="633">Board_WakeupPowerSupply2V5</references>
        <references refid="_b_s_p___board_shared_8h_1a363f84ef9ec49fb78723dab902e8e570a179ea31ba63d972d696f371be1052146" compoundref="_b_s_p___board_shared_8h" startline="90">EXTENSION_BOARD</references>
        <references refid="_b_s_p___board_8c_1ae4208d7fd6d2c295af516b755e060789" compoundref="_b_s_p___board_8c" startline="672" endline="685">Board_EnablePowerSupply3V3</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___h_a_l___b_s_p___i_r_sensor___node_1ga6043444d5c7caaa6b1b671b3b614ba27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___h_a_l_1ga39fd157e78cb1535814fe63af2f3e1ee" kindref="member">HWHandle_T</ref></type>
        <definition>HWHandle_T BSP_IRSensorNode_GetI2CHandle</definition>
        <argsstring>(void)</argsstring>
        <name>BSP_IRSensorNode_GetI2CHandle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the handle of the communication interface used by the peripheral in case I2C is used for the sensor node. </para>        </briefdescription>
        <detaileddescription>
<para>After successful execution of BSP_Board_Initialize(param1, param2), the application is free to call this function in order to get the handle needed by the resources drivers. This handle will be used by the MCU drivers for the intended resources I2C, SPI, UART, etc. <simplesect kind="return"><para>HWHandle_T: Handle for the used MCU resource. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/bsp/BCDS_BSP_IRSensorNode.h" line="149" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/BSP/source/BSP_IRSensorNode.c" bodystart="117" bodyend="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic interface to the IR sensor node BSP API. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>A sensor node is defined as a group of peripheral sensors sharing the same MCU resource such an I2C bus.</para></simplesect>
A prior call to BSP_Board_Initialize(param1, param2) function is necessary to initialize the MCU resources needed by the sensor node.</para><para>Once the sensor node is requested a call to <ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga0b9b45bb91b2666128c3e15f3ad74f28" kindref="member">BSP_SensorNode_Connect()</ref> function is required to map the internal MCU resources to their associated function.</para><para>The application needs get the handle for the MCU resource driver via BSP_SensorNode_GetHandle() and to initialize the MCU resource driver by calling the MCU_&lt;RESOURCE&gt;_Initialize() and providing it with the previously acquired handle and an event callback function.</para><para>Then a call to <ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga311d37af892ea5672b90ddac5d658440" kindref="member">BSP_SensorNode_Enable()</ref> will execute the required sequence to enable the specified sensor peripheral and the MCU resources dedicated for it (UART, SPI, I2C, etc.) and will associate the interrupt requests to their appropriate service routines.</para><para><simplesect kind="note"><para>It is necessary for the application developer to to check if the specified sensor has dedicated interrupt lines in this case the application developer must provide a callback to process those interrupts.</para></simplesect>
The <ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga5af05449409434d39749e474f3c1096c" kindref="member">BSP_SensorNode_Disable()</ref> will revert back what the <ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga311d37af892ea5672b90ddac5d658440" kindref="member">BSP_SensorNode_Enable()</ref> has done and set the sensor and the MCU resource into disabled state.</para><para>The <ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga235d573f049fc4556819433261d11741" kindref="member">BSP_SensorNode_Disconnect()</ref> will put the GPIO pins associated to the sensors peripheral in analog mode to further reduce the consumption. </para>    </detaileddescription>
  </compounddef>
</doxygen>
