<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_extension_uart_example_8h" kind="file">
    <compoundname>ExtensionUartExample.h</compoundname>
    <includes refid="_xdk_extension_port_2source_2_app_controller_8h" local="yes">AppController.h</includes>
    <includes refid="_b_c_d_s___retcode_8h" local="yes">BCDS_Retcode.h</includes>
    <includes refid="_b_c_d_s___cmd_processor_8h" local="yes">BCDS_CmdProcessor.h</includes>
    <includedby refid="_xdk_extension_port_2source_2_app_controller_8c" local="yes">SDK/xdk110/Apps/XdkExtensionPort/source/AppController.c</includedby>
    <includedby refid="_extension_uart_example_8c" local="yes">SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.c</includedby>
    <incdepgraph>
      <node id="21951">
        <label>stdbool.h</label>
      </node>
      <node id="21955">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="21956" relation="include">
        </childnode>
        <childnode refid="21949" relation="include">
        </childnode>
        <childnode refid="21954" relation="include">
        </childnode>
      </node>
      <node id="21954">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="21949" relation="include">
        </childnode>
      </node>
      <node id="21950">
        <label>stdint.h</label>
      </node>
      <node id="21953">
        <label>stdlib.h</label>
      </node>
      <node id="21957">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="21952">
        <label>string.h</label>
      </node>
      <node id="21956">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="21957" relation="include">
        </childnode>
        <childnode refid="21954" relation="include">
        </childnode>
      </node>
      <node id="21949">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="21950" relation="include">
        </childnode>
        <childnode refid="21951" relation="include">
        </childnode>
        <childnode refid="21952" relation="include">
        </childnode>
        <childnode refid="21953" relation="include">
        </childnode>
      </node>
      <node id="21948">
        <label>AppController.h</label>
        <link refid="_xdk_extension_port_2source_2_app_controller_8h"/>
        <childnode refid="21949" relation="include">
        </childnode>
      </node>
      <node id="21947">
        <label>SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.h</label>
        <link refid="ExtensionUartExample.h"/>
        <childnode refid="21948" relation="include">
        </childnode>
        <childnode refid="21954" relation="include">
        </childnode>
        <childnode refid="21955" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="21959">
        <label>SDK/xdk110/Apps/XdkExtensionPort/source/AppController.c</label>
        <link refid="_xdk_extension_port_2source_2_app_controller_8c"/>
      </node>
      <node id="21960">
        <label>SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.c</label>
        <link refid="_extension_uart_example_8c"/>
      </node>
      <node id="21958">
        <label>SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.h</label>
        <link refid="ExtensionUartExample.h"/>
        <childnode refid="21959" relation="include">
        </childnode>
        <childnode refid="21960" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___x_d_k___extension___port___uart_1ga146b61102a358113bfcdcecc6d2a85f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T ExtensionUartExample_DeInitialize</definition>
        <argsstring>(void)</argsstring>
        <name>ExtensionUartExample_DeInitialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This API is used to deinit the UART interface. Once this called, from there-on user needs to call <ref refid="group___x_d_k___extension___port___uart_1ga24130a88a54fc2a1767f7887c77318d9" kindref="member">ExtensionUartExample_Initialize</ref> for using the UART communication again. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>in success case error otherwise</para></parameterdescription>
</parameteritem>
</parameterlist>
Refer interface header for description </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.h" line="108" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.c" bodystart="299" bodyend="325"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" compoundref="_b_c_d_s___retcode_8h" startline="112">RETCODE_NULL_POINTER</references>
        <references refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga40fe5691f2d48dbb8e6c2f0c6137047a">UARTTransceiver_Deinitialize</references>
      </memberdef>
      <memberdef kind="function" id="group___x_d_k___extension___port___uart_1ga24130a88a54fc2a1767f7887c77318d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T ExtensionUartExample_Initialize</definition>
        <argsstring>(CmdProcessor_T *handle)</argsstring>
        <name>ExtensionUartExample_Initialize</name>
        <param>
          <type><ref refid="group___c_m_d_p_r_o_c_e_s_s_o_r_1ga41a2f220f03970c1857bd96528307a81" kindref="member">CmdProcessor_T</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>This API is used to prepare the UART with the user configuration data. Once after this call the user can write over UART interface at any time. Read callback will happen for each byte and user can able to read received data using UartRead() </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Command processor handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>in success case error otherwise</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Please refer to the implementation XdkExtensionPortUart.c on how data receptions are handled asynchronously.</para></simplesect>
Refer interface header for description </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.h" line="67" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.c" bodystart="202" bodyend="266"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" compoundref="_b_c_d_s___retcode_8h" startline="112">RETCODE_NULL_POINTER</references>
        <references refid="group___x_d_k___extension___port___uart_1ga2bac79681bc6e00cb7a506a67ebcd12f" compoundref="_extension_uart_example_8c" startline="70">UART_BAURDRATE</references>
        <references refid="group___x_d_k___extension___port___uart_1ga8939786a9c616da84616635ba19d8b21" compoundref="_extension_uart_example_8c" startline="186" endline="197">UartCallBack</references>
        <references refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ggabfc93652f03de1186fb385d0beea7e19aa11e850a81ede5423104314932990990" compoundref="_b_c_d_s___u_a_r_t_transceiver_8h" startline="140">UART_TRANSCEIVER_UART_TYPE_UART</references>
        <references refid="group___x_d_k___extension___port___uart_1ga48a4a6f4e6808efc34d445d99bc6c9ad" compoundref="_extension_uart_example_8c" startline="66">MAX_UART_RX_BUFFERSIZE</references>
        <references refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gac13c141344de042980deabfc89411d5e">UARTTransceiver_Initialize</references>
        <references refid="group___x_d_k___extension___port___uart_1ga9cf8d2c96d37bf45629ecff8c92742e6" compoundref="_extension_uart_example_8c" startline="76">UartRxBuffInstance</references>
        <references refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaa6d932e7282cd4847bcd34cfa4f241ba">UARTTransceiver_StartInAsyncMode</references>
        <references refid="group___x_d_k___extension___port___uart_1ga8ef2820a885c9b674a408ff566f232ea" compoundref="_extension_uart_example_8c" startline="179" endline="183">FrameEndCheckFunc</references>
        <references refid="group___x_d_k___extension___port___uart_1ga785a2158f05b7b5f73d90c39096bac6c" compoundref="_extension_uart_example_8c" startline="138" endline="153">UartAppCallback</references>
        <referencedby refid="group___x_d_k___e_x_t_e_n_s_i_o_n___p_o_r_t_1ga5ca12481e985f2cd2437fe712e08c9b7" compoundref="_xdk_extension_port_2source_2_app_controller_8c" startline="219" endline="263">AppControllerSetup</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___x_d_k___extension___port___uart_1gacebe9c79d5732d5660670a060d0848d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T ExtensionUartExample_Read</definition>
        <argsstring>(uint8_t *readBuffer, uint8_t readlength, uint32_t *actualLength)</argsstring>
        <name>ExtensionUartExample_Read</name>
        <param>
          <type>uint8_t *</type>
          <declname>readBuffer</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>readlength</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>actualLength</declname>
        </param>
        <briefdescription>
<para>This API is used to read the data received over the UART interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>readBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>To collect the received data</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>readlength</parametername>
</parameternamelist>
<parameterdescription>
<para>Bytes requested for reading</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>actualLength</parametername>
</parameternamelist>
<parameterdescription>
<para>Actual Bytes read</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>in success case error otherwise</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Please refer to the implementation XdkExtensionPortUart.c on how data receptions are handled asynchronously.</para></simplesect>
Refer interface header for description </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.h" line="86" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.c" bodystart="269" bodyend="281"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" compoundref="_b_c_d_s___retcode_8h" startline="112">RETCODE_NULL_POINTER</references>
        <references refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gae45d83bad8efeb151af0054e9b626632">UARTTransceiver_ReadData</references>
        <references refid="group___x_d_k___extension___port___uart_1ga77a2170671ae972d2f4a6281451e7135" compoundref="_extension_uart_example_8c" startline="71">UART_SPI_DATA_TRANSFER_TIMEOUT_MILLISEC</references>
        <referencedby refid="group___x_d_k___extension___port___uart_1ga891f2db2ef992db19d6ada0e2988252e" compoundref="_extension_uart_example_8c" startline="113" endline="134">ProcessUartRxData</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___x_d_k___extension___port___uart_1ga48477b2d61dfc16266b9ad8f8c576739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T ExtensionUartExample_Write</definition>
        <argsstring>(uint8_t *writeBuffer, uint8_t writeLength)</argsstring>
        <name>ExtensionUartExample_Write</name>
        <param>
          <type>uint8_t *</type>
          <declname>writeBuffer</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>writeLength</declname>
        </param>
        <briefdescription>
<para>This API is used to write data over the UART interface. Once the UartInit() was success, user can transmit data over UART interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>writeBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>User transmit data buffer</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>writeLength</parametername>
</parameternamelist>
<parameterdescription>
<para>No of Bytes to transmit</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>in success case error otherwise</para></parameterdescription>
</parameteritem>
</parameterlist>
Refer interface header for description </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.h" line="100" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.c" bodystart="284" bodyend="296"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" compoundref="_b_c_d_s___retcode_8h" startline="112">RETCODE_NULL_POINTER</references>
        <references refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaffc00de5e7a25b3da39d09dd74f4a6bd">UARTTransceiver_WriteData</references>
        <references refid="group___x_d_k___extension___port___uart_1ga77a2170671ae972d2f4a6281451e7135" compoundref="_extension_uart_example_8c" startline="71">UART_SPI_DATA_TRANSFER_TIMEOUT_MILLISEC</references>
        <referencedby refid="group___x_d_k___extension___port___uart_1ga75b19676dec6d6d0a8e664e832c10919" compoundref="_extension_uart_example_8c" startline="84" endline="92">SendUartResponseData</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EXTENSIONUARTEXAMPLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXTENSIONUARTEXAMPLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Include<sp/>all<sp/>headers<sp/>which<sp/>are<sp/>needed<sp/>by<sp/>this<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_xdk_extension_port_2source_2_app_controller_8h" kindref="compound">AppController.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>EXTENSION_PORT_UART_FEATURE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___retcode_8h" kindref="compound">BCDS_Retcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___cmd_processor_8h" kindref="compound">BCDS_CmdProcessor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>type<sp/>and<sp/>macro<sp/>definitions<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>function<sp/>declarations<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_d_k___extension___port___uart_1ga24130a88a54fc2a1767f7887c77318d9" kindref="member">ExtensionUartExample_Initialize</ref>(<ref refid="struct___cmd_processor___s" kindref="compound">CmdProcessor_T</ref><sp/>*<sp/>handle);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_d_k___extension___port___uart_1gacebe9c79d5732d5660670a060d0848d0" kindref="member">ExtensionUartExample_Read</ref>(uint8_t<sp/>*readBuffer,<sp/>uint8_t<sp/>readlength,<sp/>uint32_t<sp/>*actualLength);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_d_k___extension___port___uart_1ga48477b2d61dfc16266b9ad8f8c576739" kindref="member">ExtensionUartExample_Write</ref>(uint8_t<sp/>*writeBuffer,<sp/>uint8_t<sp/>writeLength);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_d_k___extension___port___uart_1ga146b61102a358113bfcdcecc6d2a85f6" kindref="member">ExtensionUartExample_DeInitialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>EXTENSION_PORT_UART_FEATURE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>EXTENSIONUARTEXAMPLE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.h"/>
  </compounddef>
</doxygen>
