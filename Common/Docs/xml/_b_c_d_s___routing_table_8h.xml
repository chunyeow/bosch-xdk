<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_b_c_d_s___routing_table_8h" kind="file">
    <compoundname>BCDS_RoutingTable.h</compoundname>
    <includes refid="_b_c_d_s___basics_8h" local="yes">BCDS_Basics.h</includes>
    <includes refid="_b_c_d_s___retcode_8h" local="yes">BCDS_Retcode.h</includes>
    <includes refid="_p_ip_8h" local="yes">PIp.h</includes>
    <includes refid="_serval___ip_8h" local="yes">Serval_Ip.h</includes>
    <includes refid="_b_c_d_s___net_i_f_8h" local="yes">BCDS_NetIF.h</includes>
    <incdepgraph>
      <node id="38656">
        <label>stdbool.h</label>
      </node>
      <node id="38662">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="38663" relation="include">
        </childnode>
        <childnode refid="38697" relation="include">
        </childnode>
      </node>
      <node id="38667">
        <label>stdarg.h</label>
      </node>
      <node id="38694">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="38685" relation="include">
        </childnode>
      </node>
      <node id="38679">
        <label>list.h</label>
      </node>
      <node id="38681">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="38682" relation="include">
        </childnode>
        <childnode refid="38654" relation="include">
        </childnode>
        <childnode refid="38659" relation="include">
        </childnode>
      </node>
      <node id="38665">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="38659" relation="include">
        </childnode>
      </node>
      <node id="38659">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="38654" relation="include">
        </childnode>
      </node>
      <node id="38655">
        <label>stdint.h</label>
      </node>
      <node id="38658">
        <label>stdlib.h</label>
      </node>
      <node id="38697">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="38673">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="38676">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="38677" relation="include">
        </childnode>
      </node>
      <node id="38684">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="38686">
        <label>user.h</label>
      </node>
      <node id="38680">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="38659" relation="include">
        </childnode>
        <childnode refid="38681" relation="include">
        </childnode>
        <childnode refid="38684" relation="include">
        </childnode>
      </node>
      <node id="38687">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="38685" relation="include">
        </childnode>
      </node>
      <node id="38671">
        <label>stddef.h</label>
      </node>
      <node id="38689">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="38685" relation="include">
        </childnode>
      </node>
      <node id="38669">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="38670" relation="include">
        </childnode>
        <childnode refid="38672" relation="include">
        </childnode>
        <childnode refid="38676" relation="include">
        </childnode>
        <childnode refid="38678" relation="include">
        </childnode>
      </node>
      <node id="38664">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="38665" relation="include">
        </childnode>
        <childnode refid="38654" relation="include">
        </childnode>
        <childnode refid="38666" relation="include">
        </childnode>
        <childnode refid="38667" relation="include">
        </childnode>
        <childnode refid="38668" relation="include">
        </childnode>
        <childnode refid="38658" relation="include">
        </childnode>
        <childnode refid="38662" relation="include">
        </childnode>
        <childnode refid="38669" relation="include">
        </childnode>
        <childnode refid="38680" relation="include">
        </childnode>
        <childnode refid="38685" relation="include">
        </childnode>
      </node>
      <node id="38666">
        <label>limits.h</label>
      </node>
      <node id="38675">
        <label>portable.h</label>
      </node>
      <node id="38683">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="38657">
        <label>string.h</label>
      </node>
      <node id="38682">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="38683" relation="include">
        </childnode>
        <childnode refid="38659" relation="include">
        </childnode>
      </node>
      <node id="38654">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="38655" relation="include">
        </childnode>
        <childnode refid="38656" relation="include">
        </childnode>
        <childnode refid="38657" relation="include">
        </childnode>
        <childnode refid="38658" relation="include">
        </childnode>
      </node>
      <node id="38661">
        <label>Serval_Ip.h</label>
        <link refid="_serval___ip_8h"/>
        <childnode refid="38660" relation="include">
        </childnode>
        <childnode refid="38662" relation="include">
        </childnode>
      </node>
      <node id="38674">
        <label>projdefs.h</label>
      </node>
      <node id="38696">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="38660">
        <label>PIp.h</label>
        <link refid="_p_ip_8h"/>
        <childnode refid="38659" relation="include">
        </childnode>
      </node>
      <node id="38695">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="38685" relation="include">
        </childnode>
      </node>
      <node id="38653">
        <label>SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h</label>
        <link refid="BCDS_RoutingTable.h"/>
        <childnode refid="38654" relation="include">
        </childnode>
        <childnode refid="38659" relation="include">
        </childnode>
        <childnode refid="38660" relation="include">
        </childnode>
        <childnode refid="38661" relation="include">
        </childnode>
        <childnode refid="38698" relation="include">
        </childnode>
      </node>
      <node id="38691">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="38685" relation="include">
        </childnode>
      </node>
      <node id="38677">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="38692">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="38685" relation="include">
        </childnode>
      </node>
      <node id="38698">
        <label>BCDS_NetIF.h</label>
        <link refid="_b_c_d_s___net_i_f_8h"/>
        <childnode refid="38684" relation="include">
        </childnode>
        <childnode refid="38654" relation="include">
        </childnode>
        <childnode refid="38659" relation="include">
        </childnode>
      </node>
      <node id="38690">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="38685" relation="include">
        </childnode>
      </node>
      <node id="38678">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="38679" relation="include">
        </childnode>
      </node>
      <node id="38693">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="38685" relation="include">
        </childnode>
      </node>
      <node id="38672">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="38655" relation="include">
        </childnode>
        <childnode refid="38665" relation="include">
        </childnode>
        <childnode refid="38673" relation="include">
        </childnode>
      </node>
      <node id="38663">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="38664" relation="include">
        </childnode>
      </node>
      <node id="38670">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="38671" relation="include">
        </childnode>
        <childnode refid="38655" relation="include">
        </childnode>
        <childnode refid="38672" relation="include">
        </childnode>
        <childnode refid="38674" relation="include">
        </childnode>
        <childnode refid="38675" relation="include">
        </childnode>
      </node>
      <node id="38668">
        <label>stdio.h</label>
      </node>
      <node id="38688">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="38685" relation="include">
        </childnode>
      </node>
      <node id="38685">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="38686" relation="include">
        </childnode>
        <childnode refid="38687" relation="include">
        </childnode>
        <childnode refid="38688" relation="include">
        </childnode>
        <childnode refid="38689" relation="include">
        </childnode>
        <childnode refid="38690" relation="include">
        </childnode>
        <childnode refid="38691" relation="include">
        </childnode>
        <childnode refid="38692" relation="include">
        </childnode>
        <childnode refid="38693" relation="include">
        </childnode>
        <childnode refid="38694" relation="include">
        </childnode>
        <childnode refid="38695" relation="include">
        </childnode>
        <childnode refid="38696" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_incoming_port_routing_table___entry___s" prot="public">IncomingPortRoutingTable_Entry_S</innerclass>
    <innerclass refid="struct_port_routing_table___entry___s" prot="public">PortRoutingTable_Entry_S</innerclass>
    <innerclass refid="struct_routing_table___entry___s" prot="public">RoutingTable_Entry_S</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga3825b6a78a69de817d434e7c832023a8" prot="public" static="no">
        <name>ROUTING_TABLE_DEFAULT_PORT</name>
        <initializer>((<ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref>) 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>port which always matches </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="73" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga8d67b7bc8bfc3910206b945c8efeaf40" prot="public" static="no">
        <name>ROUTING_TABLE_DEFAULT_ROUTE</name>
        <initializer>((<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref>) 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>network address which always matches </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="68" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga2f610ed2ce9a78e5ac28ec6bfa3388dc" prot="public" static="no">
        <type>struct <ref refid="struct_incoming_port_routing_table___entry___s" kindref="compound">IncomingPortRoutingTable_Entry_S</ref></type>
        <definition>typedef struct IncomingPortRoutingTable_Entry_S IncomingPortRoutingTable_Entry_T</definition>
        <argsstring></argsstring>
        <name>IncomingPortRoutingTable_Entry_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="68" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gaba3ec24b1dd1db80f63c1e697f252e25" prot="public" static="no">
        <type>struct <ref refid="struct_port_routing_table___entry___s" kindref="compound">PortRoutingTable_Entry_S</ref></type>
        <definition>typedef struct PortRoutingTable_Entry_S PortRoutingTable_Entry_T</definition>
        <argsstring></argsstring>
        <name>PortRoutingTable_Entry_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="68" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gacdd81b6a4e354aa69e73a912efe8f220" prot="public" static="no">
        <type>struct <ref refid="struct_routing_table___entry___s" kindref="compound">RoutingTable_Entry_S</ref></type>
        <definition>typedef struct RoutingTable_Entry_S RoutingTable_Entry_T</definition>
        <argsstring></argsstring>
        <name>RoutingTable_Entry_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="68" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gad517e83043a561bea37c6d21b6a682a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IncomingPortRoutingTable_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>IncomingPortRoutingTable_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the incoming port routing table module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga1989c28fb4a480fc2e7b6fa49eb94f45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T IncomingPortRoutingTable_Init</definition>
        <argsstring>(const IncomingPortRoutingTable_Entry_T *incomingPortRoutingTable, uint8_t incomingPortRoutingTableLength)</argsstring>
        <name>IncomingPortRoutingTable_Init</name>
        <param>
          <type>const <ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga2f610ed2ce9a78e5ac28ec6bfa3388dc" kindref="member">IncomingPortRoutingTable_Entry_T</ref> *</type>
          <declname>incomingPortRoutingTable</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>incomingPortRoutingTableLength</declname>
        </param>
        <briefdescription>
<para>Initializes the incoming port routing table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method will not copy the supplied incoming port routing table. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">incomingPortRoutingTable</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an array of incoming port routing entries, may be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">incomingPortRoutingTableLength</parametername>
</parameternamelist>
<parameterdescription>
<para>number of incoming port routing table entries, may be 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref> if everything went fine </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref> if routingTable is NULL </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" kindref="member">RETCODE_FAILURE</ref> routingTable is initialized already </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref> invalid routing table length parameter </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gad778804b5f6bbcb5c175214eb9f93261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IncomingPortRoutingTable_IsInit</definition>
        <argsstring>(void)</argsstring>
        <name>IncomingPortRoutingTable_IsInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Checks if module incoming port routing table was initialized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>obvious </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga5cdf1a8d327b7d1ac73725f76a7c9833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RoutingTable_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>RoutingTable_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitializes the routing table module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gaa2650d1a5121ec93229583404b427faf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T RoutingTable_Init</definition>
        <argsstring>(const RoutingTable_Entry_T *routingTable, uint8_t routingTableLength, const PortRoutingTable_Entry_T *portRoutingTable, uint8_t portRoutingTableLength)</argsstring>
        <name>RoutingTable_Init</name>
        <param>
          <type>const <ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gacdd81b6a4e354aa69e73a912efe8f220" kindref="member">RoutingTable_Entry_T</ref> *</type>
          <declname>routingTable</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>routingTableLength</declname>
        </param>
        <param>
          <type>const <ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gaba3ec24b1dd1db80f63c1e697f252e25" kindref="member">PortRoutingTable_Entry_T</ref> *</type>
          <declname>portRoutingTable</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>portRoutingTableLength</declname>
        </param>
        <briefdescription>
<para>Initializes the routing table module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method will not copy the supplied routing table. Instead it will only keep a copy of the pointer to the table to access it - so it is not advisable to generate the table on the stack. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">routingTable</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an array of routing entries </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">routingTableLength</parametername>
</parameternamelist>
<parameterdescription>
<para>number of routing table entries, required to be 1 or larger </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">portRoutingTable</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an array of port routing entries, may be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">portRoutingTableLength</parametername>
</parameternamelist>
<parameterdescription>
<para>number of port routing table entries, may be 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref> if everything went fine </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref> if routingTable is NULL </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" kindref="member">RETCODE_FAILURE</ref> routingTable is initialized already </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref> invalid configuration parameter </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gad0e87d47c66a27841eda33c3475df388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool RoutingTable_IsInit</definition>
        <argsstring>(void)</argsstring>
        <name>RoutingTable_IsInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Checks if module was initialized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>obvious </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga4c7657976809c9fde128862fb77d7156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T RoutingTable_Lookup</definition>
        <argsstring>(const Ip_Address_T destIp, const RoutingTable_Entry_T **entry)</argsstring>
        <name>RoutingTable_Lookup</name>
        <param>
          <type>const <ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref></type>
          <declname>destIp</declname>
        </param>
        <param>
          <type>const <ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gacdd81b6a4e354aa69e73a912efe8f220" kindref="member">RoutingTable_Entry_T</ref> **</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
<para>Finds a matching routing table entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">destIp</parametername>
</parameternamelist>
<parameterdescription>
<para>destination IP address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">entry</parametername>
</parameternamelist>
<parameterdescription>
<para>matching routing table entry </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref> matching routing table entry found </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" kindref="member">RETCODE_FAILURE</ref> no matching routing table entry found </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref> if destIp or entry is NULL </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref> destIp is invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gaa447d9808c7b00b869ddd3936ddc59e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T RoutingTable_LookupIncomingPort2Port</definition>
        <argsstring>(const Ip_Port_T incomingPort, Ip_Port_T *port)</argsstring>
        <name>RoutingTable_LookupIncomingPort2Port</name>
        <param>
          <type>const <ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>incomingPort</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref> *</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Finds a matching port route fo the incoming udp source port. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">incomingPort</parametername>
</parameternamelist>
<parameterdescription>
<para>source port number of incomming packet </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">port</parametername>
</parameternamelist>
<parameterdescription>
<para>port </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref> matching routing table entry found </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" kindref="member">RETCODE_FAILURE</ref> no matching routing table entry found </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref> if listeningPort or netif is NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga9748ebd214e7b15cbf715c097bca78a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T RoutingTable_LookupPort2NetIf</definition>
        <argsstring>(const Ip_Port_T listeningPort, NetIF_Id_T *netif)</argsstring>
        <name>RoutingTable_LookupPort2NetIf</name>
        <param>
          <type>const <ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>listeningPort</declname>
        </param>
        <param>
          <type><ref refid="group___b_c_d_s___n_e_t___i_f_1ga9d36cf5c5f404d45e41ab92fd8d4f473" kindref="member">NetIF_Id_T</ref> *</type>
          <declname>netif</declname>
        </param>
        <briefdescription>
<para>Finds the interface on which we have to listen for a particular UDP port. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">listeningPort</parametername>
</parameternamelist>
<parameterdescription>
<para>target port number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">netif</parametername>
</parameternamelist>
<parameterdescription>
<para>Network interface id </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref> matching routing table entry found </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbafeee3d6fd430b337ab3dd2f2a7732c1f" kindref="member">RETCODE_FAILURE</ref> no matching routing table entry found </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref> if listeningPort or netif is NULL </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref> listeningPort is invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h" line="203" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor">#ifndef<sp/>BCDS_ROUTING_TABLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCDS_ROUTING_TABLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___basics_8h" kindref="compound">BCDS_Basics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___retcode_8h" kindref="compound">BCDS_Retcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_ip_8h" kindref="compound">PIp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_serval___ip_8h" kindref="compound">Serval_Ip.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___net_i_f_8h" kindref="compound">BCDS_NetIF.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga8d67b7bc8bfc3910206b945c8efeaf40" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROUTING_TABLE_DEFAULT_ROUTE<sp/>((Ip_Address_T)<sp/>0)<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor">#define<sp/>ROUTING_TABLE_DEFAULT_PORT<sp/>((Ip_Port_T)<sp/>0)<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor">struct<sp/>RoutingTable_Entry_S</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>NetworkDestination;<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>Netmask;<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>Gateway;<sp/></highlight></codeline>
<codeline lineno="84" refid="struct_routing_table___entry___s" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1ga9d36cf5c5f404d45e41ab92fd8d4f473" kindref="member">NetIF_Id_T</ref><sp/>Interface;<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86" refid="struct_routing_table___entry___s_1af799e5a8d965a615544384ea1f9a7237" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_routing_table___entry___s" kindref="compound">RoutingTable_Entry_S</ref><sp/><ref refid="struct_routing_table___entry___s" kindref="compound">RoutingTable_Entry_T</ref>;</highlight></codeline>
<codeline lineno="88" refid="struct_routing_table___entry___s_1ab3bd93292c3b7205f51c84e0b666f90d" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_port_routing_table___entry___s" kindref="compound">PortRoutingTable_Entry_S</ref></highlight></codeline>
<codeline lineno="94" refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gacdd81b6a4e354aa69e73a912efe8f220" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/><ref refid="struct_port_routing_table___entry___s_1a46f32776bf27df906668a4d178b3fb74" kindref="member">UdpPort</ref>;<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1ga9d36cf5c5f404d45e41ab92fd8d4f473" kindref="member">NetIF_Id_T</ref><sp/><ref refid="struct_port_routing_table___entry___s_1a1a7b18a239fe8fc553e7d6b05507b679" kindref="member">Interface</ref>;<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_port_routing_table___entry___s" kindref="compound">PortRoutingTable_Entry_S</ref><sp/><ref refid="struct_port_routing_table___entry___s" kindref="compound">PortRoutingTable_Entry_T</ref>;</highlight></codeline>
<codeline lineno="100" refid="struct_port_routing_table___entry___s" refkind="compound"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_incoming_port_routing_table___entry___s" kindref="compound">IncomingPortRoutingTable_Entry_S</ref></highlight></codeline>
<codeline lineno="106" refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gaba3ec24b1dd1db80f63c1e697f252e25" refkind="member"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/><ref refid="struct_incoming_port_routing_table___entry___s_1a46f32776bf27df906668a4d178b3fb74" kindref="member">UdpPort</ref>;<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/><ref refid="struct_incoming_port_routing_table___entry___s_1a3a9c73f9ebd28bb421957dd56083b317" kindref="member">IncomingUdpSrcPort</ref>;<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_incoming_port_routing_table___entry___s" kindref="compound">IncomingPortRoutingTable_Entry_S</ref><sp/><ref refid="struct_incoming_port_routing_table___entry___s" kindref="compound">IncomingPortRoutingTable_Entry_T</ref>;</highlight></codeline>
<codeline lineno="112" refid="struct_incoming_port_routing_table___entry___s" refkind="compound"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gaa2650d1a5121ec93229583404b427faf" kindref="member">RoutingTable_Init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_routing_table___entry___s" kindref="compound">RoutingTable_Entry_T</ref><sp/>*routingTable,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>routingTableLength,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_port_routing_table___entry___s" kindref="compound">PortRoutingTable_Entry_T</ref><sp/>*portRoutingTable,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>portRoutingTableLength);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga1989c28fb4a480fc2e7b6fa49eb94f45" kindref="member">IncomingPortRoutingTable_Init</ref>(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_incoming_port_routing_table___entry___s" kindref="compound">IncomingPortRoutingTable_Entry_T</ref><sp/>*incomingPortRoutingTable,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>incomingPortRoutingTableLength);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga5cdf1a8d327b7d1ac73725f76a7c9833" kindref="member">RoutingTable_DeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gad517e83043a561bea37c6d21b6a682a0" kindref="member">IncomingPortRoutingTable_DeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gad0e87d47c66a27841eda33c3475df388" kindref="member">RoutingTable_IsInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gad778804b5f6bbcb5c175214eb9f93261" kindref="member">IncomingPortRoutingTable_IsInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga4c7657976809c9fde128862fb77d7156" kindref="member">RoutingTable_Lookup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>destIp,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_routing_table___entry___s" kindref="compound">RoutingTable_Entry_T</ref><sp/>**entry);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1ga9748ebd214e7b15cbf715c097bca78a3" kindref="member">RoutingTable_LookupPort2NetIf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>listeningPort,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1ga9d36cf5c5f404d45e41ab92fd8d4f473" kindref="member">NetIF_Id_T</ref><sp/>*netif);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___b_c_d_s___r_o_u_t_i_n_g___t_a_b_l_e_1gaa447d9808c7b00b869ddd3936ddc59e6" kindref="member">RoutingTable_LookupIncomingPort2Port</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>incomingPort,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/>*port);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BCDS_ROUTING_TABLE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h"/>
  </compounddef>
</doxygen>
