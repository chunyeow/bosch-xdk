<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_b_c_d_s___u_a_r_t_transceiver_8h" kind="file">
    <compoundname>BCDS_UARTTransceiver.h</compoundname>
    <includes refid="_b_c_d_s___utils_8h" local="yes">BCDS_Utils.h</includes>
    <includes refid="_b_c_d_s___basics_8h" local="yes">BCDS_Basics.h</includes>
    <includes refid="_b_c_d_s___retcode_8h" local="yes">BCDS_Retcode.h</includes>
    <includes refid="_b_c_d_s___h_a_l_8h" local="yes">BCDS_HAL.h</includes>
    <includes refid="_b_c_d_s___h_a_l_config_8h" local="yes">BCDS_HALConfig.h</includes>
    <includes refid="_b_c_d_s___ring_buffer_8h" local="yes">BCDS_RingBuffer.h</includes>
    <includes refid="_free_r_t_o_s_8h" local="yes">FreeRTOS.h</includes>
    <includes refid="semphr_8h" local="yes">semphr.h</includes>
    <includes refid="_b_c_d_s___m_c_u___u_a_r_t_8h" local="yes">BCDS_MCU_UART.h</includes>
    <includedby refid="_extension_uart_example_8c" local="yes">SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.c</includedby>
    <incdepgraph>
      <node id="39580">
        <label>stdbool.h</label>
      </node>
      <node id="39584">
        <label>BCDS_HALConfig.h</label>
        <link refid="_b_c_d_s___h_a_l_config_8h"/>
      </node>
      <node id="39589">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="39577" relation="include">
        </childnode>
      </node>
      <node id="39579">
        <label>stdint.h</label>
      </node>
      <node id="39577">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="39578" relation="include">
        </childnode>
      </node>
      <node id="39582">
        <label>stdlib.h</label>
      </node>
      <node id="39590">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="39593">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="39594" relation="include">
        </childnode>
      </node>
      <node id="39587">
        <label>stddef.h</label>
      </node>
      <node id="39585">
        <label>BCDS_RingBuffer.h</label>
        <link refid="_b_c_d_s___ring_buffer_8h"/>
        <childnode refid="39575" relation="include">
        </childnode>
        <childnode refid="39578" relation="include">
        </childnode>
      </node>
      <node id="39592">
        <label>portable.h</label>
      </node>
      <node id="39595">
        <label>BCDS_MCU_UART.h</label>
        <link refid="_b_c_d_s___m_c_u___u_a_r_t_8h"/>
        <childnode refid="39583" relation="include">
        </childnode>
      </node>
      <node id="39576">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="39581">
        <label>string.h</label>
      </node>
      <node id="39575">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="39576" relation="include">
        </childnode>
        <childnode refid="39577" relation="include">
        </childnode>
      </node>
      <node id="39578">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="39579" relation="include">
        </childnode>
        <childnode refid="39580" relation="include">
        </childnode>
        <childnode refid="39581" relation="include">
        </childnode>
        <childnode refid="39582" relation="include">
        </childnode>
      </node>
      <node id="39591">
        <label>projdefs.h</label>
      </node>
      <node id="39583">
        <label>BCDS_HAL.h</label>
        <link refid="_b_c_d_s___h_a_l_8h"/>
        <childnode refid="39577" relation="include">
        </childnode>
        <childnode refid="39584" relation="include">
        </childnode>
      </node>
      <node id="39594">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="39588">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="39579" relation="include">
        </childnode>
        <childnode refid="39589" relation="include">
        </childnode>
        <childnode refid="39590" relation="include">
        </childnode>
      </node>
      <node id="39586">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="39587" relation="include">
        </childnode>
        <childnode refid="39579" relation="include">
        </childnode>
        <childnode refid="39588" relation="include">
        </childnode>
        <childnode refid="39591" relation="include">
        </childnode>
        <childnode refid="39592" relation="include">
        </childnode>
      </node>
      <node id="39574">
        <label>SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h</label>
        <link refid="BCDS_UARTTransceiver.h"/>
        <childnode refid="39575" relation="include">
        </childnode>
        <childnode refid="39578" relation="include">
        </childnode>
        <childnode refid="39577" relation="include">
        </childnode>
        <childnode refid="39583" relation="include">
        </childnode>
        <childnode refid="39584" relation="include">
        </childnode>
        <childnode refid="39585" relation="include">
        </childnode>
        <childnode refid="39586" relation="include">
        </childnode>
        <childnode refid="39593" relation="include">
        </childnode>
        <childnode refid="39595" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="39597">
        <label>SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionUartExample.c</label>
        <link refid="_extension_uart_example_8c"/>
      </node>
      <node id="39596">
        <label>SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h</label>
        <link refid="BCDS_UARTTransceiver.h"/>
        <childnode refid="39597" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct___u_a_r_t_transceiver___s" prot="public">_UARTTransceiver_S</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga48c523be3334944baa133ab6d5c3e5a0" prot="public" static="no">
        <name>UART_TRANSCEIVER_DECLARE_LOOP_CALLBACK</name>
        <param><defname>transceiver</defname></param>
        <initializer>static <ref refid="group___b_a_s_i_c_s_1gacc94a18519f2c51df3d650b582555d1b" kindref="member">BCDS_ALWAYS_INLINE</ref> void UARTTransceiverLoopCallback(UART_T uart, struct MCU_UART_Event_S event) \
{ \
	<ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga3814d8adbd0737240abccc82cae2556e" kindref="member">UARTTransceiver_LoopCallback</ref>(&amp;transceiver, event);\
}</initializer>
        <briefdescription>
<para>Generates a UART loop callback. </para>        </briefdescription>
        <detaileddescription>
<para>The middle-layer driver, which uses UART/LEUART and UARTTransceiver, may use this macro in oder to generate a callback function to initialize UART/LEUART with it. The generated function loops the callback to the transceiver by calling the function <ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga3814d8adbd0737240abccc82cae2556e" kindref="member">UARTTransceiver_LoopCallback()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>The variable name of the transceiver. It must be a pointer to the context structure but the context structure itself. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="458" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga36f79b7507c6a0cd1c11385136d7e225" prot="public" static="no">
        <name>UARTTransceiver_Mode_E</name>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga36f79b7507c6a0cd1c11385136d7e225a70fa5767894af48df67fa88723e5e0a0" prot="public">
          <name>UART_TRANSCEIVER_MODE_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga36f79b7507c6a0cd1c11385136d7e225a7d728bdff26e1abe7ccf61e015e3e1bc" prot="public">
          <name>UART_TRANSCEIVER_MODE_SYNCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga36f79b7507c6a0cd1c11385136d7e225a83e70f65e880c553f5573cef4d9c7902" prot="public">
          <name>UART_TRANSCEIVER_MODE_ASYNCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="145" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" bodystart="144" bodyend="149"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga4c3bff094eae5f86b6d2f54bbe375f54" prot="public" static="no">
        <name>UARTTransceiver_State_E</name>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a12fe4b3f0b9edf2af6dd937d30960bbf" prot="public">
          <name>UART_TRANSCEIVER_STATE_RESET</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a15a837639e89b20c2f1688dcae1eb011" prot="public">
          <name>UART_TRANSCEIVER_STATE_IDLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a4e7a7410bbf74ebf00f6bba397a1081a" prot="public">
          <name>UART_TRANSCEIVER_STATE_INITIALIZED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a5e83d1a2f1c429aeca9ca4e084e32caf" prot="public">
          <name>UART_TRANSCEIVER_STATE_ACTIVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a816ae06c7d277d1eb433cf2a71285034" prot="public">
          <name>UART_TRANSCEIVER_STATE_STOPPED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a1f239237e532deaea991cf4d076d2ef1" prot="public">
          <name>UART_TRANSCEIVER_STATE_SUSPENDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="128" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" bodystart="127" bodyend="135"/>
      </memberdef>
      <memberdef kind="enum" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gabfc93652f03de1186fb385d0beea7e19" prot="public" static="no">
        <name>UARTTransceiver_UartType_E</name>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ggabfc93652f03de1186fb385d0beea7e19ab7d1a6c6fcd7d957d6c6af5b09b94164" prot="public">
          <name>UART_TRANSCEIVER_UART_TYPE_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ggabfc93652f03de1186fb385d0beea7e19aa11e850a81ede5423104314932990990" prot="public">
          <name>UART_TRANSCEIVER_UART_TYPE_UART</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ggabfc93652f03de1186fb385d0beea7e19a44d849db0b84dd8d78e8538a07b373a8" prot="public">
          <name>UART_TRANSCEIVER_UART_TYPE_LEUART</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="138" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" bodystart="137" bodyend="142"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga158b9afcf0376f18c90faf71410759c8" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* UARTransceiver_Callback_T)(struct MCU_UART_Event_S event)</definition>
        <argsstring>)(struct MCU_UART_Event_S event)</argsstring>
        <name>UARTransceiver_Callback_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="117" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaa4a42fd113b5e3fc2dc6cefadd12bced" prot="public" static="no">
        <type>bool(*</type>
        <definition>typedef bool(* UARTTransceiver_EndofFrameCheckFunc_T)(uint8_t lastByte)</definition>
        <argsstring>)(uint8_t lastByte)</argsstring>
        <name>UARTTransceiver_EndofFrameCheckFunc_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="125" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" prot="public" static="no">
        <type>struct <ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">_UARTTransceiver_S</ref></type>
        <definition>typedef struct _UARTTransceiver_S UARTTransceiver_T</definition>
        <argsstring></argsstring>
        <name>UARTTransceiver_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="125" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga40fe5691f2d48dbb8e6c2f0c6137047a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T UARTTransceiver_Deinitialize</definition>
        <argsstring>(UARTTransceiver_T *transceiver)</argsstring>
        <name>UARTTransceiver_Deinitialize</name>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" kindref="member">UARTTransceiver_T</ref> *</type>
          <declname>transceiver</declname>
        </param>
        <briefdescription>
<para>De-initializes the transceiver. </para>        </briefdescription>
        <detaileddescription>
<para>The transceiver must not be used after calling this function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the transceiver context structure to be de-initialized</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if successfully deinitialize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the transceiver pointer parameter is NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="238" column="1"/>
        <referencedby refid="group___x_d_k___extension___port___uart_1ga146b61102a358113bfcdcecc6d2a85f6" compoundref="_extension_uart_example_8c" startline="299" endline="325">ExtensionUartExample_DeInitialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gac13c141344de042980deabfc89411d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T UARTTransceiver_Initialize</definition>
        <argsstring>(UARTTransceiver_T *transceiver, HWHandle_T handle, uint8_t *rawRxBuffer, uint32_t rawRxBufferSize, enum UARTTransceiver_UartType_E type)</argsstring>
        <name>UARTTransceiver_Initialize</name>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" kindref="member">UARTTransceiver_T</ref> *</type>
          <declname>transceiver</declname>
        </param>
        <param>
          <type><ref refid="group___b_c_d_s___h_a_l_1ga39fd157e78cb1535814fe63af2f3e1ee" kindref="member">HWHandle_T</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rawRxBuffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rawRxBufferSize</declname>
        </param>
        <param>
          <type>enum <ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gabfc93652f03de1186fb385d0beea7e19" kindref="member">UARTTransceiver_UartType_E</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Initializes the transceiver for the use with the passed UART or LEUART handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the transceiver context structure to be initialized</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>the handle of the UART or LEUART to be used by the transceiver. The handle must be initialized before passing it here.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The mode in which the transceiver will operate, i.e. synchronous or asynchronous.</para></parameterdescription>
</parameteritem>
</parameterlist>
@ rawRxBuffer The buffer which will be used by the transceiver internally to save the received bytes. It must not be NULL.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">rawRxBufferSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the rawRxBuffer. It must be larger than zero.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if successfully initialized </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if any of the parameter is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba281b77d7bbd0b11781de864c12f32fd9" kindref="member">RETCODE_SEMAPHORE_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the semaphores are not created (see <ref refid="struct___u_a_r_t_transceiver___s_1a480033d89c8df92248184e018ae05bcb" kindref="member">UARTTransceiver_T.TxSemaphore</ref> and <ref refid="struct___u_a_r_t_transceiver___s_1ad5ad104912ca41c2154bdcd1fd7e4c97" kindref="member">UARTTransceiver_T.RxSemaphore</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gabed20789ada55c303bb4ef8e0669a4ac" kindref="member">RETCODE_DOPPLE_INITIALIZATION</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if you are trying to initialized the transceiver again </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="221" column="1"/>
        <referencedby refid="group___x_d_k___extension___port___uart_1ga24130a88a54fc2a1767f7887c77318d9" compoundref="_extension_uart_example_8c" startline="202" endline="266">ExtensionUartExample_Initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga3814d8adbd0737240abccc82cae2556e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UARTTransceiver_LoopCallback</definition>
        <argsstring>(UARTTransceiver_T *transceiver, struct MCU_UART_Event_S event)</argsstring>
        <name>UARTTransceiver_LoopCallback</name>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" kindref="member">UARTTransceiver_T</ref> *</type>
          <declname>transceiver</declname>
        </param>
        <param>
          <type>struct MCU_UART_Event_S</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Function to loop the UART/LEUART callback. </para>        </briefdescription>
        <detaileddescription>
<para>It is necessary for the UARTTransceiver to loop the UART/LEUART callback. This means, the middle-layer driver which uses UART/LEUART and UARTTransceiver must initialize UART/LEUART with a callback function which invokes this function in order to loop the callbacks from UART/LEUART to the transceiver.</para><para>The middle-layer driver may use the macro UART_TRANSCEIVER_DECLARE_LOOP_CALLBACK can be used to generate such a callback.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>The transceiver</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">event</parametername>
</parameternamelist>
<parameterdescription>
<para>The event which is notified by the callback </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="442" column="1"/>
        <referencedby refid="group___x_d_k___extension___port___uart_1ga8939786a9c616da84616635ba19d8b21" compoundref="_extension_uart_example_8c" startline="186" endline="197">UartCallBack</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gae45d83bad8efeb151af0054e9b626632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T UARTTransceiver_ReadData</definition>
        <argsstring>(UARTTransceiver_T *transceiver, uint8_t *buffer, uint32_t size, uint32_t *length, uint32_t timeout_ms)</argsstring>
        <name>UARTTransceiver_ReadData</name>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" kindref="member">UARTTransceiver_T</ref> *</type>
          <declname>transceiver</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
<para>It reads the data received by the transceiver. </para>        </briefdescription>
        <detaileddescription>
<para>The transceiver must be started and not suspended when calling this function.</para><para>In the synchronous mode, this call will return only after the End-of-Frame check function which is used by the transceiver returns true. This holds even if the number of the received bytes exceeds the given buffer size. In the asynchronous mode, the function copies the bytes which have been already received an returns immediately. In both cases, the number bytes saved to the given buffer never exceeds the given buffer size. If more bytes are available in the transceiver internal buffer, they will reside there.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the transceiver</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer which the bytes are copied to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer size. Independent of the number of the bytes which the transceiver has received, no more bytes are saved to the given buffer than the given size.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">length</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of received bytes which were saved to the given buffer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>in synchronous modeThe function will return with an error if this time elapsed before receiving the end of frame character</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if successfully started </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if any parameter is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga91295a78f0e84b66b5fffb537241b856" kindref="member">RETCODE_INCONSITENT_STATE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the transceiver is not in an active state (see <ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga4c3bff094eae5f86b6d2f54bbe375f54" kindref="member">UARTTransceiver_State_E</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba281b77d7bbd0b11781de864c12f32fd9" kindref="member">RETCODE_SEMAPHORE_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if semaphore could not be taken with given timeout (see <ref refid="struct___u_a_r_t_transceiver___s_1ad5ad104912ca41c2154bdcd1fd7e4c97" kindref="member">UARTTransceiver_T.RxSemaphore</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="381" column="1"/>
        <referencedby refid="group___x_d_k___extension___port___uart_1gacebe9c79d5732d5660670a060d0848d0" compoundref="_extension_uart_example_8c" startline="269" endline="281">ExtensionUartExample_Read</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gae4feb5a6422bc7a99606b9a903fffb9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T UARTTransceiver_Resume</definition>
        <argsstring>(UARTTransceiver_T *transceiver)</argsstring>
        <name>UARTTransceiver_Resume</name>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" kindref="member">UARTTransceiver_T</ref> *</type>
          <declname>transceiver</declname>
        </param>
        <briefdescription>
<para>It resumes the transceiver after it has been suspended. </para>        </briefdescription>
        <detaileddescription>
<para>The transceiver must be suspended when calling this function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the transceiver to be resumed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if successfully started </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if transceiver pointer parameter is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga91295a78f0e84b66b5fffb537241b856" kindref="member">RETCODE_INCONSITENT_STATE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the transceiver is not in an suspended state (see <ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga4c3bff094eae5f86b6d2f54bbe375f54" kindref="member">UARTTransceiver_State_E</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="319" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gad52d41bcb3b18885e49329c327b4472c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T UARTTransceiver_Start</definition>
        <argsstring>(UARTTransceiver_T *transceiver, UARTTransceiver_EndofFrameCheckFunc_T frameEndCheckFunc)</argsstring>
        <name>UARTTransceiver_Start</name>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" kindref="member">UARTTransceiver_T</ref> *</type>
          <declname>transceiver</declname>
        </param>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaa4a42fd113b5e3fc2dc6cefadd12bced" kindref="member">UARTTransceiver_EndofFrameCheckFunc_T</ref></type>
          <declname>frameEndCheckFunc</declname>
        </param>
        <briefdescription>
<para>It activates the transceiver to start receiving and sending in the synchronous operation mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the transceiver to be started.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frameEndCheckFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>A function pointer which is used by the transceiver to detect the end of the frame in order to invoke the callback.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if successfully started </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if transceiver pointer parameter is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga91295a78f0e84b66b5fffb537241b856" kindref="member">RETCODE_INCONSITENT_STATE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the transceiver is not in an initialized state (see <ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga4c3bff094eae5f86b6d2f54bbe375f54" kindref="member">UARTTransceiver_State_E</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaa6d932e7282cd4847bcd34cfa4f241ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T UARTTransceiver_StartInAsyncMode</definition>
        <argsstring>(UARTTransceiver_T *transceiver, UARTTransceiver_EndofFrameCheckFunc_T frameEndCheckFunc, UARTransceiver_Callback_T callback)</argsstring>
        <name>UARTTransceiver_StartInAsyncMode</name>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" kindref="member">UARTTransceiver_T</ref> *</type>
          <declname>transceiver</declname>
        </param>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaa4a42fd113b5e3fc2dc6cefadd12bced" kindref="member">UARTTransceiver_EndofFrameCheckFunc_T</ref></type>
          <declname>frameEndCheckFunc</declname>
        </param>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga158b9afcf0376f18c90faf71410759c8" kindref="member">UARTransceiver_Callback_T</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>It activates the transceiver to start receiving and sending in the asynchronous operation mode. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Beside the operation mode, this function does the same as the function <ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gad52d41bcb3b18885e49329c327b4472c" kindref="member">UARTTransceiver_Start()</ref>.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the transceiver to be started.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frameEndCheckFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>A function pointer which is used by the transceiver to detect the end of the frame in order to invoke the callback.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">callback</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback function which will be invoked on RX and TX events, e.g. errors or operation completeness in the asynchronous mode.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if successfully started </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if transceiver pointer parameter is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga91295a78f0e84b66b5fffb537241b856" kindref="member">RETCODE_INCONSITENT_STATE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the transceiver is not in an initialized state (see <ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga4c3bff094eae5f86b6d2f54bbe375f54" kindref="member">UARTTransceiver_State_E</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="284" column="1"/>
        <referencedby refid="group___x_d_k___extension___port___uart_1ga24130a88a54fc2a1767f7887c77318d9" compoundref="_extension_uart_example_8c" startline="202" endline="266">ExtensionUartExample_Initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gacdc16a6cc3797be47daff6fa52b2fc3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T UARTTransceiver_Stop</definition>
        <argsstring>(UARTTransceiver_T *transceiver)</argsstring>
        <name>UARTTransceiver_Stop</name>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" kindref="member">UARTTransceiver_T</ref> *</type>
          <declname>transceiver</declname>
        </param>
        <briefdescription>
<para>It stops the transceiver. </para>        </briefdescription>
        <detaileddescription>
<para>The transceiver must be started when calling this function. When the transceiver is stopped, read or write operations are not permitted. Resuming the transceiver after stopping it is not possible. It must be started using the <ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gad52d41bcb3b18885e49329c327b4472c" kindref="member">UARTTransceiver_Start()</ref> function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the transceiver to be suspended.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if successfully started </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if transceiver pointer parameter is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga91295a78f0e84b66b5fffb537241b856" kindref="member">RETCODE_INCONSITENT_STATE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the transceiver is not in an active or already suspended state (see <ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga4c3bff094eae5f86b6d2f54bbe375f54" kindref="member">UARTTransceiver_State_E</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gad01e3c82034582504a1a40ac86cca7dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T UARTTransceiver_Suspend</definition>
        <argsstring>(UARTTransceiver_T *transceiver)</argsstring>
        <name>UARTTransceiver_Suspend</name>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" kindref="member">UARTTransceiver_T</ref> *</type>
          <declname>transceiver</declname>
        </param>
        <briefdescription>
<para>It suspends the transceiver. </para>        </briefdescription>
        <detaileddescription>
<para>The transceiver must be started when calling this function. When the transceiver is suspended read or write operations are not permitted.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the transceiver to be suspended.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if successfully started </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if transceiver pointer parameter is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga91295a78f0e84b66b5fffb537241b856" kindref="member">RETCODE_INCONSITENT_STATE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the transceiver is not in an active state (see <ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga4c3bff094eae5f86b6d2f54bbe375f54" kindref="member">UARTTransceiver_State_E</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaffc00de5e7a25b3da39d09dd74f4a6bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T UARTTransceiver_WriteData</definition>
        <argsstring>(UARTTransceiver_T *transceiver, uint8_t *data, uint32_t length, uint32_t timeout_ms)</argsstring>
        <name>UARTTransceiver_WriteData</name>
        <param>
          <type><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" kindref="member">UARTTransceiver_T</ref> *</type>
          <declname>transceiver</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
<para>It writes the data for sending. </para>        </briefdescription>
        <detaileddescription>
<para>The transceiver must be started and not suspended when calling this function.</para><para>In the synchronous mode, this call will return only after the passed bytes have been send over UART/LEUART. In the asynchronous mode, the function triggers the sending and returns immediately. A callback follows to inform about the success or failure of the send operation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transceiver</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the transceiver</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer which the bytes are copied to.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer length and the number of bytes to be copied. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>The time afterwhich if the function does not succeed for any reason it will return an semaphore error.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if successfully started </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if any parameter is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga91295a78f0e84b66b5fffb537241b856" kindref="member">RETCODE_INCONSITENT_STATE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the transceiver is not in an active state (see <ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga4c3bff094eae5f86b6d2f54bbe375f54" kindref="member">UARTTransceiver_State_E</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba281b77d7bbd0b11781de864c12f32fd9" kindref="member">RETCODE_SEMAPHORE_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if semaphore could not be taken with given timeout (see <ref refid="struct___u_a_r_t_transceiver___s_1a480033d89c8df92248184e018ae05bcb" kindref="member">UARTTransceiver_T.TxSemaphore</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h" line="415" column="1"/>
        <referencedby refid="group___x_d_k___extension___port___uart_1ga48477b2d61dfc16266b9ad8f8c576739" compoundref="_extension_uart_example_8c" startline="284" endline="296">ExtensionUartExample_Write</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor">#ifndef<sp/>UARTTRANSCEIVER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UARTTRANSCEIVER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___utils_8h" kindref="compound">BCDS_Utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BCDS_FEATURE_UARTTRANSCEIVER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___basics_8h" kindref="compound">BCDS_Basics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___retcode_8h" kindref="compound">BCDS_Retcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___h_a_l_8h" kindref="compound">BCDS_HAL.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___h_a_l_config_8h" kindref="compound">BCDS_HALConfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___ring_buffer_8h" kindref="compound">BCDS_RingBuffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BCDS_FEATURE_UART<sp/>||<sp/>BCDS_FEATURE_LEUART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BCDS_FEATURE_UART<sp/>&amp;&amp;<sp/>BCDS_FEATURE_LEUART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;UARTransceiver<sp/>is<sp/>supporting<sp/>any<sp/>of<sp/>the<sp/>Uart.<sp/>it<sp/>is<sp/>enabled<sp/>only<sp/>for<sp/>Uart<sp/>module&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_free_r_t_o_s_8h" kindref="compound">FreeRTOS.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="semphr_8h" kindref="compound">semphr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BCDS_FEATURE_UART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___m_c_u___u_a_r_t_8h" kindref="compound">BCDS_MCU_UART.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga158b9afcf0376f18c90faf71410759c8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga158b9afcf0376f18c90faf71410759c8" kindref="member">UARTransceiver_Callback_T</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MCU_UART_Event_S<sp/>event);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>BCDS_FEATURE_LEUART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___m_c_u___l_e_u_a_r_t_8h" kindref="compound">BCDS_MCU_LEUART.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga158b9afcf0376f18c90faf71410759c8" kindref="member">UARTransceiver_Callback_T</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MCU_LEUART_Event_S<sp/>event);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaa4a42fd113b5e3fc2dc6cefadd12bced" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*<ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaa4a42fd113b5e3fc2dc6cefadd12bced" kindref="member">UARTTransceiver_EndofFrameCheckFunc_T</ref>)(uint8_t<sp/>lastByte);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga4c3bff094eae5f86b6d2f54bbe375f54" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga4c3bff094eae5f86b6d2f54bbe375f54" kindref="member">UARTTransceiver_State_E</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a12fe4b3f0b9edf2af6dd937d30960bbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a12fe4b3f0b9edf2af6dd937d30960bbf" kindref="member">UART_TRANSCEIVER_STATE_RESET</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="130" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a15a837639e89b20c2f1688dcae1eb011" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a15a837639e89b20c2f1688dcae1eb011" kindref="member">UART_TRANSCEIVER_STATE_IDLE</ref>,</highlight></codeline>
<codeline lineno="131" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a4e7a7410bbf74ebf00f6bba397a1081a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a4e7a7410bbf74ebf00f6bba397a1081a" kindref="member">UART_TRANSCEIVER_STATE_INITIALIZED</ref>,</highlight></codeline>
<codeline lineno="132" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a5e83d1a2f1c429aeca9ca4e084e32caf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a5e83d1a2f1c429aeca9ca4e084e32caf" kindref="member">UART_TRANSCEIVER_STATE_ACTIVE</ref>,</highlight></codeline>
<codeline lineno="133" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a816ae06c7d277d1eb433cf2a71285034" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a816ae06c7d277d1eb433cf2a71285034" kindref="member">UART_TRANSCEIVER_STATE_STOPPED</ref>,</highlight></codeline>
<codeline lineno="134" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a1f239237e532deaea991cf4d076d2ef1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga4c3bff094eae5f86b6d2f54bbe375f54a1f239237e532deaea991cf4d076d2ef1" kindref="member">UART_TRANSCEIVER_STATE_SUSPENDED</ref></highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gabfc93652f03de1186fb385d0beea7e19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gabfc93652f03de1186fb385d0beea7e19" kindref="member">UARTTransceiver_UartType_E</ref></highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ggabfc93652f03de1186fb385d0beea7e19ab7d1a6c6fcd7d957d6c6af5b09b94164" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ggabfc93652f03de1186fb385d0beea7e19ab7d1a6c6fcd7d957d6c6af5b09b94164" kindref="member">UART_TRANSCEIVER_UART_TYPE_NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="140" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ggabfc93652f03de1186fb385d0beea7e19aa11e850a81ede5423104314932990990" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ggabfc93652f03de1186fb385d0beea7e19aa11e850a81ede5423104314932990990" kindref="member">UART_TRANSCEIVER_UART_TYPE_UART</ref>,</highlight></codeline>
<codeline lineno="141" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ggabfc93652f03de1186fb385d0beea7e19a44d849db0b84dd8d78e8538a07b373a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ggabfc93652f03de1186fb385d0beea7e19a44d849db0b84dd8d78e8538a07b373a8" kindref="member">UART_TRANSCEIVER_UART_TYPE_LEUART</ref>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga36f79b7507c6a0cd1c11385136d7e225" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga36f79b7507c6a0cd1c11385136d7e225" kindref="member">UARTTransceiver_Mode_E</ref></highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga36f79b7507c6a0cd1c11385136d7e225a70fa5767894af48df67fa88723e5e0a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga36f79b7507c6a0cd1c11385136d7e225a70fa5767894af48df67fa88723e5e0a0" kindref="member">UART_TRANSCEIVER_MODE_NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="147" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga36f79b7507c6a0cd1c11385136d7e225a7d728bdff26e1abe7ccf61e015e3e1bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga36f79b7507c6a0cd1c11385136d7e225a7d728bdff26e1abe7ccf61e015e3e1bc" kindref="member">UART_TRANSCEIVER_MODE_SYNCH</ref>,</highlight></codeline>
<codeline lineno="148" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga36f79b7507c6a0cd1c11385136d7e225a83e70f65e880c553f5573cef4d9c7902" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gga36f79b7507c6a0cd1c11385136d7e225a83e70f65e880c553f5573cef4d9c7902" kindref="member">UART_TRANSCEIVER_MODE_ASYNCH</ref>,</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="struct___u_a_r_t_transceiver___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">_UARTTransceiver_S</ref></highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UART<sp/>Handle<sp/>used<sp/>by<sp/>the<sp/>UART<sp/>driver<sp/>in<sp/>HAL/MCU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="struct___u_a_r_t_transceiver___s_1aafb56e2e4c2af7b9c8d9cea969c61dc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___h_a_l_1ga39fd157e78cb1535814fe63af2f3e1ee" kindref="member">HWHandle_T</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1aafb56e2e4c2af7b9c8d9cea969c61dc0" kindref="member">handle</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="struct___u_a_r_t_transceiver___s_1addc73ae39adfbaeac2a218ae7784fb50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gabfc93652f03de1186fb385d0beea7e19" kindref="member">UARTTransceiver_UartType_E</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1addc73ae39adfbaeac2a218ae7784fb50" kindref="member">UartType</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="struct___u_a_r_t_transceiver___s_1a8a5cc63a5ba26dbc4faa5e5330992196" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga36f79b7507c6a0cd1c11385136d7e225" kindref="member">UARTTransceiver_Mode_E</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1a8a5cc63a5ba26dbc4faa5e5330992196" kindref="member">Mode</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="struct___u_a_r_t_transceiver___s_1a154a85b460022407c669a9a51471f5b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga4c3bff094eae5f86b6d2f54bbe375f54" kindref="member">UARTTransceiver_State_E</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1a154a85b460022407c669a9a51471f5b0" kindref="member">State</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialized<sp/>pointer<sp/>to<sp/>frame<sp/>end<sp/>check<sp/>function*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="struct___u_a_r_t_transceiver___s_1a546f998356dcfec6c6eb404d338d5d3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaa4a42fd113b5e3fc2dc6cefadd12bced" kindref="member">UARTTransceiver_EndofFrameCheckFunc_T</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1a546f998356dcfec6c6eb404d338d5d3d" kindref="member">EndOfFrameCheck</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="struct___u_a_r_t_transceiver___s_1a32984eee09747cf7c26e2ece6e4e65f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga158b9afcf0376f18c90faf71410759c8" kindref="member">UARTransceiver_Callback_T</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1a32984eee09747cf7c26e2ece6e4e65f6" kindref="member">callback</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*receive<sp/>ring<sp/>buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="struct___u_a_r_t_transceiver___s_1ad01aa023669a9d1ce010bb9b9c7fdaab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_ring_buffer___s" kindref="compound">RingBuffer_T</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1ad01aa023669a9d1ce010bb9b9c7fdaab" kindref="member">UartRxBufDescr</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>receive<sp/>buffer*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="struct___u_a_r_t_transceiver___s_1ad7638c8b244a13b320f89c9a1f11ba2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><ref refid="struct___u_a_r_t_transceiver___s_1ad7638c8b244a13b320f89c9a1f11ba2a" kindref="member">RawRxBuffer</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="struct___u_a_r_t_transceiver___s_1aac89cef7186c62f50851803cdac2928c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct___u_a_r_t_transceiver___s_1aac89cef7186c62f50851803cdac2928c" kindref="member">RawRxBufferSize</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>currently<sp/>received<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="struct___u_a_r_t_transceiver___s_1a72b68a95e1127022b4afef1c0a15da06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct___u_a_r_t_transceiver___s_1a72b68a95e1127022b4afef1c0a15da06" kindref="member">LastByte</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*semaphore<sp/>used<sp/>to<sp/>synchronize<sp/>the<sp/>send<sp/>process*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="struct___u_a_r_t_transceiver___s_1a480033d89c8df92248184e018ae05bcb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="semphr_8h_1ad88c6df4a04beedeac782918c8a332f5" kindref="member">SemaphoreHandle_t</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1a480033d89c8df92248184e018ae05bcb" kindref="member">TxSemaphore</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*semaphore<sp/>used<sp/>to<sp/>synchronize<sp/>the<sp/>error<sp/>handling<sp/>process*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="struct___u_a_r_t_transceiver___s_1ad5ad104912ca41c2154bdcd1fd7e4c97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="semphr_8h_1ad88c6df4a04beedeac782918c8a332f5" kindref="member">SemaphoreHandle_t</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1ad5ad104912ca41c2154bdcd1fd7e4c97" kindref="member">RxSemaphore</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BCDS_FEATURE_UART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="struct___u_a_r_t_transceiver___s_1ae9109980a93bc88f3f2f3f52dbb7e27b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">MCU_UART_Event_U<sp/><ref refid="struct___u_a_r_t_transceiver___s_1ae9109980a93bc88f3f2f3f52dbb7e27b" kindref="member">AsyncEvent</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>BCDS_FEATURE_LEUART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">MCU_LEUART_Event_U<sp/><ref refid="struct___u_a_r_t_transceiver___s_1ae9109980a93bc88f3f2f3f52dbb7e27b" kindref="member">AsyncEvent</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="struct___u_a_r_t_transceiver___s_1a0b834d918302c2c472c05f118ddf12ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf6fb6f6ae1be4277d38a8684e1be9acb" kindref="member">Retcode_General_E</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1a0b834d918302c2c472c05f118ddf12ca" kindref="member">errorCode</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga039060f6f0ecf4b3f933bc31d9cab661" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">_UARTTransceiver_S</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gac13c141344de042980deabfc89411d5e" kindref="member">UARTTransceiver_Initialize</ref>(</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref><sp/>*transceiver,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___h_a_l_1ga39fd157e78cb1535814fe63af2f3e1ee" kindref="member">HWHandle_T</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1aafb56e2e4c2af7b9c8d9cea969c61dc0" kindref="member">handle</ref>,<sp/>uint8_t<sp/>*<sp/>rawRxBuffer,<sp/>uint32_t<sp/>rawRxBufferSize,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gabfc93652f03de1186fb385d0beea7e19" kindref="member">UARTTransceiver_UartType_E</ref><sp/>type</highlight></codeline>
<codeline lineno="225"><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga40fe5691f2d48dbb8e6c2f0c6137047a" kindref="member">UARTTransceiver_Deinitialize</ref>(<ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref><sp/>*transceiver);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gad52d41bcb3b18885e49329c327b4472c" kindref="member">UARTTransceiver_Start</ref>(</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref><sp/>*transceiver,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaa4a42fd113b5e3fc2dc6cefadd12bced" kindref="member">UARTTransceiver_EndofFrameCheckFunc_T</ref><sp/>frameEndCheckFunc);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaa6d932e7282cd4847bcd34cfa4f241ba" kindref="member">UARTTransceiver_StartInAsyncMode</ref>(</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref><sp/>*transceiver,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaa4a42fd113b5e3fc2dc6cefadd12bced" kindref="member">UARTTransceiver_EndofFrameCheckFunc_T</ref><sp/>frameEndCheckFunc,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga158b9afcf0376f18c90faf71410759c8" kindref="member">UARTransceiver_Callback_T</ref><sp/><ref refid="struct___u_a_r_t_transceiver___s_1a32984eee09747cf7c26e2ece6e4e65f6" kindref="member">callback</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gad01e3c82034582504a1a40ac86cca7dc" kindref="member">UARTTransceiver_Suspend</ref>(<ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref><sp/>*transceiver);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gae4feb5a6422bc7a99606b9a903fffb9d" kindref="member">UARTTransceiver_Resume</ref>(<ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref><sp/>*transceiver);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gacdc16a6cc3797be47daff6fa52b2fc3e" kindref="member">UARTTransceiver_Stop</ref>(<ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref><sp/>*transceiver);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gae45d83bad8efeb151af0054e9b626632" kindref="member">UARTTransceiver_ReadData</ref>(</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref><sp/>*transceiver,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*buffer,<sp/>uint32_t<sp/>size,<sp/>uint32_t<sp/>*length,<sp/>uint32_t<sp/>timeout_ms);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1gaffc00de5e7a25b3da39d09dd74f4a6bd" kindref="member">UARTTransceiver_WriteData</ref>(</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref><sp/>*transceiver,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>data,<sp/>uint32_t<sp/>length,<sp/>uint32_t<sp/>timeout_ms);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BCDS_FEATURE_UART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga3814d8adbd0737240abccc82cae2556e" kindref="member">UARTTransceiver_LoopCallback</ref>(</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref><sp/>*transceiver,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>MCU_UART_Event_S<sp/>event);</highlight></codeline>
<codeline lineno="458" refid="group___u_a_r_t_t_r_a_n_s_c_e_i_v_e_r_1ga48c523be3334944baa133ab6d5c3e5a0" refkind="member"><highlight class="preprocessor">#define<sp/>UART_TRANSCEIVER_DECLARE_LOOP_CALLBACK(transceiver)<sp/>\</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor">static<sp/>BCDS_ALWAYS_INLINE<sp/>void<sp/>UARTTransceiverLoopCallback(UART_T<sp/>uart,<sp/>struct<sp/>MCU_UART_Event_S<sp/>event)<sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UARTTransceiver_LoopCallback(&amp;transceiver,<sp/>event);\</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>BCDS_FEATURE_LEUART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UARTTransceiver_LoopCallbackLE(</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___u_a_r_t_transceiver___s" kindref="compound">UARTTransceiver_T</ref><sp/>*transceiver,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>MCU_LEUART_Event_S<sp/>event);</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor">#define<sp/>UART_TRANSCEIVER_DECLARE_LOOP_CALLBACK_LE(transceiver)<sp/>\</highlight></codeline>
<codeline lineno="502"><highlight class="preprocessor">static<sp/>BCDS_ALWAYS_INLINE<sp/>void<sp/>UARTTransceiverLoopCallbackLE(LEUART_T<sp/>leuart,<sp/>struct<sp/>MCU_LEUART_Event_S<sp/>event)<sp/>\</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UARTTransceiver_LoopCallbackLE(&amp;transceiver,<sp/>event);\</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BCDS_FEATURE_LEUART<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BCDS_FEATURE_UART<sp/>||<sp/>BCDS_FEATURE_LEUART<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>BCDS_FEATURE_UARTTRANSCEIVER<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>UARTTRANSCEIVER_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_UARTTransceiver.h"/>
  </compounddef>
</doxygen>
