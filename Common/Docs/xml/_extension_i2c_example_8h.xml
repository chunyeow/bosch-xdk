<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_extension_i2c_example_8h" kind="file">
    <compoundname>ExtensionI2cExample.h</compoundname>
    <includes refid="_xdk_extension_port_2source_2_app_controller_8h" local="yes">AppController.h</includes>
    <includes refid="_b_c_d_s___retcode_8h" local="yes">BCDS_Retcode.h</includes>
    <includes refid="_b_c_d_s___cmd_processor_8h" local="yes">BCDS_CmdProcessor.h</includes>
    <includedby refid="_xdk_extension_port_2source_2_app_controller_8c" local="yes">SDK/xdk110/Apps/XdkExtensionPort/source/AppController.c</includedby>
    <includedby refid="_extension_i2c_example_8c" local="yes">SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.c</includedby>
    <incdepgraph>
      <node id="21873">
        <label>stdbool.h</label>
      </node>
      <node id="21877">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="21878" relation="include">
        </childnode>
        <childnode refid="21871" relation="include">
        </childnode>
        <childnode refid="21876" relation="include">
        </childnode>
      </node>
      <node id="21876">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="21871" relation="include">
        </childnode>
      </node>
      <node id="21872">
        <label>stdint.h</label>
      </node>
      <node id="21875">
        <label>stdlib.h</label>
      </node>
      <node id="21879">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="21874">
        <label>string.h</label>
      </node>
      <node id="21878">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="21879" relation="include">
        </childnode>
        <childnode refid="21876" relation="include">
        </childnode>
      </node>
      <node id="21871">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="21872" relation="include">
        </childnode>
        <childnode refid="21873" relation="include">
        </childnode>
        <childnode refid="21874" relation="include">
        </childnode>
        <childnode refid="21875" relation="include">
        </childnode>
      </node>
      <node id="21870">
        <label>AppController.h</label>
        <link refid="_xdk_extension_port_2source_2_app_controller_8h"/>
        <childnode refid="21871" relation="include">
        </childnode>
      </node>
      <node id="21869">
        <label>SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.h</label>
        <link refid="ExtensionI2cExample.h"/>
        <childnode refid="21870" relation="include">
        </childnode>
        <childnode refid="21876" relation="include">
        </childnode>
        <childnode refid="21877" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="21881">
        <label>SDK/xdk110/Apps/XdkExtensionPort/source/AppController.c</label>
        <link refid="_xdk_extension_port_2source_2_app_controller_8c"/>
      </node>
      <node id="21882">
        <label>SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.c</label>
        <link refid="_extension_i2c_example_8c"/>
      </node>
      <node id="21880">
        <label>SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.h</label>
        <link refid="ExtensionI2cExample.h"/>
        <childnode refid="21881" relation="include">
        </childnode>
        <childnode refid="21882" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___x_d_k___extension___port___i2c_1gadf329416e1a57f4a93e674a849d0b5c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T ExtensionI2cExample_DeInitialize</definition>
        <argsstring>(void)</argsstring>
        <name>ExtensionI2cExample_DeInitialize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This API is used to deinitialize the I2C interface. Once this called, from there-on user needs to call <ref refid="group___x_d_k___extension___port___i2c_1ga37e6acdd295cfd357fe7455f0c0c5dbb" kindref="member">ExtensionI2cExample_Initialize</ref> for using the I2C communication again. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise.</para></simplesect>
Refer interface header for description </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.h" line="114" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.c" bodystart="174" bodyend="201"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbaea901b927978b56cbfae3fa93c3ddfa4" compoundref="_b_c_d_s___retcode_8h" startline="111">RETCODE_UNINITIALIZED</references>
        <references refid="group___x_d_k___extension___port___i2c_1ga33917860489ef1e683c2c1f0c6eea32d" compoundref="_extension_i2c_example_8c" startline="72">I2CTranceiverInstance</references>
      </memberdef>
      <memberdef kind="function" id="group___x_d_k___extension___port___i2c_1ga37e6acdd295cfd357fe7455f0c0c5dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T ExtensionI2cExample_Initialize</definition>
        <argsstring>(CmdProcessor_T *handle)</argsstring>
        <name>ExtensionI2cExample_Initialize</name>
        <param>
          <type><ref refid="group___c_m_d_p_r_o_c_e_s_s_o_r_1ga41a2f220f03970c1857bd96528307a81" kindref="member">CmdProcessor_T</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>This API is used to prepare the I2C with the user configuration data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Command processor handle</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This must be the first API to be called if any of the features in this module is to be used.</para></simplesect>
<simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise.</para></simplesect>
Refer interface header for description </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.h" line="61" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.c" bodystart="92" bodyend="125"/>
        <references refid="group___b_a_s_i_c_s_1ga58d989b8568ab592dc4bcf48d05f28e4" compoundref="_b_c_d_s___basics_8h" startline="93">BCDS_UNUSED</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" compoundref="_b_c_d_s___retcode_8h" startline="112">RETCODE_NULL_POINTER</references>
        <references refid="group___x_d_k___extension___port___i2c_1ga53f5b03411db63ffc5a95d79783fdbbc" compoundref="_extension_i2c_example_8c" startline="77" endline="87">I2cMcuCallback</references>
        <references refid="group___x_d_k___extension___port___i2c_1ga33917860489ef1e683c2c1f0c6eea32d" compoundref="_extension_i2c_example_8c" startline="72">I2CTranceiverInstance</references>
        <referencedby refid="group___x_d_k___e_x_t_e_n_s_i_o_n___p_o_r_t_1ga5ca12481e985f2cd2437fe712e08c9b7" compoundref="_xdk_extension_port_2source_2_app_controller_8c" startline="219" endline="263">AppControllerSetup</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___x_d_k___extension___port___i2c_1ga95feb33d92ee1f3b0b94aa0adb00e882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T ExtensionI2cExample_Read</definition>
        <argsstring>(uint8_t slaveAddr, uint8_t regAddr, uint8_t *readVal, uint8_t readLength)</argsstring>
        <name>ExtensionI2cExample_Read</name>
        <param>
          <type>uint8_t</type>
          <declname>slaveAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>regAddr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>readVal</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>readLength</declname>
        </param>
        <briefdescription>
<para>This API is used to read the data received over the I2C extension port interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">slaveAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>slave address of the I2C</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">regAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the register to read</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">readVal</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to hold the data received over I2C</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">readLength</parametername>
</parameternamelist>
<parameterdescription>
<para>No of bytes to be read over the I2C bus</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise.</para></simplesect>
Refer interface header for description </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.h" line="80" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.c" bodystart="128" bodyend="131"/>
        <references refid="group___x_d_k___extension___port___i2c_1ga33917860489ef1e683c2c1f0c6eea32d" compoundref="_extension_i2c_example_8c" startline="72">I2CTranceiverInstance</references>
        <referencedby refid="group___x_d_k___extension___port___i2c_1ga89b5b3b7bd4284f2ad363d77f3260e4c" compoundref="_extension_i2c_example_8c" startline="140" endline="171">ExtensionI2cExample_ValidateChip</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___x_d_k___extension___port___i2c_1ga89b5b3b7bd4284f2ad363d77f3260e4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T ExtensionI2cExample_ValidateChip</definition>
        <argsstring>(void)</argsstring>
        <name>ExtensionI2cExample_ValidateChip</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This API is used to demonstrate read and write on the extension port I2C interface. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise.</para></simplesect>
Refer interface header for description </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.h" line="106" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.c" bodystart="140" bodyend="171"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___x_d_k___extension___port___i2c_1ga32c5158a392d1996452e2da785fae72c" compoundref="_extension_i2c_example_8c" startline="70">EXT_PORT_I2C_REG1_VAL</references>
        <references refid="group___x_d_k___extension___port___i2c_1ga95feb33d92ee1f3b0b94aa0adb00e882" compoundref="_extension_i2c_example_8c" startline="128" endline="131">ExtensionI2cExample_Read</references>
        <references refid="group___x_d_k___extension___port___i2c_1ga5e24272dba0e60d1d60bf1d65eeecabc" compoundref="_extension_i2c_example_8c" startline="68">EXT_PORT_I2C_SLAVE_ADDR</references>
        <references refid="group___x_d_k___extension___port___i2c_1ga1b6208d4112b93cb35559416f677989d" compoundref="_extension_i2c_example_8c" startline="67">EXT_PORT_I2C_REG2_ADDR</references>
        <references refid="group___x_d_k___extension___port___i2c_1ga78a3afe4d8637a1813ec751c49b23d8a" compoundref="_extension_i2c_example_8c" startline="69">EXT_PORT_I2C_REG2_VAL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6a822e4e2bf138bd0ac1387ad140a3051e" compoundref="_b_c_d_s___retcode_8h" startline="131">RETCODE_SEVERITY_ERROR</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba78de1a3b6af06d147bff0ca273ac0b17" compoundref="_b_c_d_s___retcode_8h" startline="113">RETCODE_UNEXPECTED_BEHAVIOR</references>
        <references refid="group___x_d_k___extension___port___i2c_1gac6eecc36971d4ade69538e5ee2a61ad9" compoundref="_extension_i2c_example_8c" startline="134" endline="137">ExtensionI2cExample_Write</references>
        <references refid="group___x_d_k___extension___port___i2c_1ga43c7e466f28b701dd96613ba3bda520c" compoundref="_extension_i2c_example_8c" startline="66">EXT_PORT_I2C_REG1_ADDR</references>
        <referencedby refid="group___x_d_k___e_x_t_e_n_s_i_o_n___p_o_r_t_1ga0d6ae41fbda1777d3e3b17ecb8aa7fc6" compoundref="_xdk_extension_port_2source_2_app_controller_8c" startline="116" endline="167">AppControllerFire</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___x_d_k___extension___port___i2c_1gac6eecc36971d4ade69538e5ee2a61ad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T ExtensionI2cExample_Write</definition>
        <argsstring>(uint8_t slaveAddr, uint8_t regAddr, uint8_t *writeVal, uint8_t writeLength)</argsstring>
        <name>ExtensionI2cExample_Write</name>
        <param>
          <type>uint8_t</type>
          <declname>slaveAddr</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>regAddr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>writeVal</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>writeLength</declname>
        </param>
        <briefdescription>
<para>This API is used to write the data received over the I2C extension port interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">slaveAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>slave address of the I2C</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">regAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the register to write</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">writeVal</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to hold the data to be transmitted over I2C</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">writeLength</parametername>
</parameternamelist>
<parameterdescription>
<para>No of bytes to be transmitted over the I2C bus</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise.</para></simplesect>
Refer interface header for description </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.h" line="99" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.c" bodystart="134" bodyend="137"/>
        <references refid="group___x_d_k___extension___port___i2c_1ga33917860489ef1e683c2c1f0c6eea32d" compoundref="_extension_i2c_example_8c" startline="72">I2CTranceiverInstance</references>
        <referencedby refid="group___x_d_k___extension___port___i2c_1ga89b5b3b7bd4284f2ad363d77f3260e4c" compoundref="_extension_i2c_example_8c" startline="140" endline="171">ExtensionI2cExample_ValidateChip</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EXTENSIONI2CEXAMPLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXTENSIONI2CEXAMPLE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Include<sp/>all<sp/>headers<sp/>which<sp/>are<sp/>needed<sp/>by<sp/>this<sp/>file.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_xdk_extension_port_2source_2_app_controller_8h" kindref="compound">AppController.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>type<sp/>and<sp/>macro<sp/>definitions<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>EXTENSION_PORT_I2C_FEATURE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___retcode_8h" kindref="compound">BCDS_Retcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___cmd_processor_8h" kindref="compound">BCDS_CmdProcessor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_d_k___extension___port___i2c_1ga37e6acdd295cfd357fe7455f0c0c5dbb" kindref="member">ExtensionI2cExample_Initialize</ref>(<ref refid="struct___cmd_processor___s" kindref="compound">CmdProcessor_T</ref><sp/>*<sp/>handle);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_d_k___extension___port___i2c_1ga95feb33d92ee1f3b0b94aa0adb00e882" kindref="member">ExtensionI2cExample_Read</ref>(uint8_t<sp/>slaveAddr,<sp/>uint8_t<sp/>regAddr,<sp/>uint8_t<sp/>*readVal,<sp/>uint8_t<sp/>readLength);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_d_k___extension___port___i2c_1gac6eecc36971d4ade69538e5ee2a61ad9" kindref="member">ExtensionI2cExample_Write</ref>(uint8_t<sp/>slaveAddr,<sp/>uint8_t<sp/>regAddr,<sp/>uint8_t<sp/>*writeVal,<sp/>uint8_t<sp/>writeLength);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_d_k___extension___port___i2c_1ga89b5b3b7bd4284f2ad363d77f3260e4c" kindref="member">ExtensionI2cExample_ValidateChip</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_d_k___extension___port___i2c_1gadf329416e1a57f4a93e674a849d0b5c7" kindref="member">ExtensionI2cExample_DeInitialize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>EXTENSION_PORT_I2C_FEATURE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>EXTENSIONI2CEXAMPLE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Apps/XdkExtensionPort/source/ExtensionI2cExample.h"/>
  </compounddef>
</doxygen>
