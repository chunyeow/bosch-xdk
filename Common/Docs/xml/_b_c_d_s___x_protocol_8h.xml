<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_b_c_d_s___x_protocol_8h" kind="file">
    <compoundname>BCDS_XProtocol.h</compoundname>
    <includes refid="_b_c_d_s___utils_8h" local="yes">BCDS_Utils.h</includes>
    <includes refid="_b_c_d_s___basics_8h" local="yes">BCDS_Basics.h</includes>
    <includes refid="_b_c_d_s___retcode_8h" local="yes">BCDS_Retcode.h</includes>
    <incdepgraph>
      <node id="39827">
        <label>stdbool.h</label>
      </node>
      <node id="39826">
        <label>stdint.h</label>
      </node>
      <node id="39824">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="39825" relation="include">
        </childnode>
      </node>
      <node id="39829">
        <label>stdlib.h</label>
      </node>
      <node id="39823">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="39828">
        <label>string.h</label>
      </node>
      <node id="39822">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="39823" relation="include">
        </childnode>
        <childnode refid="39824" relation="include">
        </childnode>
      </node>
      <node id="39825">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="39826" relation="include">
        </childnode>
        <childnode refid="39827" relation="include">
        </childnode>
        <childnode refid="39828" relation="include">
        </childnode>
        <childnode refid="39829" relation="include">
        </childnode>
      </node>
      <node id="39821">
        <label>SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h</label>
        <link refid="BCDS_XProtocol.h"/>
        <childnode refid="39822" relation="include">
        </childnode>
        <childnode refid="39825" relation="include">
        </childnode>
        <childnode refid="39824" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___x_p_r_o_t_o_c_o_l_1ga1035a62c3f0d421186143e2c158d465a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BCDS_DEPRECATED</definition>
        <argsstring>(Retcode_T xProtocol_Init(void))</argsstring>
        <name>BCDS_DEPRECATED</name>
        <param>
          <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref> </type>
          <declname>xProtocol_Init</declname>
          <array>void</array>
        </param>
        <briefdescription>
<para>Initializes the xProtocol module. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000014"><xreftitle>Deprecated</xreftitle><xrefdescription><para>since version vxx.xx.xx, replaced by <ref refid="group___x_p_r_o_t_o_c_o_l_1gaad090d59978439858029a5a8493e4c02" kindref="member">XProtocol_Init</ref> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___x_p_r_o_t_o_c_o_l_1gaac9b8b19c12f99edc16f3e0227319314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BCDS_DEPRECATED</definition>
        <argsstring>(Retcode_T xProtocol_EncodeFrame(const uint8_t *data, uint32_t dataLength, uint32_t maxFrameLength, uint8_t *frame, uint32_t *frameLength))</argsstring>
        <name>BCDS_DEPRECATED</name>
        <param>
          <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref> </type>
          <declname>xProtocol_EncodeFrame</declname>
          <array>const uint8_t *data, uint32_t dataLength, uint32_t maxFrameLength, uint8_t *frame, uint32_t *frameLength</array>
        </param>
        <briefdescription>
<para>Encodes an xProtocol frame. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000015"><xreftitle>Deprecated</xreftitle><xrefdescription><para>since version vxx.xx.xx, replaced by <ref refid="group___x_p_r_o_t_o_c_o_l_1ga6c80c1c96e490a97e46d574774bd4747" kindref="member">XProtocol_EncodeFrame</ref> </para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which contains data from higher level protocols, which must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxFrameLength</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of bytes the frame buffer can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">frame</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which is supposed to hold the encoded frame, which must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">frameLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the encoded frame </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>data encoding to frame successfull </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_NULL_POINTER</parametername>
</parameternamelist>
<parameterdescription>
<para>if data, frame or frameLength is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_FRAME_BUFFER_TOO_SMALL</parametername>
</parameternamelist>
<parameterdescription>
<para>encoded frame does not fit in frame buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_DATA_EXCEEDES_MAX_PAYLOAD_LENGTH</parametername>
</parameternamelist>
<parameterdescription>
<para>payload length would exceed the maximum length </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___x_p_r_o_t_o_c_o_l_1gaae70b716756bd26cc5d57d1a829a1df4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BCDS_DEPRECATED</definition>
        <argsstring>(Retcode_T xProtocol_DecodeFrame(const uint8_t *frame, uint32_t frameLength, uint32_t maxDataLength, uint8_t *data, uint32_t *dataLength))</argsstring>
        <name>BCDS_DEPRECATED</name>
        <param>
          <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref> </type>
          <declname>xProtocol_DecodeFrame</declname>
          <array>const uint8_t *frame, uint32_t frameLength, uint32_t maxDataLength, uint8_t *data, uint32_t *dataLength</array>
        </param>
        <briefdescription>
<para>Decodes an xProtocol frame. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000016"><xreftitle>Deprecated</xreftitle><xrefdescription><para>since version vxx.xx.xx, replaced by <ref refid="group___x_p_r_o_t_o_c_o_l_1ga9c2ffb0b8847b2104d5c3dfb906468b3" kindref="member">XProtocol_DecodeFrame</ref> </para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frame</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which contains an encoded frame, which must not be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of frame buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxDataLength</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of bytes the data buffer can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which is supposed to hold the decoded data, which must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dataLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>frame decoding successfull </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_NULL_POINTER</parametername>
</parameternamelist>
<parameterdescription>
<para>if data, frame or dataLength is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_DATA_BUFFER_TOO_SMALL</parametername>
</parameternamelist>
<parameterdescription>
<para>decoded frame does not fit in data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_INTEGRITY_FAILED</parametername>
</parameternamelist>
<parameterdescription>
<para>the frame&apos;s checksum is wrong </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_START_DELIMITER_MISSING</parametername>
</parameternamelist>
<parameterdescription>
<para>frame does not contain a start delimiter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_END_DELIMITER_MISSING</parametername>
</parameternamelist>
<parameterdescription>
<para>frame does not contain an end delimiter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___x_p_r_o_t_o_c_o_l_1ga9b145313abf179be06694354716ebf70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BCDS_DEPRECATED</definition>
        <argsstring>(Retcode_T xProtocol_IsCompleteFrame(const uint8_t *frame, uint32_t frameLength, const uint8_t **lastCheckPosition))</argsstring>
        <name>BCDS_DEPRECATED</name>
        <param>
          <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref> </type>
          <declname>xProtocol_IsCompleteFrame</declname>
          <array>const uint8_t *frame, uint32_t frameLength, const uint8_t **lastCheckPosition</array>
        </param>
        <briefdescription>
<para>Check if an xProtocol frame is complete. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000017"><xreftitle>Deprecated</xreftitle><xrefdescription><para>since version vxx.xx.xx, replaced by <ref refid="group___x_p_r_o_t_o_c_o_l_1ga43e3eebd0347eaba2461b1591966b220" kindref="member">XProtocol_IsCompleteFrame</ref> </para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frame</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which contains an, possibly incomplete, encoded frame, which must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of frame buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">lastCheckPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>last position within the frame which has been checked. If this function is called the first time on a frame, lastCheckPosition must be initialized to `frame&apos;. Subsequent calls to XProtocol_IsCompleteFrame for the same frame will use and update that parameter, to avoid checking the bytes of the frame over and over again. This is only meant as a performance optimization. If performance is not an issue, then that field may be set to NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>frame buffer contains complete xProtocol frame </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_NULL_POINTER</parametername>
</parameternamelist>
<parameterdescription>
<para>if frame pointer is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_FRAME_NOT_COMPLETE_YET</parametername>
</parameternamelist>
<parameterdescription>
<para>xProtocol is not complete yet </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_DATA_EXCEEDES_MAX_PAYLOAD_LENGTH</parametername>
</parameternamelist>
<parameterdescription>
<para>payload length would exceed the maximum length </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___x_p_r_o_t_o_c_o_l_1gaf8b74079263e08192e484ddea845a506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BCDS_DEPRECATED</definition>
        <argsstring>(Retcode_T xProtocol_GetPayloadLength(const uint8_t *frame, uint32_t frameLength, uint32_t *payloadLength))</argsstring>
        <name>BCDS_DEPRECATED</name>
        <param>
          <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref> </type>
          <declname>xProtocol_GetPayloadLength</declname>
          <array>const uint8_t *frame, uint32_t frameLength, uint32_t *payloadLength</array>
        </param>
        <briefdescription>
<para>Determine the payload length. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000018"><xreftitle>Deprecated</xreftitle><xrefdescription><para>since version vxx.xx.xx, replaced by <ref refid="group___x_p_r_o_t_o_c_o_l_1gac9cfc49a6a154941d6509334b0efeab4" kindref="member">XProtocol_GetPayloadLength</ref> </para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frame</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which contains an, possibly incomplete, encoded frame, which must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of frame buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">payloadLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of payload, must not be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>payloadLength contains payload length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_NULL_POINTER</parametername>
</parameternamelist>
<parameterdescription>
<para>if frame pointer or payloadLength is NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___x_p_r_o_t_o_c_o_l_1ga9c2ffb0b8847b2104d5c3dfb906468b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T XProtocol_DecodeFrame</definition>
        <argsstring>(const uint8_t *frame, uint32_t frameLength, uint32_t maxDataLength, uint8_t *data, uint32_t *dataLength)</argsstring>
        <name>XProtocol_DecodeFrame</name>
        <param>
          <type>const uint8_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frameLength</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>maxDataLength</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>dataLength</declname>
        </param>
        <briefdescription>
<para>Decodes an xProtocol frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frame</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which contains an encoded frame, which must not be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of frame buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxDataLength</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of bytes the data buffer can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which is supposed to hold the decoded data, which must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dataLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>frame decoding successfull </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_NULL_POINTER</parametername>
</parameternamelist>
<parameterdescription>
<para>if data, frame or dataLength is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_DATA_BUFFER_TOO_SMALL</parametername>
</parameternamelist>
<parameterdescription>
<para>decoded frame does not fit in data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_INTEGRITY_FAILED</parametername>
</parameternamelist>
<parameterdescription>
<para>the frame&apos;s checksum is wrong </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_START_DELIMITER_MISSING</parametername>
</parameternamelist>
<parameterdescription>
<para>frame does not contain a start delimiter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_END_DELIMITER_MISSING</parametername>
</parameternamelist>
<parameterdescription>
<para>frame does not contain an end delimiter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___x_p_r_o_t_o_c_o_l_1ga6c80c1c96e490a97e46d574774bd4747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T XProtocol_EncodeFrame</definition>
        <argsstring>(const uint8_t *data, uint32_t dataLength, uint32_t maxFrameLength, uint8_t *frame, uint32_t *frameLength)</argsstring>
        <name>XProtocol_EncodeFrame</name>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dataLength</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>maxFrameLength</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>frameLength</declname>
        </param>
        <briefdescription>
<para>Encodes an xProtocol frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which contains data from higher level protocols, which must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxFrameLength</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of bytes the frame buffer can hold </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">frame</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which is supposed to hold the encoded frame, which must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">frameLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the encoded frame </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>data encoding to frame successfull </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_NULL_POINTER</parametername>
</parameternamelist>
<parameterdescription>
<para>if data, frame or frameLength is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_FRAME_BUFFER_TOO_SMALL</parametername>
</parameternamelist>
<parameterdescription>
<para>encoded frame does not fit in frame buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_DATA_EXCEEDES_MAX_PAYLOAD_LENGTH</parametername>
</parameternamelist>
<parameterdescription>
<para>payload length would exceed the maximum length </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___x_p_r_o_t_o_c_o_l_1gac9cfc49a6a154941d6509334b0efeab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T XProtocol_GetPayloadLength</definition>
        <argsstring>(const uint8_t *frame, uint32_t frameLength, uint32_t *payloadLength)</argsstring>
        <name>XProtocol_GetPayloadLength</name>
        <param>
          <type>const uint8_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frameLength</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>payloadLength</declname>
        </param>
        <briefdescription>
<para>Determine the payload length. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frame</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which contains an, possibly incomplete, encoded frame, which must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of frame buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">payloadLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of payload, must not be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>payloadLength contains payload length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_NULL_POINTER</parametername>
</parameternamelist>
<parameterdescription>
<para>if frame pointer or payloadLength is NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___x_p_r_o_t_o_c_o_l_1gaad090d59978439858029a5a8493e4c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T XProtocol_Init</definition>
        <argsstring>(void)</argsstring>
        <name>XProtocol_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initializes the xProtocol module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___x_p_r_o_t_o_c_o_l_1ga43e3eebd0347eaba2461b1591966b220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T XProtocol_IsCompleteFrame</definition>
        <argsstring>(const uint8_t *frame, uint32_t frameLength, const uint8_t **lastCheckPosition)</argsstring>
        <name>XProtocol_IsCompleteFrame</name>
        <param>
          <type>const uint8_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frameLength</declname>
        </param>
        <param>
          <type>const uint8_t **</type>
          <declname>lastCheckPosition</declname>
        </param>
        <briefdescription>
<para>Check if an xProtocol frame is complete. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frame</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer which contains an, possibly incomplete, encoded frame, which must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameLength</parametername>
</parameternamelist>
<parameterdescription>
<para>length of frame buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">lastCheckPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>last position within the frame which has been checked. If this function is called the first time on a frame, lastCheckPosition must be initialized to `frame&apos;. Subsequent calls to XProtocol_IsCompleteFrame for the same frame will use and update that parameter, to avoid checking the bytes of the frame over and over again. This is only meant as a performance optimization. If performance is not an issue, then that field may be set to NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>frame buffer contains complete xProtocol frame </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_NULL_POINTER</parametername>
</parameternamelist>
<parameterdescription>
<para>if frame pointer is NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_FRAME_NOT_COMPLETE_YET</parametername>
</parameternamelist>
<parameterdescription>
<para>xProtocol is not complete yet </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RETCODE_XPROTOCOL_DATA_EXCEEDES_MAX_PAYLOAD_LENGTH</parametername>
</parameternamelist>
<parameterdescription>
<para>payload length would exceed the maximum length </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h" line="154" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor">#ifndef<sp/>BCDS_XPROTOCOL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCDS_XPROTOCOL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___utils_8h" kindref="compound">BCDS_Utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BCDS_FEATURE_XPROTOCOL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___basics_8h" kindref="compound">BCDS_Basics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___retcode_8h" kindref="compound">BCDS_Retcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_p_r_o_t_o_c_o_l_1gaad090d59978439858029a5a8493e4c02" kindref="member">XProtocol_Init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_p_r_o_t_o_c_o_l_1ga6c80c1c96e490a97e46d574774bd4747" kindref="member">XProtocol_EncodeFrame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/>dataLength,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>maxFrameLength,<sp/>uint8_t<sp/>*frame,<sp/>uint32_t<sp/>*frameLength);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_p_r_o_t_o_c_o_l_1ga9c2ffb0b8847b2104d5c3dfb906468b3" kindref="member">XProtocol_DecodeFrame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*frame,<sp/>uint32_t<sp/>frameLength,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>maxDataLength,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/>*dataLength);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_p_r_o_t_o_c_o_l_1ga43e3eebd0347eaba2461b1591966b220" kindref="member">XProtocol_IsCompleteFrame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*frame,<sp/>uint32_t<sp/>frameLength,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>**lastCheckPosition);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___x_p_r_o_t_o_c_o_l_1gac9cfc49a6a154941d6509334b0efeab4" kindref="member">XProtocol_GetPayloadLength</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*frame,<sp/>uint32_t<sp/>frameLength,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*payloadLength);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><ref refid="group___x_p_r_o_t_o_c_o_l_1ga1035a62c3f0d421186143e2c158d465a" kindref="member">BCDS_DEPRECATED</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>xProtocol_Init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="group___x_p_r_o_t_o_c_o_l_1ga1035a62c3f0d421186143e2c158d465a" kindref="member">BCDS_DEPRECATED</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>xProtocol_EncodeFrame(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/>dataLength,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>maxFrameLength,<sp/>uint8_t<sp/>*frame,<sp/>uint32_t<sp/>*frameLength));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><ref refid="group___x_p_r_o_t_o_c_o_l_1ga1035a62c3f0d421186143e2c158d465a" kindref="member">BCDS_DEPRECATED</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>xProtocol_DecodeFrame(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*frame,<sp/>uint32_t<sp/>frameLength,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>maxDataLength,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*data,<sp/>uint32_t<sp/>*dataLength));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><ref refid="group___x_p_r_o_t_o_c_o_l_1ga1035a62c3f0d421186143e2c158d465a" kindref="member">BCDS_DEPRECATED</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>xProtocol_IsCompleteFrame(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*frame,<sp/>uint32_t<sp/>frameLength,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>**lastCheckPosition));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><ref refid="group___x_p_r_o_t_o_c_o_l_1ga1035a62c3f0d421186143e2c158d465a" kindref="member">BCDS_DEPRECATED</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>xProtocol_GetPayloadLength(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*frame,<sp/>uint32_t<sp/>frameLength,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*payloadLength));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>if<sp/>BCDS_FEATURE_XPROTOCOL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BCDS_XPROTOCOL_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Utils/include/BCDS_XProtocol.h"/>
  </compounddef>
</doxygen>
