<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_b_c_d_s___h_a_l___signal_8h" kind="file">
    <compoundname>BCDS_HAL_Signal.h</compoundname>
    <includes refid="_b_c_d_s___basics_8h" local="yes">BCDS_Basics.h</includes>
    <includes refid="_b_c_d_s___assert_8h" local="yes">BCDS_Assert.h</includes>
    <incdepgraph>
      <node id="36584">
        <label>stdbool.h</label>
      </node>
      <node id="36587">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="36588" relation="include">
        </childnode>
      </node>
      <node id="36588">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="36582" relation="include">
        </childnode>
      </node>
      <node id="36583">
        <label>stdint.h</label>
      </node>
      <node id="36586">
        <label>stdlib.h</label>
      </node>
      <node id="36585">
        <label>string.h</label>
      </node>
      <node id="36582">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="36583" relation="include">
        </childnode>
        <childnode refid="36584" relation="include">
        </childnode>
        <childnode refid="36585" relation="include">
        </childnode>
        <childnode refid="36586" relation="include">
        </childnode>
      </node>
      <node id="36581">
        <label>SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h</label>
        <link refid="BCDS_HAL_Signal.h"/>
        <childnode refid="36582" relation="include">
        </childnode>
        <childnode refid="36587" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct___h_a_l___signal_handle___s" prot="public">_HAL_SignalHandle_S</innerclass>
      <sectiondef kind="user-defined">
      <memberdef kind="define" id="_b_c_d_s___h_a_l___signal_8h_1ab7997c2fe27ea021d00e7f1505f2fb80" prot="public" static="no">
        <name>HAL_SIGNAL_HANDLE_INIT</name>
        <initializer>{<ref refid="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103ea8f55fa2a723d0e4b7deee0d182e045b0" kindref="member">HAL_SIGNAL_NOTINIT</ref>, <ref refid="group___user_events_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A macro for the initialization of singal handles. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" line="78" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="enum" id="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103e" prot="public" static="no">
        <name>HAL_Signal_Basic_Instance_E</name>
        <enumvalue id="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103ea8f55fa2a723d0e4b7deee0d182e045b0" prot="public">
          <name>HAL_SIGNAL_NOTINIT</name>
          <initializer>= 0xFFFFFFFF</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103ead911ed28bf9030f85b641949b0e14ee8" prot="public">
          <name>HAL_SIGNAL_FULL</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103ea3d13b888792ba5a76f35bc9e66191427" prot="public">
          <name>HAL_SIGNAL_EMPTY</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" line="62" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" bodystart="61" bodyend="66"/>
      </memberdef>
      <memberdef kind="typedef" id="_b_c_d_s___h_a_l___signal_8h_1a1685b6b1f3e4f48aed712a5b5fac8ff2" prot="public" static="no">
        <type>struct <ref refid="struct___h_a_l___signal_handle___s" kindref="compound">_HAL_SignalHandle_S</ref></type>
        <definition>typedef struct _HAL_SignalHandle_S HAL_SignalHandle_T</definition>
        <argsstring></argsstring>
        <name>HAL_SignalHandle_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" line="102" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_b_c_d_s___h_a_l___signal_8h_1af5efe6362b1e31c433a983b25764c2cc" prot="public" static="no">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref>(*</type>
        <definition>typedef Retcode_T(* HAL_Signal_WaitHook_T)(HAL_SignalHandle_T *handle, uint32_t timeoutInMs)</definition>
        <argsstring>)(HAL_SignalHandle_T *handle, uint32_t timeoutInMs)</argsstring>
        <name>HAL_Signal_WaitHook_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" line="83" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_b_c_d_s___h_a_l___signal_8h_1aa073aabe33d05f00682cec7ed7ea9b30" prot="public" static="no">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref>(*</type>
        <definition>typedef Retcode_T(* HAL_Signal_NotifyHook_T)(HAL_SignalHandle_T *handle)</definition>
        <argsstring>)(HAL_SignalHandle_T *handle)</argsstring>
        <name>HAL_Signal_NotifyHook_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function data type for to handle different os Functions by setting a new Function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" line="89" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="_b_c_d_s___h_a_l___signal_8h_1a6c20de747437e7b025a4cbfa2a51595a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T HAL_Signal_SetHooks</definition>
        <argsstring>(HAL_Signal_WaitHook_T waitHook, HAL_Signal_NotifyHook_T notifyHook)</argsstring>
        <name>HAL_Signal_SetHooks</name>
        <param>
          <type><ref refid="_b_c_d_s___h_a_l___signal_8h_1af5efe6362b1e31c433a983b25764c2cc" kindref="member">HAL_Signal_WaitHook_T</ref></type>
          <declname>waitHook</declname>
        </param>
        <param>
          <type><ref refid="_b_c_d_s___h_a_l___signal_8h_1aa073aabe33d05f00682cec7ed7ea9b30" kindref="member">HAL_Signal_NotifyHook_T</ref></type>
          <declname>notifyHook</declname>
        </param>
        <briefdescription>
<para>a function to set RTOS hooks </para>        </briefdescription>
        <detaileddescription>
<para>If an RTOS is used, then hooks should be set to provide a proper signaling functions based on RTOS mechanisms such as semaphores.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">waitHook</parametername>
</parameternamelist>
<parameterdescription>
<para>the hook for the wait function</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">notifyHook</parametername>
</parameternamelist>
<parameterdescription>
<para>the hook for the notify function</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when successful </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when any one of the param has been NULL</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>a new wait Function Hook must implement a initialization or the used resource at first call </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_b_c_d_s___h_a_l___signal_8h_1a1d711ea5ebc6b7e999d4c36ffe47f945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T HAL_Signal_Wait</definition>
        <argsstring>(HAL_SignalHandle_T *handle, uint32_t timeoutInMs)</argsstring>
        <name>HAL_Signal_Wait</name>
        <param>
          <type><ref refid="_b_c_d_s___h_a_l___signal_8h_1a1685b6b1f3e4f48aed712a5b5fac8ff2" kindref="member">HAL_SignalHandle_T</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeoutInMs</declname>
        </param>
        <briefdescription>
<para>Wait for the signal in handle Context. </para>        </briefdescription>
        <detaileddescription>
<para>The call blocks until the signal is reached or the timeout is expired.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: Handle to a signal context</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeoutInMs</parametername>
</parameternamelist>
<parameterdescription>
<para>: timeout in milliseconds, 0 -&gt; No Timeout/wait for ever , Value &gt; 0 timeout in ms</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when successful </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when <ref refid="_b_c_d_s___h_a_l___signal_8h_1a6c20de747437e7b025a4cbfa2a51595a" kindref="member">HAL_Signal_SetHooks()</ref> is not initialized.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The Usage of wait in ISR Context is not Supported ! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_b_c_d_s___h_a_l___signal_8h_1a95cff382e47ef9cdf46fe9f71f0b94af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T HAL_Signal_Notify</definition>
        <argsstring>(HAL_SignalHandle_T *handle)</argsstring>
        <name>HAL_Signal_Notify</name>
        <param>
          <type><ref refid="_b_c_d_s___h_a_l___signal_8h_1a1685b6b1f3e4f48aed712a5b5fac8ff2" kindref="member">HAL_SignalHandle_T</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Send a signal to handle context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: Handle to a Signal context</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when successful </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>when <ref refid="_b_c_d_s___h_a_l___signal_8h_1a6c20de747437e7b025a4cbfa2a51595a" kindref="member">HAL_Signal_SetHooks()</ref> is not initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h" line="136" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is API to support signaling between concurrent execution contexts, i.e. tasks and ISRs. </para>    </briefdescription>
    <detaileddescription>
<para>HAL provides a basic implementation of the signaling between concurrent execution contexts which is based on a conditional variable and a waiting loop.</para><para>If an RTOS is used, then hooks should be set to provide a proper signaling functions based on RTOS mechanisms such as semaphores. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor">#ifndef<sp/>BCDS_HAL_SIGNAL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCDS_HAL_SIGNAL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___basics_8h" kindref="compound">BCDS_Basics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___assert_8h" kindref="compound">BCDS_Assert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103e" kindref="member">HAL_Signal_Basic_Instance_E</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63" refid="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103ea8f55fa2a723d0e4b7deee0d182e045b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103ea8f55fa2a723d0e4b7deee0d182e045b0" kindref="member">HAL_SIGNAL_NOTINIT</ref><sp/><sp/>=<sp/>0xFFFFFFFF,</highlight></codeline>
<codeline lineno="64" refid="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103ead911ed28bf9030f85b641949b0e14ee8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103ead911ed28bf9030f85b641949b0e14ee8" kindref="member">HAL_SIGNAL_FULL</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="65" refid="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103ea3d13b888792ba5a76f35bc9e66191427" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_b_c_d_s___h_a_l___signal_8h_1a6875283b7c9c6cd4a64cd7fb750e103ea3d13b888792ba5a76f35bc9e66191427" kindref="member">HAL_SIGNAL_EMPTY</ref><sp/><sp/><sp/><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="struct___h_a_l___signal_handle___s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct___h_a_l___signal_handle___s" kindref="compound">_HAL_SignalHandle_S</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70" refid="struct___h_a_l___signal_handle___s_1ad2d1ea63b8d8e2a9f10d28c923b541ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="struct___h_a_l___signal_handle___s_1ad2d1ea63b8d8e2a9f10d28c923b541ce" kindref="member">_Basic</ref>;</highlight></codeline>
<codeline lineno="71" refid="struct___h_a_l___signal_handle___s_1a282a079740edd8603ba829bba553b29a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><sp/><sp/><ref refid="struct___h_a_l___signal_handle___s_1a282a079740edd8603ba829bba553b29a" kindref="member">_OsHandle</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="_b_c_d_s___h_a_l___signal_8h_1a1685b6b1f3e4f48aed712a5b5fac8ff2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct___h_a_l___signal_handle___s" kindref="compound">_HAL_SignalHandle_S</ref><sp/><ref refid="struct___h_a_l___signal_handle___s" kindref="compound">HAL_SignalHandle_T</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="_b_c_d_s___h_a_l___signal_8h_1ab7997c2fe27ea021d00e7f1505f2fb80" refkind="member"><highlight class="preprocessor">#define<sp/>HAL_SIGNAL_HANDLE_INIT<sp/><sp/>{HAL_SIGNAL_NOTINIT,<sp/>NULL}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Function<sp/>data<sp/>type<sp/>for<sp/>to<sp/>handle<sp/>different<sp/>os<sp/>Functions<sp/>by<sp/>setting<sp/>a<sp/>new<sp/>Function</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="_b_c_d_s___h_a_l___signal_8h_1af5efe6362b1e31c433a983b25764c2cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>(*<ref refid="_b_c_d_s___h_a_l___signal_8h_1af5efe6362b1e31c433a983b25764c2cc" kindref="member">HAL_Signal_WaitHook_T</ref>)(<sp/><ref refid="struct___h_a_l___signal_handle___s" kindref="compound">HAL_SignalHandle_T</ref><sp/>*<sp/>handle,<sp/>uint32_t<sp/>timeoutInMs);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="_b_c_d_s___h_a_l___signal_8h_1aa073aabe33d05f00682cec7ed7ea9b30" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>(*<ref refid="_b_c_d_s___h_a_l___signal_8h_1aa073aabe33d05f00682cec7ed7ea9b30" kindref="member">HAL_Signal_NotifyHook_T</ref>)(<ref refid="struct___h_a_l___signal_handle___s" kindref="compound">HAL_SignalHandle_T</ref><sp/>*<sp/>handle);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="_b_c_d_s___h_a_l___signal_8h_1a6c20de747437e7b025a4cbfa2a51595a" kindref="member">HAL_Signal_SetHooks</ref>(<ref refid="_b_c_d_s___h_a_l___signal_8h_1af5efe6362b1e31c433a983b25764c2cc" kindref="member">HAL_Signal_WaitHook_T</ref><sp/>waitHook,<sp/><ref refid="_b_c_d_s___h_a_l___signal_8h_1aa073aabe33d05f00682cec7ed7ea9b30" kindref="member">HAL_Signal_NotifyHook_T</ref><sp/>notifyHook);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="_b_c_d_s___h_a_l___signal_8h_1a1d711ea5ebc6b7e999d4c36ffe47f945" kindref="member">HAL_Signal_Wait</ref>(<ref refid="struct___h_a_l___signal_handle___s" kindref="compound">HAL_SignalHandle_T</ref><sp/>*<sp/>handle,<sp/>uint32_t<sp/>timeoutInMs);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="_b_c_d_s___h_a_l___signal_8h_1a95cff382e47ef9cdf46fe9f71f0b94af" kindref="member">HAL_Signal_Notify</ref>(<ref refid="struct___h_a_l___signal_handle___s" kindref="compound">HAL_SignalHandle_T</ref><sp/>*<sp/>handle);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BCDS_HAL_SIGNAL_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Essentials/include/BCDS_HAL_Signal.h"/>
  </compounddef>
</doxygen>
