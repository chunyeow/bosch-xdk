<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r" kind="group">
    <compoundname>BCDS_WLAN_DRIVER</compoundname>
    <title>Wlan Driver</title>
    <innerfile refid="_b_c_d_s___wlan_driver_8h">BCDS_WlanDriver.h</innerfile>
    <innerclass refid="struct_wlan_driver___sl_spawn_msg___s" prot="public">WlanDriver_SlSpawnMsg_S</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga5c60036e38dbc8cfd7a88522eaea8142" prot="public" static="no">
        <type>signed int</type>
        <definition>typedef signed int Fd_t</definition>
        <argsstring></argsstring>
        <name>Fd_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>fileDescriptor for SPI port </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="89" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga31ef69feb947d795252ca7d2ca2dd913" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* WLANDRIVER_EVENT_HANDLER)(void *pValue)</definition>
        <argsstring>)(void *pValue)</argsstring>
        <name>WLANDRIVER_EVENT_HANDLER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>type definition of wifi event handler </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="92" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gab21ab10b86e7029625510934eb2f5303" prot="public" static="no">
        <type>short(*</type>
        <definition>typedef short(* WLANDRIVER_OSI_SPAWN_ENTRY)(void *pValue)</definition>
        <argsstring>)(void *pValue)</argsstring>
        <name>WLANDRIVER_OSI_SPAWN_ENTRY</name>
        <briefdescription>
<para>type definition for a spawn entry callback </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function which gets invoked inside stack returns the type short, hence in V1.2.0 simplelink stack this change is required  the spawn mechanism enable to run a function on different context. This mechanism allow to transfer the execution context from interrupt context to thread context or changing the context from an unknown user thread to general context. The implementation of the spawn mechanism depends on the user&apos;s system requirements and could varies from implementation of serialized execution using single thread to creating thread per call</para></simplesect>
<simplesect kind="note"><para>The stack size of the execution thread must be at least of TBD bytes! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="110" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gab2735c3b534ef27c95fdff49b57ddb18" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* WlanDriver_OsLockObject</definition>
        <argsstring></argsstring>
        <name>WlanDriver_OsLockObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="144" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga2a05b00f998ddcce2a739152100c51f7" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* WlanDriver_OsSyncObject</definition>
        <argsstring></argsstring>
        <name>WlanDriver_OsSyncObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="133" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae7f66080a8e8fb872e7becf5574507dc" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t WlanDriver_OsTime</definition>
        <argsstring></argsstring>
        <name>WlanDriver_OsTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="149" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga44f7b92f79c71534fb68dd127b044acf" prot="public" static="no">
        <type>struct <ref refid="struct_wlan_driver___sl_spawn_msg___s" kindref="compound">WlanDriver_SlSpawnMsg_S</ref></type>
        <definition>typedef struct WlanDriver_SlSpawnMsg_S WlanDriver_SlSpawnMsg_T</definition>
        <argsstring></argsstring>
        <name>WlanDriver_SlSpawnMsg_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="110" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gaa1c5ffb9a2fd567aed2f2026d4740531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T WlanDriver_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>WlanDriver_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to De-Initialize the WIFI Driver Layer. disabling WiFi clock , Powering off the WiFi module,Deleting the task and queue created. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>In case of any other error refer <ref refid="group___b_c_d_s___h_a_l___b_s_p___w_i_f_i___c_c3100_m_o_d_1ga54c268229472b0db9d28b4fe5ecf2da8" kindref="member">BSP_WiFi_CC3100MOD_Connect</ref> error codes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gaef77c5b99cc6d2d15b6b8f13e08d5cc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T WlanDriver_DeviceDisable</definition>
        <argsstring>(void)</argsstring>
        <name>WlanDriver_DeviceDisable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to write given no of bytes over SPI Function to disable the WIFI device. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>any error value refer <ref refid="group___b_c_d_s___h_a_l___b_s_p___w_i_f_i___c_c3100_m_o_d_1ga6d3668f47bf10f8ca2b80d5f7cb76180" kindref="member">BSP_WiFi_CC3100MOD_Disable</ref> error codes </para></simplesect>
<simplesect kind="note"><para>This function will be called by the WiFi driver API mapped in &lt;user.h&gt; header file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga5ebb70616edcfb05bb62359f57569551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T WlanDriver_DeviceEnable</definition>
        <argsstring>(void)</argsstring>
        <name>WlanDriver_DeviceEnable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to enable the WIFI device. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>any error value refer <ref refid="group___b_c_d_s___h_a_l___b_s_p___w_i_f_i___c_c3100_m_o_d_1ga09fcd8842ecdd3811532b084bbad508f" kindref="member">BSP_WiFi_CC3100MOD_Enable</ref> error codes </para></simplesect>
<simplesect kind="note"><para>This function will be called by the WiFi driver API mapped in &lt;user.h&gt; header file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga74ad901f0a6c348364fd739c4aca398a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T WlanDriver_Init</definition>
        <argsstring>(void)</argsstring>
        <name>WlanDriver_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to Initialize the WIFI Driver Layer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref> when successful </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba497273b2285191edc1cda8648b67250a" kindref="member">RETCODE_OUT_OF_RESOURCES</ref> Failed to create Semaphore while calling xSemaphoreCreateBinary. </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga440396a99858d69393bf1bb90ff5f4f7" kindref="member">RETCODE_RTOS_QUEUE_ERROR</ref> Failed to create SpawnQAndTask while calling CreateSpawnQAndTask.</para></simplesect>
<simplesect kind="return"><para>In case of any other error refer <ref refid="group___b_c_d_s___h_a_l___b_s_p___w_i_f_i___c_c3100_m_o_d_1ga54c268229472b0db9d28b4fe5ecf2da8" kindref="member">BSP_WiFi_CC3100MOD_Connect</ref> error codes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga733bde50024d7f6f3cf54655449e7e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t WlanDriver_OsiSpawn</definition>
        <argsstring>(WLANDRIVER_OSI_SPAWN_ENTRY pEntry, void *pValue, unsigned long flags)</argsstring>
        <name>WlanDriver_OsiSpawn</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gab21ab10b86e7029625510934eb2f5303" kindref="member">WLANDRIVER_OSI_SPAWN_ENTRY</ref></type>
          <declname>pEntry</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pValue</declname>
        </param>
        <param>
          <type>unsigned <ref refid="group___b_c_d_s___n_e_t_w_o_r_k___c_o_n_n_e_c_t_1ga295b9aa203738050fd2137fb81030321" kindref="member">long</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>This function call the pEntry callback from a different context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pEntry</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to the entry callback </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pValue</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to any type of memory structure that would be passed to pEntry callback from the execution thread. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>- execution flags - reserved for future usage</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - if flags set to SL_SPAWN_FLAG_FROM_SL_IRQ_HANDLER and xQueueSendFromISR is returning pdTRUE </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - if flags set to SL_SPAWN_FLAG_FROM_SL_IRQ_HANDLER and xQueueSendFromISR is returning pdFAIL </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - if flags set to some value other than SL_SPAWN_FLAG_FROM_SL_IRQ_HANDLER and xQueueSendFromISR is returning pdTRUE </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - if flags set to some value other than SL_SPAWN_FLAG_FROM_SL_IRQ_HANDLER and xQueueSendFromISR is returning pdFAIL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gad2aed04e8d6ffd986a0ce8ef39ffdda8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t WlanDriver_OsLockObjectCreate</definition>
        <argsstring>(WlanDriver_OsLockObject *pLockObj)</argsstring>
        <name>WlanDriver_OsLockObjectCreate</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gab2735c3b534ef27c95fdff49b57ddb18" kindref="member">WlanDriver_OsLockObject</ref> *</type>
          <declname>pLockObj</declname>
        </param>
        <briefdescription>
<para>This function creates a locking object (mutex semaphore) Locking object are used to protect a resource from mutual accesses of two or more threads. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pLockObj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the locking object control block </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - successfully created lock object </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - Failure when input parameter is NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga814fa26787c11c94e00fc290479db02b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t WlanDriver_OsLockObjectDelete</definition>
        <argsstring>(WlanDriver_OsLockObject *pLockObj)</argsstring>
        <name>WlanDriver_OsLockObjectDelete</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gab2735c3b534ef27c95fdff49b57ddb18" kindref="member">WlanDriver_OsLockObject</ref> *</type>
          <declname>pLockObj</declname>
        </param>
        <briefdescription>
<para>This function deletes a locking object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pLockObj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the locking object control block </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - successfully deleted lock object </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - Failure when input parameter is NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gab80ec3bb43bfe184aebfd86726a0f844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t WlanDriver_OsLockObjectWait</definition>
        <argsstring>(WlanDriver_OsLockObject *pLockObj, WlanDriver_OsTime TimeOut)</argsstring>
        <name>WlanDriver_OsLockObjectWait</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gab2735c3b534ef27c95fdff49b57ddb18" kindref="member">WlanDriver_OsLockObject</ref> *</type>
          <declname>pLockObj</declname>
        </param>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae7f66080a8e8fb872e7becf5574507dc" kindref="member">WlanDriver_OsTime</ref></type>
          <declname>TimeOut</declname>
        </param>
        <briefdescription>
<para>For details refer API documentation is in the interface header file WlanDriverInterface.h. </para>        </briefdescription>
        <detaileddescription>
<para>This function locks a locking object All other threads that call this function before this thread calls the WlanDriver_osLockUnlock would be suspended <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pLockObj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the lock object control block </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>numeric value specifies the maximum number of mSec to stay suspended while waiting for the locking object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - reception of the locking object within the TimeOut window </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - Failure when input parameter is NULL. </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - Failure when xSemaphoreTake returns pdFAIL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga95abcd81da91afceb4524edf057d4ae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t WlanDriver_OsLockUnlock</definition>
        <argsstring>(WlanDriver_OsLockObject *pLockObj)</argsstring>
        <name>WlanDriver_OsLockUnlock</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gab2735c3b534ef27c95fdff49b57ddb18" kindref="member">WlanDriver_OsLockObject</ref> *</type>
          <declname>pLockObj</declname>
        </param>
        <briefdescription>
<para>This function unlock a locking object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pLockObj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the lock object control block </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - successfully released the lock object </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - Failure when input parameter is NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="370" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga7f67121b74f311f926b30eb6029a6966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t WlanDriver_OsSyncObjectClear</definition>
        <argsstring>(WlanDriver_OsSyncObject *pSyncObj)</argsstring>
        <name>WlanDriver_OsSyncObjectClear</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga2a05b00f998ddcce2a739152100c51f7" kindref="member">WlanDriver_OsSyncObject</ref> *</type>
          <declname>pSyncObj</declname>
        </param>
        <briefdescription>
<para>This API tries to take the sync object without no wait time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSyncObj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the sync object control block </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - successful reception of the signal </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - Failure when input parameter is NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gaac26421c87e048237b5a4c0f6fcc1f60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t WlanDriver_OsSyncObjectCreate</definition>
        <argsstring>(WlanDriver_OsSyncObject *pSyncObj)</argsstring>
        <name>WlanDriver_OsSyncObjectCreate</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga2a05b00f998ddcce2a739152100c51f7" kindref="member">WlanDriver_OsSyncObject</ref> *</type>
          <declname>pSyncObj</declname>
        </param>
        <briefdescription>
<para>This function creates a sync object (binary semaphore) The sync object is used for synchronization between different thread or ISR and a thread. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSyncObj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the sync object control block</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - successfully created synchronous object </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - Failure when input parameter is NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga6ca4ac9bdd26d6211ad8fbae1c707ab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t WlanDriver_OsSyncObjectDelete</definition>
        <argsstring>(WlanDriver_OsSyncObject *pSyncObj)</argsstring>
        <name>WlanDriver_OsSyncObjectDelete</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga2a05b00f998ddcce2a739152100c51f7" kindref="member">WlanDriver_OsSyncObject</ref> *</type>
          <declname>pSyncObj</declname>
        </param>
        <briefdescription>
<para>This function deletes a sync object (binary semaphore) if the input parameter is valid. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSyncObj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the sync object control block</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - successfully deleted synchronous object </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - Failure when input parameter is NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga4f15378380be03a89f5e775654ef2046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t WlanDriver_OsSyncObjectSignal</definition>
        <argsstring>(WlanDriver_OsSyncObject *pSyncObj)</argsstring>
        <name>WlanDriver_OsSyncObjectSignal</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga2a05b00f998ddcce2a739152100c51f7" kindref="member">WlanDriver_OsSyncObject</ref> *</type>
          <declname>pSyncObj</declname>
        </param>
        <briefdescription>
<para>This function generates a sync signal for the object (binary semaphore) All suspended threads waiting on this sync object are resumed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSyncObj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the sync object control block</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - successfully released the synchronous object </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - Failure when input parameter is NULL. </para></simplesect>
<simplesect kind="note"><para>This API gives the synchronous object successfully if it was already taken by some one. If the sync object given as input was not taken and this API call simply returns since sync object shall not be given if it is not taken </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga22cd6840f12971ca47743b9a0ebdab89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t WlanDriver_OsSyncObjectWait</definition>
        <argsstring>(WlanDriver_OsSyncObject *pSyncObj, WlanDriver_OsTime TimeOut)</argsstring>
        <name>WlanDriver_OsSyncObjectWait</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga2a05b00f998ddcce2a739152100c51f7" kindref="member">WlanDriver_OsSyncObject</ref> *</type>
          <declname>pSyncObj</declname>
        </param>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae7f66080a8e8fb872e7becf5574507dc" kindref="member">WlanDriver_OsTime</ref></type>
          <declname>TimeOut</declname>
        </param>
        <briefdescription>
<para>This function waits for a sync signal of the specific sync object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSyncObj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the sync object control block </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>numeric value specifies the maximum number of mSec to stay suspended while waiting for the sync signal </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - reception of the signal within the TimeOut window </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - Failure when input parameter is NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="322" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga80db1d3c984fc768c999aa6ce8b58fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t WlanDriver_OsSyncSignalFromISR</definition>
        <argsstring>(WlanDriver_OsSyncObject *pSyncObj)</argsstring>
        <name>WlanDriver_OsSyncSignalFromISR</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga2a05b00f998ddcce2a739152100c51f7" kindref="member">WlanDriver_OsSyncObject</ref> *</type>
          <declname>pSyncObj</declname>
        </param>
        <briefdescription>
<para>This function generates a sync signal for the object from Interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSyncObj</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the sync object control block</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> - successfully released the synchronous object from interrupt </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> - Failure when input parameter is NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga6cae2055771da707905bdff5ddb43dd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int WlanDriver_RegInterruptHdlr</definition>
        <argsstring>(WLANDRIVER_EVENT_HANDLER InterruptHdl, void *pValue)</argsstring>
        <name>WlanDriver_RegInterruptHdlr</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga31ef69feb947d795252ca7d2ca2dd913" kindref="member">WLANDRIVER_EVENT_HANDLER</ref></type>
          <declname>InterruptHdl</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pValue</declname>
        </param>
        <briefdescription>
<para>Function to register the Interrupt handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> when successful </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" kindref="member">WLANDRIVER_FAILURE</ref> when the value of input pointer(pValue) is NULL</para></simplesect>
<simplesect kind="note"><para>This function will be called by the WiFi driver API mapped in &lt;user.h&gt; header file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga36e8185bd025783b2c52ba22742ef953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T WlanDriver_SetDeviceTime</definition>
        <argsstring>(struct tm *tm)</argsstring>
        <name>WlanDriver_SetDeviceTime</name>
        <param>
          <type>struct tm *</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
<para>Function to set the current device time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tm</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to all kinds of useful information about the current time.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>RETCODE_OK on success, or an error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="399" column="1"/>
        <referencedby refid="group___a_w_s___s_e_n_d___d_a_t_a___o_v_e_r___m_q_t_t_1gab33d1827931e656830843d7274f89055" compoundref="_aws_send_data_over_m_q_t_t_2source_2_app_controller_8c" startline="421" endline="527">AppControllerFireTask</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gaaf36b335187063ee05686e755ef0fe16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WlanDriver_SimpleLinkSpawnTask</definition>
        <argsstring>(void *pvParameters)</argsstring>
        <name>WlanDriver_SimpleLinkSpawnTask</name>
        <param>
          <type>void *</type>
          <declname>pvParameters</declname>
        </param>
        <briefdescription>
<para>This is the simplelink spawn task required to call SimpleLink Driver&apos;s callback from a different context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pvParameters</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the task parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga95edebf75d9ec268c58172cff0306c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int WlanDriver_SpiClose</definition>
        <argsstring>(Fd_t fd)</argsstring>
        <name>WlanDriver_SpiClose</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga5c60036e38dbc8cfd7a88522eaea8142" kindref="member">Fd_t</ref></type>
          <declname>fd</declname>
        </param>
        <briefdescription>
<para>Function to close the SPI port. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gada774dccb0214a9423687d3b86ee6542" kindref="member">WLANDRIVER_SPI_ERROR</ref> - if spiHandle is NULL </para></simplesect>
<simplesect kind="return"><para>any error value refer #MCU_SPI_Deinitialize error codes </para></simplesect>
<simplesect kind="note"><para>The return type &apos;int&apos; and input parameter &apos;Fd_t&apos; cannot be replaced with BCDS datatype since prototype has to match one on one with third party function data type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga5cc556a100034e6f7a039ecb84507b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga5c60036e38dbc8cfd7a88522eaea8142" kindref="member">Fd_t</ref></type>
        <definition>Fd_t WlanDriver_SpiOpen</definition>
        <argsstring>(char *ifName, unsigned long flags)</argsstring>
        <name>WlanDriver_SpiOpen</name>
        <param>
          <type>char *</type>
          <declname>ifName</declname>
        </param>
        <param>
          <type>unsigned <ref refid="group___b_c_d_s___n_e_t_w_o_r_k___c_o_n_n_e_c_t_1ga295b9aa203738050fd2137fb81030321" kindref="member">long</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Function to Initialize the SPI port. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gada774dccb0214a9423687d3b86ee6542" kindref="member">WLANDRIVER_SPI_ERROR</ref> - if spiHandle is NULL </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gada774dccb0214a9423687d3b86ee6542" kindref="member">WLANDRIVER_SPI_ERROR</ref> - if MCU_SPI_Initialize returns some error code other than RETCODE_OK </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" kindref="member">WLANDRIVER_SUCCESS</ref> when successful</para></simplesect>
<simplesect kind="note"><para>The return type &apos;Fd_t&apos; and input parameters &apos;char*&apos;and &apos;unsigned long&apos; cannot be replaced with BCDS datatype since prototype has to match one on one with third party function data type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gaef042f39295f4e885dac941f67dbbaa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int WlanDriver_SpiRead</definition>
        <argsstring>(Fd_t fd, unsigned char *pBuff, int len)</argsstring>
        <name>WlanDriver_SpiRead</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga5c60036e38dbc8cfd7a88522eaea8142" kindref="member">Fd_t</ref></type>
          <declname>fd</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>pBuff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Function to read given number of bytes over SPI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fd</parametername>
</parameternamelist>
<parameterdescription>
<para>-file descriptor for spi port, which is not used in current implementation</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pBuff</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to the first location of a buffer that contains enough space for all expected data</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>len - number of bytes to read from the communication channel</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gaf93151556533c3f050937812bb3442e7" kindref="member">WLANDRIVER_SPI_RW_ERROR</ref> - spi read failed </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbaa0e5f5d6d335ce57106dbe4c3c914a9d" kindref="member">RETCODE_TIMEOUT</ref> - if xSemaphoreTake fails.</para></simplesect>
<simplesect kind="note"><para>The return value consist of (First 1 MSByte represents Package ID, Next byte represents Severity and Last 2 LSBytes represents error code).</para></simplesect>
<simplesect kind="return"><para>#len - on success returns number of bytes received.</para></simplesect>
<simplesect kind="note"><para>The return type &apos;int&apos; and input parameters &apos;Fd_t&apos;,&apos;unsigned char*&apos;and &apos;int&apos; cannot be replaced with BCDS datatype since prototype has to match one on one with third party function data type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac7ae7d0cca1e67519715942b93de27c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int WlanDriver_SpiWrite</definition>
        <argsstring>(Fd_t fd, unsigned char *pBuff, int len)</argsstring>
        <name>WlanDriver_SpiWrite</name>
        <param>
          <type><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga5c60036e38dbc8cfd7a88522eaea8142" kindref="member">Fd_t</ref></type>
          <declname>fd</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>pBuff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Function to write given no of bytes over SPI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fd</parametername>
</parameternamelist>
<parameterdescription>
<para>-file descriptor for spi port, which is not used in current implementation</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pBuff</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to the first location of a buffer that contains the data to send over the communication channel.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>len - number of bytes to write to the communication channel</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gaf93151556533c3f050937812bb3442e7" kindref="member">WLANDRIVER_SPI_RW_ERROR</ref> - spi write failed if MCU_SPI_Send returns some value other than RETCODE_OK. </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acbaa0e5f5d6d335ce57106dbe4c3c914a9d" kindref="member">RETCODE_TIMEOUT</ref> - if xSemaphoreTake fails. </para></simplesect>
<simplesect kind="return"><para>#len - on success returns number of bytes sent.</para></simplesect>
<simplesect kind="note"><para>The return type &apos;int&apos; and input parameters &apos;Fd_t&apos;,&apos;unsigned char*&apos;and &apos;int&apos; cannot be replaced with BCDS datatype since prototype has to match one on one with third party function data type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="244" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gad039b6c973a87547c1a1271d1770718c" prot="public" static="no">
        <name>WLANDRIVER_COM_TIMEOUT</name>
        <initializer>UINT32_C(5000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="85" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gac624fa6ec819d33292bf6930d0bd387a" prot="public" static="no">
        <name>WLANDRIVER_FAILURE</name>
        <initializer>INT32_C(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Definition representing failure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="81" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga2c52ca0209cd824077dd6f5b8bfa1ff0" prot="public" static="no">
        <name>WLANDRIVER_MAX_DELAY</name>
        <initializer>(UINT32_MAX)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Definition representing Maximum delay </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="79" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae9b70af8c8941d7719042832afebd650" prot="public" static="no">
        <name>WLANDRIVER_NOT_ENOUGH_MEMORY</name>
        <initializer>(-1L)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="82" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga24224cb077981fa60dc1b15ec38fd914" prot="public" static="no">
        <name>WLANDRIVER_OS_NO_WAIT</name>
        <initializer>UINT32_C(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Definition representing wait for ever time value for OS API TimeOut </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="78" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1ga241ccfce77522db8e742217f8b25b4ad" prot="public" static="no">
        <name>WLANDRIVER_OS_WAIT_FOREVER</name>
        <initializer>(UINT32_MAX)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Definition representing wait for ever time value for OS API TimeOut </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="77" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gada774dccb0214a9423687d3b86ee6542" prot="public" static="no">
        <name>WLANDRIVER_SPI_ERROR</name>
        <initializer>INT32_C(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="84" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gabdc046088085c085a960bcfd0bae9d98" prot="public" static="no">
        <name>WLANDRIVER_SPI_LOCK_TIMEOUT</name>
        <initializer>UINT32_C(5000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="86" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gaf93151556533c3f050937812bb3442e7" prot="public" static="no">
        <name>WLANDRIVER_SPI_RW_ERROR</name>
        <initializer>UINT32_C(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="83" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___w_l_a_n___d_r_i_v_e_r_1gae65b35d0153b4923927cc4b7567790e4" prot="public" static="no">
        <name>WLANDRIVER_SUCCESS</name>
        <initializer>INT32_C(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Definition representing Success </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" line="80" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/Wlan/include/BCDS_WlanDriver.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The interface header exports High-level Wlan Driver API&apos;s for integrating wifi stack which are used to initialize the Wlan Driver , Register Interrupt Handler and Wlan Driver Os Sync Objects creation and Deletion etc.,</para><para><simplesect kind="note"><para>Data type &apos;Fd_t&apos; is custom for third party wifi driver and hence for porting we cannot change this to BCDS standard datatype </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
