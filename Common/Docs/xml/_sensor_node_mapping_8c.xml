<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_sensor_node_mapping_8c" kind="file">
    <compoundname>SensorNodeMapping.c</compoundname>
    <includes refid="_b_c_d_s___sensor_utils_8h" local="yes">BCDS_SensorUtils.h</includes>
    <includes refid="_b_c_d_s___i2_c_transceiver_8h" local="yes">BCDS_I2CTransceiver.h</includes>
    <includes refid="_sensor_node_mapping_8h" local="yes">SensorNodeMapping.h</includes>
    <includes refid="_b_c_d_s___b_s_p___sensor_node_8h" local="yes">BCDS_BSP_SensorNode.h</includes>
    <incdepgraph>
      <node id="38606">
        <label>stdbool.h</label>
      </node>
      <node id="38613">
        <label>BCDS_HALConfig.h</label>
        <link refid="_b_c_d_s___h_a_l_config_8h"/>
      </node>
      <node id="38615">
        <label>BCDS_BSP_SensorNode.h</label>
        <link refid="_b_c_d_s___b_s_p___sensor_node_8h"/>
        <childnode refid="38612" relation="include">
        </childnode>
      </node>
      <node id="38605">
        <label>stdint.h</label>
      </node>
      <node id="38603">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="38604" relation="include">
        </childnode>
      </node>
      <node id="38608">
        <label>stdlib.h</label>
      </node>
      <node id="38609">
        <label>BCDS_I2CTransceiver.h</label>
        <link refid="_b_c_d_s___i2_c_transceiver_8h"/>
        <childnode refid="38610" relation="include">
        </childnode>
        <childnode refid="38603" relation="include">
        </childnode>
        <childnode refid="38612" relation="include">
        </childnode>
      </node>
      <node id="38611">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="38607">
        <label>string.h</label>
      </node>
      <node id="38610">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="38611" relation="include">
        </childnode>
        <childnode refid="38603" relation="include">
        </childnode>
      </node>
      <node id="38601">
        <label>SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c</label>
        <link refid="SensorNodeMapping.c"/>
        <childnode refid="38602" relation="include">
        </childnode>
        <childnode refid="38609" relation="include">
        </childnode>
        <childnode refid="38614" relation="include">
        </childnode>
        <childnode refid="38615" relation="include">
        </childnode>
      </node>
      <node id="38614">
        <label>SensorNodeMapping.h</label>
        <link refid="_sensor_node_mapping_8h"/>
        <childnode refid="38604" relation="include">
        </childnode>
      </node>
      <node id="38604">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="38605" relation="include">
        </childnode>
        <childnode refid="38606" relation="include">
        </childnode>
        <childnode refid="38607" relation="include">
        </childnode>
        <childnode refid="38608" relation="include">
        </childnode>
      </node>
      <node id="38602">
        <label>BCDS_SensorUtils.h</label>
        <link refid="_b_c_d_s___sensor_utils_8h"/>
        <childnode refid="38603" relation="include">
        </childnode>
      </node>
      <node id="38612">
        <label>BCDS_HAL.h</label>
        <link refid="_b_c_d_s___h_a_l_8h"/>
        <childnode refid="38603" relation="include">
        </childnode>
        <childnode refid="38613" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_sensor_node_mapping_8c_1abff8f3a204e79671b98fabaa652198c3" prot="public" static="no">
        <name>BCDS_MODULE_ID</name>
        <initializer><ref refid="group___s_e_n_s_o_r___u_t_i_l_s_1ggaba1885b5f54a444c5604d7c229527edbad52831197a74064538c6a14177a4c765" kindref="member">BCDS_SENSORUTILS_ID_SENSORNODE_MAPPING</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" line="42" column="10" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" prot="public" static="yes" mutable="no">
        <type>I2cTranceiverHandle_T</type>
        <definition>I2cTranceiverHandle_T SensorNodeI2CTransceiver</definition>
        <argsstring></argsstring>
        <name>SensorNodeI2CTransceiver</name>
        <initializer>= { <ref refid="_serval___types_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>, <ref refid="group___user_events_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, <ref refid="group___user_events_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, <ref refid="group___user_events_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, INT8_C(-1) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" line="52" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" bodystart="52" bodyend="-1"/>
        <referencedby refid="_sensor_node_mapping_8c_1ae1d233c975956d208802d62db87572b5" compoundref="_sensor_node_mapping_8c" startline="55" endline="59">I2cInterruptCallback</referencedby>
        <referencedby refid="_sensor_node_mapping_8h_1a76bdc1fd6f340a0a598dadddb9ab278a" compoundref="_sensor_node_mapping_8c" startline="62" endline="88">SensorNodeMapping_Init</referencedby>
        <referencedby refid="_sensor_node_mapping_8h_1ac656d2e1648f159bb70e26e1666a94c3" compoundref="_sensor_node_mapping_8c" startline="91" endline="100">SensorNodeMapping_Write</referencedby>
        <referencedby refid="_sensor_node_mapping_8h_1a77b5d6036b31e0f795e5167c9435db6c" compoundref="_sensor_node_mapping_8c" startline="102" endline="110">SensorNodeMapping_Read</referencedby>
        <referencedby refid="_sensor_node_mapping_8h_1a9ed27f9661fce27488014ca5b12372c8" compoundref="_sensor_node_mapping_8c" startline="113" endline="121">SensorNodeMapping_BurstRead</referencedby>
        <referencedby refid="_sensor_node_mapping_8h_1ac03bdbce5f464b417b6341db3e1e999d" compoundref="_sensor_node_mapping_8c" startline="124" endline="140">SensorNodeMapping_DeInit</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_sensor_node_mapping_8c_1ae1d233c975956d208802d62db87572b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void I2cInterruptCallback</definition>
        <argsstring>(I2C_T i2c, struct MCU_I2C_Event_S event)</argsstring>
        <name>I2cInterruptCallback</name>
        <param>
          <type>I2C_T</type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>struct MCU_I2C_Event_S</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" line="55" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" bodystart="55" bodyend="59"/>
        <references refid="group___b_a_s_i_c_s_1ga58d989b8568ab592dc4bcf48d05f28e4" compoundref="_b_c_d_s___basics_8h" startline="93">BCDS_UNUSED</references>
        <references refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" compoundref="_sensor_node_mapping_8c" startline="52">SensorNodeI2CTransceiver</references>
        <referencedby refid="_sensor_node_mapping_8h_1a76bdc1fd6f340a0a598dadddb9ab278a" compoundref="_sensor_node_mapping_8c" startline="62" endline="88">SensorNodeMapping_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="_sensor_node_mapping_8c_1a9ed27f9661fce27488014ca5b12372c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t SensorNodeMapping_BurstRead</definition>
        <argsstring>(unsigned char I2Caddr, unsigned char Reg, unsigned char *RegData, unsigned int NbrBytesToRead)</argsstring>
        <name>SensorNodeMapping_BurstRead</name>
        <param>
          <type>unsigned char</type>
          <declname>I2Caddr</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>Reg</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>RegData</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>NbrBytesToRead</declname>
        </param>
        <briefdescription>
<para>Function to read a register of a device connected to I2C. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">I2Caddr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C address of the connected device from which to read the register.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address of the device to read.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">RegData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on a buffer into which the read values will be stored.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NbrBytesToRead</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of data elements expected to be received.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>I2C_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>I2C_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occurred. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" line="113" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" bodystart="113" bodyend="121"/>
        <references refid="_sensor_node_mapping_8h_1a447602fedb8f944b9643b17fc9a52861" compoundref="_sensor_node_mapping_8h" startline="44">I2C_SUCCESS</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" compoundref="_sensor_node_mapping_8c" startline="52">SensorNodeI2CTransceiver</references>
        <references refid="_sensor_node_mapping_8h_1aed0eebd5bac03ca4108ef8d82a77f453" compoundref="_sensor_node_mapping_8h" startline="45">I2C_FAILURE</references>
      </memberdef>
      <memberdef kind="function" id="_sensor_node_mapping_8c_1ac03bdbce5f464b417b6341db3e1e999d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T SensorNodeMapping_DeInit</definition>
        <argsstring>(void)</argsstring>
        <name>SensorNodeMapping_DeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>de-Initializes I2C and disables the power to sensors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>on success or an error code otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" line="124" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" bodystart="124" bodyend="140"/>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga0d143eb863c1549f0433cfe3e852bd77" compoundref="_b_s_p___sensor_node_8c" startline="731" endline="739">BSP_SensorNode_IsAllNodesDisabled</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga10969d25b4fa1ba723ce2428759222d7" compoundref="_b_s_p___sensor_node_8c" startline="721" endline="726">BSP_SensorNode_GetI2CHandle</references>
        <references refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" compoundref="_sensor_node_mapping_8c" startline="52">SensorNodeI2CTransceiver</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga235d573f049fc4556819433261d11741" compoundref="_b_s_p___sensor_node_8c" startline="689" endline="716">BSP_SensorNode_Disconnect</references>
        <referencedby refid="group___b_m_a280___s_e_n_s_o_r_u_t_i_l_s_1ga78022e6a93c3ad60bc81a7c8411aba39" compoundref="_bma280_utils_8c" startline="350" endline="375">Bma280Utils_uninitialize</referencedby>
        <referencedby refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1ga73ff7abf2a4ec0d356224fcb44160e58" compoundref="_bme280_utils_8c" startline="178" endline="205">Bme280Utils_uninitialize</referencedby>
        <referencedby refid="group___b_m_g160___s_e_n_s_o_r_u_t_i_l_s_1ga8f9d55b9efbee2a2e440ae31d4b612fc" compoundref="_bmg160_utils_8c" startline="148" endline="175">Bmg160Utils_uninitialize</referencedby>
        <referencedby refid="group___b_m_m150___s_e_n_s_o_r_u_t_i_l_s_1ga7ac4195e7ba480e9d6f3543ffc9dca2b" compoundref="_bmm150_utils_8c" startline="183" endline="210">Bmm150Utils_uninitialize</referencedby>
        <referencedby refid="group___m_a_x44009___s_e_n_s_o_r_u_t_i_l_s_1gaad6f3d2e68b426f1b95f16ed11e61a70" compoundref="_max44009_utils_8c" startline="186" endline="215">Max44009Utils_uninitialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="_sensor_node_mapping_8c_1a76bdc1fd6f340a0a598dadddb9ab278a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T SensorNodeMapping_Init</definition>
        <argsstring>(void)</argsstring>
        <name>SensorNodeMapping_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initializes I2C and enables the power to sensors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>RETCODE_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>on success or an error code otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" line="62" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" bodystart="62" bodyend="88"/>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" compoundref="_sensor_node_mapping_8c" startline="52">SensorNodeI2CTransceiver</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga0b9b45bb91b2666128c3e15f3ad74f28" compoundref="_b_s_p___sensor_node_8c" startline="164" endline="201">BSP_SensorNode_Connect</references>
        <references refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga10969d25b4fa1ba723ce2428759222d7" compoundref="_b_s_p___sensor_node_8c" startline="721" endline="726">BSP_SensorNode_GetI2CHandle</references>
        <references refid="_sensor_node_mapping_8c_1ae1d233c975956d208802d62db87572b5" compoundref="_sensor_node_mapping_8c" startline="55" endline="59">I2cInterruptCallback</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" compoundref="_b_c_d_s___retcode_8h" startline="257">RETCODE</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6acec8ccdc2bb7d9c1e4806729ea2acb76" compoundref="_b_c_d_s___retcode_8h" startline="130">RETCODE_SEVERITY_FATAL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" compoundref="_b_c_d_s___retcode_8h" startline="112">RETCODE_NULL_POINTER</references>
        <referencedby refid="group___b_m_a280___s_e_n_s_o_r_u_t_i_l_s_1gad28cd9dcdad4868c49a8f0b366129159" compoundref="_bma280_utils_8c" startline="194" endline="241">Bma280Utils_initialize</referencedby>
        <referencedby refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" compoundref="_bme280_utils_8c" startline="104" endline="175">Bme280Utils_initialize</referencedby>
        <referencedby refid="group___b_m_g160___s_e_n_s_o_r_u_t_i_l_s_1gaf1fb45718693a026e8d7c7acea433493" compoundref="_bmg160_utils_8c" startline="104" endline="145">Bmg160Utils_initialize</referencedby>
        <referencedby refid="group___b_m_m150___s_e_n_s_o_r_u_t_i_l_s_1ga1a609179f668971e29a1af81c20fe1c3" compoundref="_bmm150_utils_8c" startline="105" endline="153">Bmm150Utils_initialize</referencedby>
        <referencedby refid="group___m_a_x44009___s_e_n_s_o_r_u_t_i_l_s_1gaf7a721e130f2663dc135b52f64346ecc" compoundref="_max44009_utils_8c" startline="97" endline="148">Max44009Utils_initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="_sensor_node_mapping_8c_1a77b5d6036b31e0f795e5167c9435db6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t SensorNodeMapping_Read</definition>
        <argsstring>(unsigned char I2Caddr, unsigned char Reg, unsigned char *RegData, unsigned char NbrBytesToRead)</argsstring>
        <name>SensorNodeMapping_Read</name>
        <param>
          <type>unsigned char</type>
          <declname>I2Caddr</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>Reg</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>RegData</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>NbrBytesToRead</declname>
        </param>
        <briefdescription>
<para>Function to read a register of a device connected to I2C. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">I2Caddr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C address of the connected device from which to read the register.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address of the device to read.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">RegData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on a buffer into which the read values will be stored.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NbrBytesToRead</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of data elements expected to be received.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>I2C_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>I2C_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occurred. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" line="102" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" bodystart="102" bodyend="110"/>
        <references refid="_sensor_node_mapping_8h_1a447602fedb8f944b9643b17fc9a52861" compoundref="_sensor_node_mapping_8h" startline="44">I2C_SUCCESS</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" compoundref="_sensor_node_mapping_8c" startline="52">SensorNodeI2CTransceiver</references>
        <references refid="_sensor_node_mapping_8h_1aed0eebd5bac03ca4108ef8d82a77f453" compoundref="_sensor_node_mapping_8h" startline="45">I2C_FAILURE</references>
        <referencedby refid="group___b_m_a280___s_e_n_s_o_r_u_t_i_l_s_1gad28cd9dcdad4868c49a8f0b366129159" compoundref="_bma280_utils_8c" startline="194" endline="241">Bma280Utils_initialize</referencedby>
        <referencedby refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" compoundref="_bme280_utils_8c" startline="104" endline="175">Bme280Utils_initialize</referencedby>
        <referencedby refid="group___b_m_g160___s_e_n_s_o_r_u_t_i_l_s_1gaf1fb45718693a026e8d7c7acea433493" compoundref="_bmg160_utils_8c" startline="104" endline="145">Bmg160Utils_initialize</referencedby>
        <referencedby refid="group___b_m_m150___s_e_n_s_o_r_u_t_i_l_s_1ga1a609179f668971e29a1af81c20fe1c3" compoundref="_bmm150_utils_8c" startline="105" endline="153">Bmm150Utils_initialize</referencedby>
        <referencedby refid="group___m_a_x44009___s_e_n_s_o_r_u_t_i_l_s_1gaf7a721e130f2663dc135b52f64346ecc" compoundref="_max44009_utils_8c" startline="97" endline="148">Max44009Utils_initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="_sensor_node_mapping_8c_1ac656d2e1648f159bb70e26e1666a94c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t SensorNodeMapping_Write</definition>
        <argsstring>(unsigned char I2Caddr, unsigned char Reg, unsigned char *RegData, unsigned char NbrBytesToWrite)</argsstring>
        <name>SensorNodeMapping_Write</name>
        <param>
          <type>unsigned char</type>
          <declname>I2Caddr</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>Reg</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>RegData</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>NbrBytesToWrite</declname>
        </param>
        <briefdescription>
<para>Function to write a register of a device connected to I2C. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">I2Caddr</parametername>
</parameternamelist>
<parameterdescription>
<para>I2C address of the connected device from which to read the register.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Reg</parametername>
</parameternamelist>
<parameterdescription>
<para>Register address of the device to read.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">RegData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer on a buffer into which the read values will be stored.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NbrBytesToRead</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of data elements expected to be received.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>I2C_SUCCESS</parametername>
</parameternamelist>
<parameterdescription>
<para>on success. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>I2C_FAILURE</parametername>
</parameternamelist>
<parameterdescription>
<para>if an error occurred. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" line="91" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c" bodystart="91" bodyend="100"/>
        <references refid="_sensor_node_mapping_8h_1a447602fedb8f944b9643b17fc9a52861" compoundref="_sensor_node_mapping_8h" startline="44">I2C_SUCCESS</references>
        <references refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="_b_c_d_s___basics_8h" startline="80">NULL</references>
        <references refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" compoundref="_b_c_d_s___retcode_8h" startline="263">RETCODE_OK</references>
        <references refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" compoundref="_sensor_node_mapping_8c" startline="52">SensorNodeI2CTransceiver</references>
        <references refid="_sensor_node_mapping_8h_1aed0eebd5bac03ca4108ef8d82a77f453" compoundref="_sensor_node_mapping_8h" startline="45">I2C_FAILURE</references>
        <referencedby refid="group___b_m_a280___s_e_n_s_o_r_u_t_i_l_s_1gad28cd9dcdad4868c49a8f0b366129159" compoundref="_bma280_utils_8c" startline="194" endline="241">Bma280Utils_initialize</referencedby>
        <referencedby refid="group___b_m_e280___s_e_n_s_o_r_u_t_i_l_s_1gade35e15aa7d82ef6278aa12e37818aa0" compoundref="_bme280_utils_8c" startline="104" endline="175">Bme280Utils_initialize</referencedby>
        <referencedby refid="group___b_m_g160___s_e_n_s_o_r_u_t_i_l_s_1gaf1fb45718693a026e8d7c7acea433493" compoundref="_bmg160_utils_8c" startline="104" endline="145">Bmg160Utils_initialize</referencedby>
        <referencedby refid="group___b_m_m150___s_e_n_s_o_r_u_t_i_l_s_1ga1a609179f668971e29a1af81c20fe1c3" compoundref="_bmm150_utils_8c" startline="105" endline="153">Bmm150Utils_initialize</referencedby>
        <referencedby refid="group___m_a_x44009___s_e_n_s_o_r_u_t_i_l_s_1gaf7a721e130f2663dc135b52f64346ecc" compoundref="_max44009_utils_8c" startline="97" endline="148">Max44009Utils_initialize</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>system<sp/>header<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___sensor_utils_8h" kindref="compound">BCDS_SensorUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BCDS_MODULE_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="_sensor_node_mapping_8c_1abff8f3a204e79671b98fabaa652198c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCDS_MODULE_ID<sp/>BCDS_SENSORUTILS_ID_SENSORNODE_MAPPING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>own<sp/>header<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___i2_c_transceiver_8h" kindref="compound">BCDS_I2CTransceiver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sensor_node_mapping_8h" kindref="compound">SensorNodeMapping.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___b_s_p___sensor_node_8h" kindref="compound">BCDS_BSP_SensorNode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>the<sp/>type<sp/>and<sp/>macro<sp/>definitions<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>constant<sp/>and<sp/>variable<sp/>definitions<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>I2cTranceiverHandle_T<sp/><ref refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" kindref="member">SensorNodeI2CTransceiver</ref><sp/>=<sp/>{<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>INT8_C(-1)<sp/>};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>private<sp/>function<sp/>declarations<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="_sensor_node_mapping_8c_1ae1d233c975956d208802d62db87572b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_sensor_node_mapping_8c_1ae1d233c975956d208802d62db87572b5" kindref="member">I2cInterruptCallback</ref>(I2C_T<sp/>i2c,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>MCU_I2C_Event_S<sp/>event)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___b_a_s_i_c_s_1ga58d989b8568ab592dc4bcf48d05f28e4" kindref="member">BCDS_UNUSED</ref>(i2c);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>I2CTransceiver_LoopCallback(&amp;<ref refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" kindref="member">SensorNodeI2CTransceiver</ref>,<sp/>event);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Put<sp/>function<sp/>implementations<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>API<sp/>documentation<sp/>is<sp/>in<sp/>the<sp/>interface<sp/>header<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="_sensor_node_mapping_8h_1a76bdc1fd6f340a0a598dadddb9ab278a" refkind="member"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="_sensor_node_mapping_8c_1a76bdc1fd6f340a0a598dadddb9ab278a" kindref="member">SensorNodeMapping_Init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>I2C_T<sp/>I2CHandle<sp/>=<sp/><ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>returnValue;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" kindref="member">SensorNodeI2CTransceiver</ref>.InitializationStatus)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/><ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga0b9b45bb91b2666128c3e15f3ad74f28" kindref="member">BSP_SensorNode_Connect</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>==<sp/>returnValue)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2CHandle<sp/>=<sp/><ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga10969d25b4fa1ba723ce2428759222d7" kindref="member">BSP_SensorNode_GetI2CHandle</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>!=<sp/>I2CHandle)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/>MCU_I2C_Initialize(I2CHandle,<sp/><ref refid="_sensor_node_mapping_8c_1ae1d233c975956d208802d62db87572b5" kindref="member">I2cInterruptCallback</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gaf3d88b09f14c70141276ad2f817313e8" kindref="member">RETCODE</ref>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1gga3ce26363bdf4978dc972e8ccce5046d6acec8ccdc2bb7d9c1e4806729ea2acb76" kindref="member">RETCODE_SEVERITY_FATAL</ref>,<sp/>(uint32_t)<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>==<sp/>returnValue)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/>I2CTransceiver_Init(&amp;<ref refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" kindref="member">SensorNodeI2CTransceiver</ref>,<sp/>I2CHandle);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnValue;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>API<sp/>documentation<sp/>is<sp/>in<sp/>the<sp/>interface<sp/>header<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="_sensor_node_mapping_8h_1ac656d2e1648f159bb70e26e1666a94c3" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="_sensor_node_mapping_8c_1ac656d2e1648f159bb70e26e1666a94c3" kindref="member">SensorNodeMapping_Write</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>I2Caddr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Reg,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*RegData,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>NbrBytesToWrite)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>i2cReturn<sp/>=<sp/><ref refid="_sensor_node_mapping_8h_1a447602fedb8f944b9643b17fc9a52861" kindref="member">I2C_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>==<sp/>RegData)<sp/>||<sp/>(UINT8_C(0)<sp/>==<sp/>NbrBytesToWrite)<sp/>||<sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>!=<sp/>I2CTransceiver_Write(&amp;<ref refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" kindref="member">SensorNodeI2CTransceiver</ref>,<sp/>I2Caddr,<sp/>Reg,<sp/>RegData,<sp/>NbrBytesToWrite)))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2cReturn<sp/>=<sp/><ref refid="_sensor_node_mapping_8h_1aed0eebd5bac03ca4108ef8d82a77f453" kindref="member">I2C_FAILURE</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(i2cReturn);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>API<sp/>documentation<sp/>is<sp/>in<sp/>the<sp/>interface<sp/>header<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="_sensor_node_mapping_8h_1a77b5d6036b31e0f795e5167c9435db6c" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="_sensor_node_mapping_8c_1a77b5d6036b31e0f795e5167c9435db6c" kindref="member">SensorNodeMapping_Read</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>I2Caddr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Reg,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*RegData,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>NbrBytesToRead)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>i2cReturn<sp/>=<sp/><ref refid="_sensor_node_mapping_8h_1a447602fedb8f944b9643b17fc9a52861" kindref="member">I2C_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>==<sp/>RegData)<sp/>||<sp/>(UINT8_C(0)<sp/>==<sp/>NbrBytesToRead)<sp/>||<sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>!=<sp/>I2CTransceiver_Read(&amp;<ref refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" kindref="member">SensorNodeI2CTransceiver</ref>,<sp/>I2Caddr,<sp/>Reg,<sp/>RegData,<sp/>NbrBytesToRead)))</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2cReturn<sp/>=<sp/><ref refid="_sensor_node_mapping_8h_1aed0eebd5bac03ca4108ef8d82a77f453" kindref="member">I2C_FAILURE</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(i2cReturn);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>API<sp/>documentation<sp/>is<sp/>in<sp/>the<sp/>interface<sp/>header<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="_sensor_node_mapping_8h_1a9ed27f9661fce27488014ca5b12372c8" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="_sensor_node_mapping_8c_1a9ed27f9661fce27488014ca5b12372c8" kindref="member">SensorNodeMapping_BurstRead</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>I2Caddr,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Reg,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*RegData,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NbrBytesToRead)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>i2cReturn<sp/>=<sp/><ref refid="_sensor_node_mapping_8h_1a447602fedb8f944b9643b17fc9a52861" kindref="member">I2C_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="group___b_a_s_i_c_s_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>==<sp/>RegData)<sp/>||<sp/>(UINT8_C(0)<sp/>==<sp/>NbrBytesToRead)<sp/>||<sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>!=<sp/>I2CTransceiver_Read(&amp;<ref refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" kindref="member">SensorNodeI2CTransceiver</ref>,<sp/>I2Caddr,<sp/>Reg,<sp/>RegData,<sp/>NbrBytesToRead)))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2cReturn<sp/>=<sp/><ref refid="_sensor_node_mapping_8h_1aed0eebd5bac03ca4108ef8d82a77f453" kindref="member">I2C_FAILURE</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(i2cReturn);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>API<sp/>documentation<sp/>is<sp/>in<sp/>the<sp/>interface<sp/>header<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="_sensor_node_mapping_8h_1ac03bdbce5f464b417b6341db3e1e999d" refkind="member"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="_sensor_node_mapping_8c_1ac03bdbce5f464b417b6341db3e1e999d" kindref="member">SensorNodeMapping_DeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/>returnValue<sp/>=<sp/><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>==<sp/><ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga0d143eb863c1549f0433cfe3e852bd77" kindref="member">BSP_SensorNode_IsAllNodesDisabled</ref>())</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/>MCU_I2C_Deinitialize(<ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga10969d25b4fa1ba723ce2428759222d7" kindref="member">BSP_SensorNode_GetI2CHandle</ref>());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>==<sp/>returnValue)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/>I2CTransceiver_Deinit(&amp;<ref refid="_sensor_node_mapping_8c_1ae5080dfa0e00b2580c88f0481561b8e7" kindref="member">SensorNodeI2CTransceiver</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref><sp/>==<sp/>returnValue)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnValue<sp/>=<sp/><ref refid="group___b_c_d_s___h_a_l___b_s_p___sensor___node_1ga235d573f049fc4556819433261d11741" kindref="member">BSP_SensorNode_Disconnect</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(returnValue);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/SensorUtils/source/Carbon/SensorNodeMapping.c"/>
  </compounddef>
</doxygen>
