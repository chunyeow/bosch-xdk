<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_b_c_d_s___net_i_f_8h" kind="file">
    <compoundname>BCDS_NetIF.h</compoundname>
    <includes refid="_b_c_d_s___serval_pal_config_8h" local="yes">BCDS_ServalPalConfig.h</includes>
    <includes refid="_b_c_d_s___basics_8h" local="yes">BCDS_Basics.h</includes>
    <includes refid="_b_c_d_s___retcode_8h" local="yes">BCDS_Retcode.h</includes>
    <includedby refid="_b_c_d_s___routing_table_8h" local="yes">SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h</includedby>
    <includedby refid="_b_c_d_s___serval_pal_ble_8h" local="yes">SDK/xdk110/Platform/ServalPAL/include/BCDS_ServalPalBle.h</includedby>
    <includedby refid="_b_c_d_s___serval_pal_lora_8h" local="yes">SDK/xdk110/Platform/ServalPAL/include/BCDS_ServalPalLora.h</includedby>
    <includedby refid="_b_c_d_s___serval_pal_wi_fi_8h" local="yes">SDK/xdk110/Platform/ServalPAL/include/BCDS_ServalPalWiFi.h</includedby>
    <incdepgraph>
      <node id="38635">
        <label>stdbool.h</label>
      </node>
      <node id="38638">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="38633" relation="include">
        </childnode>
      </node>
      <node id="38634">
        <label>stdint.h</label>
      </node>
      <node id="38637">
        <label>stdlib.h</label>
      </node>
      <node id="38632">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="38636">
        <label>string.h</label>
      </node>
      <node id="38633">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="38634" relation="include">
        </childnode>
        <childnode refid="38635" relation="include">
        </childnode>
        <childnode refid="38636" relation="include">
        </childnode>
        <childnode refid="38637" relation="include">
        </childnode>
      </node>
      <node id="38631">
        <label>SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h</label>
        <link refid="BCDS_NetIF.h"/>
        <childnode refid="38632" relation="include">
        </childnode>
        <childnode refid="38633" relation="include">
        </childnode>
        <childnode refid="38638" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="38644">
        <label>SDK/xdk110/Common/legacy/source/ServalPAL_WiFi.c</label>
        <link refid="_serval_p_a_l___wi_fi_8c"/>
      </node>
      <node id="38642">
        <label>SDK/xdk110/Platform/ServalPAL/include/BCDS_ServalPalLora.h</label>
        <link refid="_b_c_d_s___serval_pal_lora_8h"/>
      </node>
      <node id="38640">
        <label>SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h</label>
        <link refid="_b_c_d_s___routing_table_8h"/>
      </node>
      <node id="38639">
        <label>SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h</label>
        <link refid="BCDS_NetIF.h"/>
        <childnode refid="38640" relation="include">
        </childnode>
        <childnode refid="38641" relation="include">
        </childnode>
        <childnode refid="38642" relation="include">
        </childnode>
        <childnode refid="38643" relation="include">
        </childnode>
      </node>
      <node id="38643">
        <label>SDK/xdk110/Platform/ServalPAL/include/BCDS_ServalPalWiFi.h</label>
        <link refid="_b_c_d_s___serval_pal_wi_fi_8h"/>
        <childnode refid="38644" relation="include">
        </childnode>
      </node>
      <node id="38641">
        <label>SDK/xdk110/Platform/ServalPAL/include/BCDS_ServalPalBle.h</label>
        <link refid="_b_c_d_s___serval_pal_ble_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_serval_pal_ops___s" prot="public">ServalPalOps_S</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___b_c_d_s___n_e_t___i_f_1ga221c495a1da366171667647fbb3f8086" prot="public" static="no">
        <name>NETIF_ALL</name>
        <initializer>(UINT8_MAX - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" line="64" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___n_e_t___i_f_1ga63359f78e657ce61bceebdfe2990b24f" prot="public" static="no">
        <name>NETIF_C</name>
        <param><defname>x</defname></param>
        <initializer>x</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>network interface literal type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" line="62" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_c_d_s___n_e_t___i_f_1ga83bc642338fba49ea31d99496abc6bbe" prot="public" static="no">
        <name>NETIF_INVALID</name>
        <initializer>UINT8_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>network interface literal type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" line="63" column="9" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___b_c_d_s___n_e_t___i_f_1ga9d36cf5c5f404d45e41ab92fd8d4f473" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t NetIF_Id_T</definition>
        <argsstring></argsstring>
        <name>NetIF_Id_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" line="61" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___n_e_t___i_f_1gaa52bdefb13bf9cf4e85bf165288329ed" prot="public" static="no">
        <type>struct <ref refid="struct_serval_pal_ops___s" kindref="compound">ServalPalOps_S</ref></type>
        <definition>typedef struct ServalPalOps_S ServalPalOps_T</definition>
        <argsstring></argsstring>
        <name>ServalPalOps_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" line="61" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___n_e_t___i_f_1gab0c403f415a7213408f479b3eebe01a9" prot="public" static="no">
        <type>struct ServalPalOps_Tcp_S</type>
        <definition>typedef struct ServalPalOps_Tcp_S ServalPalOps_Tcp_T</definition>
        <argsstring></argsstring>
        <name>ServalPalOps_Tcp_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" line="61" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_c_d_s___n_e_t___i_f_1ga3af59f4aafe2e4b8f3f556b44603676c" prot="public" static="no">
        <type>struct ServalPalOps_Udp_S</type>
        <definition>typedef struct ServalPalOps_Udp_S ServalPalOps_Udp_T</definition>
        <argsstring></argsstring>
        <name>ServalPalOps_Udp_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" line="61" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___b_c_d_s___n_e_t___i_f_1ga17e351017ece07995d2226756dfc8a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t NetIf_NumNetIf</definition>
        <argsstring>(void)</argsstring>
        <name>NetIf_NumNetIf</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retrieve the number of registered network interfaces. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of registered network interface </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___n_e_t___i_f_1ga3b34344a53ab3a6e7c6943bd5068b261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NetIf_OpsDeInit</definition>
        <argsstring>(void)</argsstring>
        <name>NetIf_OpsDeInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deinitialized the network operations lookup table. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___n_e_t___i_f_1gae3e300cc2828c4fe64e203489c6293a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref></type>
        <definition>Retcode_T NetIf_OpsInit</definition>
        <argsstring>(const ServalPalOps_T *OpsTable, uint8_t OpsTableLength)</argsstring>
        <name>NetIf_OpsInit</name>
        <param>
          <type>const <ref refid="group___b_c_d_s___n_e_t___i_f_1gaa52bdefb13bf9cf4e85bf165288329ed" kindref="member">ServalPalOps_T</ref> *</type>
          <declname>OpsTable</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>OpsTableLength</declname>
        </param>
        <briefdescription>
<para>Initializes the network operations lookup table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method does not copy the OpsTable but only stores the pointer to it, hence the OpsTable should not be allocated on the stack.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">OpsTable</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an array of virtual functions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OpsTableLength</parametername>
</parameternamelist>
<parameterdescription>
<para>number of items in `OpsTable&apos;</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga29ad456a36368a4ba96e18b18cb0f7bc" kindref="member">RETCODE_OK</ref> initialization of lookup table was successful </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba5d476dcd59fa4e9cf717ce9484a0df08" kindref="member">RETCODE_NULL_POINTER</ref> OpsTable is NULL </para></simplesect>
<simplesect kind="return"><para><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ggaf6fb6f6ae1be4277d38a8684e1be9acba7f63243a04e8ca247613e6713801f6f5" kindref="member">RETCODE_INVALID_PARAM</ref> invalid OpsTableLength has been passed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___b_c_d_s___n_e_t___i_f_1ga73b46e0b1bfef6a83b7bbcf99b7ec4ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool NetIf_OpsIsInit</definition>
        <argsstring>(void)</argsstring>
        <name>NetIf_OpsIsInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Checks if module is initialized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>#True - Ops table is initialized </para></simplesect>
<simplesect kind="return"><para>#False - Ops table is not initialized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h" line="108" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Licensee<sp/>agrees<sp/>that<sp/>the<sp/>example<sp/>code<sp/>provided<sp/>to<sp/>Licensee<sp/>has<sp/>been<sp/>developed<sp/>and<sp/>released<sp/>by<sp/>Bosch<sp/>solely<sp/>as<sp/>an<sp/>example<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>potential<sp/>reference<sp/>for<sp/>application<sp/>development<sp/>by<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Fitness<sp/>and<sp/>suitability<sp/>of<sp/>the<sp/>example<sp/>code<sp/>for<sp/>any<sp/>use<sp/>within<sp/>application<sp/>developed<sp/>by<sp/>Licensee<sp/>need<sp/>to<sp/>be<sp/>verified<sp/>by<sp/>Licensee<sp/>on<sp/>its<sp/>own<sp/>authority<sp/>by<sp/>taking<sp/>appropriate<sp/>state<sp/>of<sp/>the<sp/>art<sp/>actions<sp/>and<sp/>measures<sp/>(e.g.<sp/>by<sp/>means<sp/>of<sp/>quality<sp/>assurance<sp/>measures).</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>for<sp/>conducting<sp/>the<sp/>development<sp/>of<sp/>its<sp/>applications<sp/>as<sp/>well<sp/>as<sp/>integration<sp/>of<sp/>parts<sp/>of<sp/>the<sp/>example<sp/>code<sp/>into<sp/>such<sp/>applications,<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>state<sp/>of<sp/>the<sp/>art<sp/>of<sp/>technology<sp/>and<sp/>any<sp/>statutory<sp/>regulations<sp/>and<sp/>provisions<sp/>applicable<sp/>for<sp/>such<sp/>applications.<sp/>Compliance<sp/>with<sp/>the<sp/>functional<sp/>system<sp/>requirements<sp/>and<sp/>testing<sp/>there<sp/>of<sp/>(including<sp/>validation<sp/>of<sp/>information/data<sp/>security<sp/>aspects<sp/>and<sp/>functional<sp/>safety)<sp/>and<sp/>release<sp/>shall<sp/>be<sp/>solely<sp/>incumbent<sp/>upon<sp/>Licensee.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>For<sp/>the<sp/>avoidance<sp/>of<sp/>doubt,<sp/>Licensee<sp/>shall<sp/>be<sp/>responsible<sp/>and<sp/>fully<sp/>liable<sp/>for<sp/>the<sp/>applications<sp/>and<sp/>any<sp/>distribution<sp/>of<sp/>such<sp/>applications<sp/>into<sp/>the<sp/>market.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>met:</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.<sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>(3)The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/><sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/><sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/><sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*<sp/><sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">*<sp/><sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">#ifndef<sp/>BCDS_NET_IF_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BCDS_NET_IF_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___serval_pal_config_8h" kindref="compound">BCDS_ServalPalConfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>public<sp/>interface<sp/>declaration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___basics_8h" kindref="compound">BCDS_Basics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b_c_d_s___retcode_8h" kindref="compound">BCDS_Retcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="group___b_c_d_s___n_e_t___i_f_1ga9d36cf5c5f404d45e41ab92fd8d4f473" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1ga9d36cf5c5f404d45e41ab92fd8d4f473" kindref="member">NetIF_Id_T</ref>;</highlight></codeline>
<codeline lineno="62" refid="group___b_c_d_s___n_e_t___i_f_1ga63359f78e657ce61bceebdfe2990b24f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NETIF_C(x)<sp/>x<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="group___b_c_d_s___n_e_t___i_f_1ga83bc642338fba49ea31d99496abc6bbe" refkind="member"><highlight class="preprocessor">#define<sp/>NETIF_INVALID<sp/>UINT8_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="group___b_c_d_s___n_e_t___i_f_1ga221c495a1da366171667647fbb3f8086" refkind="member"><highlight class="preprocessor">#define<sp/>NETIF_ALL<sp/><sp/><sp/><sp/><sp/>(UINT8_MAX<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="group___b_c_d_s___n_e_t___i_f_1gab0c403f415a7213408f479b3eebe01a9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ServalPalOps_Tcp_S<sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1gab0c403f415a7213408f479b3eebe01a9" kindref="member">ServalPalOps_Tcp_T</ref>;</highlight></codeline>
<codeline lineno="67" refid="group___b_c_d_s___n_e_t___i_f_1ga3af59f4aafe2e4b8f3f556b44603676c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ServalPalOps_Udp_S<sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1ga3af59f4aafe2e4b8f3f556b44603676c" kindref="member">ServalPalOps_Udp_T</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="struct_serval_pal_ops___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_serval_pal_ops___s" kindref="compound">ServalPalOps_S</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75" refid="struct_serval_pal_ops___s_1a75b1ed7c652b86a584efa646437a310a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1gab0c403f415a7213408f479b3eebe01a9" kindref="member">ServalPalOps_Tcp_T</ref><sp/>*<ref refid="struct_serval_pal_ops___s_1a75b1ed7c652b86a584efa646437a310a" kindref="member">TcpOps</ref>;<sp/></highlight></codeline>
<codeline lineno="76" refid="struct_serval_pal_ops___s_1afc1b73c79c890f1c2c1284d749d7c43d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1ga3af59f4aafe2e4b8f3f556b44603676c" kindref="member">ServalPalOps_Udp_T</ref><sp/>*<ref refid="struct_serval_pal_ops___s_1afc1b73c79c890f1c2c1284d749d7c43d" kindref="member">UdpOps</ref>;<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="group___b_c_d_s___n_e_t___i_f_1gaa52bdefb13bf9cf4e85bf165288329ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_serval_pal_ops___s" kindref="compound">ServalPalOps_S</ref><sp/><ref refid="struct_serval_pal_ops___s" kindref="compound">ServalPalOps_T</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="group___b_c_d_s___r_e_t_c_o_d_e_1ga0e1ebc675650b0ceffc059d6b67699c7" kindref="member">Retcode_T</ref><sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1gae3e300cc2828c4fe64e203489c6293a1" kindref="member">NetIf_OpsInit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serval_pal_ops___s" kindref="compound">ServalPalOps_T</ref><sp/>*OpsTable,<sp/>uint8_t<sp/>OpsTableLength);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1ga3b34344a53ab3a6e7c6943bd5068b261" kindref="member">NetIf_OpsDeInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1ga73b46e0b1bfef6a83b7bbcf99b7ec4ac" kindref="member">NetIf_OpsIsInit</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">uint8_t<sp/><ref refid="group___b_c_d_s___n_e_t___i_f_1ga17e351017ece07995d2226756dfc8a7e" kindref="member">NetIf_NumNetIf</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BCDS_NET_IF_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Platform/ServalPAL/include/BCDS_NetIF.h"/>
  </compounddef>
</doxygen>
