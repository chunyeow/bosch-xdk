<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="_serval___ip_8h" kind="file">
    <compoundname>Serval_Ip.h</compoundname>
    <includes refid="_p_ip_8h" local="no">PIp.h</includes>
    <includes refid="_serval___types_8h" local="no">Serval_Types.h</includes>
    <includedby refid="_l_w_m2_m_dns_util_8c" local="no">SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MDnsUtil.c</includedby>
    <includedby refid="_b_c_d_s___routing_table_8h" local="yes">SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h</includedby>
    <includedby refid="_b_c_d_s___serval_pal_wi_fi_8h" local="yes">SDK/xdk110/Platform/ServalPAL/include/BCDS_ServalPalWiFi.h</includedby>
    <includedby refid="_serval___comm_buff_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_CommBuff.h</includedby>
    <includedby refid="_serval___mcast_mgmt_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_McastMgmt.h</includedby>
    <includedby refid="_serval___tcp_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Tcp.h</includedby>
    <includedby refid="_serval___udp_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Udp.h</includedby>
    <includedby refid="_serval___http_client_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_HttpClient.h</includedby>
    <includedby refid="_serval___lwm2m_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h</includedby>
    <includedby refid="_serval___msg_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h</includedby>
    <includedby refid="_serval___url_8h" local="no">SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Url.h</includedby>
    <incdepgraph>
      <node id="32712">
        <label>stdbool.h</label>
      </node>
      <node id="32715">
        <label>Serval_Types.h</label>
        <link refid="_serval___types_8h"/>
        <childnode refid="32716" relation="include">
        </childnode>
        <childnode refid="32750" relation="include">
        </childnode>
      </node>
      <node id="32720">
        <label>stdarg.h</label>
      </node>
      <node id="32747">
        <label>netcfg.h</label>
        <link refid="netcfg_8h"/>
        <childnode refid="32738" relation="include">
        </childnode>
      </node>
      <node id="32732">
        <label>list.h</label>
      </node>
      <node id="32734">
        <label>BCDS_CmdProcessor.h</label>
        <link refid="_b_c_d_s___cmd_processor_8h"/>
        <childnode refid="32735" relation="include">
        </childnode>
        <childnode refid="32710" relation="include">
        </childnode>
        <childnode refid="32709" relation="include">
        </childnode>
      </node>
      <node id="32718">
        <label>BCDS_Assert.h</label>
        <link refid="_b_c_d_s___assert_8h"/>
        <childnode refid="32709" relation="include">
        </childnode>
      </node>
      <node id="32711">
        <label>stdint.h</label>
      </node>
      <node id="32709">
        <label>BCDS_Retcode.h</label>
        <link refid="_b_c_d_s___retcode_8h"/>
        <childnode refid="32710" relation="include">
        </childnode>
      </node>
      <node id="32714">
        <label>stdlib.h</label>
      </node>
      <node id="32750">
        <label>Serval_Exceptions.h</label>
        <link refid="_serval___exceptions_8h"/>
      </node>
      <node id="32726">
        <label>BCDS_TaskConfig.h</label>
        <link refid="_b_c_d_s___task_config_8h"/>
      </node>
      <node id="32729">
        <label>semphr.h</label>
        <link refid="semphr_8h"/>
        <childnode refid="32730" relation="include">
        </childnode>
      </node>
      <node id="32737">
        <label>BCDS_ServalPalConfig.h</label>
        <link refid="_b_c_d_s___serval_pal_config_8h"/>
      </node>
      <node id="32739">
        <label>user.h</label>
      </node>
      <node id="32733">
        <label>BCDS_ServalPal.h</label>
        <link refid="_b_c_d_s___serval_pal_8h"/>
        <childnode refid="32709" relation="include">
        </childnode>
        <childnode refid="32734" relation="include">
        </childnode>
        <childnode refid="32737" relation="include">
        </childnode>
      </node>
      <node id="32740">
        <label>../source/objInclusion.h</label>
        <link refid="obj_inclusion_8h"/>
        <childnode refid="32738" relation="include">
        </childnode>
      </node>
      <node id="32724">
        <label>stddef.h</label>
      </node>
      <node id="32742">
        <label>fs.h</label>
        <link refid="fs_8h"/>
        <childnode refid="32738" relation="include">
        </childnode>
      </node>
      <node id="32722">
        <label>PThreading.h</label>
        <link refid="_p_threading_8h"/>
        <childnode refid="32723" relation="include">
        </childnode>
        <childnode refid="32725" relation="include">
        </childnode>
        <childnode refid="32729" relation="include">
        </childnode>
        <childnode refid="32731" relation="include">
        </childnode>
      </node>
      <node id="32717">
        <label>PBasics.h</label>
        <link refid="_p_basics_8h"/>
        <childnode refid="32718" relation="include">
        </childnode>
        <childnode refid="32710" relation="include">
        </childnode>
        <childnode refid="32719" relation="include">
        </childnode>
        <childnode refid="32720" relation="include">
        </childnode>
        <childnode refid="32721" relation="include">
        </childnode>
        <childnode refid="32714" relation="include">
        </childnode>
        <childnode refid="32715" relation="include">
        </childnode>
        <childnode refid="32722" relation="include">
        </childnode>
        <childnode refid="32733" relation="include">
        </childnode>
        <childnode refid="32738" relation="include">
        </childnode>
      </node>
      <node id="32719">
        <label>limits.h</label>
      </node>
      <node id="32728">
        <label>portable.h</label>
      </node>
      <node id="32736">
        <label>BCDS_UtilsConfig.h</label>
        <link refid="_b_c_d_s___utils_config_8h"/>
      </node>
      <node id="32713">
        <label>string.h</label>
      </node>
      <node id="32735">
        <label>BCDS_Utils.h</label>
        <link refid="_b_c_d_s___utils_8h"/>
        <childnode refid="32736" relation="include">
        </childnode>
        <childnode refid="32709" relation="include">
        </childnode>
      </node>
      <node id="32710">
        <label>BCDS_Basics.h</label>
        <link refid="_b_c_d_s___basics_8h"/>
        <childnode refid="32711" relation="include">
        </childnode>
        <childnode refid="32712" relation="include">
        </childnode>
        <childnode refid="32713" relation="include">
        </childnode>
        <childnode refid="32714" relation="include">
        </childnode>
      </node>
      <node id="32707">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h</label>
        <link refid="Serval_Ip.h"/>
        <childnode refid="32708" relation="include">
        </childnode>
        <childnode refid="32715" relation="include">
        </childnode>
      </node>
      <node id="32727">
        <label>projdefs.h</label>
      </node>
      <node id="32749">
        <label>../source/nonos.h</label>
        <link refid="nonos_8h"/>
      </node>
      <node id="32708">
        <label>PIp.h</label>
        <link refid="_p_ip_8h"/>
        <childnode refid="32709" relation="include">
        </childnode>
      </node>
      <node id="32748">
        <label>wlan_rx_filters.h</label>
        <link refid="wlan__rx__filters_8h"/>
        <childnode refid="32738" relation="include">
        </childnode>
      </node>
      <node id="32744">
        <label>netapp.h</label>
        <link refid="netapp_8h"/>
        <childnode refid="32738" relation="include">
        </childnode>
      </node>
      <node id="32730">
        <label>queue.h</label>
        <link refid="queue_8h"/>
      </node>
      <node id="32745">
        <label>wlan.h</label>
        <link refid="_libraries_2_wi_fi_23rd-party_2_t_i_2simplelink_2include_2_w_l_a_n_8h"/>
        <childnode refid="32738" relation="include">
        </childnode>
      </node>
      <node id="32743">
        <label>socket.h</label>
        <link refid="socket_8h"/>
        <childnode refid="32738" relation="include">
        </childnode>
      </node>
      <node id="32731">
        <label>task.h</label>
        <link refid="task_8h"/>
        <childnode refid="32732" relation="include">
        </childnode>
      </node>
      <node id="32746">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="32738" relation="include">
        </childnode>
      </node>
      <node id="32725">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h"/>
        <childnode refid="32711" relation="include">
        </childnode>
        <childnode refid="32718" relation="include">
        </childnode>
        <childnode refid="32726" relation="include">
        </childnode>
      </node>
      <node id="32716">
        <label>Serval_Basics.h</label>
        <link refid="_serval___basics_8h"/>
        <childnode refid="32717" relation="include">
        </childnode>
      </node>
      <node id="32723">
        <label>FreeRTOS.h</label>
        <link refid="_free_r_t_o_s_8h"/>
        <childnode refid="32724" relation="include">
        </childnode>
        <childnode refid="32711" relation="include">
        </childnode>
        <childnode refid="32725" relation="include">
        </childnode>
        <childnode refid="32727" relation="include">
        </childnode>
        <childnode refid="32728" relation="include">
        </childnode>
      </node>
      <node id="32721">
        <label>stdio.h</label>
      </node>
      <node id="32741">
        <label>trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="32738" relation="include">
        </childnode>
      </node>
      <node id="32738">
        <label>simplelink.h</label>
        <link refid="simplelink_8h"/>
        <childnode refid="32739" relation="include">
        </childnode>
        <childnode refid="32740" relation="include">
        </childnode>
        <childnode refid="32741" relation="include">
        </childnode>
        <childnode refid="32742" relation="include">
        </childnode>
        <childnode refid="32743" relation="include">
        </childnode>
        <childnode refid="32744" relation="include">
        </childnode>
        <childnode refid="32745" relation="include">
        </childnode>
        <childnode refid="32746" relation="include">
        </childnode>
        <childnode refid="32747" relation="include">
        </childnode>
        <childnode refid="32748" relation="include">
        </childnode>
        <childnode refid="32749" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="32794">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceEnvironment.c</label>
        <link refid="_l_w_m2_m_sensor_device_environment_8c"/>
      </node>
      <node id="32801">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapServer.h</label>
        <link refid="_serval___coap_server_8h"/>
        <childnode refid="32765" relation="include">
        </childnode>
      </node>
      <node id="32807">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Webserver.h</label>
        <link refid="_serval___webserver_8h"/>
      </node>
      <node id="32778">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.c</label>
        <link refid="_l_w_m2_m_objects_8c"/>
      </node>
      <node id="32768">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjects.h</label>
        <link refid="_l_w_m2_m_objects_8h"/>
        <childnode refid="32767" relation="include">
        </childnode>
        <childnode refid="32769" relation="include">
        </childnode>
        <childnode refid="32770" relation="include">
        </childnode>
        <childnode refid="32771" relation="include">
        </childnode>
        <childnode refid="32772" relation="include">
        </childnode>
        <childnode refid="32773" relation="include">
        </childnode>
        <childnode refid="32774" relation="include">
        </childnode>
        <childnode refid="32775" relation="include">
        </childnode>
        <childnode refid="32776" relation="include">
        </childnode>
        <childnode refid="32777" relation="include">
        </childnode>
        <childnode refid="32778" relation="include">
        </childnode>
        <childnode refid="32779" relation="include">
        </childnode>
        <childnode refid="32780" relation="include">
        </childnode>
        <childnode refid="32781" relation="include">
        </childnode>
      </node>
      <node id="32800">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_CoapClient.h</label>
        <link refid="_serval___coap_client_8h"/>
        <childnode refid="32786" relation="include">
        </childnode>
      </node>
      <node id="32769">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.c</label>
        <link refid="_l_w_m2_m_object_alert_notification_8c"/>
      </node>
      <node id="32797">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAlertNotification.h</label>
        <link refid="_l_w_m2_m_object_alert_notification_8h"/>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32769" relation="include">
        </childnode>
      </node>
      <node id="32772">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.c</label>
        <link refid="_l_w_m2_m_object_device_8c"/>
      </node>
      <node id="32792">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceIlluminance.c</label>
        <link refid="_l_w_m2_m_sensor_device_illuminance_8c"/>
      </node>
      <node id="32803">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Resources.h</label>
        <link refid="_serval___resources_8h"/>
      </node>
      <node id="32783">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectDevice.h</label>
        <link refid="_l_w_m2_m_object_device_8h"/>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32772" relation="include">
        </childnode>
      </node>
      <node id="32771">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.c</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8c"/>
      </node>
      <node id="32784">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectConnectivityMonitoring.h</label>
        <link refid="_l_w_m2_m_object_connectivity_monitoring_8h"/>
        <childnode refid="32768" relation="include">
        </childnode>
      </node>
      <node id="32805">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestClient.h</label>
        <link refid="_serval___rest_client_8h"/>
      </node>
      <node id="32782">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceAccelerometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_accelerometer_8c"/>
      </node>
      <node id="32755">
        <label>SDK/xdk110/Common/legacy/source/ServalPAL_WiFi.c</label>
        <link refid="_serval_p_a_l___wi_fi_8c"/>
      </node>
      <node id="32761">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_HttpServer.h</label>
        <link refid="_serval___http_server_8h"/>
      </node>
      <node id="32810">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Flags.h</label>
        <link refid="_mbed_t_l_s___flags_8h"/>
      </node>
      <node id="32804">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Rest.h</label>
        <link refid="_serval___rest_8h"/>
        <childnode refid="32803" relation="include">
        </childnode>
        <childnode refid="32805" relation="include">
        </childnode>
        <childnode refid="32806" relation="include">
        </childnode>
      </node>
      <node id="32806">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_RestServer.h</label>
        <link refid="_serval___rest_server_8h"/>
      </node>
      <node id="32779">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.c</label>
        <link refid="_l_w_m2_m_object_sensor_device_8c"/>
      </node>
      <node id="32812">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcpClient.h</label>
        <link refid="_serval___x_tcp_client_8h"/>
      </node>
      <node id="32795">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectSensorDevice.h</label>
        <link refid="_l_w_m2_m_object_sensor_device_8h"/>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32772" relation="include">
        </childnode>
        <childnode refid="32779" relation="include">
        </childnode>
      </node>
      <node id="32760">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Socket.h</label>
        <link refid="_mbed_t_l_s___socket_8h"/>
      </node>
      <node id="32756">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_CommBuff.h</label>
        <link refid="_serval___comm_buff_8h"/>
        <childnode refid="32757" relation="include">
        </childnode>
      </node>
      <node id="32809">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Security.h</label>
        <link refid="_serval___security_8h"/>
        <childnode refid="32810" relation="include">
        </childnode>
        <childnode refid="32757" relation="include">
        </childnode>
        <childnode refid="32763" relation="include">
        </childnode>
        <childnode refid="32800" relation="include">
        </childnode>
        <childnode refid="32801" relation="include">
        </childnode>
        <childnode refid="32765" relation="include">
        </childnode>
        <childnode refid="32805" relation="include">
        </childnode>
        <childnode refid="32806" relation="include">
        </childnode>
      </node>
      <node id="32790">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceMagnetometer.c</label>
        <link refid="_l_w_m2_m_sensor_device_magnetometer_8c"/>
      </node>
      <node id="32814">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Url.h</label>
        <link refid="_serval___url_8h"/>
        <childnode refid="32765" relation="include">
        </childnode>
      </node>
      <node id="32752">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MDnsUtil.c</label>
        <link refid="_l_w_m2_m_dns_util_8c"/>
      </node>
      <node id="32780">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectTemperature.c</label>
        <link refid="_l_w_m2_m_object_temperature_8c"/>
      </node>
      <node id="32799">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg.h</label>
        <link refid="_serval___msg_8h"/>
        <childnode refid="32757" relation="include">
        </childnode>
        <childnode refid="32759" relation="include">
        </childnode>
        <childnode refid="32763" relation="include">
        </childnode>
        <childnode refid="32800" relation="include">
        </childnode>
        <childnode refid="32801" relation="include">
        </childnode>
        <childnode refid="32802" relation="include">
        </childnode>
        <childnode refid="32764" relation="include">
        </childnode>
        <childnode refid="32765" relation="include">
        </childnode>
        <childnode refid="32808" relation="include">
        </childnode>
        <childnode refid="32804" relation="include">
        </childnode>
        <childnode refid="32805" relation="include">
        </childnode>
        <childnode refid="32809" relation="include">
        </childnode>
        <childnode refid="32807" relation="include">
        </childnode>
        <childnode refid="32811" relation="include">
        </childnode>
        <childnode refid="32812" relation="include">
        </childnode>
        <childnode refid="32813" relation="include">
        </childnode>
      </node>
      <node id="32802">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Http.h</label>
        <link refid="_serval___http_8h"/>
        <childnode refid="32764" relation="include">
        </childnode>
        <childnode refid="32761" relation="include">
        </childnode>
        <childnode refid="32803" relation="include">
        </childnode>
        <childnode refid="32804" relation="include">
        </childnode>
        <childnode refid="32806" relation="include">
        </childnode>
        <childnode refid="32807" relation="include">
        </childnode>
      </node>
      <node id="32775">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.c</label>
        <link refid="_l_w_m2_m_object_illuminance_8c"/>
      </node>
      <node id="32791">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectIlluminance.h</label>
        <link refid="_l_w_m2_m_object_illuminance_8h"/>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32792" relation="include">
        </childnode>
      </node>
      <node id="32811">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcp.h</label>
        <link refid="_serval___x_tcp_8h"/>
        <childnode refid="32803" relation="include">
        </childnode>
        <childnode refid="32812" relation="include">
        </childnode>
        <childnode refid="32762" relation="include">
        </childnode>
      </node>
      <node id="32808">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Msg_Obsolete.h</label>
        <link refid="_serval___msg___obsolete_8h"/>
        <childnode refid="32799" relation="include">
        </childnode>
      </node>
      <node id="32751">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h</label>
        <link refid="Serval_Ip.h"/>
        <childnode refid="32752" relation="include">
        </childnode>
        <childnode refid="32753" relation="include">
        </childnode>
        <childnode refid="32754" relation="include">
        </childnode>
        <childnode refid="32756" relation="include">
        </childnode>
        <childnode refid="32758" relation="include">
        </childnode>
        <childnode refid="32759" relation="include">
        </childnode>
        <childnode refid="32763" relation="include">
        </childnode>
        <childnode refid="32764" relation="include">
        </childnode>
        <childnode refid="32765" relation="include">
        </childnode>
        <childnode refid="32799" relation="include">
        </childnode>
        <childnode refid="32814" relation="include">
        </childnode>
      </node>
      <node id="32786">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.c</label>
        <link refid="_l_w_m2_m_object_firmware_update_8c"/>
      </node>
      <node id="32776">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.c</label>
        <link refid="_l_w_m2_m_object_light_control_8c"/>
      </node>
      <node id="32785">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectFirmwareUpdate.h</label>
        <link refid="_l_w_m2_m_object_firmware_update_8h"/>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32786" relation="include">
        </childnode>
      </node>
      <node id="32777">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.c</label>
        <link refid="_l_w_m2_m_object_magnetometer_8c"/>
      </node>
      <node id="32796">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectLightControl.h</label>
        <link refid="_l_w_m2_m_object_light_control_8h"/>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32776" relation="include">
        </childnode>
      </node>
      <node id="32789">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectMagnetometer.h</label>
        <link refid="_l_w_m2_m_object_magnetometer_8h"/>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32790" relation="include">
        </childnode>
      </node>
      <node id="32813">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XUdp.h</label>
        <link refid="_serval___x_udp_8h"/>
      </node>
      <node id="32753">
        <label>SDK/xdk110/Platform/ServalPAL/include/BCDS_RoutingTable.h</label>
        <link refid="_b_c_d_s___routing_table_8h"/>
      </node>
      <node id="32765">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_Lwm2m.h</label>
        <link refid="_serval___lwm2m_8h"/>
        <childnode refid="32766" relation="include">
        </childnode>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32783" relation="include">
        </childnode>
        <childnode refid="32784" relation="include">
        </childnode>
        <childnode refid="32785" relation="include">
        </childnode>
        <childnode refid="32787" relation="include">
        </childnode>
        <childnode refid="32789" relation="include">
        </childnode>
        <childnode refid="32791" relation="include">
        </childnode>
        <childnode refid="32793" relation="include">
        </childnode>
        <childnode refid="32795" relation="include">
        </childnode>
        <childnode refid="32796" relation="include">
        </childnode>
        <childnode refid="32797" relation="include">
        </childnode>
        <childnode refid="32798" relation="include">
        </childnode>
        <childnode refid="32767" relation="include">
        </childnode>
        <childnode refid="32769" relation="include">
        </childnode>
        <childnode refid="32776" relation="include">
        </childnode>
        <childnode refid="32778" relation="include">
        </childnode>
        <childnode refid="32779" relation="include">
        </childnode>
        <childnode refid="32788" relation="include">
        </childnode>
        <childnode refid="32792" relation="include">
        </childnode>
      </node>
      <node id="32762">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_XTcpServer.h</label>
        <link refid="_serval___x_tcp_server_8h"/>
      </node>
      <node id="32763">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Udp.h</label>
        <link refid="_serval___udp_8h"/>
        <childnode refid="32760" relation="include">
        </childnode>
        <childnode refid="32757" relation="include">
        </childnode>
      </node>
      <node id="32759">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Tcp.h</label>
        <link refid="_serval___tcp_8h"/>
        <childnode refid="32760" relation="include">
        </childnode>
        <childnode refid="32757" relation="include">
        </childnode>
        <childnode refid="32761" relation="include">
        </childnode>
        <childnode refid="32762" relation="include">
        </childnode>
      </node>
      <node id="32754">
        <label>SDK/xdk110/Platform/ServalPAL/include/BCDS_ServalPalWiFi.h</label>
        <link refid="_b_c_d_s___serval_pal_wi_fi_8h"/>
        <childnode refid="32755" relation="include">
        </childnode>
      </node>
      <node id="32767">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.c</label>
        <link refid="_l_w_m2_m_object_accelerometer_8c"/>
      </node>
      <node id="32757">
        <label>SDK/xdk110/Common/source/Private/ServalStack/src/TLS_MbedTLS/MbedTLS_Tls.h</label>
        <link refid="_mbed_t_l_s___tls_8h"/>
      </node>
      <node id="32766">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectAccelerometer.h</label>
        <link refid="_l_w_m2_m_object_accelerometer_8h"/>
        <childnode refid="32767" relation="include">
        </childnode>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32782" relation="include">
        </childnode>
      </node>
      <node id="32774">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectHumidity.c</label>
        <link refid="_l_w_m2_m_object_humidity_8c"/>
      </node>
      <node id="32788">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MSensorDeviceGyroscope.c</label>
        <link refid="_l_w_m2_m_sensor_device_gyroscope_8c"/>
      </node>
      <node id="32770">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.c</label>
        <link refid="_l_w_m2_m_object_barometer_8c"/>
      </node>
      <node id="32793">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectBarometer.h</label>
        <link refid="_l_w_m2_m_object_barometer_8h"/>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32794" relation="include">
        </childnode>
      </node>
      <node id="32764">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/api/Serval_HttpClient.h</label>
        <link refid="_serval___http_client_8h"/>
      </node>
      <node id="32758">
        <label>SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_McastMgmt.h</label>
        <link refid="_serval___mcast_mgmt_8h"/>
      </node>
      <node id="32781">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.c</label>
        <link refid="_l_w_m2_m_util_8c"/>
      </node>
      <node id="32798">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MUtil.h</label>
        <link refid="_l_w_m2_m_util_8h"/>
        <childnode refid="32767" relation="include">
        </childnode>
        <childnode refid="32769" relation="include">
        </childnode>
        <childnode refid="32770" relation="include">
        </childnode>
        <childnode refid="32771" relation="include">
        </childnode>
        <childnode refid="32773" relation="include">
        </childnode>
        <childnode refid="32774" relation="include">
        </childnode>
        <childnode refid="32775" relation="include">
        </childnode>
        <childnode refid="32776" relation="include">
        </childnode>
        <childnode refid="32777" relation="include">
        </childnode>
        <childnode refid="32779" relation="include">
        </childnode>
        <childnode refid="32780" relation="include">
        </childnode>
        <childnode refid="32781" relation="include">
        </childnode>
      </node>
      <node id="32773">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.c</label>
        <link refid="_l_w_m2_m_object_gyroscope_8c"/>
      </node>
      <node id="32787">
        <label>SDK/xdk110/Common/source/Connectivity/LWM2M/LWM2MObjectGyroscope.h</label>
        <link refid="_l_w_m2_m_object_gyroscope_8h"/>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32788" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_peer___s" prot="public">Peer_S</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_serval___ip_8h_1a7d477cf6cea204111231359ed75191bd" prot="public" static="no">
        <type>struct <ref refid="struct_peer___s" kindref="compound">Peer_S</ref></type>
        <definition>typedef struct Peer_S Peer_T</definition>
        <argsstring></argsstring>
        <name>Peer_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A data structure to contain information about a communication peer</para><para><simplesect kind="see"><para>struct <ref refid="struct_peer___s" kindref="compound">Peer_S</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" line="132" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_serval___ip_8h_1ad1c2b8fdcea919447e3a2651c7567dd0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool comparePeer</definition>
        <argsstring>(const Peer_T *a, const Peer_T *b)</argsstring>
        <name>comparePeer</name>
        <param>
          <type>const <ref refid="_serval___ip_8h_1a7d477cf6cea204111231359ed75191bd" kindref="member">Peer_T</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="_serval___ip_8h_1a7d477cf6cea204111231359ed75191bd" kindref="member">Peer_T</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare a peer with another peer <simplesect kind="return"><para>true if both address and port of the peers match </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" line="88" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" bodystart="88" bodyend="91"/>
        <references refid="struct_peer___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" compoundref="_serval___ip_8h" startline="62">Peer_S::port</references>
        <references refid="_serval___ip_8h_1acd6979004a799b9c426ba00f8b9814d6">Ip_compareAddr</references>
        <references refid="struct_peer___s_1af6adb6c7f40006ad8e3291d703c35f70" compoundref="_serval___ip_8h" startline="59">Peer_S::address</references>
      </memberdef>
      <memberdef kind="function" id="_serval___ip_8h_1acd6979004a799b9c426ba00f8b9814d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ip_compareAddr</definition>
        <argsstring>(Ip_Address_T const *ip1_ptr, Ip_Address_T const *ip2_ptr)</argsstring>
        <name>Ip_compareAddr</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> const *</type>
          <declname>ip1_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> const *</type>
          <declname>ip2_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called compares two IP addresses on being equal and return the result.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ip1_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the first IP address. It has to be valid.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ip2_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the second IP address. It has to be valid.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if the both IP address are equal, or FALSE otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" line="73" column="1"/>
        <referencedby refid="_serval___ip_8h_1a32ea6d194afc1bc058d2d472b66b5767" compoundref="_serval___ip_8h" startline="79" endline="82">samePeer</referencedby>
        <referencedby refid="_serval___ip_8h_1ad1c2b8fdcea919447e3a2651c7567dd0" compoundref="_serval___ip_8h" startline="88" endline="91">comparePeer</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___ip_8h_1aae19d94688cf35dc8331878713e42cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ip_convertAddrToString</definition>
        <argsstring>(Ip_Address_T const *ipAddr_ptr, char *buffer_ptr)</argsstring>
        <name>Ip_convertAddrToString</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> const *</type>
          <declname>ipAddr_ptr</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function converts a given IP address to a null-terminated string, and stores the result in the given buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ipAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer reference to the IP address to be converted.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buffer_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>A valid pointer to the buffer which the IP string should be written to. The given buffer must be larger than the maximal length of the IP string presentation by at least 1 (for the null-character). The written string will be NULL terminated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>On success, the total number of characters written is returned. This count does not include the additional null-character. On failure, a negative number is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" line="136" column="1"/>
        <referencedby refid="_l_w_m2_m_dns_util_8h_1abc5ec06fe4f4bdac07760aad40ba1825" compoundref="_l_w_m2_m_dns_util_8c" startline="242" endline="369">LWM2MDnsUtil_ExtendedResolveHostname</referencedby>
      </memberdef>
      <memberdef kind="function" id="_serval___ip_8h_1aa9a4414c39b6da384356f688aa9442fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
        <definition>Ip_Port_T Ip_convertIntToPort</definition>
        <argsstring>(uint16_t port)</argsstring>
        <name>Ip_convertIntToPort</name>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function converts a given Integer to a port and returns the result.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">port</parametername>
</parameternamelist>
<parameterdescription>
<para>The port number as an Integer in the platform byte order</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The port in the network byte order. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___ip_8h_1ad49529415e7db6072ed181e099dd8017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ip_convertOctetsToAddr</definition>
        <argsstring>(uint8_t first, uint8_t second, uint8_t third, uint8_t fourth, Ip_Address_T *ipAddr_ptr)</argsstring>
        <name>Ip_convertOctetsToAddr</name>
        <param>
          <type>uint8_t</type>
          <declname>first</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>second</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>third</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>fourth</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>ipAddr_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function converts given octets to an IP address.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">first</parametername>
</parameternamelist>
<parameterdescription>
<para>First block of the IP address. It has to be in the range of 0-255.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">second</parametername>
</parameternamelist>
<parameterdescription>
<para>Second block of the IP address. It has to be in the range of 0-255.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">third</parametername>
</parameternamelist>
<parameterdescription>
<para>Third block of the IP address. It has to be in the range of 0-255.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fourth</parametername>
</parameternamelist>
<parameterdescription>
<para>Forth block of the IP address. It has to be in the range of 0-255.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ipAddr_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to an IPv4 address for the result of the conversion. It has to be a valid pointer.</para></parameterdescription>
</parameteritem>
</parameterlist>
TODO: Rename to Ip_convertBlocksToAddr() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___ip_8h_1a490183741614dd669331c29c50ac52bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t Ip_convertPortToInt</definition>
        <argsstring>(Ip_Port_T port)</argsstring>
        <name>Ip_convertPortToInt</name>
        <param>
          <type><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function converts a given port from the network byte order to an Integer in the platform byte order and returns the result.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port to be converted.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Converted port as an Integer in the platform byte order. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___ip_8h_1a2e4a686a6f96e7211bb76731d3ef2f61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ip_copyAddr</definition>
        <argsstring>(Ip_Address_T const *src_ptr, Ip_Address_T *dest_ptr)</argsstring>
        <name>Ip_copyAddr</name>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> const *</type>
          <declname>src_ptr</declname>
        </param>
        <param>
          <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>dest_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is called to copy a given IP address to a destination whose reference is given.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the source IP address to be copied</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dest_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the destination which the given IP will copied to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___ip_8h_1a743d39872f375f2551b319d43150a469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
        <definition>Ip_Address_T* Ip_getMyIpAddr</definition>
        <argsstring>(void)</argsstring>
        <name>Ip_getMyIpAddr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function returns a reference to the IP address assigned to the own network interface. If no IP address has been assigned to the network interface, this function returns the unspecified IP address, i.e. an address which is equal to the result of <ref refid="_serval___ip_8h_1a888b7e08ae7012ccc04a0fa0e1101d00" kindref="member">Ip_getUnspecifiedAddr()</ref>.</para><para><simplesect kind="return"><para>On success, a reference to the own IP address is returned. On failure Null is returned.</para></simplesect>
<simplesect kind="see"><para><ref refid="_serval___ip_8h_1a888b7e08ae7012ccc04a0fa0e1101d00" kindref="member">Ip_getUnspecifiedAddr()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___ip_8h_1a888b7e08ae7012ccc04a0fa0e1101d00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> const *</type>
        <definition>Ip_Address_T const* Ip_getUnspecifiedAddr</definition>
        <argsstring>(void)</argsstring>
        <name>Ip_getUnspecifiedAddr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function should be used to un-initialize an IP address. It returns a reference to the unspecified address which is 0.0.0.0 in the case of IPv4 or 0:0:0:0:0:0:0:0:0 (i.e. ::) in the case of IPv6.</para><para><simplesect kind="return"><para>A reference to the unspecified IP address. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_serval___ip_8h_1a32ea6d194afc1bc058d2d472b66b5767" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool samePeer</definition>
        <argsstring>(const Peer_T *peer, const Ip_Address_T *address, const Ip_Port_T port)</argsstring>
        <name>samePeer</name>
        <param>
          <type>const <ref refid="_serval___ip_8h_1a7d477cf6cea204111231359ed75191bd" kindref="member">Peer_T</ref> *</type>
          <declname>peer</declname>
        </param>
        <param>
          <type>const <ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref> *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>const <ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref></type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare a peer with an address and a port. <simplesect kind="return"><para>true if both address and port match the ones stored in the peer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" line="79" column="1" bodyfile="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h" bodystart="79" bodyend="82"/>
        <references refid="struct_peer___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" compoundref="_serval___ip_8h" startline="62">Peer_S::port</references>
        <references refid="_serval___ip_8h_1acd6979004a799b9c426ba00f8b9814d6">Ip_compareAddr</references>
        <references refid="struct_peer___s_1af6adb6c7f40006ad8e3291d703c35f70" compoundref="_serval___ip_8h" startline="59">Peer_S::address</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface to the platform IP management. </para>    </briefdescription>
    <detaileddescription>
<para>This module provides functions to convert an IP address String to an Integer and vice versa. It also provides functions to convert a port to an Integer and vice versa. It provides a function to retrieve the IP address of its current interface. <linebreak/>
 Note: This interface includes <ref refid="_p_ip_8h" kindref="compound">PIp.h</ref>. This header has to be provided by the PAL implementation. It has to provide: <itemizedlist>
<listitem>
<para>Ip_Address_T a data type representing IP addresses </para></listitem>
<listitem>
<para>Ip_Port_T, a data type representing port numbers in the network byte order  </para></listitem>
<listitem>
<para>Tcp_Socket_T a data type representing TCP socket handles. <linebreak/>
 This data type must support assignment using = and equality checking using ==  </para></listitem>
<listitem>
<para>Tcp_Listener_T a data type representing TCP server socket handles. <linebreak/>
 This data type must support assignment using = and equality checking using ==  </para></listitem>
<listitem>
<para>Udp_Socket_T a data type representing UDP sockets handles. <linebreak/>
 This data type must support assignment using = and equality checking using ==  </para></listitem>
<listitem>
<para>CommBuff_T a data type representing communication buffer handles, see also <ref refid="_serval___comm_buff_8h" kindref="compound">Serval_CommBuff.h</ref>.<linebreak/>
 This data type must support assignment using = and equality checking using ==  </para></listitem>
<listitem>
<para>SERVAL_IP_ADDR_LEN a Macro which defines the number of characters which an IP may maximally contain when it is presented as a string. Note that converting an IP address into a string is also implemented in PAL, see <ref refid="_serval___ip_8h_1aae19d94688cf35dc8331878713e42cb2" kindref="member">Ip_convertAddrToString()</ref>. This constant and the implementation of <ref refid="_serval___ip_8h_1aae19d94688cf35dc8331878713e42cb2" kindref="member">Ip_convertAddrToString()</ref> must be compatible. </para></listitem>
</itemizedlist>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010-2018<sp/>Contributors<sp/>to<sp/>this<sp/>project</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>NOTICE<sp/>file(s)<sp/>distributed<sp/>with<sp/>this<sp/>work<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>information<sp/>regarding<sp/>copyright<sp/>ownership.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>and<sp/>the<sp/>accompanying<sp/>materials<sp/>are<sp/>made<sp/>available<sp/>under<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>terms<sp/>of<sp/>the<sp/>Eclipse<sp/>Public<sp/>License<sp/>2.0<sp/>which<sp/>is<sp/>available<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>http://www.eclipse.org/legal/epl-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>EPL-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor">#ifndef<sp/>SERVAL_IP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERVAL_IP_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_p_ip_8h" kindref="compound">PIp.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_serval___types_8h" kindref="compound">Serval_Types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="struct_peer___s" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_peer___s" kindref="compound">Peer_S</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59" refid="struct_peer___s_1af6adb6c7f40006ad8e3291d703c35f70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/><ref refid="struct_peer___s_1af6adb6c7f40006ad8e3291d703c35f70" kindref="member">address</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="struct_peer___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/><ref refid="struct_peer___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" kindref="member">port</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="_serval___ip_8h_1a7d477cf6cea204111231359ed75191bd" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_peer___s" kindref="compound">Peer_S</ref><sp/><ref refid="struct_peer___s" kindref="compound">Peer_T</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>forward<sp/>declaration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_serval___ip_8h_1acd6979004a799b9c426ba00f8b9814d6" kindref="member">Ip_compareAddr</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ip1_ptr,<sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ip2_ptr);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="_serval___ip_8h_1a32ea6d194afc1bc058d2d472b66b5767" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_serval___ip_8h_1a32ea6d194afc1bc058d2d472b66b5767" kindref="member">samePeer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_peer___s" kindref="compound">Peer_T</ref>*<sp/>peer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref>*<sp/><ref refid="struct_peer___s_1af6adb6c7f40006ad8e3291d703c35f70" kindref="member">address</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/><ref refid="struct_peer___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" kindref="member">port</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(peer-&gt;<ref refid="struct_peer___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" kindref="member">port</ref><sp/>==<sp/>port<sp/>&amp;&amp;<sp/><ref refid="_serval___ip_8h_1acd6979004a799b9c426ba00f8b9814d6" kindref="member">Ip_compareAddr</ref>(&amp;(peer-&gt;<ref refid="struct_peer___s_1af6adb6c7f40006ad8e3291d703c35f70" kindref="member">address</ref>),<sp/>address));</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="_serval___ip_8h_1ad1c2b8fdcea919447e3a2651c7567dd0" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_serval___ip_8h_1ad1c2b8fdcea919447e3a2651c7567dd0" kindref="member">comparePeer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_peer___s" kindref="compound">Peer_T</ref>*<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_peer___s" kindref="compound">Peer_T</ref>*<sp/>b)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a-&gt;<ref refid="struct_peer___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" kindref="member">port</ref><sp/>==<sp/>b-&gt;<ref refid="struct_peer___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" kindref="member">port</ref><sp/>&amp;&amp;<sp/><ref refid="_serval___ip_8h_1acd6979004a799b9c426ba00f8b9814d6" kindref="member">Ip_compareAddr</ref>(&amp;(a-&gt;<ref refid="struct_peer___s_1af6adb6c7f40006ad8e3291d703c35f70" kindref="member">address</ref>),<sp/>&amp;(b-&gt;<ref refid="struct_peer___s_1af6adb6c7f40006ad8e3291d703c35f70" kindref="member">address</ref>)));</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="_serval___ip_8h_1a888b7e08ae7012ccc04a0fa0e1101d00" kindref="member">Ip_getUnspecifiedAddr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_serval___ip_8h_1acd6979004a799b9c426ba00f8b9814d6" kindref="member">Ip_compareAddr</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ip1_ptr,<sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ip2_ptr);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_serval___ip_8h_1aae19d94688cf35dc8331878713e42cb2" kindref="member">Ip_convertAddrToString</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ipAddr_ptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer_ptr);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">uint16_t<sp/><ref refid="_serval___ip_8h_1a490183741614dd669331c29c50ac52bb" kindref="member">Ip_convertPortToInt</ref>(<ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/><ref refid="struct_peer___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" kindref="member">port</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="_p_ip_8h_1a946a51fb3a1e4f79c1f86ad62fb1e1c1" kindref="member">Ip_Port_T</ref><sp/><ref refid="_serval___ip_8h_1aa9a4414c39b6da384356f688aa9442fd" kindref="member">Ip_convertIntToPort</ref>(uint16_t<sp/><ref refid="struct_peer___s_1a3cb03da09f6a4b8f3dc03ec9eb0e89df" kindref="member">port</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref>*<sp/><ref refid="_serval___ip_8h_1a743d39872f375f2551b319d43150a469" kindref="member">Ip_getMyIpAddr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SERVAL_IPV6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Ip_convertBlocksToAddr(</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>b1,<sp/>uint16_t<sp/>b2,<sp/>uint16_t<sp/>b3,<sp/>uint16_t<sp/>b4,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>b5,<sp/>uint16_t<sp/>b6,<sp/>uint16_t<sp/>b7,<sp/>uint16_t<sp/>b8,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*ipAddr_ptr);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>If<sp/>SERVAL_IPV6<sp/>not<sp/>defined<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___ip_8h_1ad49529415e7db6072ed181e099dd8017" kindref="member">Ip_convertOctetsToAddr</ref>(uint8_t<sp/>first,<sp/>uint8_t<sp/>second,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>third,<sp/>uint8_t<sp/>fourth,<sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*ipAddr_ptr);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_IPV6<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_serval___ip_8h_1a2e4a686a6f96e7211bb76731d3ef2f61" kindref="member">Ip_copyAddr</ref>(<ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*src_ptr,<sp/><ref refid="_p_ip_8h_1ac1d21d89ac985b0d00d1697d098a1d1e" kindref="member">Ip_Address_T</ref><sp/>*dest_ptr);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SERVAL_IP_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Jenkins/XDK/Pipeline/xdk110/SDK/xdk110/Libraries/ServalStack/3rd-party/ServalStack/pal/Serval_Ip.h"/>
  </compounddef>
</doxygen>
